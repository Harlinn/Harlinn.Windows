using System;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.IO;
using System.Runtime.CompilerServices;

using Microsoft.Extensions.Logging;

using Harlinn.Common.Core.Net;
using Harlinn.Common.Core.Net.Data;
using Harlinn.Common.Core.Net.Entities;
using Harlinn.Common.Core.Net.IO;

using Barrelman.Data.Types;

namespace Barrelman.Data.Entities
{
    public class EntityContext : EntityContextBase<Kind>
    {
        public EntityContext( [DisallowNull] ILoggerFactory loggerFactory, [DisallowNull] IDataContextBase<Kind> dataContext, [DisallowNull] IBaseEntityFactory<Kind> entityFactory, [DisallowNull] IBaseDataFactory<Kind> dataFactory, bool ownsDataContext = true )
            : base( loggerFactory, dataContext, entityFactory, dataFactory, ownsDataContext )
        {
        }

        public IDataContext DataContext => (IDataContext)DataContextBase;

        // ---------------------------------------------------------------------
        // AircraftType queries
        // ---------------------------------------------------------------------
        public AircraftTypeEntity? GetAircraftTypeById( Guid id )
        {
            var entity = (AircraftTypeEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAircraftTypeById( id );
                if( dataObject != null )
                {
                    entity = (AircraftTypeEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AircraftTypeEntity> GetAircraftTypeCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAircraftTypeCollection( );
            var result = ToEntityList<AircraftTypeEntity,AircraftTypeObject>( dataItems );
            return result;
        }
        public AircraftTypeEntity? GetAircraftTypeByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAircraftTypeByName( name );
            if( dataObject != null )
            {
                var result = (AircraftTypeEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // AisDeviceCommand queries
        // ---------------------------------------------------------------------
        public AisDeviceCommandEntity? GetAisDeviceCommandById( Guid id )
        {
            var entity = (AisDeviceCommandEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisDeviceCommandById( id );
                if( dataObject != null )
                {
                    entity = (AisDeviceCommandEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisDeviceCommandEntity> GetAisDeviceCommandCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandCollection( );
            var result = ToEntityList<AisDeviceCommandEntity,AisDeviceCommandObject>( dataItems );
            return result;
        }
        public BindingList<AisDeviceCommandEntity> GetAisDeviceCommandCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisDeviceCommandEntity,AisDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandEntity> GetAisDeviceCommandCollectionByAisDeviceAndTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandCollectionByAisDeviceAndTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceCommandEntity,AisDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandEntity> GetAisDeviceCommandCollectionByAisDeviceAtTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandCollectionByAisDeviceAtTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceCommandEntity,AisDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandEntity> GetAisDeviceCommandCollectionByAisDeviceFromTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandCollectionByAisDeviceFromTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceCommandEntity,AisDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandEntity> GetAisDeviceCommandCollectionByAisDeviceUntilTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandCollectionByAisDeviceUntilTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceCommandEntity,AisDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandEntity> GetAisDeviceCommandCollectionByAisDeviceOverTimestamp( Guid aisDevice, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandCollectionByAisDeviceOverTimestamp( aisDevice, fromTimestamp, untilTimestamp );
            var result = ToEntityList<AisDeviceCommandEntity,AisDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandEntity> GetAisDeviceCommandCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandCollectionByTimestamp( timestamp );
            var result = ToEntityList<AisDeviceCommandEntity,AisDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandEntity> GetAisDeviceCommandCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandCollectionAtTimestamp( timestamp );
            var result = ToEntityList<AisDeviceCommandEntity,AisDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandEntity> GetAisDeviceCommandCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandCollectionFromTimestamp( timestamp );
            var result = ToEntityList<AisDeviceCommandEntity,AisDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandEntity> GetAisDeviceCommandCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<AisDeviceCommandEntity,AisDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandEntity> GetAisDeviceCommandCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<AisDeviceCommandEntity,AisDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandEntity> GetAisDeviceCommandCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandCollectionByReply( reply );
            var result = ToEntityList<AisDeviceCommandEntity,AisDeviceCommandObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisDeviceCommandReply queries
        // ---------------------------------------------------------------------
        public AisDeviceCommandReplyEntity? GetAisDeviceCommandReplyById( Guid id )
        {
            var entity = (AisDeviceCommandReplyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisDeviceCommandReplyById( id );
                if( dataObject != null )
                {
                    entity = (AisDeviceCommandReplyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisDeviceCommandReplyEntity> GetAisDeviceCommandReplyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandReplyCollection( );
            var result = ToEntityList<AisDeviceCommandReplyEntity,AisDeviceCommandReplyObject>( dataItems );
            return result;
        }
        public BindingList<AisDeviceCommandReplyEntity> GetAisDeviceCommandReplyCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandReplyCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisDeviceCommandReplyEntity,AisDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandReplyEntity> GetAisDeviceCommandReplyCollectionByAisDeviceAndTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandReplyCollectionByAisDeviceAndTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceCommandReplyEntity,AisDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandReplyEntity> GetAisDeviceCommandReplyCollectionByAisDeviceAtTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandReplyCollectionByAisDeviceAtTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceCommandReplyEntity,AisDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandReplyEntity> GetAisDeviceCommandReplyCollectionByAisDeviceFromTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandReplyCollectionByAisDeviceFromTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceCommandReplyEntity,AisDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandReplyEntity> GetAisDeviceCommandReplyCollectionByAisDeviceUntilTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandReplyCollectionByAisDeviceUntilTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceCommandReplyEntity,AisDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandReplyEntity> GetAisDeviceCommandReplyCollectionByAisDeviceOverTimestamp( Guid aisDevice, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandReplyCollectionByAisDeviceOverTimestamp( aisDevice, fromTimestamp, untilTimestamp );
            var result = ToEntityList<AisDeviceCommandReplyEntity,AisDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandReplyEntity> GetAisDeviceCommandReplyCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandReplyCollectionByTimestamp( timestamp );
            var result = ToEntityList<AisDeviceCommandReplyEntity,AisDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandReplyEntity> GetAisDeviceCommandReplyCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandReplyCollectionAtTimestamp( timestamp );
            var result = ToEntityList<AisDeviceCommandReplyEntity,AisDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandReplyEntity> GetAisDeviceCommandReplyCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandReplyCollectionFromTimestamp( timestamp );
            var result = ToEntityList<AisDeviceCommandReplyEntity,AisDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandReplyEntity> GetAisDeviceCommandReplyCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandReplyCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<AisDeviceCommandReplyEntity,AisDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceCommandReplyEntity> GetAisDeviceCommandReplyCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCommandReplyCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<AisDeviceCommandReplyEntity,AisDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public AisDeviceCommandReplyEntity? GetAisDeviceCommandReplyByCommand( Guid? command )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisDeviceCommandReplyByCommand( command );
            if( dataObject != null )
            {
                var result = (AisDeviceCommandReplyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // AisDeviceConfiguration queries
        // ---------------------------------------------------------------------
        public AisDeviceConfigurationEntity? GetAisDeviceConfigurationById( Guid id )
        {
            var entity = (AisDeviceConfigurationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisDeviceConfigurationById( id );
                if( dataObject != null )
                {
                    entity = (AisDeviceConfigurationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisDeviceConfigurationEntity> GetAisDeviceConfigurationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceConfigurationCollection( );
            var result = ToEntityList<AisDeviceConfigurationEntity,AisDeviceConfigurationObject>( dataItems );
            return result;
        }
        public BindingList<AisDeviceConfigurationEntity> GetAisDeviceConfigurationCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceConfigurationCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisDeviceConfigurationEntity,AisDeviceConfigurationObject>( dataItems );
            return result;
        }

        public AisDeviceConfigurationEntity? GetAisDeviceConfigurationByAisDeviceAndTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisDeviceConfigurationByAisDeviceAndTimestamp( aisDevice, timestamp );
            if( dataObject != null )
            {
                var result = (AisDeviceConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisDeviceConfigurationEntity? GetAisDeviceConfigurationByAisDeviceAtTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisDeviceConfigurationByAisDeviceAtTimestamp( aisDevice, timestamp );
            if( dataObject != null )
            {
                var result = (AisDeviceConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisDeviceConfigurationEntity> GetAisDeviceConfigurationByAisDeviceFromTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceConfigurationByAisDeviceFromTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceConfigurationEntity,AisDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceConfigurationEntity> GetAisDeviceConfigurationByAisDeviceUntilTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceConfigurationByAisDeviceUntilTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceConfigurationEntity,AisDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceConfigurationEntity> GetAisDeviceConfigurationByAisDeviceOverTimestamp( Guid aisDevice, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceConfigurationByAisDeviceOverTimestamp( aisDevice, fromTimestamp, untilTimestamp );
            var result = ToEntityList<AisDeviceConfigurationEntity,AisDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceConfigurationEntity> GetAisDeviceConfigurationCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceConfigurationCollectionByTimestamp( timestamp );
            var result = ToEntityList<AisDeviceConfigurationEntity,AisDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceConfigurationEntity> GetAisDeviceConfigurationCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceConfigurationCollectionAtTimestamp( timestamp );
            var result = ToEntityList<AisDeviceConfigurationEntity,AisDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceConfigurationEntity> GetAisDeviceConfigurationCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceConfigurationCollectionFromTimestamp( timestamp );
            var result = ToEntityList<AisDeviceConfigurationEntity,AisDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceConfigurationEntity> GetAisDeviceConfigurationCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceConfigurationCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<AisDeviceConfigurationEntity,AisDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceConfigurationEntity> GetAisDeviceConfigurationCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceConfigurationCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<AisDeviceConfigurationEntity,AisDeviceConfigurationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisDeviceRawMessage queries
        // ---------------------------------------------------------------------
        public AisDeviceRawMessageEntity? GetAisDeviceRawMessageById( Guid id )
        {
            var entity = (AisDeviceRawMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisDeviceRawMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisDeviceRawMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisDeviceRawMessageEntity> GetAisDeviceRawMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawMessageCollection( );
            var result = ToEntityList<AisDeviceRawMessageEntity,AisDeviceRawMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisDeviceRawMessageEntity> GetAisDeviceRawMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisDeviceRawMessageEntity,AisDeviceRawMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawMessageEntity> GetAisDeviceRawMessageCollectionByAisDeviceAndTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawMessageCollectionByAisDeviceAndTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceRawMessageEntity,AisDeviceRawMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawMessageEntity> GetAisDeviceRawMessageCollectionByAisDeviceAtTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawMessageCollectionByAisDeviceAtTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceRawMessageEntity,AisDeviceRawMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawMessageEntity> GetAisDeviceRawMessageCollectionByAisDeviceFromTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawMessageCollectionByAisDeviceFromTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceRawMessageEntity,AisDeviceRawMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawMessageEntity> GetAisDeviceRawMessageCollectionByAisDeviceUntilTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawMessageCollectionByAisDeviceUntilTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceRawMessageEntity,AisDeviceRawMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawMessageEntity> GetAisDeviceRawMessageCollectionByAisDeviceOverTimestamp( Guid aisDevice, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawMessageCollectionByAisDeviceOverTimestamp( aisDevice, fromTimestamp, untilTimestamp );
            var result = ToEntityList<AisDeviceRawMessageEntity,AisDeviceRawMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawMessageEntity> GetAisDeviceRawMessageCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawMessageCollectionByTimestamp( timestamp );
            var result = ToEntityList<AisDeviceRawMessageEntity,AisDeviceRawMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawMessageEntity> GetAisDeviceRawMessageCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawMessageCollectionAtTimestamp( timestamp );
            var result = ToEntityList<AisDeviceRawMessageEntity,AisDeviceRawMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawMessageEntity> GetAisDeviceRawMessageCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawMessageCollectionFromTimestamp( timestamp );
            var result = ToEntityList<AisDeviceRawMessageEntity,AisDeviceRawMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawMessageEntity> GetAisDeviceRawMessageCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawMessageCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<AisDeviceRawMessageEntity,AisDeviceRawMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawMessageEntity> GetAisDeviceRawMessageCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawMessageCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<AisDeviceRawMessageEntity,AisDeviceRawMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisDeviceRawSentence queries
        // ---------------------------------------------------------------------
        public AisDeviceRawSentenceEntity? GetAisDeviceRawSentenceById( Guid id )
        {
            var entity = (AisDeviceRawSentenceEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisDeviceRawSentenceById( id );
                if( dataObject != null )
                {
                    entity = (AisDeviceRawSentenceEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisDeviceRawSentenceEntity> GetAisDeviceRawSentenceCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawSentenceCollection( );
            var result = ToEntityList<AisDeviceRawSentenceEntity,AisDeviceRawSentenceObject>( dataItems );
            return result;
        }
        public BindingList<AisDeviceRawSentenceEntity> GetAisDeviceRawSentenceCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawSentenceCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisDeviceRawSentenceEntity,AisDeviceRawSentenceObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawSentenceEntity> GetAisDeviceRawSentenceCollectionByAisDeviceAndTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawSentenceCollectionByAisDeviceAndTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceRawSentenceEntity,AisDeviceRawSentenceObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawSentenceEntity> GetAisDeviceRawSentenceCollectionByAisDeviceAtTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawSentenceCollectionByAisDeviceAtTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceRawSentenceEntity,AisDeviceRawSentenceObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawSentenceEntity> GetAisDeviceRawSentenceCollectionByAisDeviceFromTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawSentenceCollectionByAisDeviceFromTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceRawSentenceEntity,AisDeviceRawSentenceObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawSentenceEntity> GetAisDeviceRawSentenceCollectionByAisDeviceUntilTimestamp( Guid aisDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawSentenceCollectionByAisDeviceUntilTimestamp( aisDevice, timestamp );
            var result = ToEntityList<AisDeviceRawSentenceEntity,AisDeviceRawSentenceObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawSentenceEntity> GetAisDeviceRawSentenceCollectionByAisDeviceOverTimestamp( Guid aisDevice, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawSentenceCollectionByAisDeviceOverTimestamp( aisDevice, fromTimestamp, untilTimestamp );
            var result = ToEntityList<AisDeviceRawSentenceEntity,AisDeviceRawSentenceObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawSentenceEntity> GetAisDeviceRawSentenceCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawSentenceCollectionByTimestamp( timestamp );
            var result = ToEntityList<AisDeviceRawSentenceEntity,AisDeviceRawSentenceObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawSentenceEntity> GetAisDeviceRawSentenceCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawSentenceCollectionAtTimestamp( timestamp );
            var result = ToEntityList<AisDeviceRawSentenceEntity,AisDeviceRawSentenceObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawSentenceEntity> GetAisDeviceRawSentenceCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawSentenceCollectionFromTimestamp( timestamp );
            var result = ToEntityList<AisDeviceRawSentenceEntity,AisDeviceRawSentenceObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawSentenceEntity> GetAisDeviceRawSentenceCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawSentenceCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<AisDeviceRawSentenceEntity,AisDeviceRawSentenceObject>( dataItems );
            return result;
        }

        public BindingList<AisDeviceRawSentenceEntity> GetAisDeviceRawSentenceCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceRawSentenceCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<AisDeviceRawSentenceEntity,AisDeviceRawSentenceObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisMessage queries
        // ---------------------------------------------------------------------
        public AisMessageEntity? GetAisMessageById( Guid id )
        {
            var entity = (AisMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisMessageEntity> GetAisMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisMessageCollection( );
            var result = ToEntityList<AisMessageEntity,AisMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisMessageEntity> GetAisMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisMessageEntity,AisMessageObject>( dataItems );
            return result;
        }

        public AisMessageEntity? GetAisMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisMessageEntity? GetAisMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisMessageEntity> GetAisMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisMessageEntity,AisMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisMessageEntity> GetAisMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisMessageEntity,AisMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisMessageEntity> GetAisMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisMessageEntity,AisMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisMessageEntity> GetAisMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisMessageEntity,AisMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisMessageEntity> GetAisMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisMessageEntity,AisMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisMessageEntity> GetAisMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisMessageEntity,AisMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisMessageEntity> GetAisMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisMessageEntity,AisMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisMessageEntity> GetAisMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisMessageEntity,AisMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisMessageEntity> GetAisMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisMessageEntity,AisMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisMessageEntity> GetAisMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisMessageEntity,AisMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisMessageEntity> GetAisMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisMessageEntity,AisMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisMessageEntity> GetAisMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisMessageEntity,AisMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisMessageEntity> GetAisMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisMessageEntity,AisMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AidToNavigationReportMessage queries
        // ---------------------------------------------------------------------
        public AidToNavigationReportMessageEntity? GetAidToNavigationReportMessageById( Guid id )
        {
            var entity = (AidToNavigationReportMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAidToNavigationReportMessageById( id );
                if( dataObject != null )
                {
                    entity = (AidToNavigationReportMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AidToNavigationReportMessageEntity> GetAidToNavigationReportMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAidToNavigationReportMessageCollection( );
            var result = ToEntityList<AidToNavigationReportMessageEntity,AidToNavigationReportMessageObject>( dataItems );
            return result;
        }
        public BindingList<AidToNavigationReportMessageEntity> GetAidToNavigationReportMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAidToNavigationReportMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AidToNavigationReportMessageEntity,AidToNavigationReportMessageObject>( dataItems );
            return result;
        }

        public AidToNavigationReportMessageEntity? GetAidToNavigationReportMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAidToNavigationReportMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AidToNavigationReportMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AidToNavigationReportMessageEntity? GetAidToNavigationReportMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAidToNavigationReportMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AidToNavigationReportMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AidToNavigationReportMessageEntity> GetAidToNavigationReportMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAidToNavigationReportMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AidToNavigationReportMessageEntity,AidToNavigationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AidToNavigationReportMessageEntity> GetAidToNavigationReportMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAidToNavigationReportMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AidToNavigationReportMessageEntity,AidToNavigationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AidToNavigationReportMessageEntity> GetAidToNavigationReportMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAidToNavigationReportMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AidToNavigationReportMessageEntity,AidToNavigationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AidToNavigationReportMessageEntity> GetAidToNavigationReportMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAidToNavigationReportMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AidToNavigationReportMessageEntity,AidToNavigationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AidToNavigationReportMessageEntity> GetAidToNavigationReportMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAidToNavigationReportMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AidToNavigationReportMessageEntity,AidToNavigationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AidToNavigationReportMessageEntity> GetAidToNavigationReportMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAidToNavigationReportMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AidToNavigationReportMessageEntity,AidToNavigationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AidToNavigationReportMessageEntity> GetAidToNavigationReportMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAidToNavigationReportMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AidToNavigationReportMessageEntity,AidToNavigationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AidToNavigationReportMessageEntity> GetAidToNavigationReportMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAidToNavigationReportMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AidToNavigationReportMessageEntity,AidToNavigationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AidToNavigationReportMessageEntity> GetAidToNavigationReportMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAidToNavigationReportMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AidToNavigationReportMessageEntity,AidToNavigationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AidToNavigationReportMessageEntity> GetAidToNavigationReportMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAidToNavigationReportMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AidToNavigationReportMessageEntity,AidToNavigationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AidToNavigationReportMessageEntity> GetAidToNavigationReportMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAidToNavigationReportMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AidToNavigationReportMessageEntity,AidToNavigationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AidToNavigationReportMessageEntity> GetAidToNavigationReportMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAidToNavigationReportMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AidToNavigationReportMessageEntity,AidToNavigationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AidToNavigationReportMessageEntity> GetAidToNavigationReportMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAidToNavigationReportMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AidToNavigationReportMessageEntity,AidToNavigationReportMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisAddressedSafetyRelatedMessage queries
        // ---------------------------------------------------------------------
        public AisAddressedSafetyRelatedMessageEntity? GetAisAddressedSafetyRelatedMessageById( Guid id )
        {
            var entity = (AisAddressedSafetyRelatedMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisAddressedSafetyRelatedMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisAddressedSafetyRelatedMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisAddressedSafetyRelatedMessageEntity> GetAisAddressedSafetyRelatedMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAddressedSafetyRelatedMessageCollection( );
            var result = ToEntityList<AisAddressedSafetyRelatedMessageEntity,AisAddressedSafetyRelatedMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisAddressedSafetyRelatedMessageEntity> GetAisAddressedSafetyRelatedMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAddressedSafetyRelatedMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisAddressedSafetyRelatedMessageEntity,AisAddressedSafetyRelatedMessageObject>( dataItems );
            return result;
        }

        public AisAddressedSafetyRelatedMessageEntity? GetAisAddressedSafetyRelatedMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisAddressedSafetyRelatedMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisAddressedSafetyRelatedMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisAddressedSafetyRelatedMessageEntity? GetAisAddressedSafetyRelatedMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisAddressedSafetyRelatedMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisAddressedSafetyRelatedMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisAddressedSafetyRelatedMessageEntity> GetAisAddressedSafetyRelatedMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAddressedSafetyRelatedMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisAddressedSafetyRelatedMessageEntity,AisAddressedSafetyRelatedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisAddressedSafetyRelatedMessageEntity> GetAisAddressedSafetyRelatedMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAddressedSafetyRelatedMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisAddressedSafetyRelatedMessageEntity,AisAddressedSafetyRelatedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisAddressedSafetyRelatedMessageEntity> GetAisAddressedSafetyRelatedMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAddressedSafetyRelatedMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisAddressedSafetyRelatedMessageEntity,AisAddressedSafetyRelatedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisAddressedSafetyRelatedMessageEntity> GetAisAddressedSafetyRelatedMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAddressedSafetyRelatedMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisAddressedSafetyRelatedMessageEntity,AisAddressedSafetyRelatedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisAddressedSafetyRelatedMessageEntity> GetAisAddressedSafetyRelatedMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAddressedSafetyRelatedMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisAddressedSafetyRelatedMessageEntity,AisAddressedSafetyRelatedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisAddressedSafetyRelatedMessageEntity> GetAisAddressedSafetyRelatedMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAddressedSafetyRelatedMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisAddressedSafetyRelatedMessageEntity,AisAddressedSafetyRelatedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisAddressedSafetyRelatedMessageEntity> GetAisAddressedSafetyRelatedMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAddressedSafetyRelatedMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisAddressedSafetyRelatedMessageEntity,AisAddressedSafetyRelatedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisAddressedSafetyRelatedMessageEntity> GetAisAddressedSafetyRelatedMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAddressedSafetyRelatedMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisAddressedSafetyRelatedMessageEntity,AisAddressedSafetyRelatedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisAddressedSafetyRelatedMessageEntity> GetAisAddressedSafetyRelatedMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAddressedSafetyRelatedMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisAddressedSafetyRelatedMessageEntity,AisAddressedSafetyRelatedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisAddressedSafetyRelatedMessageEntity> GetAisAddressedSafetyRelatedMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAddressedSafetyRelatedMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisAddressedSafetyRelatedMessageEntity,AisAddressedSafetyRelatedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisAddressedSafetyRelatedMessageEntity> GetAisAddressedSafetyRelatedMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAddressedSafetyRelatedMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisAddressedSafetyRelatedMessageEntity,AisAddressedSafetyRelatedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisAddressedSafetyRelatedMessageEntity> GetAisAddressedSafetyRelatedMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAddressedSafetyRelatedMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisAddressedSafetyRelatedMessageEntity,AisAddressedSafetyRelatedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisAddressedSafetyRelatedMessageEntity> GetAisAddressedSafetyRelatedMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAddressedSafetyRelatedMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisAddressedSafetyRelatedMessageEntity,AisAddressedSafetyRelatedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisAddressedSafetyRelatedMessageEntity> GetAisAddressedSafetyRelatedMessageCollectionByDestinationMmsi( Guid? destinationMmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAddressedSafetyRelatedMessageCollectionByDestinationMmsi( destinationMmsi );
            var result = ToEntityList<AisAddressedSafetyRelatedMessageEntity,AisAddressedSafetyRelatedMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisBaseStationReportMessage queries
        // ---------------------------------------------------------------------
        public AisBaseStationReportMessageEntity? GetAisBaseStationReportMessageById( Guid id )
        {
            var entity = (AisBaseStationReportMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisBaseStationReportMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisBaseStationReportMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisBaseStationReportMessageEntity> GetAisBaseStationReportMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBaseStationReportMessageCollection( );
            var result = ToEntityList<AisBaseStationReportMessageEntity,AisBaseStationReportMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisBaseStationReportMessageEntity> GetAisBaseStationReportMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBaseStationReportMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisBaseStationReportMessageEntity,AisBaseStationReportMessageObject>( dataItems );
            return result;
        }

        public AisBaseStationReportMessageEntity? GetAisBaseStationReportMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisBaseStationReportMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisBaseStationReportMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisBaseStationReportMessageEntity? GetAisBaseStationReportMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisBaseStationReportMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisBaseStationReportMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisBaseStationReportMessageEntity> GetAisBaseStationReportMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBaseStationReportMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisBaseStationReportMessageEntity,AisBaseStationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBaseStationReportMessageEntity> GetAisBaseStationReportMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBaseStationReportMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisBaseStationReportMessageEntity,AisBaseStationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBaseStationReportMessageEntity> GetAisBaseStationReportMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBaseStationReportMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisBaseStationReportMessageEntity,AisBaseStationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBaseStationReportMessageEntity> GetAisBaseStationReportMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBaseStationReportMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisBaseStationReportMessageEntity,AisBaseStationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBaseStationReportMessageEntity> GetAisBaseStationReportMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBaseStationReportMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisBaseStationReportMessageEntity,AisBaseStationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBaseStationReportMessageEntity> GetAisBaseStationReportMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBaseStationReportMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisBaseStationReportMessageEntity,AisBaseStationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBaseStationReportMessageEntity> GetAisBaseStationReportMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBaseStationReportMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisBaseStationReportMessageEntity,AisBaseStationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBaseStationReportMessageEntity> GetAisBaseStationReportMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBaseStationReportMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisBaseStationReportMessageEntity,AisBaseStationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBaseStationReportMessageEntity> GetAisBaseStationReportMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBaseStationReportMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisBaseStationReportMessageEntity,AisBaseStationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBaseStationReportMessageEntity> GetAisBaseStationReportMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBaseStationReportMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisBaseStationReportMessageEntity,AisBaseStationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBaseStationReportMessageEntity> GetAisBaseStationReportMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBaseStationReportMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisBaseStationReportMessageEntity,AisBaseStationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBaseStationReportMessageEntity> GetAisBaseStationReportMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBaseStationReportMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisBaseStationReportMessageEntity,AisBaseStationReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBaseStationReportMessageEntity> GetAisBaseStationReportMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBaseStationReportMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisBaseStationReportMessageEntity,AisBaseStationReportMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisBinaryAcknowledgeMessage queries
        // ---------------------------------------------------------------------
        public AisBinaryAcknowledgeMessageEntity? GetAisBinaryAcknowledgeMessageById( Guid id )
        {
            var entity = (AisBinaryAcknowledgeMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisBinaryAcknowledgeMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisBinaryAcknowledgeMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisBinaryAcknowledgeMessageEntity> GetAisBinaryAcknowledgeMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAcknowledgeMessageCollection( );
            var result = ToEntityList<AisBinaryAcknowledgeMessageEntity,AisBinaryAcknowledgeMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisBinaryAcknowledgeMessageEntity> GetAisBinaryAcknowledgeMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAcknowledgeMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisBinaryAcknowledgeMessageEntity,AisBinaryAcknowledgeMessageObject>( dataItems );
            return result;
        }

        public AisBinaryAcknowledgeMessageEntity? GetAisBinaryAcknowledgeMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisBinaryAcknowledgeMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisBinaryAcknowledgeMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisBinaryAcknowledgeMessageEntity? GetAisBinaryAcknowledgeMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisBinaryAcknowledgeMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisBinaryAcknowledgeMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisBinaryAcknowledgeMessageEntity> GetAisBinaryAcknowledgeMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAcknowledgeMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisBinaryAcknowledgeMessageEntity,AisBinaryAcknowledgeMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAcknowledgeMessageEntity> GetAisBinaryAcknowledgeMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAcknowledgeMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisBinaryAcknowledgeMessageEntity,AisBinaryAcknowledgeMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAcknowledgeMessageEntity> GetAisBinaryAcknowledgeMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAcknowledgeMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisBinaryAcknowledgeMessageEntity,AisBinaryAcknowledgeMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAcknowledgeMessageEntity> GetAisBinaryAcknowledgeMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAcknowledgeMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisBinaryAcknowledgeMessageEntity,AisBinaryAcknowledgeMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAcknowledgeMessageEntity> GetAisBinaryAcknowledgeMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAcknowledgeMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisBinaryAcknowledgeMessageEntity,AisBinaryAcknowledgeMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAcknowledgeMessageEntity> GetAisBinaryAcknowledgeMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAcknowledgeMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisBinaryAcknowledgeMessageEntity,AisBinaryAcknowledgeMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAcknowledgeMessageEntity> GetAisBinaryAcknowledgeMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAcknowledgeMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisBinaryAcknowledgeMessageEntity,AisBinaryAcknowledgeMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAcknowledgeMessageEntity> GetAisBinaryAcknowledgeMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAcknowledgeMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisBinaryAcknowledgeMessageEntity,AisBinaryAcknowledgeMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAcknowledgeMessageEntity> GetAisBinaryAcknowledgeMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAcknowledgeMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisBinaryAcknowledgeMessageEntity,AisBinaryAcknowledgeMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAcknowledgeMessageEntity> GetAisBinaryAcknowledgeMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAcknowledgeMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisBinaryAcknowledgeMessageEntity,AisBinaryAcknowledgeMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAcknowledgeMessageEntity> GetAisBinaryAcknowledgeMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAcknowledgeMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisBinaryAcknowledgeMessageEntity,AisBinaryAcknowledgeMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAcknowledgeMessageEntity> GetAisBinaryAcknowledgeMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAcknowledgeMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisBinaryAcknowledgeMessageEntity,AisBinaryAcknowledgeMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAcknowledgeMessageEntity> GetAisBinaryAcknowledgeMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAcknowledgeMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisBinaryAcknowledgeMessageEntity,AisBinaryAcknowledgeMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisBinaryAddressedMessage queries
        // ---------------------------------------------------------------------
        public AisBinaryAddressedMessageEntity? GetAisBinaryAddressedMessageById( Guid id )
        {
            var entity = (AisBinaryAddressedMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisBinaryAddressedMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisBinaryAddressedMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisBinaryAddressedMessageEntity> GetAisBinaryAddressedMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAddressedMessageCollection( );
            var result = ToEntityList<AisBinaryAddressedMessageEntity,AisBinaryAddressedMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisBinaryAddressedMessageEntity> GetAisBinaryAddressedMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAddressedMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisBinaryAddressedMessageEntity,AisBinaryAddressedMessageObject>( dataItems );
            return result;
        }

        public AisBinaryAddressedMessageEntity? GetAisBinaryAddressedMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisBinaryAddressedMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisBinaryAddressedMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisBinaryAddressedMessageEntity? GetAisBinaryAddressedMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisBinaryAddressedMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisBinaryAddressedMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisBinaryAddressedMessageEntity> GetAisBinaryAddressedMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAddressedMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisBinaryAddressedMessageEntity,AisBinaryAddressedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAddressedMessageEntity> GetAisBinaryAddressedMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAddressedMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisBinaryAddressedMessageEntity,AisBinaryAddressedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAddressedMessageEntity> GetAisBinaryAddressedMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAddressedMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisBinaryAddressedMessageEntity,AisBinaryAddressedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAddressedMessageEntity> GetAisBinaryAddressedMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAddressedMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisBinaryAddressedMessageEntity,AisBinaryAddressedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAddressedMessageEntity> GetAisBinaryAddressedMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAddressedMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisBinaryAddressedMessageEntity,AisBinaryAddressedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAddressedMessageEntity> GetAisBinaryAddressedMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAddressedMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisBinaryAddressedMessageEntity,AisBinaryAddressedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAddressedMessageEntity> GetAisBinaryAddressedMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAddressedMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisBinaryAddressedMessageEntity,AisBinaryAddressedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAddressedMessageEntity> GetAisBinaryAddressedMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAddressedMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisBinaryAddressedMessageEntity,AisBinaryAddressedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAddressedMessageEntity> GetAisBinaryAddressedMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAddressedMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisBinaryAddressedMessageEntity,AisBinaryAddressedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAddressedMessageEntity> GetAisBinaryAddressedMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAddressedMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisBinaryAddressedMessageEntity,AisBinaryAddressedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAddressedMessageEntity> GetAisBinaryAddressedMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAddressedMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisBinaryAddressedMessageEntity,AisBinaryAddressedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAddressedMessageEntity> GetAisBinaryAddressedMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAddressedMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisBinaryAddressedMessageEntity,AisBinaryAddressedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAddressedMessageEntity> GetAisBinaryAddressedMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAddressedMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisBinaryAddressedMessageEntity,AisBinaryAddressedMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryAddressedMessageEntity> GetAisBinaryAddressedMessageCollectionByDestinationMmsi( Guid? destinationMmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryAddressedMessageCollectionByDestinationMmsi( destinationMmsi );
            var result = ToEntityList<AisBinaryAddressedMessageEntity,AisBinaryAddressedMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisBinaryBroadcastMessage queries
        // ---------------------------------------------------------------------
        public AisBinaryBroadcastMessageEntity? GetAisBinaryBroadcastMessageById( Guid id )
        {
            var entity = (AisBinaryBroadcastMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisBinaryBroadcastMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisBinaryBroadcastMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisBinaryBroadcastMessageEntity> GetAisBinaryBroadcastMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryBroadcastMessageCollection( );
            var result = ToEntityList<AisBinaryBroadcastMessageEntity,AisBinaryBroadcastMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisBinaryBroadcastMessageEntity> GetAisBinaryBroadcastMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryBroadcastMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisBinaryBroadcastMessageEntity,AisBinaryBroadcastMessageObject>( dataItems );
            return result;
        }

        public AisBinaryBroadcastMessageEntity? GetAisBinaryBroadcastMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisBinaryBroadcastMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisBinaryBroadcastMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisBinaryBroadcastMessageEntity? GetAisBinaryBroadcastMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisBinaryBroadcastMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisBinaryBroadcastMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisBinaryBroadcastMessageEntity> GetAisBinaryBroadcastMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryBroadcastMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisBinaryBroadcastMessageEntity,AisBinaryBroadcastMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryBroadcastMessageEntity> GetAisBinaryBroadcastMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryBroadcastMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisBinaryBroadcastMessageEntity,AisBinaryBroadcastMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryBroadcastMessageEntity> GetAisBinaryBroadcastMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryBroadcastMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisBinaryBroadcastMessageEntity,AisBinaryBroadcastMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryBroadcastMessageEntity> GetAisBinaryBroadcastMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryBroadcastMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisBinaryBroadcastMessageEntity,AisBinaryBroadcastMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryBroadcastMessageEntity> GetAisBinaryBroadcastMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryBroadcastMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisBinaryBroadcastMessageEntity,AisBinaryBroadcastMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryBroadcastMessageEntity> GetAisBinaryBroadcastMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryBroadcastMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisBinaryBroadcastMessageEntity,AisBinaryBroadcastMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryBroadcastMessageEntity> GetAisBinaryBroadcastMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryBroadcastMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisBinaryBroadcastMessageEntity,AisBinaryBroadcastMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryBroadcastMessageEntity> GetAisBinaryBroadcastMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryBroadcastMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisBinaryBroadcastMessageEntity,AisBinaryBroadcastMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryBroadcastMessageEntity> GetAisBinaryBroadcastMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryBroadcastMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisBinaryBroadcastMessageEntity,AisBinaryBroadcastMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryBroadcastMessageEntity> GetAisBinaryBroadcastMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryBroadcastMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisBinaryBroadcastMessageEntity,AisBinaryBroadcastMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryBroadcastMessageEntity> GetAisBinaryBroadcastMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryBroadcastMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisBinaryBroadcastMessageEntity,AisBinaryBroadcastMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryBroadcastMessageEntity> GetAisBinaryBroadcastMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryBroadcastMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisBinaryBroadcastMessageEntity,AisBinaryBroadcastMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisBinaryBroadcastMessageEntity> GetAisBinaryBroadcastMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisBinaryBroadcastMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisBinaryBroadcastMessageEntity,AisBinaryBroadcastMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisDataLinkManagementMessage queries
        // ---------------------------------------------------------------------
        public AisDataLinkManagementMessageEntity? GetAisDataLinkManagementMessageById( Guid id )
        {
            var entity = (AisDataLinkManagementMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisDataLinkManagementMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisDataLinkManagementMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisDataLinkManagementMessageEntity> GetAisDataLinkManagementMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDataLinkManagementMessageCollection( );
            var result = ToEntityList<AisDataLinkManagementMessageEntity,AisDataLinkManagementMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisDataLinkManagementMessageEntity> GetAisDataLinkManagementMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDataLinkManagementMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisDataLinkManagementMessageEntity,AisDataLinkManagementMessageObject>( dataItems );
            return result;
        }

        public AisDataLinkManagementMessageEntity? GetAisDataLinkManagementMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisDataLinkManagementMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisDataLinkManagementMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisDataLinkManagementMessageEntity? GetAisDataLinkManagementMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisDataLinkManagementMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisDataLinkManagementMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisDataLinkManagementMessageEntity> GetAisDataLinkManagementMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDataLinkManagementMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisDataLinkManagementMessageEntity,AisDataLinkManagementMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDataLinkManagementMessageEntity> GetAisDataLinkManagementMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDataLinkManagementMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisDataLinkManagementMessageEntity,AisDataLinkManagementMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDataLinkManagementMessageEntity> GetAisDataLinkManagementMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDataLinkManagementMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisDataLinkManagementMessageEntity,AisDataLinkManagementMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDataLinkManagementMessageEntity> GetAisDataLinkManagementMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDataLinkManagementMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisDataLinkManagementMessageEntity,AisDataLinkManagementMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDataLinkManagementMessageEntity> GetAisDataLinkManagementMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDataLinkManagementMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisDataLinkManagementMessageEntity,AisDataLinkManagementMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDataLinkManagementMessageEntity> GetAisDataLinkManagementMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDataLinkManagementMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisDataLinkManagementMessageEntity,AisDataLinkManagementMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDataLinkManagementMessageEntity> GetAisDataLinkManagementMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDataLinkManagementMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisDataLinkManagementMessageEntity,AisDataLinkManagementMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDataLinkManagementMessageEntity> GetAisDataLinkManagementMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDataLinkManagementMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisDataLinkManagementMessageEntity,AisDataLinkManagementMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDataLinkManagementMessageEntity> GetAisDataLinkManagementMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDataLinkManagementMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisDataLinkManagementMessageEntity,AisDataLinkManagementMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDataLinkManagementMessageEntity> GetAisDataLinkManagementMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDataLinkManagementMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisDataLinkManagementMessageEntity,AisDataLinkManagementMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDataLinkManagementMessageEntity> GetAisDataLinkManagementMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDataLinkManagementMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisDataLinkManagementMessageEntity,AisDataLinkManagementMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDataLinkManagementMessageEntity> GetAisDataLinkManagementMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDataLinkManagementMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisDataLinkManagementMessageEntity,AisDataLinkManagementMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisDataLinkManagementMessageEntity> GetAisDataLinkManagementMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDataLinkManagementMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisDataLinkManagementMessageEntity,AisDataLinkManagementMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisExtendedClassBCsPositionReportMessage queries
        // ---------------------------------------------------------------------
        public AisExtendedClassBCsPositionReportMessageEntity? GetAisExtendedClassBCsPositionReportMessageById( Guid id )
        {
            var entity = (AisExtendedClassBCsPositionReportMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisExtendedClassBCsPositionReportMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisExtendedClassBCsPositionReportMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisExtendedClassBCsPositionReportMessageEntity> GetAisExtendedClassBCsPositionReportMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisExtendedClassBCsPositionReportMessageCollection( );
            var result = ToEntityList<AisExtendedClassBCsPositionReportMessageEntity,AisExtendedClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisExtendedClassBCsPositionReportMessageEntity> GetAisExtendedClassBCsPositionReportMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisExtendedClassBCsPositionReportMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisExtendedClassBCsPositionReportMessageEntity,AisExtendedClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public AisExtendedClassBCsPositionReportMessageEntity? GetAisExtendedClassBCsPositionReportMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisExtendedClassBCsPositionReportMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisExtendedClassBCsPositionReportMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisExtendedClassBCsPositionReportMessageEntity? GetAisExtendedClassBCsPositionReportMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisExtendedClassBCsPositionReportMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisExtendedClassBCsPositionReportMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisExtendedClassBCsPositionReportMessageEntity> GetAisExtendedClassBCsPositionReportMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisExtendedClassBCsPositionReportMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisExtendedClassBCsPositionReportMessageEntity,AisExtendedClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisExtendedClassBCsPositionReportMessageEntity> GetAisExtendedClassBCsPositionReportMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisExtendedClassBCsPositionReportMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisExtendedClassBCsPositionReportMessageEntity,AisExtendedClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisExtendedClassBCsPositionReportMessageEntity> GetAisExtendedClassBCsPositionReportMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisExtendedClassBCsPositionReportMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisExtendedClassBCsPositionReportMessageEntity,AisExtendedClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisExtendedClassBCsPositionReportMessageEntity> GetAisExtendedClassBCsPositionReportMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisExtendedClassBCsPositionReportMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisExtendedClassBCsPositionReportMessageEntity,AisExtendedClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisExtendedClassBCsPositionReportMessageEntity> GetAisExtendedClassBCsPositionReportMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisExtendedClassBCsPositionReportMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisExtendedClassBCsPositionReportMessageEntity,AisExtendedClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisExtendedClassBCsPositionReportMessageEntity> GetAisExtendedClassBCsPositionReportMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisExtendedClassBCsPositionReportMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisExtendedClassBCsPositionReportMessageEntity,AisExtendedClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisExtendedClassBCsPositionReportMessageEntity> GetAisExtendedClassBCsPositionReportMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisExtendedClassBCsPositionReportMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisExtendedClassBCsPositionReportMessageEntity,AisExtendedClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisExtendedClassBCsPositionReportMessageEntity> GetAisExtendedClassBCsPositionReportMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisExtendedClassBCsPositionReportMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisExtendedClassBCsPositionReportMessageEntity,AisExtendedClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisExtendedClassBCsPositionReportMessageEntity> GetAisExtendedClassBCsPositionReportMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisExtendedClassBCsPositionReportMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisExtendedClassBCsPositionReportMessageEntity,AisExtendedClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisExtendedClassBCsPositionReportMessageEntity> GetAisExtendedClassBCsPositionReportMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisExtendedClassBCsPositionReportMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisExtendedClassBCsPositionReportMessageEntity,AisExtendedClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisExtendedClassBCsPositionReportMessageEntity> GetAisExtendedClassBCsPositionReportMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisExtendedClassBCsPositionReportMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisExtendedClassBCsPositionReportMessageEntity,AisExtendedClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisExtendedClassBCsPositionReportMessageEntity> GetAisExtendedClassBCsPositionReportMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisExtendedClassBCsPositionReportMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisExtendedClassBCsPositionReportMessageEntity,AisExtendedClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisExtendedClassBCsPositionReportMessageEntity> GetAisExtendedClassBCsPositionReportMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisExtendedClassBCsPositionReportMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisExtendedClassBCsPositionReportMessageEntity,AisExtendedClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisExtendedClassBCsPositionReportMessageEntity> GetAisExtendedClassBCsPositionReportMessageCollectionByName( Guid? name )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisExtendedClassBCsPositionReportMessageCollectionByName( name );
            var result = ToEntityList<AisExtendedClassBCsPositionReportMessageEntity,AisExtendedClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisInterrogationMessage queries
        // ---------------------------------------------------------------------
        public AisInterrogationMessageEntity? GetAisInterrogationMessageById( Guid id )
        {
            var entity = (AisInterrogationMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisInterrogationMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisInterrogationMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisInterrogationMessageEntity> GetAisInterrogationMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisInterrogationMessageCollection( );
            var result = ToEntityList<AisInterrogationMessageEntity,AisInterrogationMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisInterrogationMessageEntity> GetAisInterrogationMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisInterrogationMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisInterrogationMessageEntity,AisInterrogationMessageObject>( dataItems );
            return result;
        }

        public AisInterrogationMessageEntity? GetAisInterrogationMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisInterrogationMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisInterrogationMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisInterrogationMessageEntity? GetAisInterrogationMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisInterrogationMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisInterrogationMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisInterrogationMessageEntity> GetAisInterrogationMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisInterrogationMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisInterrogationMessageEntity,AisInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisInterrogationMessageEntity> GetAisInterrogationMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisInterrogationMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisInterrogationMessageEntity,AisInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisInterrogationMessageEntity> GetAisInterrogationMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisInterrogationMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisInterrogationMessageEntity,AisInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisInterrogationMessageEntity> GetAisInterrogationMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisInterrogationMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisInterrogationMessageEntity,AisInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisInterrogationMessageEntity> GetAisInterrogationMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisInterrogationMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisInterrogationMessageEntity,AisInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisInterrogationMessageEntity> GetAisInterrogationMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisInterrogationMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisInterrogationMessageEntity,AisInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisInterrogationMessageEntity> GetAisInterrogationMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisInterrogationMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisInterrogationMessageEntity,AisInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisInterrogationMessageEntity> GetAisInterrogationMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisInterrogationMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisInterrogationMessageEntity,AisInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisInterrogationMessageEntity> GetAisInterrogationMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisInterrogationMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisInterrogationMessageEntity,AisInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisInterrogationMessageEntity> GetAisInterrogationMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisInterrogationMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisInterrogationMessageEntity,AisInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisInterrogationMessageEntity> GetAisInterrogationMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisInterrogationMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisInterrogationMessageEntity,AisInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisInterrogationMessageEntity> GetAisInterrogationMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisInterrogationMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisInterrogationMessageEntity,AisInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisInterrogationMessageEntity> GetAisInterrogationMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisInterrogationMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisInterrogationMessageEntity,AisInterrogationMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisPositionReportClassAMessageBase queries
        // ---------------------------------------------------------------------
        public AisPositionReportClassAMessageBaseEntity? GetAisPositionReportClassAMessageBaseById( Guid id )
        {
            var entity = (AisPositionReportClassAMessageBaseEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisPositionReportClassAMessageBaseById( id );
                if( dataObject != null )
                {
                    entity = (AisPositionReportClassAMessageBaseEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisPositionReportClassAMessageBaseEntity> GetAisPositionReportClassAMessageBaseCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageBaseCollection( );
            var result = ToEntityList<AisPositionReportClassAMessageBaseEntity,AisPositionReportClassAMessageBaseObject>( dataItems );
            return result;
        }
        public BindingList<AisPositionReportClassAMessageBaseEntity> GetAisPositionReportClassAMessageBaseCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageBaseCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisPositionReportClassAMessageBaseEntity,AisPositionReportClassAMessageBaseObject>( dataItems );
            return result;
        }

        public AisPositionReportClassAMessageBaseEntity? GetAisPositionReportClassAMessageBaseByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisPositionReportClassAMessageBaseByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisPositionReportClassAMessageBaseEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisPositionReportClassAMessageBaseEntity? GetAisPositionReportClassAMessageBaseByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisPositionReportClassAMessageBaseByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisPositionReportClassAMessageBaseEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisPositionReportClassAMessageBaseEntity> GetAisPositionReportClassAMessageBaseByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageBaseByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAMessageBaseEntity,AisPositionReportClassAMessageBaseObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageBaseEntity> GetAisPositionReportClassAMessageBaseByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageBaseByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAMessageBaseEntity,AisPositionReportClassAMessageBaseObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageBaseEntity> GetAisPositionReportClassAMessageBaseByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageBaseByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAMessageBaseEntity,AisPositionReportClassAMessageBaseObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageBaseEntity> GetAisPositionReportClassAMessageBaseCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageBaseCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAMessageBaseEntity,AisPositionReportClassAMessageBaseObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageBaseEntity> GetAisPositionReportClassAMessageBaseCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageBaseCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAMessageBaseEntity,AisPositionReportClassAMessageBaseObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageBaseEntity> GetAisPositionReportClassAMessageBaseCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageBaseCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAMessageBaseEntity,AisPositionReportClassAMessageBaseObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageBaseEntity> GetAisPositionReportClassAMessageBaseCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageBaseCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAMessageBaseEntity,AisPositionReportClassAMessageBaseObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageBaseEntity> GetAisPositionReportClassAMessageBaseCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageBaseCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAMessageBaseEntity,AisPositionReportClassAMessageBaseObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageBaseEntity> GetAisPositionReportClassAMessageBaseCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageBaseCollectionByMmsi( mmsi );
            var result = ToEntityList<AisPositionReportClassAMessageBaseEntity,AisPositionReportClassAMessageBaseObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageBaseEntity> GetAisPositionReportClassAMessageBaseCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageBaseCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisPositionReportClassAMessageBaseEntity,AisPositionReportClassAMessageBaseObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageBaseEntity> GetAisPositionReportClassAMessageBaseCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageBaseCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisPositionReportClassAMessageBaseEntity,AisPositionReportClassAMessageBaseObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageBaseEntity> GetAisPositionReportClassAMessageBaseCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageBaseCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisPositionReportClassAMessageBaseEntity,AisPositionReportClassAMessageBaseObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageBaseEntity> GetAisPositionReportClassAMessageBaseCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageBaseCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisPositionReportClassAMessageBaseEntity,AisPositionReportClassAMessageBaseObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisPositionReportClassAAssignedScheduleMessage queries
        // ---------------------------------------------------------------------
        public AisPositionReportClassAAssignedScheduleMessageEntity? GetAisPositionReportClassAAssignedScheduleMessageById( Guid id )
        {
            var entity = (AisPositionReportClassAAssignedScheduleMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisPositionReportClassAAssignedScheduleMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisPositionReportClassAAssignedScheduleMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisPositionReportClassAAssignedScheduleMessageEntity> GetAisPositionReportClassAAssignedScheduleMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAAssignedScheduleMessageCollection( );
            var result = ToEntityList<AisPositionReportClassAAssignedScheduleMessageEntity,AisPositionReportClassAAssignedScheduleMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisPositionReportClassAAssignedScheduleMessageEntity> GetAisPositionReportClassAAssignedScheduleMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAAssignedScheduleMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisPositionReportClassAAssignedScheduleMessageEntity,AisPositionReportClassAAssignedScheduleMessageObject>( dataItems );
            return result;
        }

        public AisPositionReportClassAAssignedScheduleMessageEntity? GetAisPositionReportClassAAssignedScheduleMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisPositionReportClassAAssignedScheduleMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisPositionReportClassAAssignedScheduleMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisPositionReportClassAAssignedScheduleMessageEntity? GetAisPositionReportClassAAssignedScheduleMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisPositionReportClassAAssignedScheduleMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisPositionReportClassAAssignedScheduleMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisPositionReportClassAAssignedScheduleMessageEntity> GetAisPositionReportClassAAssignedScheduleMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAAssignedScheduleMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAAssignedScheduleMessageEntity,AisPositionReportClassAAssignedScheduleMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAAssignedScheduleMessageEntity> GetAisPositionReportClassAAssignedScheduleMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAAssignedScheduleMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAAssignedScheduleMessageEntity,AisPositionReportClassAAssignedScheduleMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAAssignedScheduleMessageEntity> GetAisPositionReportClassAAssignedScheduleMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAAssignedScheduleMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAAssignedScheduleMessageEntity,AisPositionReportClassAAssignedScheduleMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAAssignedScheduleMessageEntity> GetAisPositionReportClassAAssignedScheduleMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAAssignedScheduleMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAAssignedScheduleMessageEntity,AisPositionReportClassAAssignedScheduleMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAAssignedScheduleMessageEntity> GetAisPositionReportClassAAssignedScheduleMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAAssignedScheduleMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAAssignedScheduleMessageEntity,AisPositionReportClassAAssignedScheduleMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAAssignedScheduleMessageEntity> GetAisPositionReportClassAAssignedScheduleMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAAssignedScheduleMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAAssignedScheduleMessageEntity,AisPositionReportClassAAssignedScheduleMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAAssignedScheduleMessageEntity> GetAisPositionReportClassAAssignedScheduleMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAAssignedScheduleMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAAssignedScheduleMessageEntity,AisPositionReportClassAAssignedScheduleMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAAssignedScheduleMessageEntity> GetAisPositionReportClassAAssignedScheduleMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAAssignedScheduleMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAAssignedScheduleMessageEntity,AisPositionReportClassAAssignedScheduleMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAAssignedScheduleMessageEntity> GetAisPositionReportClassAAssignedScheduleMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAAssignedScheduleMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisPositionReportClassAAssignedScheduleMessageEntity,AisPositionReportClassAAssignedScheduleMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAAssignedScheduleMessageEntity> GetAisPositionReportClassAAssignedScheduleMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAAssignedScheduleMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisPositionReportClassAAssignedScheduleMessageEntity,AisPositionReportClassAAssignedScheduleMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAAssignedScheduleMessageEntity> GetAisPositionReportClassAAssignedScheduleMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAAssignedScheduleMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisPositionReportClassAAssignedScheduleMessageEntity,AisPositionReportClassAAssignedScheduleMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAAssignedScheduleMessageEntity> GetAisPositionReportClassAAssignedScheduleMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAAssignedScheduleMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisPositionReportClassAAssignedScheduleMessageEntity,AisPositionReportClassAAssignedScheduleMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAAssignedScheduleMessageEntity> GetAisPositionReportClassAAssignedScheduleMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAAssignedScheduleMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisPositionReportClassAAssignedScheduleMessageEntity,AisPositionReportClassAAssignedScheduleMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisPositionReportClassAMessage queries
        // ---------------------------------------------------------------------
        public AisPositionReportClassAMessageEntity? GetAisPositionReportClassAMessageById( Guid id )
        {
            var entity = (AisPositionReportClassAMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisPositionReportClassAMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisPositionReportClassAMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisPositionReportClassAMessageEntity> GetAisPositionReportClassAMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageCollection( );
            var result = ToEntityList<AisPositionReportClassAMessageEntity,AisPositionReportClassAMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisPositionReportClassAMessageEntity> GetAisPositionReportClassAMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisPositionReportClassAMessageEntity,AisPositionReportClassAMessageObject>( dataItems );
            return result;
        }

        public AisPositionReportClassAMessageEntity? GetAisPositionReportClassAMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisPositionReportClassAMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisPositionReportClassAMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisPositionReportClassAMessageEntity? GetAisPositionReportClassAMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisPositionReportClassAMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisPositionReportClassAMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisPositionReportClassAMessageEntity> GetAisPositionReportClassAMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAMessageEntity,AisPositionReportClassAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageEntity> GetAisPositionReportClassAMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAMessageEntity,AisPositionReportClassAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageEntity> GetAisPositionReportClassAMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAMessageEntity,AisPositionReportClassAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageEntity> GetAisPositionReportClassAMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAMessageEntity,AisPositionReportClassAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageEntity> GetAisPositionReportClassAMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAMessageEntity,AisPositionReportClassAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageEntity> GetAisPositionReportClassAMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAMessageEntity,AisPositionReportClassAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageEntity> GetAisPositionReportClassAMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAMessageEntity,AisPositionReportClassAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageEntity> GetAisPositionReportClassAMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAMessageEntity,AisPositionReportClassAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageEntity> GetAisPositionReportClassAMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisPositionReportClassAMessageEntity,AisPositionReportClassAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageEntity> GetAisPositionReportClassAMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisPositionReportClassAMessageEntity,AisPositionReportClassAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageEntity> GetAisPositionReportClassAMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisPositionReportClassAMessageEntity,AisPositionReportClassAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageEntity> GetAisPositionReportClassAMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisPositionReportClassAMessageEntity,AisPositionReportClassAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAMessageEntity> GetAisPositionReportClassAMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisPositionReportClassAMessageEntity,AisPositionReportClassAMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisPositionReportClassAResponseToInterrogationMessage queries
        // ---------------------------------------------------------------------
        public AisPositionReportClassAResponseToInterrogationMessageEntity? GetAisPositionReportClassAResponseToInterrogationMessageById( Guid id )
        {
            var entity = (AisPositionReportClassAResponseToInterrogationMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisPositionReportClassAResponseToInterrogationMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisPositionReportClassAResponseToInterrogationMessageEntity> GetAisPositionReportClassAResponseToInterrogationMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageCollection( );
            var result = ToEntityList<AisPositionReportClassAResponseToInterrogationMessageEntity,AisPositionReportClassAResponseToInterrogationMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisPositionReportClassAResponseToInterrogationMessageEntity> GetAisPositionReportClassAResponseToInterrogationMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisPositionReportClassAResponseToInterrogationMessageEntity,AisPositionReportClassAResponseToInterrogationMessageObject>( dataItems );
            return result;
        }

        public AisPositionReportClassAResponseToInterrogationMessageEntity? GetAisPositionReportClassAResponseToInterrogationMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisPositionReportClassAResponseToInterrogationMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisPositionReportClassAResponseToInterrogationMessageEntity? GetAisPositionReportClassAResponseToInterrogationMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisPositionReportClassAResponseToInterrogationMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisPositionReportClassAResponseToInterrogationMessageEntity> GetAisPositionReportClassAResponseToInterrogationMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAResponseToInterrogationMessageEntity,AisPositionReportClassAResponseToInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAResponseToInterrogationMessageEntity> GetAisPositionReportClassAResponseToInterrogationMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAResponseToInterrogationMessageEntity,AisPositionReportClassAResponseToInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAResponseToInterrogationMessageEntity> GetAisPositionReportClassAResponseToInterrogationMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAResponseToInterrogationMessageEntity,AisPositionReportClassAResponseToInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAResponseToInterrogationMessageEntity> GetAisPositionReportClassAResponseToInterrogationMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAResponseToInterrogationMessageEntity,AisPositionReportClassAResponseToInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAResponseToInterrogationMessageEntity> GetAisPositionReportClassAResponseToInterrogationMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAResponseToInterrogationMessageEntity,AisPositionReportClassAResponseToInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAResponseToInterrogationMessageEntity> GetAisPositionReportClassAResponseToInterrogationMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAResponseToInterrogationMessageEntity,AisPositionReportClassAResponseToInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAResponseToInterrogationMessageEntity> GetAisPositionReportClassAResponseToInterrogationMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAResponseToInterrogationMessageEntity,AisPositionReportClassAResponseToInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAResponseToInterrogationMessageEntity> GetAisPositionReportClassAResponseToInterrogationMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisPositionReportClassAResponseToInterrogationMessageEntity,AisPositionReportClassAResponseToInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAResponseToInterrogationMessageEntity> GetAisPositionReportClassAResponseToInterrogationMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisPositionReportClassAResponseToInterrogationMessageEntity,AisPositionReportClassAResponseToInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAResponseToInterrogationMessageEntity> GetAisPositionReportClassAResponseToInterrogationMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisPositionReportClassAResponseToInterrogationMessageEntity,AisPositionReportClassAResponseToInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAResponseToInterrogationMessageEntity> GetAisPositionReportClassAResponseToInterrogationMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisPositionReportClassAResponseToInterrogationMessageEntity,AisPositionReportClassAResponseToInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAResponseToInterrogationMessageEntity> GetAisPositionReportClassAResponseToInterrogationMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisPositionReportClassAResponseToInterrogationMessageEntity,AisPositionReportClassAResponseToInterrogationMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportClassAResponseToInterrogationMessageEntity> GetAisPositionReportClassAResponseToInterrogationMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportClassAResponseToInterrogationMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisPositionReportClassAResponseToInterrogationMessageEntity,AisPositionReportClassAResponseToInterrogationMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisPositionReportForLongRangeApplicationsMessage queries
        // ---------------------------------------------------------------------
        public AisPositionReportForLongRangeApplicationsMessageEntity? GetAisPositionReportForLongRangeApplicationsMessageById( Guid id )
        {
            var entity = (AisPositionReportForLongRangeApplicationsMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisPositionReportForLongRangeApplicationsMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisPositionReportForLongRangeApplicationsMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisPositionReportForLongRangeApplicationsMessageEntity> GetAisPositionReportForLongRangeApplicationsMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportForLongRangeApplicationsMessageCollection( );
            var result = ToEntityList<AisPositionReportForLongRangeApplicationsMessageEntity,AisPositionReportForLongRangeApplicationsMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisPositionReportForLongRangeApplicationsMessageEntity> GetAisPositionReportForLongRangeApplicationsMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportForLongRangeApplicationsMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisPositionReportForLongRangeApplicationsMessageEntity,AisPositionReportForLongRangeApplicationsMessageObject>( dataItems );
            return result;
        }

        public AisPositionReportForLongRangeApplicationsMessageEntity? GetAisPositionReportForLongRangeApplicationsMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisPositionReportForLongRangeApplicationsMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisPositionReportForLongRangeApplicationsMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisPositionReportForLongRangeApplicationsMessageEntity? GetAisPositionReportForLongRangeApplicationsMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisPositionReportForLongRangeApplicationsMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisPositionReportForLongRangeApplicationsMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisPositionReportForLongRangeApplicationsMessageEntity> GetAisPositionReportForLongRangeApplicationsMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportForLongRangeApplicationsMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisPositionReportForLongRangeApplicationsMessageEntity,AisPositionReportForLongRangeApplicationsMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportForLongRangeApplicationsMessageEntity> GetAisPositionReportForLongRangeApplicationsMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportForLongRangeApplicationsMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisPositionReportForLongRangeApplicationsMessageEntity,AisPositionReportForLongRangeApplicationsMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportForLongRangeApplicationsMessageEntity> GetAisPositionReportForLongRangeApplicationsMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportForLongRangeApplicationsMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisPositionReportForLongRangeApplicationsMessageEntity,AisPositionReportForLongRangeApplicationsMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportForLongRangeApplicationsMessageEntity> GetAisPositionReportForLongRangeApplicationsMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportForLongRangeApplicationsMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportForLongRangeApplicationsMessageEntity,AisPositionReportForLongRangeApplicationsMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportForLongRangeApplicationsMessageEntity> GetAisPositionReportForLongRangeApplicationsMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportForLongRangeApplicationsMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportForLongRangeApplicationsMessageEntity,AisPositionReportForLongRangeApplicationsMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportForLongRangeApplicationsMessageEntity> GetAisPositionReportForLongRangeApplicationsMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportForLongRangeApplicationsMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportForLongRangeApplicationsMessageEntity,AisPositionReportForLongRangeApplicationsMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportForLongRangeApplicationsMessageEntity> GetAisPositionReportForLongRangeApplicationsMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportForLongRangeApplicationsMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisPositionReportForLongRangeApplicationsMessageEntity,AisPositionReportForLongRangeApplicationsMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportForLongRangeApplicationsMessageEntity> GetAisPositionReportForLongRangeApplicationsMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportForLongRangeApplicationsMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisPositionReportForLongRangeApplicationsMessageEntity,AisPositionReportForLongRangeApplicationsMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportForLongRangeApplicationsMessageEntity> GetAisPositionReportForLongRangeApplicationsMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportForLongRangeApplicationsMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisPositionReportForLongRangeApplicationsMessageEntity,AisPositionReportForLongRangeApplicationsMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportForLongRangeApplicationsMessageEntity> GetAisPositionReportForLongRangeApplicationsMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportForLongRangeApplicationsMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisPositionReportForLongRangeApplicationsMessageEntity,AisPositionReportForLongRangeApplicationsMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportForLongRangeApplicationsMessageEntity> GetAisPositionReportForLongRangeApplicationsMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportForLongRangeApplicationsMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisPositionReportForLongRangeApplicationsMessageEntity,AisPositionReportForLongRangeApplicationsMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportForLongRangeApplicationsMessageEntity> GetAisPositionReportForLongRangeApplicationsMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportForLongRangeApplicationsMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisPositionReportForLongRangeApplicationsMessageEntity,AisPositionReportForLongRangeApplicationsMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisPositionReportForLongRangeApplicationsMessageEntity> GetAisPositionReportForLongRangeApplicationsMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisPositionReportForLongRangeApplicationsMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisPositionReportForLongRangeApplicationsMessageEntity,AisPositionReportForLongRangeApplicationsMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisSafetyRelatedAcknowledgmentMessage queries
        // ---------------------------------------------------------------------
        public AisSafetyRelatedAcknowledgmentMessageEntity? GetAisSafetyRelatedAcknowledgmentMessageById( Guid id )
        {
            var entity = (AisSafetyRelatedAcknowledgmentMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisSafetyRelatedAcknowledgmentMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisSafetyRelatedAcknowledgmentMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisSafetyRelatedAcknowledgmentMessageEntity> GetAisSafetyRelatedAcknowledgmentMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisSafetyRelatedAcknowledgmentMessageCollection( );
            var result = ToEntityList<AisSafetyRelatedAcknowledgmentMessageEntity,AisSafetyRelatedAcknowledgmentMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisSafetyRelatedAcknowledgmentMessageEntity> GetAisSafetyRelatedAcknowledgmentMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisSafetyRelatedAcknowledgmentMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisSafetyRelatedAcknowledgmentMessageEntity,AisSafetyRelatedAcknowledgmentMessageObject>( dataItems );
            return result;
        }

        public AisSafetyRelatedAcknowledgmentMessageEntity? GetAisSafetyRelatedAcknowledgmentMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisSafetyRelatedAcknowledgmentMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisSafetyRelatedAcknowledgmentMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisSafetyRelatedAcknowledgmentMessageEntity? GetAisSafetyRelatedAcknowledgmentMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisSafetyRelatedAcknowledgmentMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisSafetyRelatedAcknowledgmentMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisSafetyRelatedAcknowledgmentMessageEntity> GetAisSafetyRelatedAcknowledgmentMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisSafetyRelatedAcknowledgmentMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisSafetyRelatedAcknowledgmentMessageEntity,AisSafetyRelatedAcknowledgmentMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisSafetyRelatedAcknowledgmentMessageEntity> GetAisSafetyRelatedAcknowledgmentMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisSafetyRelatedAcknowledgmentMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisSafetyRelatedAcknowledgmentMessageEntity,AisSafetyRelatedAcknowledgmentMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisSafetyRelatedAcknowledgmentMessageEntity> GetAisSafetyRelatedAcknowledgmentMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisSafetyRelatedAcknowledgmentMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisSafetyRelatedAcknowledgmentMessageEntity,AisSafetyRelatedAcknowledgmentMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisSafetyRelatedAcknowledgmentMessageEntity> GetAisSafetyRelatedAcknowledgmentMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisSafetyRelatedAcknowledgmentMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisSafetyRelatedAcknowledgmentMessageEntity,AisSafetyRelatedAcknowledgmentMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisSafetyRelatedAcknowledgmentMessageEntity> GetAisSafetyRelatedAcknowledgmentMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisSafetyRelatedAcknowledgmentMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisSafetyRelatedAcknowledgmentMessageEntity,AisSafetyRelatedAcknowledgmentMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisSafetyRelatedAcknowledgmentMessageEntity> GetAisSafetyRelatedAcknowledgmentMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisSafetyRelatedAcknowledgmentMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisSafetyRelatedAcknowledgmentMessageEntity,AisSafetyRelatedAcknowledgmentMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisSafetyRelatedAcknowledgmentMessageEntity> GetAisSafetyRelatedAcknowledgmentMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisSafetyRelatedAcknowledgmentMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisSafetyRelatedAcknowledgmentMessageEntity,AisSafetyRelatedAcknowledgmentMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisSafetyRelatedAcknowledgmentMessageEntity> GetAisSafetyRelatedAcknowledgmentMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisSafetyRelatedAcknowledgmentMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisSafetyRelatedAcknowledgmentMessageEntity,AisSafetyRelatedAcknowledgmentMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisSafetyRelatedAcknowledgmentMessageEntity> GetAisSafetyRelatedAcknowledgmentMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisSafetyRelatedAcknowledgmentMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisSafetyRelatedAcknowledgmentMessageEntity,AisSafetyRelatedAcknowledgmentMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisSafetyRelatedAcknowledgmentMessageEntity> GetAisSafetyRelatedAcknowledgmentMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisSafetyRelatedAcknowledgmentMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisSafetyRelatedAcknowledgmentMessageEntity,AisSafetyRelatedAcknowledgmentMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisSafetyRelatedAcknowledgmentMessageEntity> GetAisSafetyRelatedAcknowledgmentMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisSafetyRelatedAcknowledgmentMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisSafetyRelatedAcknowledgmentMessageEntity,AisSafetyRelatedAcknowledgmentMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisSafetyRelatedAcknowledgmentMessageEntity> GetAisSafetyRelatedAcknowledgmentMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisSafetyRelatedAcknowledgmentMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisSafetyRelatedAcknowledgmentMessageEntity,AisSafetyRelatedAcknowledgmentMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisSafetyRelatedAcknowledgmentMessageEntity> GetAisSafetyRelatedAcknowledgmentMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisSafetyRelatedAcknowledgmentMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisSafetyRelatedAcknowledgmentMessageEntity,AisSafetyRelatedAcknowledgmentMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisStandardClassBCsPositionReportMessage queries
        // ---------------------------------------------------------------------
        public AisStandardClassBCsPositionReportMessageEntity? GetAisStandardClassBCsPositionReportMessageById( Guid id )
        {
            var entity = (AisStandardClassBCsPositionReportMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisStandardClassBCsPositionReportMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisStandardClassBCsPositionReportMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisStandardClassBCsPositionReportMessageEntity> GetAisStandardClassBCsPositionReportMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardClassBCsPositionReportMessageCollection( );
            var result = ToEntityList<AisStandardClassBCsPositionReportMessageEntity,AisStandardClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisStandardClassBCsPositionReportMessageEntity> GetAisStandardClassBCsPositionReportMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardClassBCsPositionReportMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisStandardClassBCsPositionReportMessageEntity,AisStandardClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public AisStandardClassBCsPositionReportMessageEntity? GetAisStandardClassBCsPositionReportMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisStandardClassBCsPositionReportMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisStandardClassBCsPositionReportMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisStandardClassBCsPositionReportMessageEntity? GetAisStandardClassBCsPositionReportMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisStandardClassBCsPositionReportMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisStandardClassBCsPositionReportMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisStandardClassBCsPositionReportMessageEntity> GetAisStandardClassBCsPositionReportMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardClassBCsPositionReportMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisStandardClassBCsPositionReportMessageEntity,AisStandardClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardClassBCsPositionReportMessageEntity> GetAisStandardClassBCsPositionReportMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardClassBCsPositionReportMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisStandardClassBCsPositionReportMessageEntity,AisStandardClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardClassBCsPositionReportMessageEntity> GetAisStandardClassBCsPositionReportMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardClassBCsPositionReportMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisStandardClassBCsPositionReportMessageEntity,AisStandardClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardClassBCsPositionReportMessageEntity> GetAisStandardClassBCsPositionReportMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardClassBCsPositionReportMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStandardClassBCsPositionReportMessageEntity,AisStandardClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardClassBCsPositionReportMessageEntity> GetAisStandardClassBCsPositionReportMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardClassBCsPositionReportMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStandardClassBCsPositionReportMessageEntity,AisStandardClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardClassBCsPositionReportMessageEntity> GetAisStandardClassBCsPositionReportMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardClassBCsPositionReportMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStandardClassBCsPositionReportMessageEntity,AisStandardClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardClassBCsPositionReportMessageEntity> GetAisStandardClassBCsPositionReportMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardClassBCsPositionReportMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStandardClassBCsPositionReportMessageEntity,AisStandardClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardClassBCsPositionReportMessageEntity> GetAisStandardClassBCsPositionReportMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardClassBCsPositionReportMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisStandardClassBCsPositionReportMessageEntity,AisStandardClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardClassBCsPositionReportMessageEntity> GetAisStandardClassBCsPositionReportMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardClassBCsPositionReportMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisStandardClassBCsPositionReportMessageEntity,AisStandardClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardClassBCsPositionReportMessageEntity> GetAisStandardClassBCsPositionReportMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardClassBCsPositionReportMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStandardClassBCsPositionReportMessageEntity,AisStandardClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardClassBCsPositionReportMessageEntity> GetAisStandardClassBCsPositionReportMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardClassBCsPositionReportMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStandardClassBCsPositionReportMessageEntity,AisStandardClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardClassBCsPositionReportMessageEntity> GetAisStandardClassBCsPositionReportMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardClassBCsPositionReportMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStandardClassBCsPositionReportMessageEntity,AisStandardClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardClassBCsPositionReportMessageEntity> GetAisStandardClassBCsPositionReportMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardClassBCsPositionReportMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisStandardClassBCsPositionReportMessageEntity,AisStandardClassBCsPositionReportMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisStandardSarAircraftPositionReportMessage queries
        // ---------------------------------------------------------------------
        public AisStandardSarAircraftPositionReportMessageEntity? GetAisStandardSarAircraftPositionReportMessageById( Guid id )
        {
            var entity = (AisStandardSarAircraftPositionReportMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisStandardSarAircraftPositionReportMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisStandardSarAircraftPositionReportMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisStandardSarAircraftPositionReportMessageEntity> GetAisStandardSarAircraftPositionReportMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardSarAircraftPositionReportMessageCollection( );
            var result = ToEntityList<AisStandardSarAircraftPositionReportMessageEntity,AisStandardSarAircraftPositionReportMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisStandardSarAircraftPositionReportMessageEntity> GetAisStandardSarAircraftPositionReportMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardSarAircraftPositionReportMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisStandardSarAircraftPositionReportMessageEntity,AisStandardSarAircraftPositionReportMessageObject>( dataItems );
            return result;
        }

        public AisStandardSarAircraftPositionReportMessageEntity? GetAisStandardSarAircraftPositionReportMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisStandardSarAircraftPositionReportMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisStandardSarAircraftPositionReportMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisStandardSarAircraftPositionReportMessageEntity? GetAisStandardSarAircraftPositionReportMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisStandardSarAircraftPositionReportMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisStandardSarAircraftPositionReportMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisStandardSarAircraftPositionReportMessageEntity> GetAisStandardSarAircraftPositionReportMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardSarAircraftPositionReportMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisStandardSarAircraftPositionReportMessageEntity,AisStandardSarAircraftPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardSarAircraftPositionReportMessageEntity> GetAisStandardSarAircraftPositionReportMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardSarAircraftPositionReportMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisStandardSarAircraftPositionReportMessageEntity,AisStandardSarAircraftPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardSarAircraftPositionReportMessageEntity> GetAisStandardSarAircraftPositionReportMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardSarAircraftPositionReportMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisStandardSarAircraftPositionReportMessageEntity,AisStandardSarAircraftPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardSarAircraftPositionReportMessageEntity> GetAisStandardSarAircraftPositionReportMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardSarAircraftPositionReportMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStandardSarAircraftPositionReportMessageEntity,AisStandardSarAircraftPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardSarAircraftPositionReportMessageEntity> GetAisStandardSarAircraftPositionReportMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardSarAircraftPositionReportMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStandardSarAircraftPositionReportMessageEntity,AisStandardSarAircraftPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardSarAircraftPositionReportMessageEntity> GetAisStandardSarAircraftPositionReportMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardSarAircraftPositionReportMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStandardSarAircraftPositionReportMessageEntity,AisStandardSarAircraftPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardSarAircraftPositionReportMessageEntity> GetAisStandardSarAircraftPositionReportMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardSarAircraftPositionReportMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStandardSarAircraftPositionReportMessageEntity,AisStandardSarAircraftPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardSarAircraftPositionReportMessageEntity> GetAisStandardSarAircraftPositionReportMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardSarAircraftPositionReportMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisStandardSarAircraftPositionReportMessageEntity,AisStandardSarAircraftPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardSarAircraftPositionReportMessageEntity> GetAisStandardSarAircraftPositionReportMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardSarAircraftPositionReportMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisStandardSarAircraftPositionReportMessageEntity,AisStandardSarAircraftPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardSarAircraftPositionReportMessageEntity> GetAisStandardSarAircraftPositionReportMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardSarAircraftPositionReportMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStandardSarAircraftPositionReportMessageEntity,AisStandardSarAircraftPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardSarAircraftPositionReportMessageEntity> GetAisStandardSarAircraftPositionReportMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardSarAircraftPositionReportMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStandardSarAircraftPositionReportMessageEntity,AisStandardSarAircraftPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardSarAircraftPositionReportMessageEntity> GetAisStandardSarAircraftPositionReportMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardSarAircraftPositionReportMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStandardSarAircraftPositionReportMessageEntity,AisStandardSarAircraftPositionReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStandardSarAircraftPositionReportMessageEntity> GetAisStandardSarAircraftPositionReportMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStandardSarAircraftPositionReportMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisStandardSarAircraftPositionReportMessageEntity,AisStandardSarAircraftPositionReportMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisStaticAndVoyageRelatedDataMessage queries
        // ---------------------------------------------------------------------
        public AisStaticAndVoyageRelatedDataMessageEntity? GetAisStaticAndVoyageRelatedDataMessageById( Guid id )
        {
            var entity = (AisStaticAndVoyageRelatedDataMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisStaticAndVoyageRelatedDataMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisStaticAndVoyageRelatedDataMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageCollection( );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }

        public AisStaticAndVoyageRelatedDataMessageEntity? GetAisStaticAndVoyageRelatedDataMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisStaticAndVoyageRelatedDataMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisStaticAndVoyageRelatedDataMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisStaticAndVoyageRelatedDataMessageEntity? GetAisStaticAndVoyageRelatedDataMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisStaticAndVoyageRelatedDataMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisStaticAndVoyageRelatedDataMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageCollectionByImoNumber( Guid? imoNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageCollectionByImoNumber( imoNumber );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageCollectionByCallsign( Guid? callsign )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageCollectionByCallsign( callsign );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticAndVoyageRelatedDataMessageEntity> GetAisStaticAndVoyageRelatedDataMessageCollectionByShipName( Guid? shipName )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticAndVoyageRelatedDataMessageCollectionByShipName( shipName );
            var result = ToEntityList<AisStaticAndVoyageRelatedDataMessageEntity,AisStaticAndVoyageRelatedDataMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisStaticDataReportMessage queries
        // ---------------------------------------------------------------------
        public AisStaticDataReportMessageEntity? GetAisStaticDataReportMessageById( Guid id )
        {
            var entity = (AisStaticDataReportMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisStaticDataReportMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisStaticDataReportMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisStaticDataReportMessageEntity> GetAisStaticDataReportMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportMessageCollection( );
            var result = ToEntityList<AisStaticDataReportMessageEntity,AisStaticDataReportMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisStaticDataReportMessageEntity> GetAisStaticDataReportMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisStaticDataReportMessageEntity,AisStaticDataReportMessageObject>( dataItems );
            return result;
        }

        public AisStaticDataReportMessageEntity? GetAisStaticDataReportMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisStaticDataReportMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisStaticDataReportMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisStaticDataReportMessageEntity? GetAisStaticDataReportMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisStaticDataReportMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisStaticDataReportMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisStaticDataReportMessageEntity> GetAisStaticDataReportMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportMessageEntity,AisStaticDataReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportMessageEntity> GetAisStaticDataReportMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportMessageEntity,AisStaticDataReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportMessageEntity> GetAisStaticDataReportMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisStaticDataReportMessageEntity,AisStaticDataReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportMessageEntity> GetAisStaticDataReportMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportMessageEntity,AisStaticDataReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportMessageEntity> GetAisStaticDataReportMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportMessageEntity,AisStaticDataReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportMessageEntity> GetAisStaticDataReportMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportMessageEntity,AisStaticDataReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportMessageEntity> GetAisStaticDataReportMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportMessageEntity,AisStaticDataReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportMessageEntity> GetAisStaticDataReportMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisStaticDataReportMessageEntity,AisStaticDataReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportMessageEntity> GetAisStaticDataReportMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisStaticDataReportMessageEntity,AisStaticDataReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportMessageEntity> GetAisStaticDataReportMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStaticDataReportMessageEntity,AisStaticDataReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportMessageEntity> GetAisStaticDataReportMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStaticDataReportMessageEntity,AisStaticDataReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportMessageEntity> GetAisStaticDataReportMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStaticDataReportMessageEntity,AisStaticDataReportMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportMessageEntity> GetAisStaticDataReportMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisStaticDataReportMessageEntity,AisStaticDataReportMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisStaticDataReportPartAMessage queries
        // ---------------------------------------------------------------------
        public AisStaticDataReportPartAMessageEntity? GetAisStaticDataReportPartAMessageById( Guid id )
        {
            var entity = (AisStaticDataReportPartAMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisStaticDataReportPartAMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisStaticDataReportPartAMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisStaticDataReportPartAMessageEntity> GetAisStaticDataReportPartAMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartAMessageCollection( );
            var result = ToEntityList<AisStaticDataReportPartAMessageEntity,AisStaticDataReportPartAMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisStaticDataReportPartAMessageEntity> GetAisStaticDataReportPartAMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartAMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisStaticDataReportPartAMessageEntity,AisStaticDataReportPartAMessageObject>( dataItems );
            return result;
        }

        public AisStaticDataReportPartAMessageEntity? GetAisStaticDataReportPartAMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisStaticDataReportPartAMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisStaticDataReportPartAMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisStaticDataReportPartAMessageEntity? GetAisStaticDataReportPartAMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisStaticDataReportPartAMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisStaticDataReportPartAMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisStaticDataReportPartAMessageEntity> GetAisStaticDataReportPartAMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartAMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportPartAMessageEntity,AisStaticDataReportPartAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartAMessageEntity> GetAisStaticDataReportPartAMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartAMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportPartAMessageEntity,AisStaticDataReportPartAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartAMessageEntity> GetAisStaticDataReportPartAMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartAMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisStaticDataReportPartAMessageEntity,AisStaticDataReportPartAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartAMessageEntity> GetAisStaticDataReportPartAMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartAMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportPartAMessageEntity,AisStaticDataReportPartAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartAMessageEntity> GetAisStaticDataReportPartAMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartAMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportPartAMessageEntity,AisStaticDataReportPartAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartAMessageEntity> GetAisStaticDataReportPartAMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartAMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportPartAMessageEntity,AisStaticDataReportPartAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartAMessageEntity> GetAisStaticDataReportPartAMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartAMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportPartAMessageEntity,AisStaticDataReportPartAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartAMessageEntity> GetAisStaticDataReportPartAMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartAMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisStaticDataReportPartAMessageEntity,AisStaticDataReportPartAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartAMessageEntity> GetAisStaticDataReportPartAMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartAMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisStaticDataReportPartAMessageEntity,AisStaticDataReportPartAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartAMessageEntity> GetAisStaticDataReportPartAMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartAMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStaticDataReportPartAMessageEntity,AisStaticDataReportPartAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartAMessageEntity> GetAisStaticDataReportPartAMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartAMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStaticDataReportPartAMessageEntity,AisStaticDataReportPartAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartAMessageEntity> GetAisStaticDataReportPartAMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartAMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStaticDataReportPartAMessageEntity,AisStaticDataReportPartAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartAMessageEntity> GetAisStaticDataReportPartAMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartAMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisStaticDataReportPartAMessageEntity,AisStaticDataReportPartAMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartAMessageEntity> GetAisStaticDataReportPartAMessageCollectionByShipName( Guid? shipName )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartAMessageCollectionByShipName( shipName );
            var result = ToEntityList<AisStaticDataReportPartAMessageEntity,AisStaticDataReportPartAMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisStaticDataReportPartBMessage queries
        // ---------------------------------------------------------------------
        public AisStaticDataReportPartBMessageEntity? GetAisStaticDataReportPartBMessageById( Guid id )
        {
            var entity = (AisStaticDataReportPartBMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisStaticDataReportPartBMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisStaticDataReportPartBMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisStaticDataReportPartBMessageEntity> GetAisStaticDataReportPartBMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartBMessageCollection( );
            var result = ToEntityList<AisStaticDataReportPartBMessageEntity,AisStaticDataReportPartBMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisStaticDataReportPartBMessageEntity> GetAisStaticDataReportPartBMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartBMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisStaticDataReportPartBMessageEntity,AisStaticDataReportPartBMessageObject>( dataItems );
            return result;
        }

        public AisStaticDataReportPartBMessageEntity? GetAisStaticDataReportPartBMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisStaticDataReportPartBMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisStaticDataReportPartBMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisStaticDataReportPartBMessageEntity? GetAisStaticDataReportPartBMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisStaticDataReportPartBMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisStaticDataReportPartBMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisStaticDataReportPartBMessageEntity> GetAisStaticDataReportPartBMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartBMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportPartBMessageEntity,AisStaticDataReportPartBMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartBMessageEntity> GetAisStaticDataReportPartBMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartBMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportPartBMessageEntity,AisStaticDataReportPartBMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartBMessageEntity> GetAisStaticDataReportPartBMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartBMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisStaticDataReportPartBMessageEntity,AisStaticDataReportPartBMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartBMessageEntity> GetAisStaticDataReportPartBMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartBMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportPartBMessageEntity,AisStaticDataReportPartBMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartBMessageEntity> GetAisStaticDataReportPartBMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartBMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportPartBMessageEntity,AisStaticDataReportPartBMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartBMessageEntity> GetAisStaticDataReportPartBMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartBMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportPartBMessageEntity,AisStaticDataReportPartBMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartBMessageEntity> GetAisStaticDataReportPartBMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartBMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisStaticDataReportPartBMessageEntity,AisStaticDataReportPartBMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartBMessageEntity> GetAisStaticDataReportPartBMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartBMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisStaticDataReportPartBMessageEntity,AisStaticDataReportPartBMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartBMessageEntity> GetAisStaticDataReportPartBMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartBMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisStaticDataReportPartBMessageEntity,AisStaticDataReportPartBMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartBMessageEntity> GetAisStaticDataReportPartBMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartBMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStaticDataReportPartBMessageEntity,AisStaticDataReportPartBMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartBMessageEntity> GetAisStaticDataReportPartBMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartBMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStaticDataReportPartBMessageEntity,AisStaticDataReportPartBMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartBMessageEntity> GetAisStaticDataReportPartBMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartBMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisStaticDataReportPartBMessageEntity,AisStaticDataReportPartBMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartBMessageEntity> GetAisStaticDataReportPartBMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartBMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisStaticDataReportPartBMessageEntity,AisStaticDataReportPartBMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartBMessageEntity> GetAisStaticDataReportPartBMessageCollectionByCallsign( Guid? callsign )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartBMessageCollectionByCallsign( callsign );
            var result = ToEntityList<AisStaticDataReportPartBMessageEntity,AisStaticDataReportPartBMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisStaticDataReportPartBMessageEntity> GetAisStaticDataReportPartBMessageCollectionByMothershipMmsi( Guid? mothershipMmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisStaticDataReportPartBMessageCollectionByMothershipMmsi( mothershipMmsi );
            var result = ToEntityList<AisStaticDataReportPartBMessageEntity,AisStaticDataReportPartBMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisUtcAndDateInquiryMessage queries
        // ---------------------------------------------------------------------
        public AisUtcAndDateInquiryMessageEntity? GetAisUtcAndDateInquiryMessageById( Guid id )
        {
            var entity = (AisUtcAndDateInquiryMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisUtcAndDateInquiryMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisUtcAndDateInquiryMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisUtcAndDateInquiryMessageEntity> GetAisUtcAndDateInquiryMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateInquiryMessageCollection( );
            var result = ToEntityList<AisUtcAndDateInquiryMessageEntity,AisUtcAndDateInquiryMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisUtcAndDateInquiryMessageEntity> GetAisUtcAndDateInquiryMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateInquiryMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisUtcAndDateInquiryMessageEntity,AisUtcAndDateInquiryMessageObject>( dataItems );
            return result;
        }

        public AisUtcAndDateInquiryMessageEntity? GetAisUtcAndDateInquiryMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisUtcAndDateInquiryMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisUtcAndDateInquiryMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisUtcAndDateInquiryMessageEntity? GetAisUtcAndDateInquiryMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisUtcAndDateInquiryMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisUtcAndDateInquiryMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisUtcAndDateInquiryMessageEntity> GetAisUtcAndDateInquiryMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateInquiryMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisUtcAndDateInquiryMessageEntity,AisUtcAndDateInquiryMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateInquiryMessageEntity> GetAisUtcAndDateInquiryMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateInquiryMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisUtcAndDateInquiryMessageEntity,AisUtcAndDateInquiryMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateInquiryMessageEntity> GetAisUtcAndDateInquiryMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateInquiryMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisUtcAndDateInquiryMessageEntity,AisUtcAndDateInquiryMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateInquiryMessageEntity> GetAisUtcAndDateInquiryMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateInquiryMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisUtcAndDateInquiryMessageEntity,AisUtcAndDateInquiryMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateInquiryMessageEntity> GetAisUtcAndDateInquiryMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateInquiryMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisUtcAndDateInquiryMessageEntity,AisUtcAndDateInquiryMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateInquiryMessageEntity> GetAisUtcAndDateInquiryMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateInquiryMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisUtcAndDateInquiryMessageEntity,AisUtcAndDateInquiryMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateInquiryMessageEntity> GetAisUtcAndDateInquiryMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateInquiryMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisUtcAndDateInquiryMessageEntity,AisUtcAndDateInquiryMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateInquiryMessageEntity> GetAisUtcAndDateInquiryMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateInquiryMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisUtcAndDateInquiryMessageEntity,AisUtcAndDateInquiryMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateInquiryMessageEntity> GetAisUtcAndDateInquiryMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateInquiryMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisUtcAndDateInquiryMessageEntity,AisUtcAndDateInquiryMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateInquiryMessageEntity> GetAisUtcAndDateInquiryMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateInquiryMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisUtcAndDateInquiryMessageEntity,AisUtcAndDateInquiryMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateInquiryMessageEntity> GetAisUtcAndDateInquiryMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateInquiryMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisUtcAndDateInquiryMessageEntity,AisUtcAndDateInquiryMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateInquiryMessageEntity> GetAisUtcAndDateInquiryMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateInquiryMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisUtcAndDateInquiryMessageEntity,AisUtcAndDateInquiryMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateInquiryMessageEntity> GetAisUtcAndDateInquiryMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateInquiryMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisUtcAndDateInquiryMessageEntity,AisUtcAndDateInquiryMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisUtcAndDateResponseMessage queries
        // ---------------------------------------------------------------------
        public AisUtcAndDateResponseMessageEntity? GetAisUtcAndDateResponseMessageById( Guid id )
        {
            var entity = (AisUtcAndDateResponseMessageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisUtcAndDateResponseMessageById( id );
                if( dataObject != null )
                {
                    entity = (AisUtcAndDateResponseMessageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisUtcAndDateResponseMessageEntity> GetAisUtcAndDateResponseMessageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateResponseMessageCollection( );
            var result = ToEntityList<AisUtcAndDateResponseMessageEntity,AisUtcAndDateResponseMessageObject>( dataItems );
            return result;
        }
        public BindingList<AisUtcAndDateResponseMessageEntity> GetAisUtcAndDateResponseMessageCollectionByAisDevice( Guid aisDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateResponseMessageCollectionByAisDevice( aisDevice );
            var result = ToEntityList<AisUtcAndDateResponseMessageEntity,AisUtcAndDateResponseMessageObject>( dataItems );
            return result;
        }

        public AisUtcAndDateResponseMessageEntity? GetAisUtcAndDateResponseMessageByAisDeviceAndReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisUtcAndDateResponseMessageByAisDeviceAndReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisUtcAndDateResponseMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AisUtcAndDateResponseMessageEntity? GetAisUtcAndDateResponseMessageByAisDeviceAtReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisUtcAndDateResponseMessageByAisDeviceAtReceivedTimestamp( aisDevice, receivedTimestamp );
            if( dataObject != null )
            {
                var result = (AisUtcAndDateResponseMessageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisUtcAndDateResponseMessageEntity> GetAisUtcAndDateResponseMessageByAisDeviceFromReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateResponseMessageByAisDeviceFromReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisUtcAndDateResponseMessageEntity,AisUtcAndDateResponseMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateResponseMessageEntity> GetAisUtcAndDateResponseMessageByAisDeviceUntilReceivedTimestamp( Guid aisDevice, DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateResponseMessageByAisDeviceUntilReceivedTimestamp( aisDevice, receivedTimestamp );
            var result = ToEntityList<AisUtcAndDateResponseMessageEntity,AisUtcAndDateResponseMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateResponseMessageEntity> GetAisUtcAndDateResponseMessageByAisDeviceOverReceivedTimestamp( Guid aisDevice, DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateResponseMessageByAisDeviceOverReceivedTimestamp( aisDevice, fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisUtcAndDateResponseMessageEntity,AisUtcAndDateResponseMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateResponseMessageEntity> GetAisUtcAndDateResponseMessageCollectionByReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateResponseMessageCollectionByReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisUtcAndDateResponseMessageEntity,AisUtcAndDateResponseMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateResponseMessageEntity> GetAisUtcAndDateResponseMessageCollectionAtReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateResponseMessageCollectionAtReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisUtcAndDateResponseMessageEntity,AisUtcAndDateResponseMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateResponseMessageEntity> GetAisUtcAndDateResponseMessageCollectionFromReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateResponseMessageCollectionFromReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisUtcAndDateResponseMessageEntity,AisUtcAndDateResponseMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateResponseMessageEntity> GetAisUtcAndDateResponseMessageCollectionUntilReceivedTimestamp( DateTime receivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateResponseMessageCollectionUntilReceivedTimestamp( receivedTimestamp );
            var result = ToEntityList<AisUtcAndDateResponseMessageEntity,AisUtcAndDateResponseMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateResponseMessageEntity> GetAisUtcAndDateResponseMessageCollectionOverReceivedTimestamp( DateTime fromReceivedTimestamp, DateTime untilReceivedTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateResponseMessageCollectionOverReceivedTimestamp( fromReceivedTimestamp, untilReceivedTimestamp );
            var result = ToEntityList<AisUtcAndDateResponseMessageEntity,AisUtcAndDateResponseMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateResponseMessageEntity> GetAisUtcAndDateResponseMessageCollectionByMmsi( Guid? mmsi )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateResponseMessageCollectionByMmsi( mmsi );
            var result = ToEntityList<AisUtcAndDateResponseMessageEntity,AisUtcAndDateResponseMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateResponseMessageEntity> GetAisUtcAndDateResponseMessageCollectionByMmsiAndMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateResponseMessageCollectionByMmsiAndMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisUtcAndDateResponseMessageEntity,AisUtcAndDateResponseMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateResponseMessageEntity> GetAisUtcAndDateResponseMessageCollectionByMmsiFromMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateResponseMessageCollectionByMmsiFromMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisUtcAndDateResponseMessageEntity,AisUtcAndDateResponseMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateResponseMessageEntity> GetAisUtcAndDateResponseMessageCollectionByMmsiUntilMessageSequenceNumber( Guid? mmsi, long messageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateResponseMessageCollectionByMmsiUntilMessageSequenceNumber( mmsi, messageSequenceNumber );
            var result = ToEntityList<AisUtcAndDateResponseMessageEntity,AisUtcAndDateResponseMessageObject>( dataItems );
            return result;
        }

        public BindingList<AisUtcAndDateResponseMessageEntity> GetAisUtcAndDateResponseMessageCollectionByMmsiOverMessageSequenceNumber( Guid mmsi, long fromMessageSequenceNumber, long untilMessageSequenceNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisUtcAndDateResponseMessageCollectionByMmsiOverMessageSequenceNumber( mmsi, fromMessageSequenceNumber, untilMessageSequenceNumber );
            var result = ToEntityList<AisUtcAndDateResponseMessageEntity,AisUtcAndDateResponseMessageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AlarmStateChange queries
        // ---------------------------------------------------------------------
        public AlarmStateChangeEntity? GetAlarmStateChangeById( Guid id )
        {
            var entity = (AlarmStateChangeEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAlarmStateChangeById( id );
                if( dataObject != null )
                {
                    entity = (AlarmStateChangeEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AlarmStateChangeEntity> GetAlarmStateChangeCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAlarmStateChangeCollection( );
            var result = ToEntityList<AlarmStateChangeEntity,AlarmStateChangeObject>( dataItems );
            return result;
        }
        public BindingList<AlarmStateChangeEntity> GetAlarmStateChangeCollectionByAlarm( Guid alarm )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAlarmStateChangeCollectionByAlarm( alarm );
            var result = ToEntityList<AlarmStateChangeEntity,AlarmStateChangeObject>( dataItems );
            return result;
        }

        public AlarmStateChangeEntity? GetAlarmStateChangeByAlarmAndTimestamp( Guid alarm, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAlarmStateChangeByAlarmAndTimestamp( alarm, timestamp );
            if( dataObject != null )
            {
                var result = (AlarmStateChangeEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public AlarmStateChangeEntity? GetAlarmStateChangeByAlarmAtTimestamp( Guid alarm, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAlarmStateChangeByAlarmAtTimestamp( alarm, timestamp );
            if( dataObject != null )
            {
                var result = (AlarmStateChangeEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AlarmStateChangeEntity> GetAlarmStateChangeByAlarmFromTimestamp( Guid alarm, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAlarmStateChangeByAlarmFromTimestamp( alarm, timestamp );
            var result = ToEntityList<AlarmStateChangeEntity,AlarmStateChangeObject>( dataItems );
            return result;
        }

        public BindingList<AlarmStateChangeEntity> GetAlarmStateChangeByAlarmUntilTimestamp( Guid alarm, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAlarmStateChangeByAlarmUntilTimestamp( alarm, timestamp );
            var result = ToEntityList<AlarmStateChangeEntity,AlarmStateChangeObject>( dataItems );
            return result;
        }

        public BindingList<AlarmStateChangeEntity> GetAlarmStateChangeByAlarmOverTimestamp( Guid alarm, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAlarmStateChangeByAlarmOverTimestamp( alarm, fromTimestamp, untilTimestamp );
            var result = ToEntityList<AlarmStateChangeEntity,AlarmStateChangeObject>( dataItems );
            return result;
        }

        public BindingList<AlarmStateChangeEntity> GetAlarmStateChangeCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAlarmStateChangeCollectionByTimestamp( timestamp );
            var result = ToEntityList<AlarmStateChangeEntity,AlarmStateChangeObject>( dataItems );
            return result;
        }

        public BindingList<AlarmStateChangeEntity> GetAlarmStateChangeCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAlarmStateChangeCollectionAtTimestamp( timestamp );
            var result = ToEntityList<AlarmStateChangeEntity,AlarmStateChangeObject>( dataItems );
            return result;
        }

        public BindingList<AlarmStateChangeEntity> GetAlarmStateChangeCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAlarmStateChangeCollectionFromTimestamp( timestamp );
            var result = ToEntityList<AlarmStateChangeEntity,AlarmStateChangeObject>( dataItems );
            return result;
        }

        public BindingList<AlarmStateChangeEntity> GetAlarmStateChangeCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAlarmStateChangeCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<AlarmStateChangeEntity,AlarmStateChangeObject>( dataItems );
            return result;
        }

        public BindingList<AlarmStateChangeEntity> GetAlarmStateChangeCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAlarmStateChangeCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<AlarmStateChangeEntity,AlarmStateChangeObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // BaseStationType queries
        // ---------------------------------------------------------------------
        public BaseStationTypeEntity? GetBaseStationTypeById( Guid id )
        {
            var entity = (BaseStationTypeEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetBaseStationTypeById( id );
                if( dataObject != null )
                {
                    entity = (BaseStationTypeEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<BaseStationTypeEntity> GetBaseStationTypeCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBaseStationTypeCollection( );
            var result = ToEntityList<BaseStationTypeEntity,BaseStationTypeObject>( dataItems );
            return result;
        }
        public BaseStationTypeEntity? GetBaseStationTypeByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBaseStationTypeByName( name );
            if( dataObject != null )
            {
                var result = (BaseStationTypeEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // BinaryTimeseriesValue queries
        // ---------------------------------------------------------------------
        public BinaryTimeseriesValueEntity? GetBinaryTimeseriesValueById( Guid id )
        {
            var entity = (BinaryTimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetBinaryTimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (BinaryTimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<BinaryTimeseriesValueEntity> GetBinaryTimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesValueCollection( );
            var result = ToEntityList<BinaryTimeseriesValueEntity,BinaryTimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<BinaryTimeseriesValueEntity> GetBinaryTimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<BinaryTimeseriesValueEntity,BinaryTimeseriesValueObject>( dataItems );
            return result;
        }

        public BinaryTimeseriesValueEntity? GetBinaryTimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBinaryTimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (BinaryTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BinaryTimeseriesValueEntity? GetBinaryTimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBinaryTimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (BinaryTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<BinaryTimeseriesValueEntity> GetBinaryTimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<BinaryTimeseriesValueEntity,BinaryTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<BinaryTimeseriesValueEntity> GetBinaryTimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<BinaryTimeseriesValueEntity,BinaryTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<BinaryTimeseriesValueEntity> GetBinaryTimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<BinaryTimeseriesValueEntity,BinaryTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<BinaryTimeseriesValueEntity> GetBinaryTimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<BinaryTimeseriesValueEntity,BinaryTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<BinaryTimeseriesValueEntity> GetBinaryTimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<BinaryTimeseriesValueEntity,BinaryTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<BinaryTimeseriesValueEntity> GetBinaryTimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<BinaryTimeseriesValueEntity,BinaryTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<BinaryTimeseriesValueEntity> GetBinaryTimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<BinaryTimeseriesValueEntity,BinaryTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<BinaryTimeseriesValueEntity> GetBinaryTimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<BinaryTimeseriesValueEntity,BinaryTimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Bookmark queries
        // ---------------------------------------------------------------------
        public BookmarkEntity? GetBookmarkById( Guid id )
        {
            var entity = (BookmarkEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetBookmarkById( id );
                if( dataObject != null )
                {
                    entity = (BookmarkEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<BookmarkEntity> GetBookmarkCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBookmarkCollection( );
            var result = ToEntityList<BookmarkEntity,BookmarkObject>( dataItems );
            return result;
        }
        public BindingList<BookmarkEntity> GetBookmarkCollectionByView( Guid view )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBookmarkCollectionByView( view );
            var result = ToEntityList<BookmarkEntity,BookmarkObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // BooleanTimeseriesValue queries
        // ---------------------------------------------------------------------
        public BooleanTimeseriesValueEntity? GetBooleanTimeseriesValueById( Guid id )
        {
            var entity = (BooleanTimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetBooleanTimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (BooleanTimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<BooleanTimeseriesValueEntity> GetBooleanTimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesValueCollection( );
            var result = ToEntityList<BooleanTimeseriesValueEntity,BooleanTimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<BooleanTimeseriesValueEntity> GetBooleanTimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<BooleanTimeseriesValueEntity,BooleanTimeseriesValueObject>( dataItems );
            return result;
        }

        public BooleanTimeseriesValueEntity? GetBooleanTimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBooleanTimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (BooleanTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BooleanTimeseriesValueEntity? GetBooleanTimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBooleanTimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (BooleanTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<BooleanTimeseriesValueEntity> GetBooleanTimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<BooleanTimeseriesValueEntity,BooleanTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<BooleanTimeseriesValueEntity> GetBooleanTimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<BooleanTimeseriesValueEntity,BooleanTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<BooleanTimeseriesValueEntity> GetBooleanTimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<BooleanTimeseriesValueEntity,BooleanTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<BooleanTimeseriesValueEntity> GetBooleanTimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<BooleanTimeseriesValueEntity,BooleanTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<BooleanTimeseriesValueEntity> GetBooleanTimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<BooleanTimeseriesValueEntity,BooleanTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<BooleanTimeseriesValueEntity> GetBooleanTimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<BooleanTimeseriesValueEntity,BooleanTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<BooleanTimeseriesValueEntity> GetBooleanTimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<BooleanTimeseriesValueEntity,BooleanTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<BooleanTimeseriesValueEntity> GetBooleanTimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<BooleanTimeseriesValueEntity,BooleanTimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // ByteTimeseriesValue queries
        // ---------------------------------------------------------------------
        public ByteTimeseriesValueEntity? GetByteTimeseriesValueById( Guid id )
        {
            var entity = (ByteTimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetByteTimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (ByteTimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ByteTimeseriesValueEntity> GetByteTimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesValueCollection( );
            var result = ToEntityList<ByteTimeseriesValueEntity,ByteTimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<ByteTimeseriesValueEntity> GetByteTimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<ByteTimeseriesValueEntity,ByteTimeseriesValueObject>( dataItems );
            return result;
        }

        public ByteTimeseriesValueEntity? GetByteTimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetByteTimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (ByteTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public ByteTimeseriesValueEntity? GetByteTimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetByteTimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (ByteTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ByteTimeseriesValueEntity> GetByteTimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<ByteTimeseriesValueEntity,ByteTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<ByteTimeseriesValueEntity> GetByteTimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<ByteTimeseriesValueEntity,ByteTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<ByteTimeseriesValueEntity> GetByteTimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<ByteTimeseriesValueEntity,ByteTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<ByteTimeseriesValueEntity> GetByteTimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<ByteTimeseriesValueEntity,ByteTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<ByteTimeseriesValueEntity> GetByteTimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<ByteTimeseriesValueEntity,ByteTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<ByteTimeseriesValueEntity> GetByteTimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<ByteTimeseriesValueEntity,ByteTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<ByteTimeseriesValueEntity> GetByteTimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<ByteTimeseriesValueEntity,ByteTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<ByteTimeseriesValueEntity> GetByteTimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<ByteTimeseriesValueEntity,ByteTimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraCommand queries
        // ---------------------------------------------------------------------
        public CameraCommandEntity? GetCameraCommandById( Guid id )
        {
            var entity = (CameraCommandEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraCommandById( id );
                if( dataObject != null )
                {
                    entity = (CameraCommandEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraCommandEntity> GetCameraCommandCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandCollection( );
            var result = ToEntityList<CameraCommandEntity,CameraCommandObject>( dataItems );
            return result;
        }
        public BindingList<CameraCommandEntity> GetCameraCommandCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandCollectionByCamera( camera );
            var result = ToEntityList<CameraCommandEntity,CameraCommandObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandEntity> GetCameraCommandCollectionByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandCollectionByCameraAndTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandEntity,CameraCommandObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandEntity> GetCameraCommandCollectionByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandCollectionByCameraAtTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandEntity,CameraCommandObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandEntity> GetCameraCommandCollectionByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandCollectionByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandEntity,CameraCommandObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandEntity> GetCameraCommandCollectionByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandCollectionByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandEntity,CameraCommandObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandEntity> GetCameraCommandCollectionByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandCollectionByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandEntity,CameraCommandObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandEntity> GetCameraCommandCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraCommandEntity,CameraCommandObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandEntity> GetCameraCommandCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraCommandEntity,CameraCommandObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandEntity> GetCameraCommandCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraCommandEntity,CameraCommandObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandEntity> GetCameraCommandCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraCommandEntity,CameraCommandObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandEntity> GetCameraCommandCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandEntity,CameraCommandObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandEntity> GetCameraCommandCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandCollectionByReply( reply );
            var result = ToEntityList<CameraCommandEntity,CameraCommandObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraCommandAbsoluteMove queries
        // ---------------------------------------------------------------------
        public CameraCommandAbsoluteMoveEntity? GetCameraCommandAbsoluteMoveById( Guid id )
        {
            var entity = (CameraCommandAbsoluteMoveEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraCommandAbsoluteMoveById( id );
                if( dataObject != null )
                {
                    entity = (CameraCommandAbsoluteMoveEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraCommandAbsoluteMoveEntity> GetCameraCommandAbsoluteMoveCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAbsoluteMoveCollection( );
            var result = ToEntityList<CameraCommandAbsoluteMoveEntity,CameraCommandAbsoluteMoveObject>( dataItems );
            return result;
        }
        public BindingList<CameraCommandAbsoluteMoveEntity> GetCameraCommandAbsoluteMoveCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAbsoluteMoveCollectionByCamera( camera );
            var result = ToEntityList<CameraCommandAbsoluteMoveEntity,CameraCommandAbsoluteMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAbsoluteMoveEntity> GetCameraCommandAbsoluteMoveCollectionByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAbsoluteMoveCollectionByCameraAndTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandAbsoluteMoveEntity,CameraCommandAbsoluteMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAbsoluteMoveEntity> GetCameraCommandAbsoluteMoveCollectionByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAbsoluteMoveCollectionByCameraAtTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandAbsoluteMoveEntity,CameraCommandAbsoluteMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAbsoluteMoveEntity> GetCameraCommandAbsoluteMoveCollectionByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAbsoluteMoveCollectionByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandAbsoluteMoveEntity,CameraCommandAbsoluteMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAbsoluteMoveEntity> GetCameraCommandAbsoluteMoveCollectionByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAbsoluteMoveCollectionByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandAbsoluteMoveEntity,CameraCommandAbsoluteMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAbsoluteMoveEntity> GetCameraCommandAbsoluteMoveCollectionByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAbsoluteMoveCollectionByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandAbsoluteMoveEntity,CameraCommandAbsoluteMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAbsoluteMoveEntity> GetCameraCommandAbsoluteMoveCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAbsoluteMoveCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraCommandAbsoluteMoveEntity,CameraCommandAbsoluteMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAbsoluteMoveEntity> GetCameraCommandAbsoluteMoveCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAbsoluteMoveCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraCommandAbsoluteMoveEntity,CameraCommandAbsoluteMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAbsoluteMoveEntity> GetCameraCommandAbsoluteMoveCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAbsoluteMoveCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraCommandAbsoluteMoveEntity,CameraCommandAbsoluteMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAbsoluteMoveEntity> GetCameraCommandAbsoluteMoveCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAbsoluteMoveCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraCommandAbsoluteMoveEntity,CameraCommandAbsoluteMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAbsoluteMoveEntity> GetCameraCommandAbsoluteMoveCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAbsoluteMoveCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandAbsoluteMoveEntity,CameraCommandAbsoluteMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAbsoluteMoveEntity> GetCameraCommandAbsoluteMoveCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAbsoluteMoveCollectionByReply( reply );
            var result = ToEntityList<CameraCommandAbsoluteMoveEntity,CameraCommandAbsoluteMoveObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraCommandAdjustPanTiltZoom queries
        // ---------------------------------------------------------------------
        public CameraCommandAdjustPanTiltZoomEntity? GetCameraCommandAdjustPanTiltZoomById( Guid id )
        {
            var entity = (CameraCommandAdjustPanTiltZoomEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraCommandAdjustPanTiltZoomById( id );
                if( dataObject != null )
                {
                    entity = (CameraCommandAdjustPanTiltZoomEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraCommandAdjustPanTiltZoomEntity> GetCameraCommandAdjustPanTiltZoomCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAdjustPanTiltZoomCollection( );
            var result = ToEntityList<CameraCommandAdjustPanTiltZoomEntity,CameraCommandAdjustPanTiltZoomObject>( dataItems );
            return result;
        }
        public BindingList<CameraCommandAdjustPanTiltZoomEntity> GetCameraCommandAdjustPanTiltZoomCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAdjustPanTiltZoomCollectionByCamera( camera );
            var result = ToEntityList<CameraCommandAdjustPanTiltZoomEntity,CameraCommandAdjustPanTiltZoomObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAdjustPanTiltZoomEntity> GetCameraCommandAdjustPanTiltZoomCollectionByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAdjustPanTiltZoomCollectionByCameraAndTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandAdjustPanTiltZoomEntity,CameraCommandAdjustPanTiltZoomObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAdjustPanTiltZoomEntity> GetCameraCommandAdjustPanTiltZoomCollectionByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAdjustPanTiltZoomCollectionByCameraAtTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandAdjustPanTiltZoomEntity,CameraCommandAdjustPanTiltZoomObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAdjustPanTiltZoomEntity> GetCameraCommandAdjustPanTiltZoomCollectionByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAdjustPanTiltZoomCollectionByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandAdjustPanTiltZoomEntity,CameraCommandAdjustPanTiltZoomObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAdjustPanTiltZoomEntity> GetCameraCommandAdjustPanTiltZoomCollectionByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAdjustPanTiltZoomCollectionByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandAdjustPanTiltZoomEntity,CameraCommandAdjustPanTiltZoomObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAdjustPanTiltZoomEntity> GetCameraCommandAdjustPanTiltZoomCollectionByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAdjustPanTiltZoomCollectionByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandAdjustPanTiltZoomEntity,CameraCommandAdjustPanTiltZoomObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAdjustPanTiltZoomEntity> GetCameraCommandAdjustPanTiltZoomCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAdjustPanTiltZoomCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraCommandAdjustPanTiltZoomEntity,CameraCommandAdjustPanTiltZoomObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAdjustPanTiltZoomEntity> GetCameraCommandAdjustPanTiltZoomCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAdjustPanTiltZoomCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraCommandAdjustPanTiltZoomEntity,CameraCommandAdjustPanTiltZoomObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAdjustPanTiltZoomEntity> GetCameraCommandAdjustPanTiltZoomCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAdjustPanTiltZoomCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraCommandAdjustPanTiltZoomEntity,CameraCommandAdjustPanTiltZoomObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAdjustPanTiltZoomEntity> GetCameraCommandAdjustPanTiltZoomCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAdjustPanTiltZoomCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraCommandAdjustPanTiltZoomEntity,CameraCommandAdjustPanTiltZoomObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAdjustPanTiltZoomEntity> GetCameraCommandAdjustPanTiltZoomCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAdjustPanTiltZoomCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandAdjustPanTiltZoomEntity,CameraCommandAdjustPanTiltZoomObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandAdjustPanTiltZoomEntity> GetCameraCommandAdjustPanTiltZoomCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandAdjustPanTiltZoomCollectionByReply( reply );
            var result = ToEntityList<CameraCommandAdjustPanTiltZoomEntity,CameraCommandAdjustPanTiltZoomObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraCommandContinuousMove queries
        // ---------------------------------------------------------------------
        public CameraCommandContinuousMoveEntity? GetCameraCommandContinuousMoveById( Guid id )
        {
            var entity = (CameraCommandContinuousMoveEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraCommandContinuousMoveById( id );
                if( dataObject != null )
                {
                    entity = (CameraCommandContinuousMoveEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraCommandContinuousMoveEntity> GetCameraCommandContinuousMoveCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandContinuousMoveCollection( );
            var result = ToEntityList<CameraCommandContinuousMoveEntity,CameraCommandContinuousMoveObject>( dataItems );
            return result;
        }
        public BindingList<CameraCommandContinuousMoveEntity> GetCameraCommandContinuousMoveCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandContinuousMoveCollectionByCamera( camera );
            var result = ToEntityList<CameraCommandContinuousMoveEntity,CameraCommandContinuousMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandContinuousMoveEntity> GetCameraCommandContinuousMoveCollectionByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandContinuousMoveCollectionByCameraAndTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandContinuousMoveEntity,CameraCommandContinuousMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandContinuousMoveEntity> GetCameraCommandContinuousMoveCollectionByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandContinuousMoveCollectionByCameraAtTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandContinuousMoveEntity,CameraCommandContinuousMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandContinuousMoveEntity> GetCameraCommandContinuousMoveCollectionByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandContinuousMoveCollectionByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandContinuousMoveEntity,CameraCommandContinuousMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandContinuousMoveEntity> GetCameraCommandContinuousMoveCollectionByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandContinuousMoveCollectionByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandContinuousMoveEntity,CameraCommandContinuousMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandContinuousMoveEntity> GetCameraCommandContinuousMoveCollectionByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandContinuousMoveCollectionByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandContinuousMoveEntity,CameraCommandContinuousMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandContinuousMoveEntity> GetCameraCommandContinuousMoveCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandContinuousMoveCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraCommandContinuousMoveEntity,CameraCommandContinuousMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandContinuousMoveEntity> GetCameraCommandContinuousMoveCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandContinuousMoveCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraCommandContinuousMoveEntity,CameraCommandContinuousMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandContinuousMoveEntity> GetCameraCommandContinuousMoveCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandContinuousMoveCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraCommandContinuousMoveEntity,CameraCommandContinuousMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandContinuousMoveEntity> GetCameraCommandContinuousMoveCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandContinuousMoveCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraCommandContinuousMoveEntity,CameraCommandContinuousMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandContinuousMoveEntity> GetCameraCommandContinuousMoveCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandContinuousMoveCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandContinuousMoveEntity,CameraCommandContinuousMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandContinuousMoveEntity> GetCameraCommandContinuousMoveCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandContinuousMoveCollectionByReply( reply );
            var result = ToEntityList<CameraCommandContinuousMoveEntity,CameraCommandContinuousMoveObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraCommandGeoMove queries
        // ---------------------------------------------------------------------
        public CameraCommandGeoMoveEntity? GetCameraCommandGeoMoveById( Guid id )
        {
            var entity = (CameraCommandGeoMoveEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraCommandGeoMoveById( id );
                if( dataObject != null )
                {
                    entity = (CameraCommandGeoMoveEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraCommandGeoMoveEntity> GetCameraCommandGeoMoveCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandGeoMoveCollection( );
            var result = ToEntityList<CameraCommandGeoMoveEntity,CameraCommandGeoMoveObject>( dataItems );
            return result;
        }
        public BindingList<CameraCommandGeoMoveEntity> GetCameraCommandGeoMoveCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandGeoMoveCollectionByCamera( camera );
            var result = ToEntityList<CameraCommandGeoMoveEntity,CameraCommandGeoMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandGeoMoveEntity> GetCameraCommandGeoMoveCollectionByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandGeoMoveCollectionByCameraAndTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandGeoMoveEntity,CameraCommandGeoMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandGeoMoveEntity> GetCameraCommandGeoMoveCollectionByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandGeoMoveCollectionByCameraAtTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandGeoMoveEntity,CameraCommandGeoMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandGeoMoveEntity> GetCameraCommandGeoMoveCollectionByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandGeoMoveCollectionByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandGeoMoveEntity,CameraCommandGeoMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandGeoMoveEntity> GetCameraCommandGeoMoveCollectionByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandGeoMoveCollectionByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandGeoMoveEntity,CameraCommandGeoMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandGeoMoveEntity> GetCameraCommandGeoMoveCollectionByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandGeoMoveCollectionByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandGeoMoveEntity,CameraCommandGeoMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandGeoMoveEntity> GetCameraCommandGeoMoveCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandGeoMoveCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraCommandGeoMoveEntity,CameraCommandGeoMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandGeoMoveEntity> GetCameraCommandGeoMoveCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandGeoMoveCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraCommandGeoMoveEntity,CameraCommandGeoMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandGeoMoveEntity> GetCameraCommandGeoMoveCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandGeoMoveCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraCommandGeoMoveEntity,CameraCommandGeoMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandGeoMoveEntity> GetCameraCommandGeoMoveCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandGeoMoveCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraCommandGeoMoveEntity,CameraCommandGeoMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandGeoMoveEntity> GetCameraCommandGeoMoveCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandGeoMoveCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandGeoMoveEntity,CameraCommandGeoMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandGeoMoveEntity> GetCameraCommandGeoMoveCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandGeoMoveCollectionByReply( reply );
            var result = ToEntityList<CameraCommandGeoMoveEntity,CameraCommandGeoMoveObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraCommandRelativeMove queries
        // ---------------------------------------------------------------------
        public CameraCommandRelativeMoveEntity? GetCameraCommandRelativeMoveById( Guid id )
        {
            var entity = (CameraCommandRelativeMoveEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraCommandRelativeMoveById( id );
                if( dataObject != null )
                {
                    entity = (CameraCommandRelativeMoveEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraCommandRelativeMoveEntity> GetCameraCommandRelativeMoveCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRelativeMoveCollection( );
            var result = ToEntityList<CameraCommandRelativeMoveEntity,CameraCommandRelativeMoveObject>( dataItems );
            return result;
        }
        public BindingList<CameraCommandRelativeMoveEntity> GetCameraCommandRelativeMoveCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRelativeMoveCollectionByCamera( camera );
            var result = ToEntityList<CameraCommandRelativeMoveEntity,CameraCommandRelativeMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRelativeMoveEntity> GetCameraCommandRelativeMoveCollectionByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRelativeMoveCollectionByCameraAndTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandRelativeMoveEntity,CameraCommandRelativeMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRelativeMoveEntity> GetCameraCommandRelativeMoveCollectionByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRelativeMoveCollectionByCameraAtTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandRelativeMoveEntity,CameraCommandRelativeMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRelativeMoveEntity> GetCameraCommandRelativeMoveCollectionByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRelativeMoveCollectionByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandRelativeMoveEntity,CameraCommandRelativeMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRelativeMoveEntity> GetCameraCommandRelativeMoveCollectionByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRelativeMoveCollectionByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandRelativeMoveEntity,CameraCommandRelativeMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRelativeMoveEntity> GetCameraCommandRelativeMoveCollectionByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRelativeMoveCollectionByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandRelativeMoveEntity,CameraCommandRelativeMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRelativeMoveEntity> GetCameraCommandRelativeMoveCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRelativeMoveCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraCommandRelativeMoveEntity,CameraCommandRelativeMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRelativeMoveEntity> GetCameraCommandRelativeMoveCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRelativeMoveCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraCommandRelativeMoveEntity,CameraCommandRelativeMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRelativeMoveEntity> GetCameraCommandRelativeMoveCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRelativeMoveCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraCommandRelativeMoveEntity,CameraCommandRelativeMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRelativeMoveEntity> GetCameraCommandRelativeMoveCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRelativeMoveCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraCommandRelativeMoveEntity,CameraCommandRelativeMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRelativeMoveEntity> GetCameraCommandRelativeMoveCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRelativeMoveCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandRelativeMoveEntity,CameraCommandRelativeMoveObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRelativeMoveEntity> GetCameraCommandRelativeMoveCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRelativeMoveCollectionByReply( reply );
            var result = ToEntityList<CameraCommandRelativeMoveEntity,CameraCommandRelativeMoveObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraCommandReleasePTZOwnership queries
        // ---------------------------------------------------------------------
        public CameraCommandReleasePTZOwnershipEntity? GetCameraCommandReleasePTZOwnershipById( Guid id )
        {
            var entity = (CameraCommandReleasePTZOwnershipEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraCommandReleasePTZOwnershipById( id );
                if( dataObject != null )
                {
                    entity = (CameraCommandReleasePTZOwnershipEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraCommandReleasePTZOwnershipEntity> GetCameraCommandReleasePTZOwnershipCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReleasePTZOwnershipCollection( );
            var result = ToEntityList<CameraCommandReleasePTZOwnershipEntity,CameraCommandReleasePTZOwnershipObject>( dataItems );
            return result;
        }
        public BindingList<CameraCommandReleasePTZOwnershipEntity> GetCameraCommandReleasePTZOwnershipCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReleasePTZOwnershipCollectionByCamera( camera );
            var result = ToEntityList<CameraCommandReleasePTZOwnershipEntity,CameraCommandReleasePTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReleasePTZOwnershipEntity> GetCameraCommandReleasePTZOwnershipCollectionByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReleasePTZOwnershipCollectionByCameraAndTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandReleasePTZOwnershipEntity,CameraCommandReleasePTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReleasePTZOwnershipEntity> GetCameraCommandReleasePTZOwnershipCollectionByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReleasePTZOwnershipCollectionByCameraAtTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandReleasePTZOwnershipEntity,CameraCommandReleasePTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReleasePTZOwnershipEntity> GetCameraCommandReleasePTZOwnershipCollectionByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReleasePTZOwnershipCollectionByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandReleasePTZOwnershipEntity,CameraCommandReleasePTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReleasePTZOwnershipEntity> GetCameraCommandReleasePTZOwnershipCollectionByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReleasePTZOwnershipCollectionByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandReleasePTZOwnershipEntity,CameraCommandReleasePTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReleasePTZOwnershipEntity> GetCameraCommandReleasePTZOwnershipCollectionByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReleasePTZOwnershipCollectionByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandReleasePTZOwnershipEntity,CameraCommandReleasePTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReleasePTZOwnershipEntity> GetCameraCommandReleasePTZOwnershipCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReleasePTZOwnershipCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraCommandReleasePTZOwnershipEntity,CameraCommandReleasePTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReleasePTZOwnershipEntity> GetCameraCommandReleasePTZOwnershipCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReleasePTZOwnershipCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraCommandReleasePTZOwnershipEntity,CameraCommandReleasePTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReleasePTZOwnershipEntity> GetCameraCommandReleasePTZOwnershipCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReleasePTZOwnershipCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraCommandReleasePTZOwnershipEntity,CameraCommandReleasePTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReleasePTZOwnershipEntity> GetCameraCommandReleasePTZOwnershipCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReleasePTZOwnershipCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraCommandReleasePTZOwnershipEntity,CameraCommandReleasePTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReleasePTZOwnershipEntity> GetCameraCommandReleasePTZOwnershipCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReleasePTZOwnershipCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandReleasePTZOwnershipEntity,CameraCommandReleasePTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReleasePTZOwnershipEntity> GetCameraCommandReleasePTZOwnershipCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReleasePTZOwnershipCollectionByReply( reply );
            var result = ToEntityList<CameraCommandReleasePTZOwnershipEntity,CameraCommandReleasePTZOwnershipObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraCommandRequestPTZOwnership queries
        // ---------------------------------------------------------------------
        public CameraCommandRequestPTZOwnershipEntity? GetCameraCommandRequestPTZOwnershipById( Guid id )
        {
            var entity = (CameraCommandRequestPTZOwnershipEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraCommandRequestPTZOwnershipById( id );
                if( dataObject != null )
                {
                    entity = (CameraCommandRequestPTZOwnershipEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraCommandRequestPTZOwnershipEntity> GetCameraCommandRequestPTZOwnershipCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRequestPTZOwnershipCollection( );
            var result = ToEntityList<CameraCommandRequestPTZOwnershipEntity,CameraCommandRequestPTZOwnershipObject>( dataItems );
            return result;
        }
        public BindingList<CameraCommandRequestPTZOwnershipEntity> GetCameraCommandRequestPTZOwnershipCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRequestPTZOwnershipCollectionByCamera( camera );
            var result = ToEntityList<CameraCommandRequestPTZOwnershipEntity,CameraCommandRequestPTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRequestPTZOwnershipEntity> GetCameraCommandRequestPTZOwnershipCollectionByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRequestPTZOwnershipCollectionByCameraAndTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandRequestPTZOwnershipEntity,CameraCommandRequestPTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRequestPTZOwnershipEntity> GetCameraCommandRequestPTZOwnershipCollectionByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRequestPTZOwnershipCollectionByCameraAtTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandRequestPTZOwnershipEntity,CameraCommandRequestPTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRequestPTZOwnershipEntity> GetCameraCommandRequestPTZOwnershipCollectionByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRequestPTZOwnershipCollectionByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandRequestPTZOwnershipEntity,CameraCommandRequestPTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRequestPTZOwnershipEntity> GetCameraCommandRequestPTZOwnershipCollectionByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRequestPTZOwnershipCollectionByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandRequestPTZOwnershipEntity,CameraCommandRequestPTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRequestPTZOwnershipEntity> GetCameraCommandRequestPTZOwnershipCollectionByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRequestPTZOwnershipCollectionByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandRequestPTZOwnershipEntity,CameraCommandRequestPTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRequestPTZOwnershipEntity> GetCameraCommandRequestPTZOwnershipCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRequestPTZOwnershipCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraCommandRequestPTZOwnershipEntity,CameraCommandRequestPTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRequestPTZOwnershipEntity> GetCameraCommandRequestPTZOwnershipCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRequestPTZOwnershipCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraCommandRequestPTZOwnershipEntity,CameraCommandRequestPTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRequestPTZOwnershipEntity> GetCameraCommandRequestPTZOwnershipCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRequestPTZOwnershipCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraCommandRequestPTZOwnershipEntity,CameraCommandRequestPTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRequestPTZOwnershipEntity> GetCameraCommandRequestPTZOwnershipCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRequestPTZOwnershipCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraCommandRequestPTZOwnershipEntity,CameraCommandRequestPTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRequestPTZOwnershipEntity> GetCameraCommandRequestPTZOwnershipCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRequestPTZOwnershipCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandRequestPTZOwnershipEntity,CameraCommandRequestPTZOwnershipObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandRequestPTZOwnershipEntity> GetCameraCommandRequestPTZOwnershipCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandRequestPTZOwnershipCollectionByReply( reply );
            var result = ToEntityList<CameraCommandRequestPTZOwnershipEntity,CameraCommandRequestPTZOwnershipObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraCommandSetAutoFocus queries
        // ---------------------------------------------------------------------
        public CameraCommandSetAutoFocusEntity? GetCameraCommandSetAutoFocusById( Guid id )
        {
            var entity = (CameraCommandSetAutoFocusEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraCommandSetAutoFocusById( id );
                if( dataObject != null )
                {
                    entity = (CameraCommandSetAutoFocusEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraCommandSetAutoFocusEntity> GetCameraCommandSetAutoFocusCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetAutoFocusCollection( );
            var result = ToEntityList<CameraCommandSetAutoFocusEntity,CameraCommandSetAutoFocusObject>( dataItems );
            return result;
        }
        public BindingList<CameraCommandSetAutoFocusEntity> GetCameraCommandSetAutoFocusCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetAutoFocusCollectionByCamera( camera );
            var result = ToEntityList<CameraCommandSetAutoFocusEntity,CameraCommandSetAutoFocusObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetAutoFocusEntity> GetCameraCommandSetAutoFocusCollectionByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetAutoFocusCollectionByCameraAndTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetAutoFocusEntity,CameraCommandSetAutoFocusObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetAutoFocusEntity> GetCameraCommandSetAutoFocusCollectionByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetAutoFocusCollectionByCameraAtTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetAutoFocusEntity,CameraCommandSetAutoFocusObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetAutoFocusEntity> GetCameraCommandSetAutoFocusCollectionByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetAutoFocusCollectionByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetAutoFocusEntity,CameraCommandSetAutoFocusObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetAutoFocusEntity> GetCameraCommandSetAutoFocusCollectionByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetAutoFocusCollectionByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetAutoFocusEntity,CameraCommandSetAutoFocusObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetAutoFocusEntity> GetCameraCommandSetAutoFocusCollectionByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetAutoFocusCollectionByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandSetAutoFocusEntity,CameraCommandSetAutoFocusObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetAutoFocusEntity> GetCameraCommandSetAutoFocusCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetAutoFocusCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetAutoFocusEntity,CameraCommandSetAutoFocusObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetAutoFocusEntity> GetCameraCommandSetAutoFocusCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetAutoFocusCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetAutoFocusEntity,CameraCommandSetAutoFocusObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetAutoFocusEntity> GetCameraCommandSetAutoFocusCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetAutoFocusCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetAutoFocusEntity,CameraCommandSetAutoFocusObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetAutoFocusEntity> GetCameraCommandSetAutoFocusCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetAutoFocusCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetAutoFocusEntity,CameraCommandSetAutoFocusObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetAutoFocusEntity> GetCameraCommandSetAutoFocusCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetAutoFocusCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandSetAutoFocusEntity,CameraCommandSetAutoFocusObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetAutoFocusEntity> GetCameraCommandSetAutoFocusCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetAutoFocusCollectionByReply( reply );
            var result = ToEntityList<CameraCommandSetAutoFocusEntity,CameraCommandSetAutoFocusObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraCommandSetBlackAndWhite queries
        // ---------------------------------------------------------------------
        public CameraCommandSetBlackAndWhiteEntity? GetCameraCommandSetBlackAndWhiteById( Guid id )
        {
            var entity = (CameraCommandSetBlackAndWhiteEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraCommandSetBlackAndWhiteById( id );
                if( dataObject != null )
                {
                    entity = (CameraCommandSetBlackAndWhiteEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraCommandSetBlackAndWhiteEntity> GetCameraCommandSetBlackAndWhiteCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetBlackAndWhiteCollection( );
            var result = ToEntityList<CameraCommandSetBlackAndWhiteEntity,CameraCommandSetBlackAndWhiteObject>( dataItems );
            return result;
        }
        public BindingList<CameraCommandSetBlackAndWhiteEntity> GetCameraCommandSetBlackAndWhiteCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetBlackAndWhiteCollectionByCamera( camera );
            var result = ToEntityList<CameraCommandSetBlackAndWhiteEntity,CameraCommandSetBlackAndWhiteObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetBlackAndWhiteEntity> GetCameraCommandSetBlackAndWhiteCollectionByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetBlackAndWhiteCollectionByCameraAndTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetBlackAndWhiteEntity,CameraCommandSetBlackAndWhiteObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetBlackAndWhiteEntity> GetCameraCommandSetBlackAndWhiteCollectionByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetBlackAndWhiteCollectionByCameraAtTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetBlackAndWhiteEntity,CameraCommandSetBlackAndWhiteObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetBlackAndWhiteEntity> GetCameraCommandSetBlackAndWhiteCollectionByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetBlackAndWhiteCollectionByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetBlackAndWhiteEntity,CameraCommandSetBlackAndWhiteObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetBlackAndWhiteEntity> GetCameraCommandSetBlackAndWhiteCollectionByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetBlackAndWhiteCollectionByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetBlackAndWhiteEntity,CameraCommandSetBlackAndWhiteObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetBlackAndWhiteEntity> GetCameraCommandSetBlackAndWhiteCollectionByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetBlackAndWhiteCollectionByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandSetBlackAndWhiteEntity,CameraCommandSetBlackAndWhiteObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetBlackAndWhiteEntity> GetCameraCommandSetBlackAndWhiteCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetBlackAndWhiteCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetBlackAndWhiteEntity,CameraCommandSetBlackAndWhiteObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetBlackAndWhiteEntity> GetCameraCommandSetBlackAndWhiteCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetBlackAndWhiteCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetBlackAndWhiteEntity,CameraCommandSetBlackAndWhiteObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetBlackAndWhiteEntity> GetCameraCommandSetBlackAndWhiteCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetBlackAndWhiteCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetBlackAndWhiteEntity,CameraCommandSetBlackAndWhiteObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetBlackAndWhiteEntity> GetCameraCommandSetBlackAndWhiteCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetBlackAndWhiteCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetBlackAndWhiteEntity,CameraCommandSetBlackAndWhiteObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetBlackAndWhiteEntity> GetCameraCommandSetBlackAndWhiteCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetBlackAndWhiteCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandSetBlackAndWhiteEntity,CameraCommandSetBlackAndWhiteObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetBlackAndWhiteEntity> GetCameraCommandSetBlackAndWhiteCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetBlackAndWhiteCollectionByReply( reply );
            var result = ToEntityList<CameraCommandSetBlackAndWhiteEntity,CameraCommandSetBlackAndWhiteObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraCommandSetFollowed queries
        // ---------------------------------------------------------------------
        public CameraCommandSetFollowedEntity? GetCameraCommandSetFollowedById( Guid id )
        {
            var entity = (CameraCommandSetFollowedEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraCommandSetFollowedById( id );
                if( dataObject != null )
                {
                    entity = (CameraCommandSetFollowedEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraCommandSetFollowedEntity> GetCameraCommandSetFollowedCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetFollowedCollection( );
            var result = ToEntityList<CameraCommandSetFollowedEntity,CameraCommandSetFollowedObject>( dataItems );
            return result;
        }
        public BindingList<CameraCommandSetFollowedEntity> GetCameraCommandSetFollowedCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetFollowedCollectionByCamera( camera );
            var result = ToEntityList<CameraCommandSetFollowedEntity,CameraCommandSetFollowedObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetFollowedEntity> GetCameraCommandSetFollowedCollectionByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetFollowedCollectionByCameraAndTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetFollowedEntity,CameraCommandSetFollowedObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetFollowedEntity> GetCameraCommandSetFollowedCollectionByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetFollowedCollectionByCameraAtTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetFollowedEntity,CameraCommandSetFollowedObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetFollowedEntity> GetCameraCommandSetFollowedCollectionByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetFollowedCollectionByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetFollowedEntity,CameraCommandSetFollowedObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetFollowedEntity> GetCameraCommandSetFollowedCollectionByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetFollowedCollectionByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetFollowedEntity,CameraCommandSetFollowedObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetFollowedEntity> GetCameraCommandSetFollowedCollectionByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetFollowedCollectionByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandSetFollowedEntity,CameraCommandSetFollowedObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetFollowedEntity> GetCameraCommandSetFollowedCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetFollowedCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetFollowedEntity,CameraCommandSetFollowedObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetFollowedEntity> GetCameraCommandSetFollowedCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetFollowedCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetFollowedEntity,CameraCommandSetFollowedObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetFollowedEntity> GetCameraCommandSetFollowedCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetFollowedCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetFollowedEntity,CameraCommandSetFollowedObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetFollowedEntity> GetCameraCommandSetFollowedCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetFollowedCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetFollowedEntity,CameraCommandSetFollowedObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetFollowedEntity> GetCameraCommandSetFollowedCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetFollowedCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandSetFollowedEntity,CameraCommandSetFollowedObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetFollowedEntity> GetCameraCommandSetFollowedCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetFollowedCollectionByReply( reply );
            var result = ToEntityList<CameraCommandSetFollowedEntity,CameraCommandSetFollowedObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraCommandSetInfraRedLamp queries
        // ---------------------------------------------------------------------
        public CameraCommandSetInfraRedLampEntity? GetCameraCommandSetInfraRedLampById( Guid id )
        {
            var entity = (CameraCommandSetInfraRedLampEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraCommandSetInfraRedLampById( id );
                if( dataObject != null )
                {
                    entity = (CameraCommandSetInfraRedLampEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraCommandSetInfraRedLampEntity> GetCameraCommandSetInfraRedLampCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetInfraRedLampCollection( );
            var result = ToEntityList<CameraCommandSetInfraRedLampEntity,CameraCommandSetInfraRedLampObject>( dataItems );
            return result;
        }
        public BindingList<CameraCommandSetInfraRedLampEntity> GetCameraCommandSetInfraRedLampCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetInfraRedLampCollectionByCamera( camera );
            var result = ToEntityList<CameraCommandSetInfraRedLampEntity,CameraCommandSetInfraRedLampObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetInfraRedLampEntity> GetCameraCommandSetInfraRedLampCollectionByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetInfraRedLampCollectionByCameraAndTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetInfraRedLampEntity,CameraCommandSetInfraRedLampObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetInfraRedLampEntity> GetCameraCommandSetInfraRedLampCollectionByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetInfraRedLampCollectionByCameraAtTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetInfraRedLampEntity,CameraCommandSetInfraRedLampObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetInfraRedLampEntity> GetCameraCommandSetInfraRedLampCollectionByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetInfraRedLampCollectionByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetInfraRedLampEntity,CameraCommandSetInfraRedLampObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetInfraRedLampEntity> GetCameraCommandSetInfraRedLampCollectionByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetInfraRedLampCollectionByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetInfraRedLampEntity,CameraCommandSetInfraRedLampObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetInfraRedLampEntity> GetCameraCommandSetInfraRedLampCollectionByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetInfraRedLampCollectionByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandSetInfraRedLampEntity,CameraCommandSetInfraRedLampObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetInfraRedLampEntity> GetCameraCommandSetInfraRedLampCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetInfraRedLampCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetInfraRedLampEntity,CameraCommandSetInfraRedLampObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetInfraRedLampEntity> GetCameraCommandSetInfraRedLampCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetInfraRedLampCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetInfraRedLampEntity,CameraCommandSetInfraRedLampObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetInfraRedLampEntity> GetCameraCommandSetInfraRedLampCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetInfraRedLampCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetInfraRedLampEntity,CameraCommandSetInfraRedLampObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetInfraRedLampEntity> GetCameraCommandSetInfraRedLampCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetInfraRedLampCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetInfraRedLampEntity,CameraCommandSetInfraRedLampObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetInfraRedLampEntity> GetCameraCommandSetInfraRedLampCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetInfraRedLampCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandSetInfraRedLampEntity,CameraCommandSetInfraRedLampObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetInfraRedLampEntity> GetCameraCommandSetInfraRedLampCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetInfraRedLampCollectionByReply( reply );
            var result = ToEntityList<CameraCommandSetInfraRedLampEntity,CameraCommandSetInfraRedLampObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraCommandSetWasher queries
        // ---------------------------------------------------------------------
        public CameraCommandSetWasherEntity? GetCameraCommandSetWasherById( Guid id )
        {
            var entity = (CameraCommandSetWasherEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraCommandSetWasherById( id );
                if( dataObject != null )
                {
                    entity = (CameraCommandSetWasherEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraCommandSetWasherEntity> GetCameraCommandSetWasherCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWasherCollection( );
            var result = ToEntityList<CameraCommandSetWasherEntity,CameraCommandSetWasherObject>( dataItems );
            return result;
        }
        public BindingList<CameraCommandSetWasherEntity> GetCameraCommandSetWasherCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWasherCollectionByCamera( camera );
            var result = ToEntityList<CameraCommandSetWasherEntity,CameraCommandSetWasherObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWasherEntity> GetCameraCommandSetWasherCollectionByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWasherCollectionByCameraAndTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetWasherEntity,CameraCommandSetWasherObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWasherEntity> GetCameraCommandSetWasherCollectionByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWasherCollectionByCameraAtTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetWasherEntity,CameraCommandSetWasherObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWasherEntity> GetCameraCommandSetWasherCollectionByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWasherCollectionByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetWasherEntity,CameraCommandSetWasherObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWasherEntity> GetCameraCommandSetWasherCollectionByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWasherCollectionByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetWasherEntity,CameraCommandSetWasherObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWasherEntity> GetCameraCommandSetWasherCollectionByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWasherCollectionByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandSetWasherEntity,CameraCommandSetWasherObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWasherEntity> GetCameraCommandSetWasherCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWasherCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetWasherEntity,CameraCommandSetWasherObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWasherEntity> GetCameraCommandSetWasherCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWasherCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetWasherEntity,CameraCommandSetWasherObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWasherEntity> GetCameraCommandSetWasherCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWasherCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetWasherEntity,CameraCommandSetWasherObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWasherEntity> GetCameraCommandSetWasherCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWasherCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetWasherEntity,CameraCommandSetWasherObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWasherEntity> GetCameraCommandSetWasherCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWasherCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandSetWasherEntity,CameraCommandSetWasherObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWasherEntity> GetCameraCommandSetWasherCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWasherCollectionByReply( reply );
            var result = ToEntityList<CameraCommandSetWasherEntity,CameraCommandSetWasherObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraCommandSetWiper queries
        // ---------------------------------------------------------------------
        public CameraCommandSetWiperEntity? GetCameraCommandSetWiperById( Guid id )
        {
            var entity = (CameraCommandSetWiperEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraCommandSetWiperById( id );
                if( dataObject != null )
                {
                    entity = (CameraCommandSetWiperEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraCommandSetWiperEntity> GetCameraCommandSetWiperCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWiperCollection( );
            var result = ToEntityList<CameraCommandSetWiperEntity,CameraCommandSetWiperObject>( dataItems );
            return result;
        }
        public BindingList<CameraCommandSetWiperEntity> GetCameraCommandSetWiperCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWiperCollectionByCamera( camera );
            var result = ToEntityList<CameraCommandSetWiperEntity,CameraCommandSetWiperObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWiperEntity> GetCameraCommandSetWiperCollectionByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWiperCollectionByCameraAndTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetWiperEntity,CameraCommandSetWiperObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWiperEntity> GetCameraCommandSetWiperCollectionByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWiperCollectionByCameraAtTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetWiperEntity,CameraCommandSetWiperObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWiperEntity> GetCameraCommandSetWiperCollectionByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWiperCollectionByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetWiperEntity,CameraCommandSetWiperObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWiperEntity> GetCameraCommandSetWiperCollectionByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWiperCollectionByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandSetWiperEntity,CameraCommandSetWiperObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWiperEntity> GetCameraCommandSetWiperCollectionByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWiperCollectionByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandSetWiperEntity,CameraCommandSetWiperObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWiperEntity> GetCameraCommandSetWiperCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWiperCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetWiperEntity,CameraCommandSetWiperObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWiperEntity> GetCameraCommandSetWiperCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWiperCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetWiperEntity,CameraCommandSetWiperObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWiperEntity> GetCameraCommandSetWiperCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWiperCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetWiperEntity,CameraCommandSetWiperObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWiperEntity> GetCameraCommandSetWiperCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWiperCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraCommandSetWiperEntity,CameraCommandSetWiperObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWiperEntity> GetCameraCommandSetWiperCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWiperCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandSetWiperEntity,CameraCommandSetWiperObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandSetWiperEntity> GetCameraCommandSetWiperCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandSetWiperCollectionByReply( reply );
            var result = ToEntityList<CameraCommandSetWiperEntity,CameraCommandSetWiperObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraCommandStop queries
        // ---------------------------------------------------------------------
        public CameraCommandStopEntity? GetCameraCommandStopById( Guid id )
        {
            var entity = (CameraCommandStopEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraCommandStopById( id );
                if( dataObject != null )
                {
                    entity = (CameraCommandStopEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraCommandStopEntity> GetCameraCommandStopCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandStopCollection( );
            var result = ToEntityList<CameraCommandStopEntity,CameraCommandStopObject>( dataItems );
            return result;
        }
        public BindingList<CameraCommandStopEntity> GetCameraCommandStopCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandStopCollectionByCamera( camera );
            var result = ToEntityList<CameraCommandStopEntity,CameraCommandStopObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandStopEntity> GetCameraCommandStopCollectionByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandStopCollectionByCameraAndTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandStopEntity,CameraCommandStopObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandStopEntity> GetCameraCommandStopCollectionByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandStopCollectionByCameraAtTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandStopEntity,CameraCommandStopObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandStopEntity> GetCameraCommandStopCollectionByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandStopCollectionByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandStopEntity,CameraCommandStopObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandStopEntity> GetCameraCommandStopCollectionByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandStopCollectionByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandStopEntity,CameraCommandStopObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandStopEntity> GetCameraCommandStopCollectionByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandStopCollectionByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandStopEntity,CameraCommandStopObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandStopEntity> GetCameraCommandStopCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandStopCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraCommandStopEntity,CameraCommandStopObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandStopEntity> GetCameraCommandStopCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandStopCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraCommandStopEntity,CameraCommandStopObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandStopEntity> GetCameraCommandStopCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandStopCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraCommandStopEntity,CameraCommandStopObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandStopEntity> GetCameraCommandStopCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandStopCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraCommandStopEntity,CameraCommandStopObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandStopEntity> GetCameraCommandStopCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandStopCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandStopEntity,CameraCommandStopObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandStopEntity> GetCameraCommandStopCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandStopCollectionByReply( reply );
            var result = ToEntityList<CameraCommandStopEntity,CameraCommandStopObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraCommandReply queries
        // ---------------------------------------------------------------------
        public CameraCommandReplyEntity? GetCameraCommandReplyById( Guid id )
        {
            var entity = (CameraCommandReplyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraCommandReplyById( id );
                if( dataObject != null )
                {
                    entity = (CameraCommandReplyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraCommandReplyEntity> GetCameraCommandReplyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReplyCollection( );
            var result = ToEntityList<CameraCommandReplyEntity,CameraCommandReplyObject>( dataItems );
            return result;
        }
        public BindingList<CameraCommandReplyEntity> GetCameraCommandReplyCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReplyCollectionByCamera( camera );
            var result = ToEntityList<CameraCommandReplyEntity,CameraCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReplyEntity> GetCameraCommandReplyCollectionByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReplyCollectionByCameraAndTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandReplyEntity,CameraCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReplyEntity> GetCameraCommandReplyCollectionByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReplyCollectionByCameraAtTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandReplyEntity,CameraCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReplyEntity> GetCameraCommandReplyCollectionByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReplyCollectionByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandReplyEntity,CameraCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReplyEntity> GetCameraCommandReplyCollectionByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReplyCollectionByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraCommandReplyEntity,CameraCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReplyEntity> GetCameraCommandReplyCollectionByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReplyCollectionByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandReplyEntity,CameraCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReplyEntity> GetCameraCommandReplyCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReplyCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraCommandReplyEntity,CameraCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReplyEntity> GetCameraCommandReplyCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReplyCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraCommandReplyEntity,CameraCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReplyEntity> GetCameraCommandReplyCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReplyCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraCommandReplyEntity,CameraCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReplyEntity> GetCameraCommandReplyCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReplyCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraCommandReplyEntity,CameraCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<CameraCommandReplyEntity> GetCameraCommandReplyCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraCommandReplyCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraCommandReplyEntity,CameraCommandReplyObject>( dataItems );
            return result;
        }

        public CameraCommandReplyEntity? GetCameraCommandReplyByCommand( Guid? command )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCameraCommandReplyByCommand( command );
            if( dataObject != null )
            {
                var result = (CameraCommandReplyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // CameraConfiguration queries
        // ---------------------------------------------------------------------
        public CameraConfigurationEntity? GetCameraConfigurationById( Guid id )
        {
            var entity = (CameraConfigurationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraConfigurationById( id );
                if( dataObject != null )
                {
                    entity = (CameraConfigurationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraConfigurationEntity> GetCameraConfigurationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraConfigurationCollection( );
            var result = ToEntityList<CameraConfigurationEntity,CameraConfigurationObject>( dataItems );
            return result;
        }
        public BindingList<CameraConfigurationEntity> GetCameraConfigurationCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraConfigurationCollectionByCamera( camera );
            var result = ToEntityList<CameraConfigurationEntity,CameraConfigurationObject>( dataItems );
            return result;
        }

        public CameraConfigurationEntity? GetCameraConfigurationByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCameraConfigurationByCameraAndTimestamp( camera, timestamp );
            if( dataObject != null )
            {
                var result = (CameraConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public CameraConfigurationEntity? GetCameraConfigurationByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCameraConfigurationByCameraAtTimestamp( camera, timestamp );
            if( dataObject != null )
            {
                var result = (CameraConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<CameraConfigurationEntity> GetCameraConfigurationByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraConfigurationByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraConfigurationEntity,CameraConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<CameraConfigurationEntity> GetCameraConfigurationByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraConfigurationByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraConfigurationEntity,CameraConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<CameraConfigurationEntity> GetCameraConfigurationByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraConfigurationByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraConfigurationEntity,CameraConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<CameraConfigurationEntity> GetCameraConfigurationCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraConfigurationCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraConfigurationEntity,CameraConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<CameraConfigurationEntity> GetCameraConfigurationCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraConfigurationCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraConfigurationEntity,CameraConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<CameraConfigurationEntity> GetCameraConfigurationCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraConfigurationCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraConfigurationEntity,CameraConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<CameraConfigurationEntity> GetCameraConfigurationCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraConfigurationCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraConfigurationEntity,CameraConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<CameraConfigurationEntity> GetCameraConfigurationCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraConfigurationCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraConfigurationEntity,CameraConfigurationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraPanCalibration queries
        // ---------------------------------------------------------------------
        public CameraPanCalibrationEntity? GetCameraPanCalibrationById( Guid id )
        {
            var entity = (CameraPanCalibrationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraPanCalibrationById( id );
                if( dataObject != null )
                {
                    entity = (CameraPanCalibrationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraPanCalibrationEntity> GetCameraPanCalibrationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraPanCalibrationCollection( );
            var result = ToEntityList<CameraPanCalibrationEntity,CameraPanCalibrationObject>( dataItems );
            return result;
        }
        public BindingList<CameraPanCalibrationEntity> GetCameraPanCalibrationCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraPanCalibrationCollectionByCamera( camera );
            var result = ToEntityList<CameraPanCalibrationEntity,CameraPanCalibrationObject>( dataItems );
            return result;
        }

        public CameraPanCalibrationEntity? GetCameraPanCalibrationByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCameraPanCalibrationByCameraAndTimestamp( camera, timestamp );
            if( dataObject != null )
            {
                var result = (CameraPanCalibrationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public CameraPanCalibrationEntity? GetCameraPanCalibrationByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCameraPanCalibrationByCameraAtTimestamp( camera, timestamp );
            if( dataObject != null )
            {
                var result = (CameraPanCalibrationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<CameraPanCalibrationEntity> GetCameraPanCalibrationByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraPanCalibrationByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraPanCalibrationEntity,CameraPanCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraPanCalibrationEntity> GetCameraPanCalibrationByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraPanCalibrationByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraPanCalibrationEntity,CameraPanCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraPanCalibrationEntity> GetCameraPanCalibrationByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraPanCalibrationByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraPanCalibrationEntity,CameraPanCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraPanCalibrationEntity> GetCameraPanCalibrationCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraPanCalibrationCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraPanCalibrationEntity,CameraPanCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraPanCalibrationEntity> GetCameraPanCalibrationCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraPanCalibrationCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraPanCalibrationEntity,CameraPanCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraPanCalibrationEntity> GetCameraPanCalibrationCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraPanCalibrationCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraPanCalibrationEntity,CameraPanCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraPanCalibrationEntity> GetCameraPanCalibrationCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraPanCalibrationCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraPanCalibrationEntity,CameraPanCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraPanCalibrationEntity> GetCameraPanCalibrationCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraPanCalibrationCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraPanCalibrationEntity,CameraPanCalibrationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraPanCalibrationValue queries
        // ---------------------------------------------------------------------
        public CameraPanCalibrationValueEntity? GetCameraPanCalibrationValueById( Guid id )
        {
            var entity = (CameraPanCalibrationValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraPanCalibrationValueById( id );
                if( dataObject != null )
                {
                    entity = (CameraPanCalibrationValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraPanCalibrationValueEntity> GetCameraPanCalibrationValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraPanCalibrationValueCollection( );
            var result = ToEntityList<CameraPanCalibrationValueEntity,CameraPanCalibrationValueObject>( dataItems );
            return result;
        }
        public BindingList<CameraPanCalibrationValueEntity> GetCameraPanCalibrationValueCollectionByPanCalibration( Guid panCalibration )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraPanCalibrationValueCollectionByPanCalibration( panCalibration );
            var result = ToEntityList<CameraPanCalibrationValueEntity,CameraPanCalibrationValueObject>( dataItems );
            return result;
        }

        public CameraPanCalibrationValueEntity? GetCameraPanCalibrationValueByPanCalibrationAndPanAngle( Guid panCalibration, double panAngle )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCameraPanCalibrationValueByPanCalibrationAndPanAngle( panCalibration, panAngle );
            if( dataObject != null )
            {
                var result = (CameraPanCalibrationValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<CameraPanCalibrationValueEntity> GetCameraPanCalibrationValueByPanCalibrationFromPanAngle( Guid panCalibration, double panAngle )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraPanCalibrationValueByPanCalibrationFromPanAngle( panCalibration, panAngle );
            var result = ToEntityList<CameraPanCalibrationValueEntity,CameraPanCalibrationValueObject>( dataItems );
            return result;
        }

        public BindingList<CameraPanCalibrationValueEntity> GetCameraPanCalibrationValueByPanCalibrationUntilPanAngle( Guid panCalibration, double panAngle )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraPanCalibrationValueByPanCalibrationUntilPanAngle( panCalibration, panAngle );
            var result = ToEntityList<CameraPanCalibrationValueEntity,CameraPanCalibrationValueObject>( dataItems );
            return result;
        }

        public BindingList<CameraPanCalibrationValueEntity> GetCameraPanCalibrationValueByPanCalibrationOverPanAngle( Guid panCalibration, double fromPanAngle, double untilPanAngle )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraPanCalibrationValueByPanCalibrationOverPanAngle( panCalibration, fromPanAngle, untilPanAngle );
            var result = ToEntityList<CameraPanCalibrationValueEntity,CameraPanCalibrationValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraStatus queries
        // ---------------------------------------------------------------------
        public CameraStatusEntity? GetCameraStatusById( Guid id )
        {
            var entity = (CameraStatusEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraStatusById( id );
                if( dataObject != null )
                {
                    entity = (CameraStatusEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraStatusEntity> GetCameraStatusCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraStatusCollection( );
            var result = ToEntityList<CameraStatusEntity,CameraStatusObject>( dataItems );
            return result;
        }
        public BindingList<CameraStatusEntity> GetCameraStatusCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraStatusCollectionByCamera( camera );
            var result = ToEntityList<CameraStatusEntity,CameraStatusObject>( dataItems );
            return result;
        }

        public CameraStatusEntity? GetCameraStatusByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCameraStatusByCameraAndTimestamp( camera, timestamp );
            if( dataObject != null )
            {
                var result = (CameraStatusEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public CameraStatusEntity? GetCameraStatusByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCameraStatusByCameraAtTimestamp( camera, timestamp );
            if( dataObject != null )
            {
                var result = (CameraStatusEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<CameraStatusEntity> GetCameraStatusByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraStatusByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraStatusEntity,CameraStatusObject>( dataItems );
            return result;
        }

        public BindingList<CameraStatusEntity> GetCameraStatusByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraStatusByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraStatusEntity,CameraStatusObject>( dataItems );
            return result;
        }

        public BindingList<CameraStatusEntity> GetCameraStatusByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraStatusByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraStatusEntity,CameraStatusObject>( dataItems );
            return result;
        }

        public BindingList<CameraStatusEntity> GetCameraStatusCollectionByTrack( Guid? track )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraStatusCollectionByTrack( track );
            var result = ToEntityList<CameraStatusEntity,CameraStatusObject>( dataItems );
            return result;
        }

        public CameraStatusEntity? GetCameraStatusByTrackAndTimestamp( Guid? track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCameraStatusByTrackAndTimestamp( track, timestamp );
            if( dataObject != null )
            {
                var result = (CameraStatusEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public CameraStatusEntity? GetCameraStatusByTrackAtTimestamp( Guid? track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCameraStatusByTrackAtTimestamp( track, timestamp );
            if( dataObject != null )
            {
                var result = (CameraStatusEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<CameraStatusEntity> GetCameraStatusByTrackFromTimestamp( Guid? track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraStatusByTrackFromTimestamp( track, timestamp );
            var result = ToEntityList<CameraStatusEntity,CameraStatusObject>( dataItems );
            return result;
        }

        public BindingList<CameraStatusEntity> GetCameraStatusByTrackUntilTimestamp( Guid? track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraStatusByTrackUntilTimestamp( track, timestamp );
            var result = ToEntityList<CameraStatusEntity,CameraStatusObject>( dataItems );
            return result;
        }

        public BindingList<CameraStatusEntity> GetCameraStatusByTrackOverTimestamp( Guid track, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraStatusByTrackOverTimestamp( track, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraStatusEntity,CameraStatusObject>( dataItems );
            return result;
        }

        public BindingList<CameraStatusEntity> GetCameraStatusCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraStatusCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraStatusEntity,CameraStatusObject>( dataItems );
            return result;
        }

        public BindingList<CameraStatusEntity> GetCameraStatusCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraStatusCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraStatusEntity,CameraStatusObject>( dataItems );
            return result;
        }

        public BindingList<CameraStatusEntity> GetCameraStatusCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraStatusCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraStatusEntity,CameraStatusObject>( dataItems );
            return result;
        }

        public BindingList<CameraStatusEntity> GetCameraStatusCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraStatusCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraStatusEntity,CameraStatusObject>( dataItems );
            return result;
        }

        public BindingList<CameraStatusEntity> GetCameraStatusCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraStatusCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraStatusEntity,CameraStatusObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraTiltCalibration queries
        // ---------------------------------------------------------------------
        public CameraTiltCalibrationEntity? GetCameraTiltCalibrationById( Guid id )
        {
            var entity = (CameraTiltCalibrationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraTiltCalibrationById( id );
                if( dataObject != null )
                {
                    entity = (CameraTiltCalibrationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraTiltCalibrationEntity> GetCameraTiltCalibrationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraTiltCalibrationCollection( );
            var result = ToEntityList<CameraTiltCalibrationEntity,CameraTiltCalibrationObject>( dataItems );
            return result;
        }
        public BindingList<CameraTiltCalibrationEntity> GetCameraTiltCalibrationCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraTiltCalibrationCollectionByCamera( camera );
            var result = ToEntityList<CameraTiltCalibrationEntity,CameraTiltCalibrationObject>( dataItems );
            return result;
        }

        public CameraTiltCalibrationEntity? GetCameraTiltCalibrationByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCameraTiltCalibrationByCameraAndTimestamp( camera, timestamp );
            if( dataObject != null )
            {
                var result = (CameraTiltCalibrationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public CameraTiltCalibrationEntity? GetCameraTiltCalibrationByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCameraTiltCalibrationByCameraAtTimestamp( camera, timestamp );
            if( dataObject != null )
            {
                var result = (CameraTiltCalibrationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<CameraTiltCalibrationEntity> GetCameraTiltCalibrationByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraTiltCalibrationByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraTiltCalibrationEntity,CameraTiltCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraTiltCalibrationEntity> GetCameraTiltCalibrationByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraTiltCalibrationByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraTiltCalibrationEntity,CameraTiltCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraTiltCalibrationEntity> GetCameraTiltCalibrationByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraTiltCalibrationByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraTiltCalibrationEntity,CameraTiltCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraTiltCalibrationEntity> GetCameraTiltCalibrationCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraTiltCalibrationCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraTiltCalibrationEntity,CameraTiltCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraTiltCalibrationEntity> GetCameraTiltCalibrationCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraTiltCalibrationCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraTiltCalibrationEntity,CameraTiltCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraTiltCalibrationEntity> GetCameraTiltCalibrationCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraTiltCalibrationCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraTiltCalibrationEntity,CameraTiltCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraTiltCalibrationEntity> GetCameraTiltCalibrationCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraTiltCalibrationCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraTiltCalibrationEntity,CameraTiltCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraTiltCalibrationEntity> GetCameraTiltCalibrationCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraTiltCalibrationCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraTiltCalibrationEntity,CameraTiltCalibrationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraTiltCalibrationValue queries
        // ---------------------------------------------------------------------
        public CameraTiltCalibrationValueEntity? GetCameraTiltCalibrationValueById( Guid id )
        {
            var entity = (CameraTiltCalibrationValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraTiltCalibrationValueById( id );
                if( dataObject != null )
                {
                    entity = (CameraTiltCalibrationValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraTiltCalibrationValueEntity> GetCameraTiltCalibrationValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraTiltCalibrationValueCollection( );
            var result = ToEntityList<CameraTiltCalibrationValueEntity,CameraTiltCalibrationValueObject>( dataItems );
            return result;
        }
        public BindingList<CameraTiltCalibrationValueEntity> GetCameraTiltCalibrationValueCollectionByTiltCalibration( Guid tiltCalibration )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraTiltCalibrationValueCollectionByTiltCalibration( tiltCalibration );
            var result = ToEntityList<CameraTiltCalibrationValueEntity,CameraTiltCalibrationValueObject>( dataItems );
            return result;
        }

        public CameraTiltCalibrationValueEntity? GetCameraTiltCalibrationValueByTiltCalibrationAndPanAngle( Guid tiltCalibration, double panAngle )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCameraTiltCalibrationValueByTiltCalibrationAndPanAngle( tiltCalibration, panAngle );
            if( dataObject != null )
            {
                var result = (CameraTiltCalibrationValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<CameraTiltCalibrationValueEntity> GetCameraTiltCalibrationValueByTiltCalibrationFromPanAngle( Guid tiltCalibration, double panAngle )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraTiltCalibrationValueByTiltCalibrationFromPanAngle( tiltCalibration, panAngle );
            var result = ToEntityList<CameraTiltCalibrationValueEntity,CameraTiltCalibrationValueObject>( dataItems );
            return result;
        }

        public BindingList<CameraTiltCalibrationValueEntity> GetCameraTiltCalibrationValueByTiltCalibrationUntilPanAngle( Guid tiltCalibration, double panAngle )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraTiltCalibrationValueByTiltCalibrationUntilPanAngle( tiltCalibration, panAngle );
            var result = ToEntityList<CameraTiltCalibrationValueEntity,CameraTiltCalibrationValueObject>( dataItems );
            return result;
        }

        public BindingList<CameraTiltCalibrationValueEntity> GetCameraTiltCalibrationValueByTiltCalibrationOverPanAngle( Guid tiltCalibration, double fromPanAngle, double untilPanAngle )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraTiltCalibrationValueByTiltCalibrationOverPanAngle( tiltCalibration, fromPanAngle, untilPanAngle );
            var result = ToEntityList<CameraTiltCalibrationValueEntity,CameraTiltCalibrationValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraZoomCalibration queries
        // ---------------------------------------------------------------------
        public CameraZoomCalibrationEntity? GetCameraZoomCalibrationById( Guid id )
        {
            var entity = (CameraZoomCalibrationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraZoomCalibrationById( id );
                if( dataObject != null )
                {
                    entity = (CameraZoomCalibrationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraZoomCalibrationEntity> GetCameraZoomCalibrationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraZoomCalibrationCollection( );
            var result = ToEntityList<CameraZoomCalibrationEntity,CameraZoomCalibrationObject>( dataItems );
            return result;
        }
        public BindingList<CameraZoomCalibrationEntity> GetCameraZoomCalibrationCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraZoomCalibrationCollectionByCamera( camera );
            var result = ToEntityList<CameraZoomCalibrationEntity,CameraZoomCalibrationObject>( dataItems );
            return result;
        }

        public CameraZoomCalibrationEntity? GetCameraZoomCalibrationByCameraAndTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCameraZoomCalibrationByCameraAndTimestamp( camera, timestamp );
            if( dataObject != null )
            {
                var result = (CameraZoomCalibrationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public CameraZoomCalibrationEntity? GetCameraZoomCalibrationByCameraAtTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCameraZoomCalibrationByCameraAtTimestamp( camera, timestamp );
            if( dataObject != null )
            {
                var result = (CameraZoomCalibrationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<CameraZoomCalibrationEntity> GetCameraZoomCalibrationByCameraFromTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraZoomCalibrationByCameraFromTimestamp( camera, timestamp );
            var result = ToEntityList<CameraZoomCalibrationEntity,CameraZoomCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraZoomCalibrationEntity> GetCameraZoomCalibrationByCameraUntilTimestamp( Guid camera, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraZoomCalibrationByCameraUntilTimestamp( camera, timestamp );
            var result = ToEntityList<CameraZoomCalibrationEntity,CameraZoomCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraZoomCalibrationEntity> GetCameraZoomCalibrationByCameraOverTimestamp( Guid camera, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraZoomCalibrationByCameraOverTimestamp( camera, fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraZoomCalibrationEntity,CameraZoomCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraZoomCalibrationEntity> GetCameraZoomCalibrationCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraZoomCalibrationCollectionByTimestamp( timestamp );
            var result = ToEntityList<CameraZoomCalibrationEntity,CameraZoomCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraZoomCalibrationEntity> GetCameraZoomCalibrationCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraZoomCalibrationCollectionAtTimestamp( timestamp );
            var result = ToEntityList<CameraZoomCalibrationEntity,CameraZoomCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraZoomCalibrationEntity> GetCameraZoomCalibrationCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraZoomCalibrationCollectionFromTimestamp( timestamp );
            var result = ToEntityList<CameraZoomCalibrationEntity,CameraZoomCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraZoomCalibrationEntity> GetCameraZoomCalibrationCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraZoomCalibrationCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<CameraZoomCalibrationEntity,CameraZoomCalibrationObject>( dataItems );
            return result;
        }

        public BindingList<CameraZoomCalibrationEntity> GetCameraZoomCalibrationCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraZoomCalibrationCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<CameraZoomCalibrationEntity,CameraZoomCalibrationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CameraZoomCalibrationValue queries
        // ---------------------------------------------------------------------
        public CameraZoomCalibrationValueEntity? GetCameraZoomCalibrationValueById( Guid id )
        {
            var entity = (CameraZoomCalibrationValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraZoomCalibrationValueById( id );
                if( dataObject != null )
                {
                    entity = (CameraZoomCalibrationValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraZoomCalibrationValueEntity> GetCameraZoomCalibrationValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraZoomCalibrationValueCollection( );
            var result = ToEntityList<CameraZoomCalibrationValueEntity,CameraZoomCalibrationValueObject>( dataItems );
            return result;
        }
        public BindingList<CameraZoomCalibrationValueEntity> GetCameraZoomCalibrationValueCollectionByZoomCalibration( Guid zoomCalibration )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraZoomCalibrationValueCollectionByZoomCalibration( zoomCalibration );
            var result = ToEntityList<CameraZoomCalibrationValueEntity,CameraZoomCalibrationValueObject>( dataItems );
            return result;
        }

        public CameraZoomCalibrationValueEntity? GetCameraZoomCalibrationValueByZoomCalibrationAndFocalLength( Guid zoomCalibration, double focalLength )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCameraZoomCalibrationValueByZoomCalibrationAndFocalLength( zoomCalibration, focalLength );
            if( dataObject != null )
            {
                var result = (CameraZoomCalibrationValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<CameraZoomCalibrationValueEntity> GetCameraZoomCalibrationValueByZoomCalibrationFromFocalLength( Guid zoomCalibration, double focalLength )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraZoomCalibrationValueByZoomCalibrationFromFocalLength( zoomCalibration, focalLength );
            var result = ToEntityList<CameraZoomCalibrationValueEntity,CameraZoomCalibrationValueObject>( dataItems );
            return result;
        }

        public BindingList<CameraZoomCalibrationValueEntity> GetCameraZoomCalibrationValueByZoomCalibrationUntilFocalLength( Guid zoomCalibration, double focalLength )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraZoomCalibrationValueByZoomCalibrationUntilFocalLength( zoomCalibration, focalLength );
            var result = ToEntityList<CameraZoomCalibrationValueEntity,CameraZoomCalibrationValueObject>( dataItems );
            return result;
        }

        public BindingList<CameraZoomCalibrationValueEntity> GetCameraZoomCalibrationValueByZoomCalibrationOverFocalLength( Guid zoomCalibration, double fromFocalLength, double untilFocalLength )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraZoomCalibrationValueByZoomCalibrationOverFocalLength( zoomCalibration, fromFocalLength, untilFocalLength );
            var result = ToEntityList<CameraZoomCalibrationValueEntity,CameraZoomCalibrationValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CatalogElement queries
        // ---------------------------------------------------------------------
        public CatalogElementEntity? GetCatalogElementById( Guid id )
        {
            var entity = (CatalogElementEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCatalogElementById( id );
                if( dataObject != null )
                {
                    entity = (CatalogElementEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CatalogElementEntity> GetCatalogElementCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCatalogElementCollection( );
            var result = ToEntityList<CatalogElementEntity,CatalogElementObject>( dataItems );
            return result;
        }
        public BindingList<CatalogElementEntity> GetCatalogElementCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCatalogElementCollectionByCatalog( catalog );
            var result = ToEntityList<CatalogElementEntity,CatalogElementObject>( dataItems );
            return result;
        }

        public CatalogElementEntity? GetCatalogElementByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCatalogElementByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (CatalogElementEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // Catalog queries
        // ---------------------------------------------------------------------
        public CatalogEntity? GetCatalogById( Guid id )
        {
            var entity = (CatalogEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCatalogById( id );
                if( dataObject != null )
                {
                    entity = (CatalogEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CatalogEntity> GetCatalogCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCatalogCollection( );
            var result = ToEntityList<CatalogEntity,CatalogObject>( dataItems );
            return result;
        }
        public BindingList<CatalogEntity> GetCatalogCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCatalogCollectionByCatalog( catalog );
            var result = ToEntityList<CatalogEntity,CatalogObject>( dataItems );
            return result;
        }

        public CatalogEntity? GetCatalogByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCatalogByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (CatalogEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // Element queries
        // ---------------------------------------------------------------------
        public ElementEntity? GetElementById( Guid id )
        {
            var entity = (ElementEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetElementById( id );
                if( dataObject != null )
                {
                    entity = (ElementEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ElementEntity> GetElementCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetElementCollection( );
            var result = ToEntityList<ElementEntity,ElementObject>( dataItems );
            return result;
        }
        public BindingList<ElementEntity> GetElementCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetElementCollectionByCatalog( catalog );
            var result = ToEntityList<ElementEntity,ElementObject>( dataItems );
            return result;
        }

        public ElementEntity? GetElementByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetElementByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (ElementEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ElementEntity> GetElementCollectionByElementType( Guid? elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetElementCollectionByElementType( elementType );
            var result = ToEntityList<ElementEntity,ElementObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // CollectionInfo queries
        // ---------------------------------------------------------------------
        public CollectionInfoEntity? GetCollectionInfoById( Guid id )
        {
            var entity = (CollectionInfoEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCollectionInfoById( id );
                if( dataObject != null )
                {
                    entity = (CollectionInfoEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CollectionInfoEntity> GetCollectionInfoCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCollectionInfoCollection( );
            var result = ToEntityList<CollectionInfoEntity,CollectionInfoObject>( dataItems );
            return result;
        }
        // ---------------------------------------------------------------------
        // Country queries
        // ---------------------------------------------------------------------
        public CountryEntity? GetCountryById( Guid id )
        {
            var entity = (CountryEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCountryById( id );
                if( dataObject != null )
                {
                    entity = (CountryEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CountryEntity> GetCountryCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCountryCollection( );
            var result = ToEntityList<CountryEntity,CountryObject>( dataItems );
            return result;
        }
        public CountryEntity? GetCountryByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCountryByName( name );
            if( dataObject != null )
            {
                var result = (CountryEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public CountryEntity? GetCountryByCode( int code )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCountryByCode( code );
            if( dataObject != null )
            {
                var result = (CountryEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<CountryEntity> GetCountryFromCode( int code )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCountryFromCode( code );
            var result = ToEntityList<CountryEntity,CountryObject>( dataItems );
            return result;
        }

        public BindingList<CountryEntity> GetCountryUntilCode( int code )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCountryUntilCode( code );
            var result = ToEntityList<CountryEntity,CountryObject>( dataItems );
            return result;
        }

        public BindingList<CountryEntity> GetCountryOverCode( int fromCode, int untilCode )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCountryOverCode( fromCode, untilCode );
            var result = ToEntityList<CountryEntity,CountryObject>( dataItems );
            return result;
        }

        public CountryEntity? GetCountryByAlpha2( string alpha2 )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCountryByAlpha2( alpha2 );
            if( dataObject != null )
            {
                var result = (CountryEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public CountryEntity? GetCountryByAlpha3( string alpha3 )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCountryByAlpha3( alpha3 );
            if( dataObject != null )
            {
                var result = (CountryEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // CursorInfo queries
        // ---------------------------------------------------------------------
        public CursorInfoEntity? GetCursorInfoById( Guid id )
        {
            var entity = (CursorInfoEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCursorInfoById( id );
                if( dataObject != null )
                {
                    entity = (CursorInfoEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CursorInfoEntity> GetCursorInfoCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCursorInfoCollection( );
            var result = ToEntityList<CursorInfoEntity,CursorInfoObject>( dataItems );
            return result;
        }
        // ---------------------------------------------------------------------
        // DateTimeTimeseriesValue queries
        // ---------------------------------------------------------------------
        public DateTimeTimeseriesValueEntity? GetDateTimeTimeseriesValueById( Guid id )
        {
            var entity = (DateTimeTimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetDateTimeTimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (DateTimeTimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<DateTimeTimeseriesValueEntity> GetDateTimeTimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesValueCollection( );
            var result = ToEntityList<DateTimeTimeseriesValueEntity,DateTimeTimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<DateTimeTimeseriesValueEntity> GetDateTimeTimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<DateTimeTimeseriesValueEntity,DateTimeTimeseriesValueObject>( dataItems );
            return result;
        }

        public DateTimeTimeseriesValueEntity? GetDateTimeTimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDateTimeTimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (DateTimeTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public DateTimeTimeseriesValueEntity? GetDateTimeTimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDateTimeTimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (DateTimeTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<DateTimeTimeseriesValueEntity> GetDateTimeTimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<DateTimeTimeseriesValueEntity,DateTimeTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<DateTimeTimeseriesValueEntity> GetDateTimeTimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<DateTimeTimeseriesValueEntity,DateTimeTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<DateTimeTimeseriesValueEntity> GetDateTimeTimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<DateTimeTimeseriesValueEntity,DateTimeTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<DateTimeTimeseriesValueEntity> GetDateTimeTimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<DateTimeTimeseriesValueEntity,DateTimeTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<DateTimeTimeseriesValueEntity> GetDateTimeTimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<DateTimeTimeseriesValueEntity,DateTimeTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<DateTimeTimeseriesValueEntity> GetDateTimeTimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<DateTimeTimeseriesValueEntity,DateTimeTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<DateTimeTimeseriesValueEntity> GetDateTimeTimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<DateTimeTimeseriesValueEntity,DateTimeTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<DateTimeTimeseriesValueEntity> GetDateTimeTimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<DateTimeTimeseriesValueEntity,DateTimeTimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // DeviceHost queries
        // ---------------------------------------------------------------------
        public DeviceHostEntity? GetDeviceHostById( Guid id )
        {
            var entity = (DeviceHostEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetDeviceHostById( id );
                if( dataObject != null )
                {
                    entity = (DeviceHostEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<DeviceHostEntity> GetDeviceHostCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDeviceHostCollection( );
            var result = ToEntityList<DeviceHostEntity,DeviceHostObject>( dataItems );
            return result;
        }
        public DeviceHostEntity? GetDeviceHostByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDeviceHostByName( name );
            if( dataObject != null )
            {
                var result = (DeviceHostEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // DeviceHostConfiguration queries
        // ---------------------------------------------------------------------
        public DeviceHostConfigurationEntity? GetDeviceHostConfigurationById( Guid id )
        {
            var entity = (DeviceHostConfigurationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetDeviceHostConfigurationById( id );
                if( dataObject != null )
                {
                    entity = (DeviceHostConfigurationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<DeviceHostConfigurationEntity> GetDeviceHostConfigurationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDeviceHostConfigurationCollection( );
            var result = ToEntityList<DeviceHostConfigurationEntity,DeviceHostConfigurationObject>( dataItems );
            return result;
        }
        public BindingList<DeviceHostConfigurationEntity> GetDeviceHostConfigurationCollectionByHost( Guid host )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDeviceHostConfigurationCollectionByHost( host );
            var result = ToEntityList<DeviceHostConfigurationEntity,DeviceHostConfigurationObject>( dataItems );
            return result;
        }

        public DeviceHostConfigurationEntity? GetDeviceHostConfigurationByHostAndTimestamp( Guid host, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDeviceHostConfigurationByHostAndTimestamp( host, timestamp );
            if( dataObject != null )
            {
                var result = (DeviceHostConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public DeviceHostConfigurationEntity? GetDeviceHostConfigurationByHostAtTimestamp( Guid host, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDeviceHostConfigurationByHostAtTimestamp( host, timestamp );
            if( dataObject != null )
            {
                var result = (DeviceHostConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<DeviceHostConfigurationEntity> GetDeviceHostConfigurationByHostFromTimestamp( Guid host, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDeviceHostConfigurationByHostFromTimestamp( host, timestamp );
            var result = ToEntityList<DeviceHostConfigurationEntity,DeviceHostConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<DeviceHostConfigurationEntity> GetDeviceHostConfigurationByHostUntilTimestamp( Guid host, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDeviceHostConfigurationByHostUntilTimestamp( host, timestamp );
            var result = ToEntityList<DeviceHostConfigurationEntity,DeviceHostConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<DeviceHostConfigurationEntity> GetDeviceHostConfigurationByHostOverTimestamp( Guid host, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDeviceHostConfigurationByHostOverTimestamp( host, fromTimestamp, untilTimestamp );
            var result = ToEntityList<DeviceHostConfigurationEntity,DeviceHostConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<DeviceHostConfigurationEntity> GetDeviceHostConfigurationCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDeviceHostConfigurationCollectionByTimestamp( timestamp );
            var result = ToEntityList<DeviceHostConfigurationEntity,DeviceHostConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<DeviceHostConfigurationEntity> GetDeviceHostConfigurationCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDeviceHostConfigurationCollectionAtTimestamp( timestamp );
            var result = ToEntityList<DeviceHostConfigurationEntity,DeviceHostConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<DeviceHostConfigurationEntity> GetDeviceHostConfigurationCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDeviceHostConfigurationCollectionFromTimestamp( timestamp );
            var result = ToEntityList<DeviceHostConfigurationEntity,DeviceHostConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<DeviceHostConfigurationEntity> GetDeviceHostConfigurationCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDeviceHostConfigurationCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<DeviceHostConfigurationEntity,DeviceHostConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<DeviceHostConfigurationEntity> GetDeviceHostConfigurationCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDeviceHostConfigurationCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<DeviceHostConfigurationEntity,DeviceHostConfigurationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // DoubleTimeseriesValue queries
        // ---------------------------------------------------------------------
        public DoubleTimeseriesValueEntity? GetDoubleTimeseriesValueById( Guid id )
        {
            var entity = (DoubleTimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetDoubleTimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (DoubleTimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<DoubleTimeseriesValueEntity> GetDoubleTimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesValueCollection( );
            var result = ToEntityList<DoubleTimeseriesValueEntity,DoubleTimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<DoubleTimeseriesValueEntity> GetDoubleTimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<DoubleTimeseriesValueEntity,DoubleTimeseriesValueObject>( dataItems );
            return result;
        }

        public DoubleTimeseriesValueEntity? GetDoubleTimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDoubleTimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (DoubleTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public DoubleTimeseriesValueEntity? GetDoubleTimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDoubleTimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (DoubleTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<DoubleTimeseriesValueEntity> GetDoubleTimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<DoubleTimeseriesValueEntity,DoubleTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<DoubleTimeseriesValueEntity> GetDoubleTimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<DoubleTimeseriesValueEntity,DoubleTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<DoubleTimeseriesValueEntity> GetDoubleTimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<DoubleTimeseriesValueEntity,DoubleTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<DoubleTimeseriesValueEntity> GetDoubleTimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<DoubleTimeseriesValueEntity,DoubleTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<DoubleTimeseriesValueEntity> GetDoubleTimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<DoubleTimeseriesValueEntity,DoubleTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<DoubleTimeseriesValueEntity> GetDoubleTimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<DoubleTimeseriesValueEntity,DoubleTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<DoubleTimeseriesValueEntity> GetDoubleTimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<DoubleTimeseriesValueEntity,DoubleTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<DoubleTimeseriesValueEntity> GetDoubleTimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<DoubleTimeseriesValueEntity,DoubleTimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // FacilityType queries
        // ---------------------------------------------------------------------
        public FacilityTypeEntity? GetFacilityTypeById( Guid id )
        {
            var entity = (FacilityTypeEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetFacilityTypeById( id );
                if( dataObject != null )
                {
                    entity = (FacilityTypeEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<FacilityTypeEntity> GetFacilityTypeCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetFacilityTypeCollection( );
            var result = ToEntityList<FacilityTypeEntity,FacilityTypeObject>( dataItems );
            return result;
        }
        public FacilityTypeEntity? GetFacilityTypeByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetFacilityTypeByName( name );
            if( dataObject != null )
            {
                var result = (FacilityTypeEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GeoPosition2DTimeseriesValue queries
        // ---------------------------------------------------------------------
        public GeoPosition2DTimeseriesValueEntity? GetGeoPosition2DTimeseriesValueById( Guid id )
        {
            var entity = (GeoPosition2DTimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGeoPosition2DTimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (GeoPosition2DTimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GeoPosition2DTimeseriesValueEntity> GetGeoPosition2DTimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition2DTimeseriesValueCollection( );
            var result = ToEntityList<GeoPosition2DTimeseriesValueEntity,GeoPosition2DTimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<GeoPosition2DTimeseriesValueEntity> GetGeoPosition2DTimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition2DTimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<GeoPosition2DTimeseriesValueEntity,GeoPosition2DTimeseriesValueObject>( dataItems );
            return result;
        }

        public GeoPosition2DTimeseriesValueEntity? GetGeoPosition2DTimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGeoPosition2DTimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (GeoPosition2DTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public GeoPosition2DTimeseriesValueEntity? GetGeoPosition2DTimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGeoPosition2DTimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (GeoPosition2DTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<GeoPosition2DTimeseriesValueEntity> GetGeoPosition2DTimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition2DTimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<GeoPosition2DTimeseriesValueEntity,GeoPosition2DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GeoPosition2DTimeseriesValueEntity> GetGeoPosition2DTimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition2DTimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<GeoPosition2DTimeseriesValueEntity,GeoPosition2DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GeoPosition2DTimeseriesValueEntity> GetGeoPosition2DTimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition2DTimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<GeoPosition2DTimeseriesValueEntity,GeoPosition2DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GeoPosition2DTimeseriesValueEntity> GetGeoPosition2DTimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition2DTimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<GeoPosition2DTimeseriesValueEntity,GeoPosition2DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GeoPosition2DTimeseriesValueEntity> GetGeoPosition2DTimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition2DTimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<GeoPosition2DTimeseriesValueEntity,GeoPosition2DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GeoPosition2DTimeseriesValueEntity> GetGeoPosition2DTimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition2DTimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<GeoPosition2DTimeseriesValueEntity,GeoPosition2DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GeoPosition2DTimeseriesValueEntity> GetGeoPosition2DTimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition2DTimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<GeoPosition2DTimeseriesValueEntity,GeoPosition2DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GeoPosition2DTimeseriesValueEntity> GetGeoPosition2DTimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition2DTimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<GeoPosition2DTimeseriesValueEntity,GeoPosition2DTimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // GeoPosition3DTimeseriesValue queries
        // ---------------------------------------------------------------------
        public GeoPosition3DTimeseriesValueEntity? GetGeoPosition3DTimeseriesValueById( Guid id )
        {
            var entity = (GeoPosition3DTimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGeoPosition3DTimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (GeoPosition3DTimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GeoPosition3DTimeseriesValueEntity> GetGeoPosition3DTimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition3DTimeseriesValueCollection( );
            var result = ToEntityList<GeoPosition3DTimeseriesValueEntity,GeoPosition3DTimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<GeoPosition3DTimeseriesValueEntity> GetGeoPosition3DTimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition3DTimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<GeoPosition3DTimeseriesValueEntity,GeoPosition3DTimeseriesValueObject>( dataItems );
            return result;
        }

        public GeoPosition3DTimeseriesValueEntity? GetGeoPosition3DTimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGeoPosition3DTimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (GeoPosition3DTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public GeoPosition3DTimeseriesValueEntity? GetGeoPosition3DTimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGeoPosition3DTimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (GeoPosition3DTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<GeoPosition3DTimeseriesValueEntity> GetGeoPosition3DTimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition3DTimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<GeoPosition3DTimeseriesValueEntity,GeoPosition3DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GeoPosition3DTimeseriesValueEntity> GetGeoPosition3DTimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition3DTimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<GeoPosition3DTimeseriesValueEntity,GeoPosition3DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GeoPosition3DTimeseriesValueEntity> GetGeoPosition3DTimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition3DTimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<GeoPosition3DTimeseriesValueEntity,GeoPosition3DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GeoPosition3DTimeseriesValueEntity> GetGeoPosition3DTimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition3DTimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<GeoPosition3DTimeseriesValueEntity,GeoPosition3DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GeoPosition3DTimeseriesValueEntity> GetGeoPosition3DTimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition3DTimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<GeoPosition3DTimeseriesValueEntity,GeoPosition3DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GeoPosition3DTimeseriesValueEntity> GetGeoPosition3DTimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition3DTimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<GeoPosition3DTimeseriesValueEntity,GeoPosition3DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GeoPosition3DTimeseriesValueEntity> GetGeoPosition3DTimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition3DTimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<GeoPosition3DTimeseriesValueEntity,GeoPosition3DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GeoPosition3DTimeseriesValueEntity> GetGeoPosition3DTimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition3DTimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<GeoPosition3DTimeseriesValueEntity,GeoPosition3DTimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // GNSSDeviceCommand queries
        // ---------------------------------------------------------------------
        public GNSSDeviceCommandEntity? GetGNSSDeviceCommandById( Guid id )
        {
            var entity = (GNSSDeviceCommandEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGNSSDeviceCommandById( id );
                if( dataObject != null )
                {
                    entity = (GNSSDeviceCommandEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GNSSDeviceCommandEntity> GetGNSSDeviceCommandCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandCollection( );
            var result = ToEntityList<GNSSDeviceCommandEntity,GNSSDeviceCommandObject>( dataItems );
            return result;
        }
        public BindingList<GNSSDeviceCommandEntity> GetGNSSDeviceCommandCollectionByGNSSDevice( Guid gNSSDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandCollectionByGNSSDevice( gNSSDevice );
            var result = ToEntityList<GNSSDeviceCommandEntity,GNSSDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandEntity> GetGNSSDeviceCommandCollectionByGNSSDeviceAndTimestamp( Guid gNSSDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandCollectionByGNSSDeviceAndTimestamp( gNSSDevice, timestamp );
            var result = ToEntityList<GNSSDeviceCommandEntity,GNSSDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandEntity> GetGNSSDeviceCommandCollectionByGNSSDeviceAtTimestamp( Guid gNSSDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandCollectionByGNSSDeviceAtTimestamp( gNSSDevice, timestamp );
            var result = ToEntityList<GNSSDeviceCommandEntity,GNSSDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandEntity> GetGNSSDeviceCommandCollectionByGNSSDeviceFromTimestamp( Guid gNSSDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandCollectionByGNSSDeviceFromTimestamp( gNSSDevice, timestamp );
            var result = ToEntityList<GNSSDeviceCommandEntity,GNSSDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandEntity> GetGNSSDeviceCommandCollectionByGNSSDeviceUntilTimestamp( Guid gNSSDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandCollectionByGNSSDeviceUntilTimestamp( gNSSDevice, timestamp );
            var result = ToEntityList<GNSSDeviceCommandEntity,GNSSDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandEntity> GetGNSSDeviceCommandCollectionByGNSSDeviceOverTimestamp( Guid gNSSDevice, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandCollectionByGNSSDeviceOverTimestamp( gNSSDevice, fromTimestamp, untilTimestamp );
            var result = ToEntityList<GNSSDeviceCommandEntity,GNSSDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandEntity> GetGNSSDeviceCommandCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandCollectionByTimestamp( timestamp );
            var result = ToEntityList<GNSSDeviceCommandEntity,GNSSDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandEntity> GetGNSSDeviceCommandCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandCollectionAtTimestamp( timestamp );
            var result = ToEntityList<GNSSDeviceCommandEntity,GNSSDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandEntity> GetGNSSDeviceCommandCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandCollectionFromTimestamp( timestamp );
            var result = ToEntityList<GNSSDeviceCommandEntity,GNSSDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandEntity> GetGNSSDeviceCommandCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<GNSSDeviceCommandEntity,GNSSDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandEntity> GetGNSSDeviceCommandCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<GNSSDeviceCommandEntity,GNSSDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandEntity> GetGNSSDeviceCommandCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandCollectionByReply( reply );
            var result = ToEntityList<GNSSDeviceCommandEntity,GNSSDeviceCommandObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // GNSSDeviceCommandReply queries
        // ---------------------------------------------------------------------
        public GNSSDeviceCommandReplyEntity? GetGNSSDeviceCommandReplyById( Guid id )
        {
            var entity = (GNSSDeviceCommandReplyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGNSSDeviceCommandReplyById( id );
                if( dataObject != null )
                {
                    entity = (GNSSDeviceCommandReplyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GNSSDeviceCommandReplyEntity> GetGNSSDeviceCommandReplyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandReplyCollection( );
            var result = ToEntityList<GNSSDeviceCommandReplyEntity,GNSSDeviceCommandReplyObject>( dataItems );
            return result;
        }
        public BindingList<GNSSDeviceCommandReplyEntity> GetGNSSDeviceCommandReplyCollectionByGNSSDevice( Guid gNSSDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandReplyCollectionByGNSSDevice( gNSSDevice );
            var result = ToEntityList<GNSSDeviceCommandReplyEntity,GNSSDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandReplyEntity> GetGNSSDeviceCommandReplyCollectionByGNSSDeviceAndTimestamp( Guid gNSSDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandReplyCollectionByGNSSDeviceAndTimestamp( gNSSDevice, timestamp );
            var result = ToEntityList<GNSSDeviceCommandReplyEntity,GNSSDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandReplyEntity> GetGNSSDeviceCommandReplyCollectionByGNSSDeviceAtTimestamp( Guid gNSSDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandReplyCollectionByGNSSDeviceAtTimestamp( gNSSDevice, timestamp );
            var result = ToEntityList<GNSSDeviceCommandReplyEntity,GNSSDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandReplyEntity> GetGNSSDeviceCommandReplyCollectionByGNSSDeviceFromTimestamp( Guid gNSSDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandReplyCollectionByGNSSDeviceFromTimestamp( gNSSDevice, timestamp );
            var result = ToEntityList<GNSSDeviceCommandReplyEntity,GNSSDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandReplyEntity> GetGNSSDeviceCommandReplyCollectionByGNSSDeviceUntilTimestamp( Guid gNSSDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandReplyCollectionByGNSSDeviceUntilTimestamp( gNSSDevice, timestamp );
            var result = ToEntityList<GNSSDeviceCommandReplyEntity,GNSSDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandReplyEntity> GetGNSSDeviceCommandReplyCollectionByGNSSDeviceOverTimestamp( Guid gNSSDevice, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandReplyCollectionByGNSSDeviceOverTimestamp( gNSSDevice, fromTimestamp, untilTimestamp );
            var result = ToEntityList<GNSSDeviceCommandReplyEntity,GNSSDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandReplyEntity> GetGNSSDeviceCommandReplyCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandReplyCollectionByTimestamp( timestamp );
            var result = ToEntityList<GNSSDeviceCommandReplyEntity,GNSSDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandReplyEntity> GetGNSSDeviceCommandReplyCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandReplyCollectionAtTimestamp( timestamp );
            var result = ToEntityList<GNSSDeviceCommandReplyEntity,GNSSDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandReplyEntity> GetGNSSDeviceCommandReplyCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandReplyCollectionFromTimestamp( timestamp );
            var result = ToEntityList<GNSSDeviceCommandReplyEntity,GNSSDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandReplyEntity> GetGNSSDeviceCommandReplyCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandReplyCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<GNSSDeviceCommandReplyEntity,GNSSDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceCommandReplyEntity> GetGNSSDeviceCommandReplyCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCommandReplyCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<GNSSDeviceCommandReplyEntity,GNSSDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public GNSSDeviceCommandReplyEntity? GetGNSSDeviceCommandReplyByCommand( Guid? command )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGNSSDeviceCommandReplyByCommand( command );
            if( dataObject != null )
            {
                var result = (GNSSDeviceCommandReplyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GNSSDeviceConfiguration queries
        // ---------------------------------------------------------------------
        public GNSSDeviceConfigurationEntity? GetGNSSDeviceConfigurationById( Guid id )
        {
            var entity = (GNSSDeviceConfigurationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGNSSDeviceConfigurationById( id );
                if( dataObject != null )
                {
                    entity = (GNSSDeviceConfigurationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GNSSDeviceConfigurationEntity> GetGNSSDeviceConfigurationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceConfigurationCollection( );
            var result = ToEntityList<GNSSDeviceConfigurationEntity,GNSSDeviceConfigurationObject>( dataItems );
            return result;
        }
        public BindingList<GNSSDeviceConfigurationEntity> GetGNSSDeviceConfigurationCollectionByGNSSDevice( Guid gNSSDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceConfigurationCollectionByGNSSDevice( gNSSDevice );
            var result = ToEntityList<GNSSDeviceConfigurationEntity,GNSSDeviceConfigurationObject>( dataItems );
            return result;
        }

        public GNSSDeviceConfigurationEntity? GetGNSSDeviceConfigurationByGNSSDeviceAndTimestamp( Guid gNSSDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGNSSDeviceConfigurationByGNSSDeviceAndTimestamp( gNSSDevice, timestamp );
            if( dataObject != null )
            {
                var result = (GNSSDeviceConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public GNSSDeviceConfigurationEntity? GetGNSSDeviceConfigurationByGNSSDeviceAtTimestamp( Guid gNSSDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGNSSDeviceConfigurationByGNSSDeviceAtTimestamp( gNSSDevice, timestamp );
            if( dataObject != null )
            {
                var result = (GNSSDeviceConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<GNSSDeviceConfigurationEntity> GetGNSSDeviceConfigurationByGNSSDeviceFromTimestamp( Guid gNSSDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceConfigurationByGNSSDeviceFromTimestamp( gNSSDevice, timestamp );
            var result = ToEntityList<GNSSDeviceConfigurationEntity,GNSSDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceConfigurationEntity> GetGNSSDeviceConfigurationByGNSSDeviceUntilTimestamp( Guid gNSSDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceConfigurationByGNSSDeviceUntilTimestamp( gNSSDevice, timestamp );
            var result = ToEntityList<GNSSDeviceConfigurationEntity,GNSSDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceConfigurationEntity> GetGNSSDeviceConfigurationByGNSSDeviceOverTimestamp( Guid gNSSDevice, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceConfigurationByGNSSDeviceOverTimestamp( gNSSDevice, fromTimestamp, untilTimestamp );
            var result = ToEntityList<GNSSDeviceConfigurationEntity,GNSSDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceConfigurationEntity> GetGNSSDeviceConfigurationCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceConfigurationCollectionByTimestamp( timestamp );
            var result = ToEntityList<GNSSDeviceConfigurationEntity,GNSSDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceConfigurationEntity> GetGNSSDeviceConfigurationCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceConfigurationCollectionAtTimestamp( timestamp );
            var result = ToEntityList<GNSSDeviceConfigurationEntity,GNSSDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceConfigurationEntity> GetGNSSDeviceConfigurationCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceConfigurationCollectionFromTimestamp( timestamp );
            var result = ToEntityList<GNSSDeviceConfigurationEntity,GNSSDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceConfigurationEntity> GetGNSSDeviceConfigurationCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceConfigurationCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<GNSSDeviceConfigurationEntity,GNSSDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<GNSSDeviceConfigurationEntity> GetGNSSDeviceConfigurationCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceConfigurationCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<GNSSDeviceConfigurationEntity,GNSSDeviceConfigurationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // GuidTimeseriesValue queries
        // ---------------------------------------------------------------------
        public GuidTimeseriesValueEntity? GetGuidTimeseriesValueById( Guid id )
        {
            var entity = (GuidTimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGuidTimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (GuidTimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GuidTimeseriesValueEntity> GetGuidTimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesValueCollection( );
            var result = ToEntityList<GuidTimeseriesValueEntity,GuidTimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<GuidTimeseriesValueEntity> GetGuidTimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<GuidTimeseriesValueEntity,GuidTimeseriesValueObject>( dataItems );
            return result;
        }

        public GuidTimeseriesValueEntity? GetGuidTimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGuidTimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (GuidTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public GuidTimeseriesValueEntity? GetGuidTimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGuidTimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (GuidTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<GuidTimeseriesValueEntity> GetGuidTimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<GuidTimeseriesValueEntity,GuidTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GuidTimeseriesValueEntity> GetGuidTimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<GuidTimeseriesValueEntity,GuidTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GuidTimeseriesValueEntity> GetGuidTimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<GuidTimeseriesValueEntity,GuidTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GuidTimeseriesValueEntity> GetGuidTimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<GuidTimeseriesValueEntity,GuidTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GuidTimeseriesValueEntity> GetGuidTimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<GuidTimeseriesValueEntity,GuidTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GuidTimeseriesValueEntity> GetGuidTimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<GuidTimeseriesValueEntity,GuidTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GuidTimeseriesValueEntity> GetGuidTimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<GuidTimeseriesValueEntity,GuidTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<GuidTimeseriesValueEntity> GetGuidTimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<GuidTimeseriesValueEntity,GuidTimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // GyroDeviceCommand queries
        // ---------------------------------------------------------------------
        public GyroDeviceCommandEntity? GetGyroDeviceCommandById( Guid id )
        {
            var entity = (GyroDeviceCommandEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGyroDeviceCommandById( id );
                if( dataObject != null )
                {
                    entity = (GyroDeviceCommandEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GyroDeviceCommandEntity> GetGyroDeviceCommandCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandCollection( );
            var result = ToEntityList<GyroDeviceCommandEntity,GyroDeviceCommandObject>( dataItems );
            return result;
        }
        public BindingList<GyroDeviceCommandEntity> GetGyroDeviceCommandCollectionByGyroDevice( Guid gyroDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandCollectionByGyroDevice( gyroDevice );
            var result = ToEntityList<GyroDeviceCommandEntity,GyroDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandEntity> GetGyroDeviceCommandCollectionByGyroDeviceAndTimestamp( Guid gyroDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandCollectionByGyroDeviceAndTimestamp( gyroDevice, timestamp );
            var result = ToEntityList<GyroDeviceCommandEntity,GyroDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandEntity> GetGyroDeviceCommandCollectionByGyroDeviceAtTimestamp( Guid gyroDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandCollectionByGyroDeviceAtTimestamp( gyroDevice, timestamp );
            var result = ToEntityList<GyroDeviceCommandEntity,GyroDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandEntity> GetGyroDeviceCommandCollectionByGyroDeviceFromTimestamp( Guid gyroDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandCollectionByGyroDeviceFromTimestamp( gyroDevice, timestamp );
            var result = ToEntityList<GyroDeviceCommandEntity,GyroDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandEntity> GetGyroDeviceCommandCollectionByGyroDeviceUntilTimestamp( Guid gyroDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandCollectionByGyroDeviceUntilTimestamp( gyroDevice, timestamp );
            var result = ToEntityList<GyroDeviceCommandEntity,GyroDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandEntity> GetGyroDeviceCommandCollectionByGyroDeviceOverTimestamp( Guid gyroDevice, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandCollectionByGyroDeviceOverTimestamp( gyroDevice, fromTimestamp, untilTimestamp );
            var result = ToEntityList<GyroDeviceCommandEntity,GyroDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandEntity> GetGyroDeviceCommandCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandCollectionByTimestamp( timestamp );
            var result = ToEntityList<GyroDeviceCommandEntity,GyroDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandEntity> GetGyroDeviceCommandCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandCollectionAtTimestamp( timestamp );
            var result = ToEntityList<GyroDeviceCommandEntity,GyroDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandEntity> GetGyroDeviceCommandCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandCollectionFromTimestamp( timestamp );
            var result = ToEntityList<GyroDeviceCommandEntity,GyroDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandEntity> GetGyroDeviceCommandCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<GyroDeviceCommandEntity,GyroDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandEntity> GetGyroDeviceCommandCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<GyroDeviceCommandEntity,GyroDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandEntity> GetGyroDeviceCommandCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandCollectionByReply( reply );
            var result = ToEntityList<GyroDeviceCommandEntity,GyroDeviceCommandObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // GyroDeviceCommandReply queries
        // ---------------------------------------------------------------------
        public GyroDeviceCommandReplyEntity? GetGyroDeviceCommandReplyById( Guid id )
        {
            var entity = (GyroDeviceCommandReplyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGyroDeviceCommandReplyById( id );
                if( dataObject != null )
                {
                    entity = (GyroDeviceCommandReplyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GyroDeviceCommandReplyEntity> GetGyroDeviceCommandReplyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandReplyCollection( );
            var result = ToEntityList<GyroDeviceCommandReplyEntity,GyroDeviceCommandReplyObject>( dataItems );
            return result;
        }
        public BindingList<GyroDeviceCommandReplyEntity> GetGyroDeviceCommandReplyCollectionByGyroDevice( Guid gyroDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandReplyCollectionByGyroDevice( gyroDevice );
            var result = ToEntityList<GyroDeviceCommandReplyEntity,GyroDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandReplyEntity> GetGyroDeviceCommandReplyCollectionByGyroDeviceAndTimestamp( Guid gyroDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandReplyCollectionByGyroDeviceAndTimestamp( gyroDevice, timestamp );
            var result = ToEntityList<GyroDeviceCommandReplyEntity,GyroDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandReplyEntity> GetGyroDeviceCommandReplyCollectionByGyroDeviceAtTimestamp( Guid gyroDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandReplyCollectionByGyroDeviceAtTimestamp( gyroDevice, timestamp );
            var result = ToEntityList<GyroDeviceCommandReplyEntity,GyroDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandReplyEntity> GetGyroDeviceCommandReplyCollectionByGyroDeviceFromTimestamp( Guid gyroDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandReplyCollectionByGyroDeviceFromTimestamp( gyroDevice, timestamp );
            var result = ToEntityList<GyroDeviceCommandReplyEntity,GyroDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandReplyEntity> GetGyroDeviceCommandReplyCollectionByGyroDeviceUntilTimestamp( Guid gyroDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandReplyCollectionByGyroDeviceUntilTimestamp( gyroDevice, timestamp );
            var result = ToEntityList<GyroDeviceCommandReplyEntity,GyroDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandReplyEntity> GetGyroDeviceCommandReplyCollectionByGyroDeviceOverTimestamp( Guid gyroDevice, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandReplyCollectionByGyroDeviceOverTimestamp( gyroDevice, fromTimestamp, untilTimestamp );
            var result = ToEntityList<GyroDeviceCommandReplyEntity,GyroDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandReplyEntity> GetGyroDeviceCommandReplyCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandReplyCollectionByTimestamp( timestamp );
            var result = ToEntityList<GyroDeviceCommandReplyEntity,GyroDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandReplyEntity> GetGyroDeviceCommandReplyCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandReplyCollectionAtTimestamp( timestamp );
            var result = ToEntityList<GyroDeviceCommandReplyEntity,GyroDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandReplyEntity> GetGyroDeviceCommandReplyCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandReplyCollectionFromTimestamp( timestamp );
            var result = ToEntityList<GyroDeviceCommandReplyEntity,GyroDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandReplyEntity> GetGyroDeviceCommandReplyCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandReplyCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<GyroDeviceCommandReplyEntity,GyroDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceCommandReplyEntity> GetGyroDeviceCommandReplyCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCommandReplyCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<GyroDeviceCommandReplyEntity,GyroDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public GyroDeviceCommandReplyEntity? GetGyroDeviceCommandReplyByCommand( Guid? command )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroDeviceCommandReplyByCommand( command );
            if( dataObject != null )
            {
                var result = (GyroDeviceCommandReplyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GyroDeviceConfiguration queries
        // ---------------------------------------------------------------------
        public GyroDeviceConfigurationEntity? GetGyroDeviceConfigurationById( Guid id )
        {
            var entity = (GyroDeviceConfigurationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGyroDeviceConfigurationById( id );
                if( dataObject != null )
                {
                    entity = (GyroDeviceConfigurationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GyroDeviceConfigurationEntity> GetGyroDeviceConfigurationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceConfigurationCollection( );
            var result = ToEntityList<GyroDeviceConfigurationEntity,GyroDeviceConfigurationObject>( dataItems );
            return result;
        }
        public BindingList<GyroDeviceConfigurationEntity> GetGyroDeviceConfigurationCollectionByGyroDevice( Guid gyroDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceConfigurationCollectionByGyroDevice( gyroDevice );
            var result = ToEntityList<GyroDeviceConfigurationEntity,GyroDeviceConfigurationObject>( dataItems );
            return result;
        }

        public GyroDeviceConfigurationEntity? GetGyroDeviceConfigurationByGyroDeviceAndTimestamp( Guid gyroDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroDeviceConfigurationByGyroDeviceAndTimestamp( gyroDevice, timestamp );
            if( dataObject != null )
            {
                var result = (GyroDeviceConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public GyroDeviceConfigurationEntity? GetGyroDeviceConfigurationByGyroDeviceAtTimestamp( Guid gyroDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroDeviceConfigurationByGyroDeviceAtTimestamp( gyroDevice, timestamp );
            if( dataObject != null )
            {
                var result = (GyroDeviceConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<GyroDeviceConfigurationEntity> GetGyroDeviceConfigurationByGyroDeviceFromTimestamp( Guid gyroDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceConfigurationByGyroDeviceFromTimestamp( gyroDevice, timestamp );
            var result = ToEntityList<GyroDeviceConfigurationEntity,GyroDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceConfigurationEntity> GetGyroDeviceConfigurationByGyroDeviceUntilTimestamp( Guid gyroDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceConfigurationByGyroDeviceUntilTimestamp( gyroDevice, timestamp );
            var result = ToEntityList<GyroDeviceConfigurationEntity,GyroDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceConfigurationEntity> GetGyroDeviceConfigurationByGyroDeviceOverTimestamp( Guid gyroDevice, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceConfigurationByGyroDeviceOverTimestamp( gyroDevice, fromTimestamp, untilTimestamp );
            var result = ToEntityList<GyroDeviceConfigurationEntity,GyroDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceConfigurationEntity> GetGyroDeviceConfigurationCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceConfigurationCollectionByTimestamp( timestamp );
            var result = ToEntityList<GyroDeviceConfigurationEntity,GyroDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceConfigurationEntity> GetGyroDeviceConfigurationCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceConfigurationCollectionAtTimestamp( timestamp );
            var result = ToEntityList<GyroDeviceConfigurationEntity,GyroDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceConfigurationEntity> GetGyroDeviceConfigurationCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceConfigurationCollectionFromTimestamp( timestamp );
            var result = ToEntityList<GyroDeviceConfigurationEntity,GyroDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceConfigurationEntity> GetGyroDeviceConfigurationCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceConfigurationCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<GyroDeviceConfigurationEntity,GyroDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<GyroDeviceConfigurationEntity> GetGyroDeviceConfigurationCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceConfigurationCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<GyroDeviceConfigurationEntity,GyroDeviceConfigurationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Identity queries
        // ---------------------------------------------------------------------
        public IdentityEntity? GetIdentityById( Guid id )
        {
            var entity = (IdentityEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetIdentityById( id );
                if( dataObject != null )
                {
                    entity = (IdentityEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<IdentityEntity> GetIdentityCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetIdentityCollection( );
            var result = ToEntityList<IdentityEntity,IdentityObject>( dataItems );
            return result;
        }
        // ---------------------------------------------------------------------
        // Callsign queries
        // ---------------------------------------------------------------------
        public CallsignEntity? GetCallsignById( Guid id )
        {
            var entity = (CallsignEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCallsignById( id );
                if( dataObject != null )
                {
                    entity = (CallsignEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CallsignEntity> GetCallsignCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCallsignCollection( );
            var result = ToEntityList<CallsignEntity,CallsignObject>( dataItems );
            return result;
        }
        public CallsignEntity? GetCallsignByIdentifier( string identifier )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCallsignByIdentifier( identifier );
            if( dataObject != null )
            {
                var result = (CallsignEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // InternationalMaritimeOrganizationNumber queries
        // ---------------------------------------------------------------------
        public InternationalMaritimeOrganizationNumberEntity? GetInternationalMaritimeOrganizationNumberById( Guid id )
        {
            var entity = (InternationalMaritimeOrganizationNumberEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInternationalMaritimeOrganizationNumberById( id );
                if( dataObject != null )
                {
                    entity = (InternationalMaritimeOrganizationNumberEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<InternationalMaritimeOrganizationNumberEntity> GetInternationalMaritimeOrganizationNumberCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInternationalMaritimeOrganizationNumberCollection( );
            var result = ToEntityList<InternationalMaritimeOrganizationNumberEntity,InternationalMaritimeOrganizationNumberObject>( dataItems );
            return result;
        }
        public InternationalMaritimeOrganizationNumberEntity? GetInternationalMaritimeOrganizationNumberByIdentifier( long identifier )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInternationalMaritimeOrganizationNumberByIdentifier( identifier );
            if( dataObject != null )
            {
                var result = (InternationalMaritimeOrganizationNumberEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<InternationalMaritimeOrganizationNumberEntity> GetInternationalMaritimeOrganizationNumberFromIdentifier( long identifier )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInternationalMaritimeOrganizationNumberFromIdentifier( identifier );
            var result = ToEntityList<InternationalMaritimeOrganizationNumberEntity,InternationalMaritimeOrganizationNumberObject>( dataItems );
            return result;
        }

        public BindingList<InternationalMaritimeOrganizationNumberEntity> GetInternationalMaritimeOrganizationNumberUntilIdentifier( long identifier )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInternationalMaritimeOrganizationNumberUntilIdentifier( identifier );
            var result = ToEntityList<InternationalMaritimeOrganizationNumberEntity,InternationalMaritimeOrganizationNumberObject>( dataItems );
            return result;
        }

        public BindingList<InternationalMaritimeOrganizationNumberEntity> GetInternationalMaritimeOrganizationNumberOverIdentifier( long fromIdentifier, long untilIdentifier )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInternationalMaritimeOrganizationNumberOverIdentifier( fromIdentifier, untilIdentifier );
            var result = ToEntityList<InternationalMaritimeOrganizationNumberEntity,InternationalMaritimeOrganizationNumberObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // MaritimeMobileServiceIdentity queries
        // ---------------------------------------------------------------------
        public MaritimeMobileServiceIdentityEntity? GetMaritimeMobileServiceIdentityById( Guid id )
        {
            var entity = (MaritimeMobileServiceIdentityEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetMaritimeMobileServiceIdentityById( id );
                if( dataObject != null )
                {
                    entity = (MaritimeMobileServiceIdentityEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<MaritimeMobileServiceIdentityEntity> GetMaritimeMobileServiceIdentityCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMaritimeMobileServiceIdentityCollection( );
            var result = ToEntityList<MaritimeMobileServiceIdentityEntity,MaritimeMobileServiceIdentityObject>( dataItems );
            return result;
        }
        public MaritimeMobileServiceIdentityEntity? GetMaritimeMobileServiceIdentityByIdentifier( long identifier )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetMaritimeMobileServiceIdentityByIdentifier( identifier );
            if( dataObject != null )
            {
                var result = (MaritimeMobileServiceIdentityEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<MaritimeMobileServiceIdentityEntity> GetMaritimeMobileServiceIdentityFromIdentifier( long identifier )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMaritimeMobileServiceIdentityFromIdentifier( identifier );
            var result = ToEntityList<MaritimeMobileServiceIdentityEntity,MaritimeMobileServiceIdentityObject>( dataItems );
            return result;
        }

        public BindingList<MaritimeMobileServiceIdentityEntity> GetMaritimeMobileServiceIdentityUntilIdentifier( long identifier )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMaritimeMobileServiceIdentityUntilIdentifier( identifier );
            var result = ToEntityList<MaritimeMobileServiceIdentityEntity,MaritimeMobileServiceIdentityObject>( dataItems );
            return result;
        }

        public BindingList<MaritimeMobileServiceIdentityEntity> GetMaritimeMobileServiceIdentityOverIdentifier( long fromIdentifier, long untilIdentifier )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMaritimeMobileServiceIdentityOverIdentifier( fromIdentifier, untilIdentifier );
            var result = ToEntityList<MaritimeMobileServiceIdentityEntity,MaritimeMobileServiceIdentityObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Name queries
        // ---------------------------------------------------------------------
        public NameEntity? GetNameById( Guid id )
        {
            var entity = (NameEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetNameById( id );
                if( dataObject != null )
                {
                    entity = (NameEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<NameEntity> GetNameCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetNameCollection( );
            var result = ToEntityList<NameEntity,NameObject>( dataItems );
            return result;
        }
        public NameEntity? GetNameByText( string text )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetNameByText( text );
            if( dataObject != null )
            {
                var result = (NameEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // Int16TimeseriesValue queries
        // ---------------------------------------------------------------------
        public Int16TimeseriesValueEntity? GetInt16TimeseriesValueById( Guid id )
        {
            var entity = (Int16TimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt16TimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (Int16TimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int16TimeseriesValueEntity> GetInt16TimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesValueCollection( );
            var result = ToEntityList<Int16TimeseriesValueEntity,Int16TimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<Int16TimeseriesValueEntity> GetInt16TimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<Int16TimeseriesValueEntity,Int16TimeseriesValueObject>( dataItems );
            return result;
        }

        public Int16TimeseriesValueEntity? GetInt16TimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt16TimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (Int16TimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public Int16TimeseriesValueEntity? GetInt16TimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt16TimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (Int16TimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<Int16TimeseriesValueEntity> GetInt16TimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<Int16TimeseriesValueEntity,Int16TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int16TimeseriesValueEntity> GetInt16TimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<Int16TimeseriesValueEntity,Int16TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int16TimeseriesValueEntity> GetInt16TimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<Int16TimeseriesValueEntity,Int16TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int16TimeseriesValueEntity> GetInt16TimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<Int16TimeseriesValueEntity,Int16TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int16TimeseriesValueEntity> GetInt16TimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<Int16TimeseriesValueEntity,Int16TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int16TimeseriesValueEntity> GetInt16TimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<Int16TimeseriesValueEntity,Int16TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int16TimeseriesValueEntity> GetInt16TimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<Int16TimeseriesValueEntity,Int16TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int16TimeseriesValueEntity> GetInt16TimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<Int16TimeseriesValueEntity,Int16TimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Int32TimeseriesValue queries
        // ---------------------------------------------------------------------
        public Int32TimeseriesValueEntity? GetInt32TimeseriesValueById( Guid id )
        {
            var entity = (Int32TimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt32TimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (Int32TimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int32TimeseriesValueEntity> GetInt32TimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesValueCollection( );
            var result = ToEntityList<Int32TimeseriesValueEntity,Int32TimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<Int32TimeseriesValueEntity> GetInt32TimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<Int32TimeseriesValueEntity,Int32TimeseriesValueObject>( dataItems );
            return result;
        }

        public Int32TimeseriesValueEntity? GetInt32TimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt32TimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (Int32TimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public Int32TimeseriesValueEntity? GetInt32TimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt32TimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (Int32TimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<Int32TimeseriesValueEntity> GetInt32TimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<Int32TimeseriesValueEntity,Int32TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int32TimeseriesValueEntity> GetInt32TimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<Int32TimeseriesValueEntity,Int32TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int32TimeseriesValueEntity> GetInt32TimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<Int32TimeseriesValueEntity,Int32TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int32TimeseriesValueEntity> GetInt32TimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<Int32TimeseriesValueEntity,Int32TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int32TimeseriesValueEntity> GetInt32TimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<Int32TimeseriesValueEntity,Int32TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int32TimeseriesValueEntity> GetInt32TimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<Int32TimeseriesValueEntity,Int32TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int32TimeseriesValueEntity> GetInt32TimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<Int32TimeseriesValueEntity,Int32TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int32TimeseriesValueEntity> GetInt32TimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<Int32TimeseriesValueEntity,Int32TimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Int64TimeseriesValue queries
        // ---------------------------------------------------------------------
        public Int64TimeseriesValueEntity? GetInt64TimeseriesValueById( Guid id )
        {
            var entity = (Int64TimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt64TimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (Int64TimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int64TimeseriesValueEntity> GetInt64TimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesValueCollection( );
            var result = ToEntityList<Int64TimeseriesValueEntity,Int64TimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<Int64TimeseriesValueEntity> GetInt64TimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<Int64TimeseriesValueEntity,Int64TimeseriesValueObject>( dataItems );
            return result;
        }

        public Int64TimeseriesValueEntity? GetInt64TimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt64TimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (Int64TimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public Int64TimeseriesValueEntity? GetInt64TimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt64TimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (Int64TimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<Int64TimeseriesValueEntity> GetInt64TimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<Int64TimeseriesValueEntity,Int64TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int64TimeseriesValueEntity> GetInt64TimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<Int64TimeseriesValueEntity,Int64TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int64TimeseriesValueEntity> GetInt64TimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<Int64TimeseriesValueEntity,Int64TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int64TimeseriesValueEntity> GetInt64TimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<Int64TimeseriesValueEntity,Int64TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int64TimeseriesValueEntity> GetInt64TimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<Int64TimeseriesValueEntity,Int64TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int64TimeseriesValueEntity> GetInt64TimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<Int64TimeseriesValueEntity,Int64TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int64TimeseriesValueEntity> GetInt64TimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<Int64TimeseriesValueEntity,Int64TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Int64TimeseriesValueEntity> GetInt64TimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<Int64TimeseriesValueEntity,Int64TimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Item queries
        // ---------------------------------------------------------------------
        public ItemEntity? GetItemById( Guid id )
        {
            var entity = (ItemEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetItemById( id );
                if( dataObject != null )
                {
                    entity = (ItemEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ItemEntity> GetItemCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemCollection( );
            var result = ToEntityList<ItemEntity,ItemObject>( dataItems );
            return result;
        }
        // ---------------------------------------------------------------------
        // BaseStation queries
        // ---------------------------------------------------------------------
        public BaseStationEntity? GetBaseStationById( Guid id )
        {
            var entity = (BaseStationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetBaseStationById( id );
                if( dataObject != null )
                {
                    entity = (BaseStationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<BaseStationEntity> GetBaseStationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBaseStationCollection( );
            var result = ToEntityList<BaseStationEntity,BaseStationObject>( dataItems );
            return result;
        }
        public BaseStationEntity? GetBaseStationByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBaseStationByName( name );
            if( dataObject != null )
            {
                var result = (BaseStationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<BaseStationEntity> GetBaseStationCollectionByType( Guid? type )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBaseStationCollectionByType( type );
            var result = ToEntityList<BaseStationEntity,BaseStationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Device queries
        // ---------------------------------------------------------------------
        public DeviceEntity? GetDeviceById( Guid id )
        {
            var entity = (DeviceEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetDeviceById( id );
                if( dataObject != null )
                {
                    entity = (DeviceEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<DeviceEntity> GetDeviceCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDeviceCollection( );
            var result = ToEntityList<DeviceEntity,DeviceObject>( dataItems );
            return result;
        }
        public BindingList<DeviceEntity> GetDeviceCollectionByHost( Guid host )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDeviceCollectionByHost( host );
            var result = ToEntityList<DeviceEntity,DeviceObject>( dataItems );
            return result;
        }

        public DeviceEntity? GetDeviceByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDeviceByName( name );
            if( dataObject != null )
            {
                var result = (DeviceEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // CameraDevice queries
        // ---------------------------------------------------------------------
        public CameraDeviceEntity? GetCameraDeviceById( Guid id )
        {
            var entity = (CameraDeviceEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCameraDeviceById( id );
                if( dataObject != null )
                {
                    entity = (CameraDeviceEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CameraDeviceEntity> GetCameraDeviceCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraDeviceCollection( );
            var result = ToEntityList<CameraDeviceEntity,CameraDeviceObject>( dataItems );
            return result;
        }
        public BindingList<CameraDeviceEntity> GetCameraDeviceCollectionByHost( Guid host )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCameraDeviceCollectionByHost( host );
            var result = ToEntityList<CameraDeviceEntity,CameraDeviceObject>( dataItems );
            return result;
        }

        public CameraDeviceEntity? GetCameraDeviceByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCameraDeviceByName( name );
            if( dataObject != null )
            {
                var result = (CameraDeviceEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GNSSDevice queries
        // ---------------------------------------------------------------------
        public GNSSDeviceEntity? GetGNSSDeviceById( Guid id )
        {
            var entity = (GNSSDeviceEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGNSSDeviceById( id );
                if( dataObject != null )
                {
                    entity = (GNSSDeviceEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GNSSDeviceEntity> GetGNSSDeviceCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCollection( );
            var result = ToEntityList<GNSSDeviceEntity,GNSSDeviceObject>( dataItems );
            return result;
        }
        public BindingList<GNSSDeviceEntity> GetGNSSDeviceCollectionByHost( Guid host )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSDeviceCollectionByHost( host );
            var result = ToEntityList<GNSSDeviceEntity,GNSSDeviceObject>( dataItems );
            return result;
        }

        public GNSSDeviceEntity? GetGNSSDeviceByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGNSSDeviceByName( name );
            if( dataObject != null )
            {
                var result = (GNSSDeviceEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GyroDevice queries
        // ---------------------------------------------------------------------
        public GyroDeviceEntity? GetGyroDeviceById( Guid id )
        {
            var entity = (GyroDeviceEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGyroDeviceById( id );
                if( dataObject != null )
                {
                    entity = (GyroDeviceEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GyroDeviceEntity> GetGyroDeviceCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCollection( );
            var result = ToEntityList<GyroDeviceEntity,GyroDeviceObject>( dataItems );
            return result;
        }
        public BindingList<GyroDeviceEntity> GetGyroDeviceCollectionByHost( Guid host )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCollectionByHost( host );
            var result = ToEntityList<GyroDeviceEntity,GyroDeviceObject>( dataItems );
            return result;
        }

        public GyroDeviceEntity? GetGyroDeviceByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroDeviceByName( name );
            if( dataObject != null )
            {
                var result = (GyroDeviceEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<GyroDeviceEntity> GetGyroDeviceCollectionByGNSSDevice( Guid? gNSSDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroDeviceCollectionByGNSSDevice( gNSSDevice );
            var result = ToEntityList<GyroDeviceEntity,GyroDeviceObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // LineInputDevice queries
        // ---------------------------------------------------------------------
        public LineInputDeviceEntity? GetLineInputDeviceById( Guid id )
        {
            var entity = (LineInputDeviceEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetLineInputDeviceById( id );
                if( dataObject != null )
                {
                    entity = (LineInputDeviceEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<LineInputDeviceEntity> GetLineInputDeviceCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCollection( );
            var result = ToEntityList<LineInputDeviceEntity,LineInputDeviceObject>( dataItems );
            return result;
        }
        public BindingList<LineInputDeviceEntity> GetLineInputDeviceCollectionByHost( Guid host )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCollectionByHost( host );
            var result = ToEntityList<LineInputDeviceEntity,LineInputDeviceObject>( dataItems );
            return result;
        }

        public LineInputDeviceEntity? GetLineInputDeviceByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetLineInputDeviceByName( name );
            if( dataObject != null )
            {
                var result = (LineInputDeviceEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // OilSpillDetectorDevice queries
        // ---------------------------------------------------------------------
        public OilSpillDetectorDeviceEntity? GetOilSpillDetectorDeviceById( Guid id )
        {
            var entity = (OilSpillDetectorDeviceEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetOilSpillDetectorDeviceById( id );
                if( dataObject != null )
                {
                    entity = (OilSpillDetectorDeviceEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<OilSpillDetectorDeviceEntity> GetOilSpillDetectorDeviceCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorDeviceCollection( );
            var result = ToEntityList<OilSpillDetectorDeviceEntity,OilSpillDetectorDeviceObject>( dataItems );
            return result;
        }
        public BindingList<OilSpillDetectorDeviceEntity> GetOilSpillDetectorDeviceCollectionByHost( Guid host )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorDeviceCollectionByHost( host );
            var result = ToEntityList<OilSpillDetectorDeviceEntity,OilSpillDetectorDeviceObject>( dataItems );
            return result;
        }

        public OilSpillDetectorDeviceEntity? GetOilSpillDetectorDeviceByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetOilSpillDetectorDeviceByName( name );
            if( dataObject != null )
            {
                var result = (OilSpillDetectorDeviceEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadioDevice queries
        // ---------------------------------------------------------------------
        public RadioDeviceEntity? GetRadioDeviceById( Guid id )
        {
            var entity = (RadioDeviceEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadioDeviceById( id );
                if( dataObject != null )
                {
                    entity = (RadioDeviceEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadioDeviceEntity> GetRadioDeviceCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioDeviceCollection( );
            var result = ToEntityList<RadioDeviceEntity,RadioDeviceObject>( dataItems );
            return result;
        }
        public BindingList<RadioDeviceEntity> GetRadioDeviceCollectionByHost( Guid host )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioDeviceCollectionByHost( host );
            var result = ToEntityList<RadioDeviceEntity,RadioDeviceObject>( dataItems );
            return result;
        }

        public RadioDeviceEntity? GetRadioDeviceByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadioDeviceByName( name );
            if( dataObject != null )
            {
                var result = (RadioDeviceEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadomeDevice queries
        // ---------------------------------------------------------------------
        public RadomeDeviceEntity? GetRadomeDeviceById( Guid id )
        {
            var entity = (RadomeDeviceEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadomeDeviceById( id );
                if( dataObject != null )
                {
                    entity = (RadomeDeviceEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadomeDeviceEntity> GetRadomeDeviceCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeDeviceCollection( );
            var result = ToEntityList<RadomeDeviceEntity,RadomeDeviceObject>( dataItems );
            return result;
        }
        public BindingList<RadomeDeviceEntity> GetRadomeDeviceCollectionByHost( Guid host )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeDeviceCollectionByHost( host );
            var result = ToEntityList<RadomeDeviceEntity,RadomeDeviceObject>( dataItems );
            return result;
        }

        public RadomeDeviceEntity? GetRadomeDeviceByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadomeDeviceByName( name );
            if( dataObject != null )
            {
                var result = (RadomeDeviceEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<RadomeDeviceEntity> GetRadomeDeviceCollectionByRadar( Guid? radar )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeDeviceCollectionByRadar( radar );
            var result = ToEntityList<RadomeDeviceEntity,RadomeDeviceObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // TrackerDevice queries
        // ---------------------------------------------------------------------
        public TrackerDeviceEntity? GetTrackerDeviceById( Guid id )
        {
            var entity = (TrackerDeviceEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTrackerDeviceById( id );
                if( dataObject != null )
                {
                    entity = (TrackerDeviceEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TrackerDeviceEntity> GetTrackerDeviceCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackerDeviceCollection( );
            var result = ToEntityList<TrackerDeviceEntity,TrackerDeviceObject>( dataItems );
            return result;
        }
        public BindingList<TrackerDeviceEntity> GetTrackerDeviceCollectionByHost( Guid host )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackerDeviceCollectionByHost( host );
            var result = ToEntityList<TrackerDeviceEntity,TrackerDeviceObject>( dataItems );
            return result;
        }

        public TrackerDeviceEntity? GetTrackerDeviceByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackerDeviceByName( name );
            if( dataObject != null )
            {
                var result = (TrackerDeviceEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // AisDevice queries
        // ---------------------------------------------------------------------
        public AisDeviceEntity? GetAisDeviceById( Guid id )
        {
            var entity = (AisDeviceEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisDeviceById( id );
                if( dataObject != null )
                {
                    entity = (AisDeviceEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisDeviceEntity> GetAisDeviceCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCollection( );
            var result = ToEntityList<AisDeviceEntity,AisDeviceObject>( dataItems );
            return result;
        }
        public BindingList<AisDeviceEntity> GetAisDeviceCollectionByHost( Guid host )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisDeviceCollectionByHost( host );
            var result = ToEntityList<AisDeviceEntity,AisDeviceObject>( dataItems );
            return result;
        }

        public AisDeviceEntity? GetAisDeviceByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisDeviceByName( name );
            if( dataObject != null )
            {
                var result = (AisDeviceEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarDevice queries
        // ---------------------------------------------------------------------
        public RadarDeviceEntity? GetRadarDeviceById( Guid id )
        {
            var entity = (RadarDeviceEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarDeviceById( id );
                if( dataObject != null )
                {
                    entity = (RadarDeviceEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarDeviceEntity> GetRadarDeviceCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarDeviceCollection( );
            var result = ToEntityList<RadarDeviceEntity,RadarDeviceObject>( dataItems );
            return result;
        }
        public BindingList<RadarDeviceEntity> GetRadarDeviceCollectionByHost( Guid host )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarDeviceCollectionByHost( host );
            var result = ToEntityList<RadarDeviceEntity,RadarDeviceObject>( dataItems );
            return result;
        }

        public RadarDeviceEntity? GetRadarDeviceByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarDeviceByName( name );
            if( dataObject != null )
            {
                var result = (RadarDeviceEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<RadarDeviceEntity> GetRadarDeviceCollectionByRadome( Guid? radome )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarDeviceCollectionByRadome( radome );
            var result = ToEntityList<RadarDeviceEntity,RadarDeviceObject>( dataItems );
            return result;
        }

        public BindingList<RadarDeviceEntity> GetRadarDeviceCollectionByGNSSDevice( Guid? gNSSDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarDeviceCollectionByGNSSDevice( gNSSDevice );
            var result = ToEntityList<RadarDeviceEntity,RadarDeviceObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // WeatherStationDevice queries
        // ---------------------------------------------------------------------
        public WeatherStationDeviceEntity? GetWeatherStationDeviceById( Guid id )
        {
            var entity = (WeatherStationDeviceEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetWeatherStationDeviceById( id );
                if( dataObject != null )
                {
                    entity = (WeatherStationDeviceEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<WeatherStationDeviceEntity> GetWeatherStationDeviceCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationDeviceCollection( );
            var result = ToEntityList<WeatherStationDeviceEntity,WeatherStationDeviceObject>( dataItems );
            return result;
        }
        public BindingList<WeatherStationDeviceEntity> GetWeatherStationDeviceCollectionByHost( Guid host )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationDeviceCollectionByHost( host );
            var result = ToEntityList<WeatherStationDeviceEntity,WeatherStationDeviceObject>( dataItems );
            return result;
        }

        public WeatherStationDeviceEntity? GetWeatherStationDeviceByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationDeviceByName( name );
            if( dataObject != null )
            {
                var result = (WeatherStationDeviceEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<WeatherStationDeviceEntity> GetWeatherStationDeviceCollectionByGyro( Guid? gyro )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationDeviceCollectionByGyro( gyro );
            var result = ToEntityList<WeatherStationDeviceEntity,WeatherStationDeviceObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Facility queries
        // ---------------------------------------------------------------------
        public FacilityEntity? GetFacilityById( Guid id )
        {
            var entity = (FacilityEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetFacilityById( id );
                if( dataObject != null )
                {
                    entity = (FacilityEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<FacilityEntity> GetFacilityCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetFacilityCollection( );
            var result = ToEntityList<FacilityEntity,FacilityObject>( dataItems );
            return result;
        }
        public FacilityEntity? GetFacilityByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetFacilityByName( name );
            if( dataObject != null )
            {
                var result = (FacilityEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<FacilityEntity> GetFacilityCollectionByType( Guid? type )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetFacilityCollectionByType( type );
            var result = ToEntityList<FacilityEntity,FacilityObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // TrackableItem queries
        // ---------------------------------------------------------------------
        public TrackableItemEntity? GetTrackableItemById( Guid id )
        {
            var entity = (TrackableItemEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTrackableItemById( id );
                if( dataObject != null )
                {
                    entity = (TrackableItemEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TrackableItemEntity> GetTrackableItemCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemCollection( );
            var result = ToEntityList<TrackableItemEntity,TrackableItemObject>( dataItems );
            return result;
        }
        // ---------------------------------------------------------------------
        // Aircraft queries
        // ---------------------------------------------------------------------
        public AircraftEntity? GetAircraftById( Guid id )
        {
            var entity = (AircraftEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAircraftById( id );
                if( dataObject != null )
                {
                    entity = (AircraftEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AircraftEntity> GetAircraftCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAircraftCollection( );
            var result = ToEntityList<AircraftEntity,AircraftObject>( dataItems );
            return result;
        }
        public BindingList<AircraftEntity> GetAircraftCollectionByName( string name )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAircraftCollectionByName( name );
            var result = ToEntityList<AircraftEntity,AircraftObject>( dataItems );
            return result;
        }

        public BindingList<AircraftEntity> GetAircraftCollectionByType( Guid? type )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAircraftCollectionByType( type );
            var result = ToEntityList<AircraftEntity,AircraftObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // AisAidToNavigation queries
        // ---------------------------------------------------------------------
        public AisAidToNavigationEntity? GetAisAidToNavigationById( Guid id )
        {
            var entity = (AisAidToNavigationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisAidToNavigationById( id );
                if( dataObject != null )
                {
                    entity = (AisAidToNavigationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisAidToNavigationEntity> GetAisAidToNavigationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAidToNavigationCollection( );
            var result = ToEntityList<AisAidToNavigationEntity,AisAidToNavigationObject>( dataItems );
            return result;
        }
        public AisAidToNavigationEntity? GetAisAidToNavigationByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisAidToNavigationByName( name );
            if( dataObject != null )
            {
                var result = (AisAidToNavigationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisAidToNavigationEntity> GetAisAidToNavigationCollectionByMMSI( Guid? mMSI )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAidToNavigationCollectionByMMSI( mMSI );
            var result = ToEntityList<AisAidToNavigationEntity,AisAidToNavigationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Vehicle queries
        // ---------------------------------------------------------------------
        public VehicleEntity? GetVehicleById( Guid id )
        {
            var entity = (VehicleEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetVehicleById( id );
                if( dataObject != null )
                {
                    entity = (VehicleEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<VehicleEntity> GetVehicleCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetVehicleCollection( );
            var result = ToEntityList<VehicleEntity,VehicleObject>( dataItems );
            return result;
        }
        public VehicleEntity? GetVehicleByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetVehicleByName( name );
            if( dataObject != null )
            {
                var result = (VehicleEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<VehicleEntity> GetVehicleCollectionByType( Guid? type )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetVehicleCollectionByType( type );
            var result = ToEntityList<VehicleEntity,VehicleObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Vessel queries
        // ---------------------------------------------------------------------
        public VesselEntity? GetVesselById( Guid id )
        {
            var entity = (VesselEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetVesselById( id );
                if( dataObject != null )
                {
                    entity = (VesselEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<VesselEntity> GetVesselCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetVesselCollection( );
            var result = ToEntityList<VesselEntity,VesselObject>( dataItems );
            return result;
        }
        public BindingList<VesselEntity> GetVesselCollectionByName( string name )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetVesselCollectionByName( name );
            var result = ToEntityList<VesselEntity,VesselObject>( dataItems );
            return result;
        }

        public BindingList<VesselEntity> GetVesselCollectionByType( Guid? type )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetVesselCollectionByType( type );
            var result = ToEntityList<VesselEntity,VesselObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // ItemIdentityLink queries
        // ---------------------------------------------------------------------
        public ItemIdentityLinkEntity? GetItemIdentityLinkById( Guid id )
        {
            var entity = (ItemIdentityLinkEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetItemIdentityLinkById( id );
                if( dataObject != null )
                {
                    entity = (ItemIdentityLinkEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollection( );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }
        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByItem( Guid item )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByItem( item );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByItemAndStart( Guid item, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByItemAndStart( item, start );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByItemAtStart( Guid item, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByItemAtStart( item, start );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByItemFromStart( Guid item, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByItemFromStart( item, start );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByItemUntilStart( Guid item, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByItemUntilStart( item, start );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByItemOverStart( Guid item, DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByItemOverStart( item, fromStart, untilStart );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByItemAndEnd( Guid item, DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByItemAndEnd( item, end );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByItemAtEnd( Guid item, DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByItemAtEnd( item, end );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByItemFromEnd( Guid item, DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByItemFromEnd( item, end );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByItemUntilEnd( Guid item, DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByItemUntilEnd( item, end );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByItemOverEnd( Guid item, DateTime fromEnd, DateTime untilEnd )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByItemOverEnd( item, fromEnd, untilEnd );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByIdentity( Guid identity )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByIdentity( identity );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByIdentityAndStart( Guid identity, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByIdentityAndStart( identity, start );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByIdentityAtStart( Guid identity, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByIdentityAtStart( identity, start );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByIdentityFromStart( Guid identity, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByIdentityFromStart( identity, start );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByIdentityUntilStart( Guid identity, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByIdentityUntilStart( identity, start );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByIdentityOverStart( Guid identity, DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByIdentityOverStart( identity, fromStart, untilStart );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByIdentityAndEnd( Guid identity, DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByIdentityAndEnd( identity, end );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByIdentityAtEnd( Guid identity, DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByIdentityAtEnd( identity, end );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByIdentityFromEnd( Guid identity, DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByIdentityFromEnd( identity, end );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByIdentityUntilEnd( Guid identity, DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByIdentityUntilEnd( identity, end );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByIdentityOverEnd( Guid identity, DateTime fromEnd, DateTime untilEnd )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByIdentityOverEnd( identity, fromEnd, untilEnd );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByStart( start );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionAtStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionAtStart( start );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionFromStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionFromStart( start );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionUntilStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionUntilStart( start );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionOverStart( DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionOverStart( fromStart, untilStart );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionByEnd( DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionByEnd( end );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionAtEnd( DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionAtEnd( end );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionFromEnd( DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionFromEnd( end );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionUntilEnd( DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionUntilEnd( end );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemIdentityLinkEntity> GetItemIdentityLinkCollectionOverEnd( DateTime fromEnd, DateTime untilEnd )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemIdentityLinkCollectionOverEnd( fromEnd, untilEnd );
            var result = ToEntityList<ItemIdentityLinkEntity,ItemIdentityLinkObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // ItemParentChildLink queries
        // ---------------------------------------------------------------------
        public ItemParentChildLinkEntity? GetItemParentChildLinkById( Guid id )
        {
            var entity = (ItemParentChildLinkEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetItemParentChildLinkById( id );
                if( dataObject != null )
                {
                    entity = (ItemParentChildLinkEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ItemParentChildLinkEntity> GetItemParentChildLinkCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemParentChildLinkCollection( );
            var result = ToEntityList<ItemParentChildLinkEntity,ItemParentChildLinkObject>( dataItems );
            return result;
        }
        public BindingList<ItemParentChildLinkEntity> GetItemParentChildLinkCollectionByParent( Guid parent )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemParentChildLinkCollectionByParent( parent );
            var result = ToEntityList<ItemParentChildLinkEntity,ItemParentChildLinkObject>( dataItems );
            return result;
        }

        public ItemParentChildLinkEntity? GetItemParentChildLinkByParentAndTimestamp( Guid parent, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetItemParentChildLinkByParentAndTimestamp( parent, timestamp );
            if( dataObject != null )
            {
                var result = (ItemParentChildLinkEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public ItemParentChildLinkEntity? GetItemParentChildLinkByParentAtTimestamp( Guid parent, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetItemParentChildLinkByParentAtTimestamp( parent, timestamp );
            if( dataObject != null )
            {
                var result = (ItemParentChildLinkEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ItemParentChildLinkEntity> GetItemParentChildLinkByParentFromTimestamp( Guid parent, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemParentChildLinkByParentFromTimestamp( parent, timestamp );
            var result = ToEntityList<ItemParentChildLinkEntity,ItemParentChildLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemParentChildLinkEntity> GetItemParentChildLinkByParentUntilTimestamp( Guid parent, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemParentChildLinkByParentUntilTimestamp( parent, timestamp );
            var result = ToEntityList<ItemParentChildLinkEntity,ItemParentChildLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemParentChildLinkEntity> GetItemParentChildLinkByParentOverTimestamp( Guid parent, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemParentChildLinkByParentOverTimestamp( parent, fromTimestamp, untilTimestamp );
            var result = ToEntityList<ItemParentChildLinkEntity,ItemParentChildLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemParentChildLinkEntity> GetItemParentChildLinkCollectionByChild( Guid child )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemParentChildLinkCollectionByChild( child );
            var result = ToEntityList<ItemParentChildLinkEntity,ItemParentChildLinkObject>( dataItems );
            return result;
        }

        public ItemParentChildLinkEntity? GetItemParentChildLinkByChildAndTimestamp( Guid child, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetItemParentChildLinkByChildAndTimestamp( child, timestamp );
            if( dataObject != null )
            {
                var result = (ItemParentChildLinkEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public ItemParentChildLinkEntity? GetItemParentChildLinkByChildAtTimestamp( Guid child, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetItemParentChildLinkByChildAtTimestamp( child, timestamp );
            if( dataObject != null )
            {
                var result = (ItemParentChildLinkEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ItemParentChildLinkEntity> GetItemParentChildLinkByChildFromTimestamp( Guid child, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemParentChildLinkByChildFromTimestamp( child, timestamp );
            var result = ToEntityList<ItemParentChildLinkEntity,ItemParentChildLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemParentChildLinkEntity> GetItemParentChildLinkByChildUntilTimestamp( Guid child, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemParentChildLinkByChildUntilTimestamp( child, timestamp );
            var result = ToEntityList<ItemParentChildLinkEntity,ItemParentChildLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemParentChildLinkEntity> GetItemParentChildLinkByChildOverTimestamp( Guid child, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemParentChildLinkByChildOverTimestamp( child, fromTimestamp, untilTimestamp );
            var result = ToEntityList<ItemParentChildLinkEntity,ItemParentChildLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemParentChildLinkEntity> GetItemParentChildLinkCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemParentChildLinkCollectionByTimestamp( timestamp );
            var result = ToEntityList<ItemParentChildLinkEntity,ItemParentChildLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemParentChildLinkEntity> GetItemParentChildLinkCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemParentChildLinkCollectionAtTimestamp( timestamp );
            var result = ToEntityList<ItemParentChildLinkEntity,ItemParentChildLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemParentChildLinkEntity> GetItemParentChildLinkCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemParentChildLinkCollectionFromTimestamp( timestamp );
            var result = ToEntityList<ItemParentChildLinkEntity,ItemParentChildLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemParentChildLinkEntity> GetItemParentChildLinkCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemParentChildLinkCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<ItemParentChildLinkEntity,ItemParentChildLinkObject>( dataItems );
            return result;
        }

        public BindingList<ItemParentChildLinkEntity> GetItemParentChildLinkCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetItemParentChildLinkCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<ItemParentChildLinkEntity,ItemParentChildLinkObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // LineInputDeviceCommand queries
        // ---------------------------------------------------------------------
        public LineInputDeviceCommandEntity? GetLineInputDeviceCommandById( Guid id )
        {
            var entity = (LineInputDeviceCommandEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetLineInputDeviceCommandById( id );
                if( dataObject != null )
                {
                    entity = (LineInputDeviceCommandEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<LineInputDeviceCommandEntity> GetLineInputDeviceCommandCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandCollection( );
            var result = ToEntityList<LineInputDeviceCommandEntity,LineInputDeviceCommandObject>( dataItems );
            return result;
        }
        public BindingList<LineInputDeviceCommandEntity> GetLineInputDeviceCommandCollectionByLineInputDevice( Guid lineInputDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandCollectionByLineInputDevice( lineInputDevice );
            var result = ToEntityList<LineInputDeviceCommandEntity,LineInputDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandEntity> GetLineInputDeviceCommandCollectionByLineInputDeviceAndTimestamp( Guid lineInputDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandCollectionByLineInputDeviceAndTimestamp( lineInputDevice, timestamp );
            var result = ToEntityList<LineInputDeviceCommandEntity,LineInputDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandEntity> GetLineInputDeviceCommandCollectionByLineInputDeviceAtTimestamp( Guid lineInputDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandCollectionByLineInputDeviceAtTimestamp( lineInputDevice, timestamp );
            var result = ToEntityList<LineInputDeviceCommandEntity,LineInputDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandEntity> GetLineInputDeviceCommandCollectionByLineInputDeviceFromTimestamp( Guid lineInputDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandCollectionByLineInputDeviceFromTimestamp( lineInputDevice, timestamp );
            var result = ToEntityList<LineInputDeviceCommandEntity,LineInputDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandEntity> GetLineInputDeviceCommandCollectionByLineInputDeviceUntilTimestamp( Guid lineInputDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandCollectionByLineInputDeviceUntilTimestamp( lineInputDevice, timestamp );
            var result = ToEntityList<LineInputDeviceCommandEntity,LineInputDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandEntity> GetLineInputDeviceCommandCollectionByLineInputDeviceOverTimestamp( Guid lineInputDevice, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandCollectionByLineInputDeviceOverTimestamp( lineInputDevice, fromTimestamp, untilTimestamp );
            var result = ToEntityList<LineInputDeviceCommandEntity,LineInputDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandEntity> GetLineInputDeviceCommandCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandCollectionByTimestamp( timestamp );
            var result = ToEntityList<LineInputDeviceCommandEntity,LineInputDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandEntity> GetLineInputDeviceCommandCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandCollectionAtTimestamp( timestamp );
            var result = ToEntityList<LineInputDeviceCommandEntity,LineInputDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandEntity> GetLineInputDeviceCommandCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandCollectionFromTimestamp( timestamp );
            var result = ToEntityList<LineInputDeviceCommandEntity,LineInputDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandEntity> GetLineInputDeviceCommandCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<LineInputDeviceCommandEntity,LineInputDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandEntity> GetLineInputDeviceCommandCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<LineInputDeviceCommandEntity,LineInputDeviceCommandObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandEntity> GetLineInputDeviceCommandCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandCollectionByReply( reply );
            var result = ToEntityList<LineInputDeviceCommandEntity,LineInputDeviceCommandObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // LineInputDeviceCommandReply queries
        // ---------------------------------------------------------------------
        public LineInputDeviceCommandReplyEntity? GetLineInputDeviceCommandReplyById( Guid id )
        {
            var entity = (LineInputDeviceCommandReplyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetLineInputDeviceCommandReplyById( id );
                if( dataObject != null )
                {
                    entity = (LineInputDeviceCommandReplyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<LineInputDeviceCommandReplyEntity> GetLineInputDeviceCommandReplyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandReplyCollection( );
            var result = ToEntityList<LineInputDeviceCommandReplyEntity,LineInputDeviceCommandReplyObject>( dataItems );
            return result;
        }
        public BindingList<LineInputDeviceCommandReplyEntity> GetLineInputDeviceCommandReplyCollectionByLineInputDevice( Guid lineInputDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandReplyCollectionByLineInputDevice( lineInputDevice );
            var result = ToEntityList<LineInputDeviceCommandReplyEntity,LineInputDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandReplyEntity> GetLineInputDeviceCommandReplyCollectionByLineInputDeviceAndTimestamp( Guid lineInputDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandReplyCollectionByLineInputDeviceAndTimestamp( lineInputDevice, timestamp );
            var result = ToEntityList<LineInputDeviceCommandReplyEntity,LineInputDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandReplyEntity> GetLineInputDeviceCommandReplyCollectionByLineInputDeviceAtTimestamp( Guid lineInputDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandReplyCollectionByLineInputDeviceAtTimestamp( lineInputDevice, timestamp );
            var result = ToEntityList<LineInputDeviceCommandReplyEntity,LineInputDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandReplyEntity> GetLineInputDeviceCommandReplyCollectionByLineInputDeviceFromTimestamp( Guid lineInputDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandReplyCollectionByLineInputDeviceFromTimestamp( lineInputDevice, timestamp );
            var result = ToEntityList<LineInputDeviceCommandReplyEntity,LineInputDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandReplyEntity> GetLineInputDeviceCommandReplyCollectionByLineInputDeviceUntilTimestamp( Guid lineInputDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandReplyCollectionByLineInputDeviceUntilTimestamp( lineInputDevice, timestamp );
            var result = ToEntityList<LineInputDeviceCommandReplyEntity,LineInputDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandReplyEntity> GetLineInputDeviceCommandReplyCollectionByLineInputDeviceOverTimestamp( Guid lineInputDevice, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandReplyCollectionByLineInputDeviceOverTimestamp( lineInputDevice, fromTimestamp, untilTimestamp );
            var result = ToEntityList<LineInputDeviceCommandReplyEntity,LineInputDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandReplyEntity> GetLineInputDeviceCommandReplyCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandReplyCollectionByTimestamp( timestamp );
            var result = ToEntityList<LineInputDeviceCommandReplyEntity,LineInputDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandReplyEntity> GetLineInputDeviceCommandReplyCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandReplyCollectionAtTimestamp( timestamp );
            var result = ToEntityList<LineInputDeviceCommandReplyEntity,LineInputDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandReplyEntity> GetLineInputDeviceCommandReplyCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandReplyCollectionFromTimestamp( timestamp );
            var result = ToEntityList<LineInputDeviceCommandReplyEntity,LineInputDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandReplyEntity> GetLineInputDeviceCommandReplyCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandReplyCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<LineInputDeviceCommandReplyEntity,LineInputDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceCommandReplyEntity> GetLineInputDeviceCommandReplyCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceCommandReplyCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<LineInputDeviceCommandReplyEntity,LineInputDeviceCommandReplyObject>( dataItems );
            return result;
        }

        public LineInputDeviceCommandReplyEntity? GetLineInputDeviceCommandReplyByCommand( Guid? command )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetLineInputDeviceCommandReplyByCommand( command );
            if( dataObject != null )
            {
                var result = (LineInputDeviceCommandReplyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // LineInputDeviceConfiguration queries
        // ---------------------------------------------------------------------
        public LineInputDeviceConfigurationEntity? GetLineInputDeviceConfigurationById( Guid id )
        {
            var entity = (LineInputDeviceConfigurationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetLineInputDeviceConfigurationById( id );
                if( dataObject != null )
                {
                    entity = (LineInputDeviceConfigurationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<LineInputDeviceConfigurationEntity> GetLineInputDeviceConfigurationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceConfigurationCollection( );
            var result = ToEntityList<LineInputDeviceConfigurationEntity,LineInputDeviceConfigurationObject>( dataItems );
            return result;
        }
        public BindingList<LineInputDeviceConfigurationEntity> GetLineInputDeviceConfigurationCollectionByLineInputDevice( Guid lineInputDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceConfigurationCollectionByLineInputDevice( lineInputDevice );
            var result = ToEntityList<LineInputDeviceConfigurationEntity,LineInputDeviceConfigurationObject>( dataItems );
            return result;
        }

        public LineInputDeviceConfigurationEntity? GetLineInputDeviceConfigurationByLineInputDeviceAndTimestamp( Guid lineInputDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetLineInputDeviceConfigurationByLineInputDeviceAndTimestamp( lineInputDevice, timestamp );
            if( dataObject != null )
            {
                var result = (LineInputDeviceConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public LineInputDeviceConfigurationEntity? GetLineInputDeviceConfigurationByLineInputDeviceAtTimestamp( Guid lineInputDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetLineInputDeviceConfigurationByLineInputDeviceAtTimestamp( lineInputDevice, timestamp );
            if( dataObject != null )
            {
                var result = (LineInputDeviceConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<LineInputDeviceConfigurationEntity> GetLineInputDeviceConfigurationByLineInputDeviceFromTimestamp( Guid lineInputDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceConfigurationByLineInputDeviceFromTimestamp( lineInputDevice, timestamp );
            var result = ToEntityList<LineInputDeviceConfigurationEntity,LineInputDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceConfigurationEntity> GetLineInputDeviceConfigurationByLineInputDeviceUntilTimestamp( Guid lineInputDevice, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceConfigurationByLineInputDeviceUntilTimestamp( lineInputDevice, timestamp );
            var result = ToEntityList<LineInputDeviceConfigurationEntity,LineInputDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceConfigurationEntity> GetLineInputDeviceConfigurationByLineInputDeviceOverTimestamp( Guid lineInputDevice, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceConfigurationByLineInputDeviceOverTimestamp( lineInputDevice, fromTimestamp, untilTimestamp );
            var result = ToEntityList<LineInputDeviceConfigurationEntity,LineInputDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceConfigurationEntity> GetLineInputDeviceConfigurationCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceConfigurationCollectionByTimestamp( timestamp );
            var result = ToEntityList<LineInputDeviceConfigurationEntity,LineInputDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceConfigurationEntity> GetLineInputDeviceConfigurationCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceConfigurationCollectionAtTimestamp( timestamp );
            var result = ToEntityList<LineInputDeviceConfigurationEntity,LineInputDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceConfigurationEntity> GetLineInputDeviceConfigurationCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceConfigurationCollectionFromTimestamp( timestamp );
            var result = ToEntityList<LineInputDeviceConfigurationEntity,LineInputDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceConfigurationEntity> GetLineInputDeviceConfigurationCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceConfigurationCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<LineInputDeviceConfigurationEntity,LineInputDeviceConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LineInputDeviceConfigurationEntity> GetLineInputDeviceConfigurationCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputDeviceConfigurationCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<LineInputDeviceConfigurationEntity,LineInputDeviceConfigurationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // LineInputMessageRouting queries
        // ---------------------------------------------------------------------
        public LineInputMessageRoutingEntity? GetLineInputMessageRoutingById( Guid id )
        {
            var entity = (LineInputMessageRoutingEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetLineInputMessageRoutingById( id );
                if( dataObject != null )
                {
                    entity = (LineInputMessageRoutingEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<LineInputMessageRoutingEntity> GetLineInputMessageRoutingCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputMessageRoutingCollection( );
            var result = ToEntityList<LineInputMessageRoutingEntity,LineInputMessageRoutingObject>( dataItems );
            return result;
        }
        public BindingList<LineInputMessageRoutingEntity> GetLineInputMessageRoutingCollectionByLineInputDevice( Guid lineInputDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputMessageRoutingCollectionByLineInputDevice( lineInputDevice );
            var result = ToEntityList<LineInputMessageRoutingEntity,LineInputMessageRoutingObject>( dataItems );
            return result;
        }

        public LineInputMessageRoutingEntity? GetLineInputMessageRoutingByLineInputDeviceAndType( Guid lineInputDevice, string type )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetLineInputMessageRoutingByLineInputDeviceAndType( lineInputDevice, type );
            if( dataObject != null )
            {
                var result = (LineInputMessageRoutingEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // LineInputMessageRoutingDestination queries
        // ---------------------------------------------------------------------
        public LineInputMessageRoutingDestinationEntity? GetLineInputMessageRoutingDestinationById( Guid id )
        {
            var entity = (LineInputMessageRoutingDestinationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetLineInputMessageRoutingDestinationById( id );
                if( dataObject != null )
                {
                    entity = (LineInputMessageRoutingDestinationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<LineInputMessageRoutingDestinationEntity> GetLineInputMessageRoutingDestinationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputMessageRoutingDestinationCollection( );
            var result = ToEntityList<LineInputMessageRoutingDestinationEntity,LineInputMessageRoutingDestinationObject>( dataItems );
            return result;
        }
        public BindingList<LineInputMessageRoutingDestinationEntity> GetLineInputMessageRoutingDestinationCollectionByRouting( Guid routing )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputMessageRoutingDestinationCollectionByRouting( routing );
            var result = ToEntityList<LineInputMessageRoutingDestinationEntity,LineInputMessageRoutingDestinationObject>( dataItems );
            return result;
        }

        public LineInputMessageRoutingDestinationEntity? GetLineInputMessageRoutingDestinationByRoutingAndListener( Guid routing, Guid? listener )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetLineInputMessageRoutingDestinationByRoutingAndListener( routing, listener );
            if( dataObject != null )
            {
                var result = (LineInputMessageRoutingDestinationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<LineInputMessageRoutingDestinationEntity> GetLineInputMessageRoutingDestinationCollectionByListener( Guid? listener )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputMessageRoutingDestinationCollectionByListener( listener );
            var result = ToEntityList<LineInputMessageRoutingDestinationEntity,LineInputMessageRoutingDestinationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // LineInputWhiteListEntry queries
        // ---------------------------------------------------------------------
        public LineInputWhiteListEntryEntity? GetLineInputWhiteListEntryById( Guid id )
        {
            var entity = (LineInputWhiteListEntryEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetLineInputWhiteListEntryById( id );
                if( dataObject != null )
                {
                    entity = (LineInputWhiteListEntryEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<LineInputWhiteListEntryEntity> GetLineInputWhiteListEntryCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputWhiteListEntryCollection( );
            var result = ToEntityList<LineInputWhiteListEntryEntity,LineInputWhiteListEntryObject>( dataItems );
            return result;
        }
        public BindingList<LineInputWhiteListEntryEntity> GetLineInputWhiteListEntryCollectionByLineInputDevice( Guid lineInputDevice )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputWhiteListEntryCollectionByLineInputDevice( lineInputDevice );
            var result = ToEntityList<LineInputWhiteListEntryEntity,LineInputWhiteListEntryObject>( dataItems );
            return result;
        }

        public BindingList<LineInputWhiteListEntryEntity> GetLineInputWhiteListEntryCollectionByLineInputDeviceAndHostName( Guid lineInputDevice, string hostName )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputWhiteListEntryCollectionByLineInputDeviceAndHostName( lineInputDevice, hostName );
            var result = ToEntityList<LineInputWhiteListEntryEntity,LineInputWhiteListEntryObject>( dataItems );
            return result;
        }

        public LineInputWhiteListEntryEntity? GetLineInputWhiteListEntryByLineInputDeviceHostNameAndPort( Guid lineInputDevice, string hostName, int port )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetLineInputWhiteListEntryByLineInputDeviceHostNameAndPort( lineInputDevice, hostName, port );
            if( dataObject != null )
            {
                var result = (LineInputWhiteListEntryEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<LineInputWhiteListEntryEntity> GetLineInputWhiteListEntryByLineInputDeviceHostNameFromPort( Guid lineInputDevice, string hostName, int port )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputWhiteListEntryByLineInputDeviceHostNameFromPort( lineInputDevice, hostName, port );
            var result = ToEntityList<LineInputWhiteListEntryEntity,LineInputWhiteListEntryObject>( dataItems );
            return result;
        }

        public BindingList<LineInputWhiteListEntryEntity> GetLineInputWhiteListEntryByLineInputDeviceHostNameUntilPort( Guid lineInputDevice, string hostName, int port )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputWhiteListEntryByLineInputDeviceHostNameUntilPort( lineInputDevice, hostName, port );
            var result = ToEntityList<LineInputWhiteListEntryEntity,LineInputWhiteListEntryObject>( dataItems );
            return result;
        }

        public BindingList<LineInputWhiteListEntryEntity> GetLineInputWhiteListEntryByLineInputDeviceHostNameOverPort( Guid lineInputDevice, string hostName, int fromPort, int untilPort )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLineInputWhiteListEntryByLineInputDeviceHostNameOverPort( lineInputDevice, hostName, fromPort, untilPort );
            var result = ToEntityList<LineInputWhiteListEntryEntity,LineInputWhiteListEntryObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // LogApplication queries
        // ---------------------------------------------------------------------
        public LogApplicationEntity? GetLogApplicationById( Guid id )
        {
            var entity = (LogApplicationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetLogApplicationById( id );
                if( dataObject != null )
                {
                    entity = (LogApplicationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<LogApplicationEntity> GetLogApplicationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogApplicationCollection( );
            var result = ToEntityList<LogApplicationEntity,LogApplicationObject>( dataItems );
            return result;
        }
        public LogApplicationEntity? GetLogApplicationByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetLogApplicationByName( name );
            if( dataObject != null )
            {
                var result = (LogApplicationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // LogApplicationConfiguration queries
        // ---------------------------------------------------------------------
        public LogApplicationConfigurationEntity? GetLogApplicationConfigurationById( Guid id )
        {
            var entity = (LogApplicationConfigurationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetLogApplicationConfigurationById( id );
                if( dataObject != null )
                {
                    entity = (LogApplicationConfigurationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<LogApplicationConfigurationEntity> GetLogApplicationConfigurationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogApplicationConfigurationCollection( );
            var result = ToEntityList<LogApplicationConfigurationEntity,LogApplicationConfigurationObject>( dataItems );
            return result;
        }
        public BindingList<LogApplicationConfigurationEntity> GetLogApplicationConfigurationCollectionByApplication( Guid application )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogApplicationConfigurationCollectionByApplication( application );
            var result = ToEntityList<LogApplicationConfigurationEntity,LogApplicationConfigurationObject>( dataItems );
            return result;
        }

        public LogApplicationConfigurationEntity? GetLogApplicationConfigurationByApplicationAndTimestamp( Guid application, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetLogApplicationConfigurationByApplicationAndTimestamp( application, timestamp );
            if( dataObject != null )
            {
                var result = (LogApplicationConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public LogApplicationConfigurationEntity? GetLogApplicationConfigurationByApplicationAtTimestamp( Guid application, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetLogApplicationConfigurationByApplicationAtTimestamp( application, timestamp );
            if( dataObject != null )
            {
                var result = (LogApplicationConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<LogApplicationConfigurationEntity> GetLogApplicationConfigurationByApplicationFromTimestamp( Guid application, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogApplicationConfigurationByApplicationFromTimestamp( application, timestamp );
            var result = ToEntityList<LogApplicationConfigurationEntity,LogApplicationConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LogApplicationConfigurationEntity> GetLogApplicationConfigurationByApplicationUntilTimestamp( Guid application, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogApplicationConfigurationByApplicationUntilTimestamp( application, timestamp );
            var result = ToEntityList<LogApplicationConfigurationEntity,LogApplicationConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LogApplicationConfigurationEntity> GetLogApplicationConfigurationByApplicationOverTimestamp( Guid application, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogApplicationConfigurationByApplicationOverTimestamp( application, fromTimestamp, untilTimestamp );
            var result = ToEntityList<LogApplicationConfigurationEntity,LogApplicationConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LogApplicationConfigurationEntity> GetLogApplicationConfigurationCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogApplicationConfigurationCollectionByTimestamp( timestamp );
            var result = ToEntityList<LogApplicationConfigurationEntity,LogApplicationConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LogApplicationConfigurationEntity> GetLogApplicationConfigurationCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogApplicationConfigurationCollectionAtTimestamp( timestamp );
            var result = ToEntityList<LogApplicationConfigurationEntity,LogApplicationConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LogApplicationConfigurationEntity> GetLogApplicationConfigurationCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogApplicationConfigurationCollectionFromTimestamp( timestamp );
            var result = ToEntityList<LogApplicationConfigurationEntity,LogApplicationConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LogApplicationConfigurationEntity> GetLogApplicationConfigurationCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogApplicationConfigurationCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<LogApplicationConfigurationEntity,LogApplicationConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LogApplicationConfigurationEntity> GetLogApplicationConfigurationCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogApplicationConfigurationCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<LogApplicationConfigurationEntity,LogApplicationConfigurationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // LogHost queries
        // ---------------------------------------------------------------------
        public LogHostEntity? GetLogHostById( Guid id )
        {
            var entity = (LogHostEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetLogHostById( id );
                if( dataObject != null )
                {
                    entity = (LogHostEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<LogHostEntity> GetLogHostCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogHostCollection( );
            var result = ToEntityList<LogHostEntity,LogHostObject>( dataItems );
            return result;
        }
        public LogHostEntity? GetLogHostByComputerName( string computerName )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetLogHostByComputerName( computerName );
            if( dataObject != null )
            {
                var result = (LogHostEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // LogHostConfiguration queries
        // ---------------------------------------------------------------------
        public LogHostConfigurationEntity? GetLogHostConfigurationById( Guid id )
        {
            var entity = (LogHostConfigurationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetLogHostConfigurationById( id );
                if( dataObject != null )
                {
                    entity = (LogHostConfigurationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<LogHostConfigurationEntity> GetLogHostConfigurationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogHostConfigurationCollection( );
            var result = ToEntityList<LogHostConfigurationEntity,LogHostConfigurationObject>( dataItems );
            return result;
        }
        public BindingList<LogHostConfigurationEntity> GetLogHostConfigurationCollectionByHost( Guid host )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogHostConfigurationCollectionByHost( host );
            var result = ToEntityList<LogHostConfigurationEntity,LogHostConfigurationObject>( dataItems );
            return result;
        }

        public LogHostConfigurationEntity? GetLogHostConfigurationByHostAndTimestamp( Guid host, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetLogHostConfigurationByHostAndTimestamp( host, timestamp );
            if( dataObject != null )
            {
                var result = (LogHostConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public LogHostConfigurationEntity? GetLogHostConfigurationByHostAtTimestamp( Guid host, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetLogHostConfigurationByHostAtTimestamp( host, timestamp );
            if( dataObject != null )
            {
                var result = (LogHostConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<LogHostConfigurationEntity> GetLogHostConfigurationByHostFromTimestamp( Guid host, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogHostConfigurationByHostFromTimestamp( host, timestamp );
            var result = ToEntityList<LogHostConfigurationEntity,LogHostConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LogHostConfigurationEntity> GetLogHostConfigurationByHostUntilTimestamp( Guid host, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogHostConfigurationByHostUntilTimestamp( host, timestamp );
            var result = ToEntityList<LogHostConfigurationEntity,LogHostConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LogHostConfigurationEntity> GetLogHostConfigurationByHostOverTimestamp( Guid host, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogHostConfigurationByHostOverTimestamp( host, fromTimestamp, untilTimestamp );
            var result = ToEntityList<LogHostConfigurationEntity,LogHostConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LogHostConfigurationEntity> GetLogHostConfigurationCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogHostConfigurationCollectionByTimestamp( timestamp );
            var result = ToEntityList<LogHostConfigurationEntity,LogHostConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LogHostConfigurationEntity> GetLogHostConfigurationCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogHostConfigurationCollectionAtTimestamp( timestamp );
            var result = ToEntityList<LogHostConfigurationEntity,LogHostConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LogHostConfigurationEntity> GetLogHostConfigurationCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogHostConfigurationCollectionFromTimestamp( timestamp );
            var result = ToEntityList<LogHostConfigurationEntity,LogHostConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LogHostConfigurationEntity> GetLogHostConfigurationCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogHostConfigurationCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<LogHostConfigurationEntity,LogHostConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<LogHostConfigurationEntity> GetLogHostConfigurationCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogHostConfigurationCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<LogHostConfigurationEntity,LogHostConfigurationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // LogLocation queries
        // ---------------------------------------------------------------------
        public LogLocationEntity? GetLogLocationById( Guid id )
        {
            var entity = (LogLocationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetLogLocationById( id );
                if( dataObject != null )
                {
                    entity = (LogLocationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<LogLocationEntity> GetLogLocationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogLocationCollection( );
            var result = ToEntityList<LogLocationEntity,LogLocationObject>( dataItems );
            return result;
        }
        public BindingList<LogLocationEntity> GetLogLocationCollectionByFileName( string fileName )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogLocationCollectionByFileName( fileName );
            var result = ToEntityList<LogLocationEntity,LogLocationObject>( dataItems );
            return result;
        }

        public LogLocationEntity? GetLogLocationByFileNameAndLineNumber( string fileName, int lineNumber )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetLogLocationByFileNameAndLineNumber( fileName, lineNumber );
            if( dataObject != null )
            {
                var result = (LogLocationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<LogLocationEntity> GetLogLocationByFileNameFromLineNumber( string fileName, int lineNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogLocationByFileNameFromLineNumber( fileName, lineNumber );
            var result = ToEntityList<LogLocationEntity,LogLocationObject>( dataItems );
            return result;
        }

        public BindingList<LogLocationEntity> GetLogLocationByFileNameUntilLineNumber( string fileName, int lineNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogLocationByFileNameUntilLineNumber( fileName, lineNumber );
            var result = ToEntityList<LogLocationEntity,LogLocationObject>( dataItems );
            return result;
        }

        public BindingList<LogLocationEntity> GetLogLocationByFileNameOverLineNumber( string fileName, int fromLineNumber, int untilLineNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogLocationByFileNameOverLineNumber( fileName, fromLineNumber, untilLineNumber );
            var result = ToEntityList<LogLocationEntity,LogLocationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // LogProcess queries
        // ---------------------------------------------------------------------
        public LogProcessEntity? GetLogProcessById( Guid id )
        {
            var entity = (LogProcessEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetLogProcessById( id );
                if( dataObject != null )
                {
                    entity = (LogProcessEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<LogProcessEntity> GetLogProcessCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollection( );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }
        public BindingList<LogProcessEntity> GetLogProcessCollectionByApplication( Guid application )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollectionByApplication( application );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }

        public BindingList<LogProcessEntity> GetLogProcessCollectionByApplicationAndStarted( Guid application, DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollectionByApplicationAndStarted( application, started );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }

        public BindingList<LogProcessEntity> GetLogProcessCollectionByApplicationAtStarted( Guid application, DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollectionByApplicationAtStarted( application, started );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }

        public BindingList<LogProcessEntity> GetLogProcessCollectionByApplicationFromStarted( Guid application, DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollectionByApplicationFromStarted( application, started );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }

        public BindingList<LogProcessEntity> GetLogProcessCollectionByApplicationUntilStarted( Guid application, DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollectionByApplicationUntilStarted( application, started );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }

        public BindingList<LogProcessEntity> GetLogProcessCollectionByApplicationOverStarted( Guid application, DateTime fromStarted, DateTime untilStarted )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollectionByApplicationOverStarted( application, fromStarted, untilStarted );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }

        public BindingList<LogProcessEntity> GetLogProcessCollectionByHost( Guid? host )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollectionByHost( host );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }

        public BindingList<LogProcessEntity> GetLogProcessCollectionByHostAndStarted( Guid? host, DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollectionByHostAndStarted( host, started );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }

        public BindingList<LogProcessEntity> GetLogProcessCollectionByHostAtStarted( Guid? host, DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollectionByHostAtStarted( host, started );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }

        public BindingList<LogProcessEntity> GetLogProcessCollectionByHostFromStarted( Guid? host, DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollectionByHostFromStarted( host, started );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }

        public BindingList<LogProcessEntity> GetLogProcessCollectionByHostUntilStarted( Guid? host, DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollectionByHostUntilStarted( host, started );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }

        public BindingList<LogProcessEntity> GetLogProcessCollectionByHostOverStarted( Guid host, DateTime fromStarted, DateTime untilStarted )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollectionByHostOverStarted( host, fromStarted, untilStarted );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }

        public BindingList<LogProcessEntity> GetLogProcessCollectionByStarted( DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollectionByStarted( started );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }

        public BindingList<LogProcessEntity> GetLogProcessCollectionAtStarted( DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollectionAtStarted( started );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }

        public BindingList<LogProcessEntity> GetLogProcessCollectionFromStarted( DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollectionFromStarted( started );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }

        public BindingList<LogProcessEntity> GetLogProcessCollectionUntilStarted( DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollectionUntilStarted( started );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }

        public BindingList<LogProcessEntity> GetLogProcessCollectionOverStarted( DateTime fromStarted, DateTime untilStarted )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogProcessCollectionOverStarted( fromStarted, untilStarted );
            var result = ToEntityList<LogProcessEntity,LogProcessObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // LogRecord queries
        // ---------------------------------------------------------------------
        public LogRecordEntity? GetLogRecordById( Guid id )
        {
            var entity = (LogRecordEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetLogRecordById( id );
                if( dataObject != null )
                {
                    entity = (LogRecordEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<LogRecordEntity> GetLogRecordCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogRecordCollection( );
            var result = ToEntityList<LogRecordEntity,LogRecordObject>( dataItems );
            return result;
        }
        public BindingList<LogRecordEntity> GetLogRecordCollectionByThread( Guid thread )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogRecordCollectionByThread( thread );
            var result = ToEntityList<LogRecordEntity,LogRecordObject>( dataItems );
            return result;
        }

        public BindingList<LogRecordEntity> GetLogRecordCollectionByThreadAndTimestamp( Guid thread, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogRecordCollectionByThreadAndTimestamp( thread, timestamp );
            var result = ToEntityList<LogRecordEntity,LogRecordObject>( dataItems );
            return result;
        }

        public BindingList<LogRecordEntity> GetLogRecordCollectionByThreadAtTimestamp( Guid thread, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogRecordCollectionByThreadAtTimestamp( thread, timestamp );
            var result = ToEntityList<LogRecordEntity,LogRecordObject>( dataItems );
            return result;
        }

        public BindingList<LogRecordEntity> GetLogRecordCollectionByThreadFromTimestamp( Guid thread, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogRecordCollectionByThreadFromTimestamp( thread, timestamp );
            var result = ToEntityList<LogRecordEntity,LogRecordObject>( dataItems );
            return result;
        }

        public BindingList<LogRecordEntity> GetLogRecordCollectionByThreadUntilTimestamp( Guid thread, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogRecordCollectionByThreadUntilTimestamp( thread, timestamp );
            var result = ToEntityList<LogRecordEntity,LogRecordObject>( dataItems );
            return result;
        }

        public BindingList<LogRecordEntity> GetLogRecordCollectionByThreadOverTimestamp( Guid thread, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogRecordCollectionByThreadOverTimestamp( thread, fromTimestamp, untilTimestamp );
            var result = ToEntityList<LogRecordEntity,LogRecordObject>( dataItems );
            return result;
        }

        public BindingList<LogRecordEntity> GetLogRecordCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogRecordCollectionByTimestamp( timestamp );
            var result = ToEntityList<LogRecordEntity,LogRecordObject>( dataItems );
            return result;
        }

        public BindingList<LogRecordEntity> GetLogRecordCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogRecordCollectionAtTimestamp( timestamp );
            var result = ToEntityList<LogRecordEntity,LogRecordObject>( dataItems );
            return result;
        }

        public BindingList<LogRecordEntity> GetLogRecordCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogRecordCollectionFromTimestamp( timestamp );
            var result = ToEntityList<LogRecordEntity,LogRecordObject>( dataItems );
            return result;
        }

        public BindingList<LogRecordEntity> GetLogRecordCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogRecordCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<LogRecordEntity,LogRecordObject>( dataItems );
            return result;
        }

        public BindingList<LogRecordEntity> GetLogRecordCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogRecordCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<LogRecordEntity,LogRecordObject>( dataItems );
            return result;
        }

        public BindingList<LogRecordEntity> GetLogRecordCollectionByLocation( Guid location )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogRecordCollectionByLocation( location );
            var result = ToEntityList<LogRecordEntity,LogRecordObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // LogThread queries
        // ---------------------------------------------------------------------
        public LogThreadEntity? GetLogThreadById( Guid id )
        {
            var entity = (LogThreadEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetLogThreadById( id );
                if( dataObject != null )
                {
                    entity = (LogThreadEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<LogThreadEntity> GetLogThreadCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogThreadCollection( );
            var result = ToEntityList<LogThreadEntity,LogThreadObject>( dataItems );
            return result;
        }
        public BindingList<LogThreadEntity> GetLogThreadCollectionByProcess( Guid process )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogThreadCollectionByProcess( process );
            var result = ToEntityList<LogThreadEntity,LogThreadObject>( dataItems );
            return result;
        }

        public BindingList<LogThreadEntity> GetLogThreadCollectionByProcessAndStarted( Guid process, DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogThreadCollectionByProcessAndStarted( process, started );
            var result = ToEntityList<LogThreadEntity,LogThreadObject>( dataItems );
            return result;
        }

        public BindingList<LogThreadEntity> GetLogThreadCollectionByProcessAtStarted( Guid process, DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogThreadCollectionByProcessAtStarted( process, started );
            var result = ToEntityList<LogThreadEntity,LogThreadObject>( dataItems );
            return result;
        }

        public BindingList<LogThreadEntity> GetLogThreadCollectionByProcessFromStarted( Guid process, DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogThreadCollectionByProcessFromStarted( process, started );
            var result = ToEntityList<LogThreadEntity,LogThreadObject>( dataItems );
            return result;
        }

        public BindingList<LogThreadEntity> GetLogThreadCollectionByProcessUntilStarted( Guid process, DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogThreadCollectionByProcessUntilStarted( process, started );
            var result = ToEntityList<LogThreadEntity,LogThreadObject>( dataItems );
            return result;
        }

        public BindingList<LogThreadEntity> GetLogThreadCollectionByProcessOverStarted( Guid process, DateTime fromStarted, DateTime untilStarted )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogThreadCollectionByProcessOverStarted( process, fromStarted, untilStarted );
            var result = ToEntityList<LogThreadEntity,LogThreadObject>( dataItems );
            return result;
        }

        public BindingList<LogThreadEntity> GetLogThreadCollectionByStarted( DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogThreadCollectionByStarted( started );
            var result = ToEntityList<LogThreadEntity,LogThreadObject>( dataItems );
            return result;
        }

        public BindingList<LogThreadEntity> GetLogThreadCollectionAtStarted( DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogThreadCollectionAtStarted( started );
            var result = ToEntityList<LogThreadEntity,LogThreadObject>( dataItems );
            return result;
        }

        public BindingList<LogThreadEntity> GetLogThreadCollectionFromStarted( DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogThreadCollectionFromStarted( started );
            var result = ToEntityList<LogThreadEntity,LogThreadObject>( dataItems );
            return result;
        }

        public BindingList<LogThreadEntity> GetLogThreadCollectionUntilStarted( DateTime started )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogThreadCollectionUntilStarted( started );
            var result = ToEntityList<LogThreadEntity,LogThreadObject>( dataItems );
            return result;
        }

        public BindingList<LogThreadEntity> GetLogThreadCollectionOverStarted( DateTime fromStarted, DateTime untilStarted )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogThreadCollectionOverStarted( fromStarted, untilStarted );
            var result = ToEntityList<LogThreadEntity,LogThreadObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // LogTraceEntry queries
        // ---------------------------------------------------------------------
        public LogTraceEntryEntity? GetLogTraceEntryById( Guid id )
        {
            var entity = (LogTraceEntryEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetLogTraceEntryById( id );
                if( dataObject != null )
                {
                    entity = (LogTraceEntryEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollection( );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }
        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollectionByThread( Guid thread )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollectionByThread( thread );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }

        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollectionByThreadAndEntered( Guid thread, DateTime entered )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollectionByThreadAndEntered( thread, entered );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }

        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollectionByThreadAtEntered( Guid thread, DateTime entered )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollectionByThreadAtEntered( thread, entered );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }

        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollectionByThreadFromEntered( Guid thread, DateTime entered )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollectionByThreadFromEntered( thread, entered );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }

        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollectionByThreadUntilEntered( Guid thread, DateTime entered )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollectionByThreadUntilEntered( thread, entered );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }

        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollectionByThreadOverEntered( Guid thread, DateTime fromEntered, DateTime untilEntered )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollectionByThreadOverEntered( thread, fromEntered, untilEntered );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }

        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollectionByLocation( Guid location )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollectionByLocation( location );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }

        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollectionByLocationAndEntered( Guid location, DateTime entered )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollectionByLocationAndEntered( location, entered );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }

        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollectionByLocationAtEntered( Guid location, DateTime entered )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollectionByLocationAtEntered( location, entered );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }

        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollectionByLocationFromEntered( Guid location, DateTime entered )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollectionByLocationFromEntered( location, entered );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }

        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollectionByLocationUntilEntered( Guid location, DateTime entered )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollectionByLocationUntilEntered( location, entered );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }

        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollectionByLocationOverEntered( Guid location, DateTime fromEntered, DateTime untilEntered )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollectionByLocationOverEntered( location, fromEntered, untilEntered );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }

        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollectionByEntered( DateTime entered )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollectionByEntered( entered );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }

        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollectionAtEntered( DateTime entered )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollectionAtEntered( entered );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }

        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollectionFromEntered( DateTime entered )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollectionFromEntered( entered );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }

        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollectionUntilEntered( DateTime entered )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollectionUntilEntered( entered );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }

        public BindingList<LogTraceEntryEntity> GetLogTraceEntryCollectionOverEntered( DateTime fromEntered, DateTime untilEntered )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetLogTraceEntryCollectionOverEntered( fromEntered, untilEntered );
            var result = ToEntityList<LogTraceEntryEntity,LogTraceEntryObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // MapElement queries
        // ---------------------------------------------------------------------
        public MapElementEntity? GetMapElementById( Guid id )
        {
            var entity = (MapElementEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetMapElementById( id );
                if( dataObject != null )
                {
                    entity = (MapElementEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<MapElementEntity> GetMapElementCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMapElementCollection( );
            var result = ToEntityList<MapElementEntity,MapElementObject>( dataItems );
            return result;
        }
        public BindingList<MapElementEntity> GetMapElementCollectionByItem( Guid item )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMapElementCollectionByItem( item );
            var result = ToEntityList<MapElementEntity,MapElementObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // MapInfo queries
        // ---------------------------------------------------------------------
        public MapInfoEntity? GetMapInfoById( Guid id )
        {
            var entity = (MapInfoEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetMapInfoById( id );
                if( dataObject != null )
                {
                    entity = (MapInfoEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<MapInfoEntity> GetMapInfoCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMapInfoCollection( );
            var result = ToEntityList<MapInfoEntity,MapInfoObject>( dataItems );
            return result;
        }
        // ---------------------------------------------------------------------
        // MapServiceOptions queries
        // ---------------------------------------------------------------------
        public MapServiceOptionsEntity? GetMapServiceOptionsById( Guid id )
        {
            var entity = (MapServiceOptionsEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetMapServiceOptionsById( id );
                if( dataObject != null )
                {
                    entity = (MapServiceOptionsEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<MapServiceOptionsEntity> GetMapServiceOptionsCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMapServiceOptionsCollection( );
            var result = ToEntityList<MapServiceOptionsEntity,MapServiceOptionsObject>( dataItems );
            return result;
        }
        public MapServiceOptionsEntity? GetMapServiceOptionsByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetMapServiceOptionsByTimestamp( timestamp );
            if( dataObject != null )
            {
                var result = (MapServiceOptionsEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public MapServiceOptionsEntity? GetMapServiceOptionsAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetMapServiceOptionsAtTimestamp( timestamp );
            if( dataObject != null )
            {
                var result = (MapServiceOptionsEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<MapServiceOptionsEntity> GetMapServiceOptionsFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMapServiceOptionsFromTimestamp( timestamp );
            var result = ToEntityList<MapServiceOptionsEntity,MapServiceOptionsObject>( dataItems );
            return result;
        }

        public BindingList<MapServiceOptionsEntity> GetMapServiceOptionsUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMapServiceOptionsUntilTimestamp( timestamp );
            var result = ToEntityList<MapServiceOptionsEntity,MapServiceOptionsObject>( dataItems );
            return result;
        }

        public BindingList<MapServiceOptionsEntity> GetMapServiceOptionsOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMapServiceOptionsOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<MapServiceOptionsEntity,MapServiceOptionsObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // MaritimeIdentificationDigits queries
        // ---------------------------------------------------------------------
        public MaritimeIdentificationDigitsEntity? GetMaritimeIdentificationDigitsById( Guid id )
        {
            var entity = (MaritimeIdentificationDigitsEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetMaritimeIdentificationDigitsById( id );
                if( dataObject != null )
                {
                    entity = (MaritimeIdentificationDigitsEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<MaritimeIdentificationDigitsEntity> GetMaritimeIdentificationDigitsCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMaritimeIdentificationDigitsCollection( );
            var result = ToEntityList<MaritimeIdentificationDigitsEntity,MaritimeIdentificationDigitsObject>( dataItems );
            return result;
        }
        public MaritimeIdentificationDigitsEntity? GetMaritimeIdentificationDigitsByCode( int code )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetMaritimeIdentificationDigitsByCode( code );
            if( dataObject != null )
            {
                var result = (MaritimeIdentificationDigitsEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<MaritimeIdentificationDigitsEntity> GetMaritimeIdentificationDigitsFromCode( int code )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMaritimeIdentificationDigitsFromCode( code );
            var result = ToEntityList<MaritimeIdentificationDigitsEntity,MaritimeIdentificationDigitsObject>( dataItems );
            return result;
        }

        public BindingList<MaritimeIdentificationDigitsEntity> GetMaritimeIdentificationDigitsUntilCode( int code )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMaritimeIdentificationDigitsUntilCode( code );
            var result = ToEntityList<MaritimeIdentificationDigitsEntity,MaritimeIdentificationDigitsObject>( dataItems );
            return result;
        }

        public BindingList<MaritimeIdentificationDigitsEntity> GetMaritimeIdentificationDigitsOverCode( int fromCode, int untilCode )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMaritimeIdentificationDigitsOverCode( fromCode, untilCode );
            var result = ToEntityList<MaritimeIdentificationDigitsEntity,MaritimeIdentificationDigitsObject>( dataItems );
            return result;
        }

        public BindingList<MaritimeIdentificationDigitsEntity> GetMaritimeIdentificationDigitsCollectionByCountry( Guid country )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMaritimeIdentificationDigitsCollectionByCountry( country );
            var result = ToEntityList<MaritimeIdentificationDigitsEntity,MaritimeIdentificationDigitsObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // MediaProxySession queries
        // ---------------------------------------------------------------------
        public MediaProxySessionEntity? GetMediaProxySessionById( Guid id )
        {
            var entity = (MediaProxySessionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetMediaProxySessionById( id );
                if( dataObject != null )
                {
                    entity = (MediaProxySessionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<MediaProxySessionEntity> GetMediaProxySessionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaProxySessionCollection( );
            var result = ToEntityList<MediaProxySessionEntity,MediaProxySessionObject>( dataItems );
            return result;
        }
        public BindingList<MediaProxySessionEntity> GetMediaProxySessionCollectionByService( Guid service )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaProxySessionCollectionByService( service );
            var result = ToEntityList<MediaProxySessionEntity,MediaProxySessionObject>( dataItems );
            return result;
        }

        public MediaProxySessionEntity? GetMediaProxySessionByServiceAndName( Guid service, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetMediaProxySessionByServiceAndName( service, name );
            if( dataObject != null )
            {
                var result = (MediaProxySessionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // MediaProxySessionFile queries
        // ---------------------------------------------------------------------
        public MediaProxySessionFileEntity? GetMediaProxySessionFileById( Guid id )
        {
            var entity = (MediaProxySessionFileEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetMediaProxySessionFileById( id );
                if( dataObject != null )
                {
                    entity = (MediaProxySessionFileEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<MediaProxySessionFileEntity> GetMediaProxySessionFileCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaProxySessionFileCollection( );
            var result = ToEntityList<MediaProxySessionFileEntity,MediaProxySessionFileObject>( dataItems );
            return result;
        }
        public BindingList<MediaProxySessionFileEntity> GetMediaProxySessionFileCollectionByProxySession( Guid proxySession )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaProxySessionFileCollectionByProxySession( proxySession );
            var result = ToEntityList<MediaProxySessionFileEntity,MediaProxySessionFileObject>( dataItems );
            return result;
        }

        public MediaProxySessionFileEntity? GetMediaProxySessionFileByProxySessionAndTimestamp( Guid proxySession, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetMediaProxySessionFileByProxySessionAndTimestamp( proxySession, timestamp );
            if( dataObject != null )
            {
                var result = (MediaProxySessionFileEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public MediaProxySessionFileEntity? GetMediaProxySessionFileByProxySessionAtTimestamp( Guid proxySession, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetMediaProxySessionFileByProxySessionAtTimestamp( proxySession, timestamp );
            if( dataObject != null )
            {
                var result = (MediaProxySessionFileEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<MediaProxySessionFileEntity> GetMediaProxySessionFileByProxySessionFromTimestamp( Guid proxySession, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaProxySessionFileByProxySessionFromTimestamp( proxySession, timestamp );
            var result = ToEntityList<MediaProxySessionFileEntity,MediaProxySessionFileObject>( dataItems );
            return result;
        }

        public BindingList<MediaProxySessionFileEntity> GetMediaProxySessionFileByProxySessionUntilTimestamp( Guid proxySession, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaProxySessionFileByProxySessionUntilTimestamp( proxySession, timestamp );
            var result = ToEntityList<MediaProxySessionFileEntity,MediaProxySessionFileObject>( dataItems );
            return result;
        }

        public BindingList<MediaProxySessionFileEntity> GetMediaProxySessionFileByProxySessionOverTimestamp( Guid proxySession, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaProxySessionFileByProxySessionOverTimestamp( proxySession, fromTimestamp, untilTimestamp );
            var result = ToEntityList<MediaProxySessionFileEntity,MediaProxySessionFileObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // MediaProxySessionOptions queries
        // ---------------------------------------------------------------------
        public MediaProxySessionOptionsEntity? GetMediaProxySessionOptionsById( Guid id )
        {
            var entity = (MediaProxySessionOptionsEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetMediaProxySessionOptionsById( id );
                if( dataObject != null )
                {
                    entity = (MediaProxySessionOptionsEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<MediaProxySessionOptionsEntity> GetMediaProxySessionOptionsCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaProxySessionOptionsCollection( );
            var result = ToEntityList<MediaProxySessionOptionsEntity,MediaProxySessionOptionsObject>( dataItems );
            return result;
        }
        public BindingList<MediaProxySessionOptionsEntity> GetMediaProxySessionOptionsCollectionByProxySession( Guid proxySession )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaProxySessionOptionsCollectionByProxySession( proxySession );
            var result = ToEntityList<MediaProxySessionOptionsEntity,MediaProxySessionOptionsObject>( dataItems );
            return result;
        }

        public MediaProxySessionOptionsEntity? GetMediaProxySessionOptionsByProxySessionAndTimestamp( Guid proxySession, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetMediaProxySessionOptionsByProxySessionAndTimestamp( proxySession, timestamp );
            if( dataObject != null )
            {
                var result = (MediaProxySessionOptionsEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public MediaProxySessionOptionsEntity? GetMediaProxySessionOptionsByProxySessionAtTimestamp( Guid proxySession, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetMediaProxySessionOptionsByProxySessionAtTimestamp( proxySession, timestamp );
            if( dataObject != null )
            {
                var result = (MediaProxySessionOptionsEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<MediaProxySessionOptionsEntity> GetMediaProxySessionOptionsByProxySessionFromTimestamp( Guid proxySession, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaProxySessionOptionsByProxySessionFromTimestamp( proxySession, timestamp );
            var result = ToEntityList<MediaProxySessionOptionsEntity,MediaProxySessionOptionsObject>( dataItems );
            return result;
        }

        public BindingList<MediaProxySessionOptionsEntity> GetMediaProxySessionOptionsByProxySessionUntilTimestamp( Guid proxySession, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaProxySessionOptionsByProxySessionUntilTimestamp( proxySession, timestamp );
            var result = ToEntityList<MediaProxySessionOptionsEntity,MediaProxySessionOptionsObject>( dataItems );
            return result;
        }

        public BindingList<MediaProxySessionOptionsEntity> GetMediaProxySessionOptionsByProxySessionOverTimestamp( Guid proxySession, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaProxySessionOptionsByProxySessionOverTimestamp( proxySession, fromTimestamp, untilTimestamp );
            var result = ToEntityList<MediaProxySessionOptionsEntity,MediaProxySessionOptionsObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // MediaService queries
        // ---------------------------------------------------------------------
        public MediaServiceEntity? GetMediaServiceById( Guid id )
        {
            var entity = (MediaServiceEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetMediaServiceById( id );
                if( dataObject != null )
                {
                    entity = (MediaServiceEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<MediaServiceEntity> GetMediaServiceCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaServiceCollection( );
            var result = ToEntityList<MediaServiceEntity,MediaServiceObject>( dataItems );
            return result;
        }
        // ---------------------------------------------------------------------
        // MediaServiceOptions queries
        // ---------------------------------------------------------------------
        public MediaServiceOptionsEntity? GetMediaServiceOptionsById( Guid id )
        {
            var entity = (MediaServiceOptionsEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetMediaServiceOptionsById( id );
                if( dataObject != null )
                {
                    entity = (MediaServiceOptionsEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<MediaServiceOptionsEntity> GetMediaServiceOptionsCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaServiceOptionsCollection( );
            var result = ToEntityList<MediaServiceOptionsEntity,MediaServiceOptionsObject>( dataItems );
            return result;
        }
        public BindingList<MediaServiceOptionsEntity> GetMediaServiceOptionsCollectionByMediaService( Guid mediaService )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaServiceOptionsCollectionByMediaService( mediaService );
            var result = ToEntityList<MediaServiceOptionsEntity,MediaServiceOptionsObject>( dataItems );
            return result;
        }

        public MediaServiceOptionsEntity? GetMediaServiceOptionsByMediaServiceAndTimestamp( Guid mediaService, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetMediaServiceOptionsByMediaServiceAndTimestamp( mediaService, timestamp );
            if( dataObject != null )
            {
                var result = (MediaServiceOptionsEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public MediaServiceOptionsEntity? GetMediaServiceOptionsByMediaServiceAtTimestamp( Guid mediaService, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetMediaServiceOptionsByMediaServiceAtTimestamp( mediaService, timestamp );
            if( dataObject != null )
            {
                var result = (MediaServiceOptionsEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<MediaServiceOptionsEntity> GetMediaServiceOptionsByMediaServiceFromTimestamp( Guid mediaService, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaServiceOptionsByMediaServiceFromTimestamp( mediaService, timestamp );
            var result = ToEntityList<MediaServiceOptionsEntity,MediaServiceOptionsObject>( dataItems );
            return result;
        }

        public BindingList<MediaServiceOptionsEntity> GetMediaServiceOptionsByMediaServiceUntilTimestamp( Guid mediaService, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaServiceOptionsByMediaServiceUntilTimestamp( mediaService, timestamp );
            var result = ToEntityList<MediaServiceOptionsEntity,MediaServiceOptionsObject>( dataItems );
            return result;
        }

        public BindingList<MediaServiceOptionsEntity> GetMediaServiceOptionsByMediaServiceOverTimestamp( Guid mediaService, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaServiceOptionsByMediaServiceOverTimestamp( mediaService, fromTimestamp, untilTimestamp );
            var result = ToEntityList<MediaServiceOptionsEntity,MediaServiceOptionsObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // NamespaceElement queries
        // ---------------------------------------------------------------------
        public NamespaceElementEntity? GetNamespaceElementById( Guid id )
        {
            var entity = (NamespaceElementEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetNamespaceElementById( id );
                if( dataObject != null )
                {
                    entity = (NamespaceElementEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<NamespaceElementEntity> GetNamespaceElementCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetNamespaceElementCollection( );
            var result = ToEntityList<NamespaceElementEntity,NamespaceElementObject>( dataItems );
            return result;
        }
        public BindingList<NamespaceElementEntity> GetNamespaceElementCollectionByNamespace( Guid namespace__ )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetNamespaceElementCollectionByNamespace( namespace__ );
            var result = ToEntityList<NamespaceElementEntity,NamespaceElementObject>( dataItems );
            return result;
        }

        public NamespaceElementEntity? GetNamespaceElementByNamespaceAndName( Guid namespace__, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetNamespaceElementByNamespaceAndName( namespace__, name );
            if( dataObject != null )
            {
                var result = (NamespaceElementEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // ElementType queries
        // ---------------------------------------------------------------------
        public ElementTypeEntity? GetElementTypeById( Guid id )
        {
            var entity = (ElementTypeEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetElementTypeById( id );
                if( dataObject != null )
                {
                    entity = (ElementTypeEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ElementTypeEntity> GetElementTypeCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetElementTypeCollection( );
            var result = ToEntityList<ElementTypeEntity,ElementTypeObject>( dataItems );
            return result;
        }
        public BindingList<ElementTypeEntity> GetElementTypeCollectionByNamespace( Guid namespace__ )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetElementTypeCollectionByNamespace( namespace__ );
            var result = ToEntityList<ElementTypeEntity,ElementTypeObject>( dataItems );
            return result;
        }

        public ElementTypeEntity? GetElementTypeByNamespaceAndName( Guid namespace__, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetElementTypeByNamespaceAndName( namespace__, name );
            if( dataObject != null )
            {
                var result = (ElementTypeEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // Namespace queries
        // ---------------------------------------------------------------------
        public NamespaceEntity? GetNamespaceById( Guid id )
        {
            var entity = (NamespaceEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetNamespaceById( id );
                if( dataObject != null )
                {
                    entity = (NamespaceEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<NamespaceEntity> GetNamespaceCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetNamespaceCollection( );
            var result = ToEntityList<NamespaceEntity,NamespaceObject>( dataItems );
            return result;
        }
        public BindingList<NamespaceEntity> GetNamespaceCollectionByNamespace( Guid namespace__ )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetNamespaceCollectionByNamespace( namespace__ );
            var result = ToEntityList<NamespaceEntity,NamespaceObject>( dataItems );
            return result;
        }

        public NamespaceEntity? GetNamespaceByNamespaceAndName( Guid namespace__, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetNamespaceByNamespaceAndName( namespace__, name );
            if( dataObject != null )
            {
                var result = (NamespaceEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // OilSpill queries
        // ---------------------------------------------------------------------
        public OilSpillEntity? GetOilSpillById( Guid id )
        {
            var entity = (OilSpillEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetOilSpillById( id );
                if( dataObject != null )
                {
                    entity = (OilSpillEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<OilSpillEntity> GetOilSpillCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillCollection( );
            var result = ToEntityList<OilSpillEntity,OilSpillObject>( dataItems );
            return result;
        }
        public BindingList<OilSpillEntity> GetOilSpillCollectionByOilSpillDetector( Guid oilSpillDetector )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillCollectionByOilSpillDetector( oilSpillDetector );
            var result = ToEntityList<OilSpillEntity,OilSpillObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillEntity> GetOilSpillCollectionByOilSpillDetectorAndTimestamp( Guid oilSpillDetector, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillCollectionByOilSpillDetectorAndTimestamp( oilSpillDetector, timestamp );
            var result = ToEntityList<OilSpillEntity,OilSpillObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillEntity> GetOilSpillCollectionByOilSpillDetectorAtTimestamp( Guid oilSpillDetector, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillCollectionByOilSpillDetectorAtTimestamp( oilSpillDetector, timestamp );
            var result = ToEntityList<OilSpillEntity,OilSpillObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillEntity> GetOilSpillCollectionByOilSpillDetectorFromTimestamp( Guid oilSpillDetector, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillCollectionByOilSpillDetectorFromTimestamp( oilSpillDetector, timestamp );
            var result = ToEntityList<OilSpillEntity,OilSpillObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillEntity> GetOilSpillCollectionByOilSpillDetectorUntilTimestamp( Guid oilSpillDetector, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillCollectionByOilSpillDetectorUntilTimestamp( oilSpillDetector, timestamp );
            var result = ToEntityList<OilSpillEntity,OilSpillObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillEntity> GetOilSpillCollectionByOilSpillDetectorOverTimestamp( Guid oilSpillDetector, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillCollectionByOilSpillDetectorOverTimestamp( oilSpillDetector, fromTimestamp, untilTimestamp );
            var result = ToEntityList<OilSpillEntity,OilSpillObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillEntity> GetOilSpillCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillCollectionByTimestamp( timestamp );
            var result = ToEntityList<OilSpillEntity,OilSpillObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillEntity> GetOilSpillCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillCollectionAtTimestamp( timestamp );
            var result = ToEntityList<OilSpillEntity,OilSpillObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillEntity> GetOilSpillCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillCollectionFromTimestamp( timestamp );
            var result = ToEntityList<OilSpillEntity,OilSpillObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillEntity> GetOilSpillCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<OilSpillEntity,OilSpillObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillEntity> GetOilSpillCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<OilSpillEntity,OilSpillObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // OilSpillDetectorCommand queries
        // ---------------------------------------------------------------------
        public OilSpillDetectorCommandEntity? GetOilSpillDetectorCommandById( Guid id )
        {
            var entity = (OilSpillDetectorCommandEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetOilSpillDetectorCommandById( id );
                if( dataObject != null )
                {
                    entity = (OilSpillDetectorCommandEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<OilSpillDetectorCommandEntity> GetOilSpillDetectorCommandCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandCollection( );
            var result = ToEntityList<OilSpillDetectorCommandEntity,OilSpillDetectorCommandObject>( dataItems );
            return result;
        }
        public BindingList<OilSpillDetectorCommandEntity> GetOilSpillDetectorCommandCollectionByOilSpillDetector( Guid oilSpillDetector )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandCollectionByOilSpillDetector( oilSpillDetector );
            var result = ToEntityList<OilSpillDetectorCommandEntity,OilSpillDetectorCommandObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandEntity> GetOilSpillDetectorCommandCollectionByOilSpillDetectorAndTimestamp( Guid oilSpillDetector, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandCollectionByOilSpillDetectorAndTimestamp( oilSpillDetector, timestamp );
            var result = ToEntityList<OilSpillDetectorCommandEntity,OilSpillDetectorCommandObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandEntity> GetOilSpillDetectorCommandCollectionByOilSpillDetectorAtTimestamp( Guid oilSpillDetector, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandCollectionByOilSpillDetectorAtTimestamp( oilSpillDetector, timestamp );
            var result = ToEntityList<OilSpillDetectorCommandEntity,OilSpillDetectorCommandObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandEntity> GetOilSpillDetectorCommandCollectionByOilSpillDetectorFromTimestamp( Guid oilSpillDetector, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandCollectionByOilSpillDetectorFromTimestamp( oilSpillDetector, timestamp );
            var result = ToEntityList<OilSpillDetectorCommandEntity,OilSpillDetectorCommandObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandEntity> GetOilSpillDetectorCommandCollectionByOilSpillDetectorUntilTimestamp( Guid oilSpillDetector, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandCollectionByOilSpillDetectorUntilTimestamp( oilSpillDetector, timestamp );
            var result = ToEntityList<OilSpillDetectorCommandEntity,OilSpillDetectorCommandObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandEntity> GetOilSpillDetectorCommandCollectionByOilSpillDetectorOverTimestamp( Guid oilSpillDetector, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandCollectionByOilSpillDetectorOverTimestamp( oilSpillDetector, fromTimestamp, untilTimestamp );
            var result = ToEntityList<OilSpillDetectorCommandEntity,OilSpillDetectorCommandObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandEntity> GetOilSpillDetectorCommandCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandCollectionByTimestamp( timestamp );
            var result = ToEntityList<OilSpillDetectorCommandEntity,OilSpillDetectorCommandObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandEntity> GetOilSpillDetectorCommandCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandCollectionAtTimestamp( timestamp );
            var result = ToEntityList<OilSpillDetectorCommandEntity,OilSpillDetectorCommandObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandEntity> GetOilSpillDetectorCommandCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandCollectionFromTimestamp( timestamp );
            var result = ToEntityList<OilSpillDetectorCommandEntity,OilSpillDetectorCommandObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandEntity> GetOilSpillDetectorCommandCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<OilSpillDetectorCommandEntity,OilSpillDetectorCommandObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandEntity> GetOilSpillDetectorCommandCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<OilSpillDetectorCommandEntity,OilSpillDetectorCommandObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandEntity> GetOilSpillDetectorCommandCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandCollectionByReply( reply );
            var result = ToEntityList<OilSpillDetectorCommandEntity,OilSpillDetectorCommandObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // OilSpillDetectorCommandReply queries
        // ---------------------------------------------------------------------
        public OilSpillDetectorCommandReplyEntity? GetOilSpillDetectorCommandReplyById( Guid id )
        {
            var entity = (OilSpillDetectorCommandReplyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetOilSpillDetectorCommandReplyById( id );
                if( dataObject != null )
                {
                    entity = (OilSpillDetectorCommandReplyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<OilSpillDetectorCommandReplyEntity> GetOilSpillDetectorCommandReplyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandReplyCollection( );
            var result = ToEntityList<OilSpillDetectorCommandReplyEntity,OilSpillDetectorCommandReplyObject>( dataItems );
            return result;
        }
        public BindingList<OilSpillDetectorCommandReplyEntity> GetOilSpillDetectorCommandReplyCollectionByOilSpillDetector( Guid oilSpillDetector )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandReplyCollectionByOilSpillDetector( oilSpillDetector );
            var result = ToEntityList<OilSpillDetectorCommandReplyEntity,OilSpillDetectorCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandReplyEntity> GetOilSpillDetectorCommandReplyCollectionByOilSpillDetectorAndTimestamp( Guid oilSpillDetector, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandReplyCollectionByOilSpillDetectorAndTimestamp( oilSpillDetector, timestamp );
            var result = ToEntityList<OilSpillDetectorCommandReplyEntity,OilSpillDetectorCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandReplyEntity> GetOilSpillDetectorCommandReplyCollectionByOilSpillDetectorAtTimestamp( Guid oilSpillDetector, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandReplyCollectionByOilSpillDetectorAtTimestamp( oilSpillDetector, timestamp );
            var result = ToEntityList<OilSpillDetectorCommandReplyEntity,OilSpillDetectorCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandReplyEntity> GetOilSpillDetectorCommandReplyCollectionByOilSpillDetectorFromTimestamp( Guid oilSpillDetector, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandReplyCollectionByOilSpillDetectorFromTimestamp( oilSpillDetector, timestamp );
            var result = ToEntityList<OilSpillDetectorCommandReplyEntity,OilSpillDetectorCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandReplyEntity> GetOilSpillDetectorCommandReplyCollectionByOilSpillDetectorUntilTimestamp( Guid oilSpillDetector, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandReplyCollectionByOilSpillDetectorUntilTimestamp( oilSpillDetector, timestamp );
            var result = ToEntityList<OilSpillDetectorCommandReplyEntity,OilSpillDetectorCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandReplyEntity> GetOilSpillDetectorCommandReplyCollectionByOilSpillDetectorOverTimestamp( Guid oilSpillDetector, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandReplyCollectionByOilSpillDetectorOverTimestamp( oilSpillDetector, fromTimestamp, untilTimestamp );
            var result = ToEntityList<OilSpillDetectorCommandReplyEntity,OilSpillDetectorCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandReplyEntity> GetOilSpillDetectorCommandReplyCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandReplyCollectionByTimestamp( timestamp );
            var result = ToEntityList<OilSpillDetectorCommandReplyEntity,OilSpillDetectorCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandReplyEntity> GetOilSpillDetectorCommandReplyCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandReplyCollectionAtTimestamp( timestamp );
            var result = ToEntityList<OilSpillDetectorCommandReplyEntity,OilSpillDetectorCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandReplyEntity> GetOilSpillDetectorCommandReplyCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandReplyCollectionFromTimestamp( timestamp );
            var result = ToEntityList<OilSpillDetectorCommandReplyEntity,OilSpillDetectorCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandReplyEntity> GetOilSpillDetectorCommandReplyCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandReplyCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<OilSpillDetectorCommandReplyEntity,OilSpillDetectorCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorCommandReplyEntity> GetOilSpillDetectorCommandReplyCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorCommandReplyCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<OilSpillDetectorCommandReplyEntity,OilSpillDetectorCommandReplyObject>( dataItems );
            return result;
        }

        public OilSpillDetectorCommandReplyEntity? GetOilSpillDetectorCommandReplyByCommand( Guid? command )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetOilSpillDetectorCommandReplyByCommand( command );
            if( dataObject != null )
            {
                var result = (OilSpillDetectorCommandReplyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // OilSpillDetectorConfiguration queries
        // ---------------------------------------------------------------------
        public OilSpillDetectorConfigurationEntity? GetOilSpillDetectorConfigurationById( Guid id )
        {
            var entity = (OilSpillDetectorConfigurationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetOilSpillDetectorConfigurationById( id );
                if( dataObject != null )
                {
                    entity = (OilSpillDetectorConfigurationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<OilSpillDetectorConfigurationEntity> GetOilSpillDetectorConfigurationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorConfigurationCollection( );
            var result = ToEntityList<OilSpillDetectorConfigurationEntity,OilSpillDetectorConfigurationObject>( dataItems );
            return result;
        }
        public BindingList<OilSpillDetectorConfigurationEntity> GetOilSpillDetectorConfigurationCollectionByOilSpillDetector( Guid oilSpillDetector )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorConfigurationCollectionByOilSpillDetector( oilSpillDetector );
            var result = ToEntityList<OilSpillDetectorConfigurationEntity,OilSpillDetectorConfigurationObject>( dataItems );
            return result;
        }

        public OilSpillDetectorConfigurationEntity? GetOilSpillDetectorConfigurationByOilSpillDetectorAndTimestamp( Guid oilSpillDetector, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetOilSpillDetectorConfigurationByOilSpillDetectorAndTimestamp( oilSpillDetector, timestamp );
            if( dataObject != null )
            {
                var result = (OilSpillDetectorConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public OilSpillDetectorConfigurationEntity? GetOilSpillDetectorConfigurationByOilSpillDetectorAtTimestamp( Guid oilSpillDetector, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetOilSpillDetectorConfigurationByOilSpillDetectorAtTimestamp( oilSpillDetector, timestamp );
            if( dataObject != null )
            {
                var result = (OilSpillDetectorConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<OilSpillDetectorConfigurationEntity> GetOilSpillDetectorConfigurationByOilSpillDetectorFromTimestamp( Guid oilSpillDetector, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorConfigurationByOilSpillDetectorFromTimestamp( oilSpillDetector, timestamp );
            var result = ToEntityList<OilSpillDetectorConfigurationEntity,OilSpillDetectorConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorConfigurationEntity> GetOilSpillDetectorConfigurationByOilSpillDetectorUntilTimestamp( Guid oilSpillDetector, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorConfigurationByOilSpillDetectorUntilTimestamp( oilSpillDetector, timestamp );
            var result = ToEntityList<OilSpillDetectorConfigurationEntity,OilSpillDetectorConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorConfigurationEntity> GetOilSpillDetectorConfigurationByOilSpillDetectorOverTimestamp( Guid oilSpillDetector, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorConfigurationByOilSpillDetectorOverTimestamp( oilSpillDetector, fromTimestamp, untilTimestamp );
            var result = ToEntityList<OilSpillDetectorConfigurationEntity,OilSpillDetectorConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorConfigurationEntity> GetOilSpillDetectorConfigurationCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorConfigurationCollectionByTimestamp( timestamp );
            var result = ToEntityList<OilSpillDetectorConfigurationEntity,OilSpillDetectorConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorConfigurationEntity> GetOilSpillDetectorConfigurationCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorConfigurationCollectionAtTimestamp( timestamp );
            var result = ToEntityList<OilSpillDetectorConfigurationEntity,OilSpillDetectorConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorConfigurationEntity> GetOilSpillDetectorConfigurationCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorConfigurationCollectionFromTimestamp( timestamp );
            var result = ToEntityList<OilSpillDetectorConfigurationEntity,OilSpillDetectorConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorConfigurationEntity> GetOilSpillDetectorConfigurationCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorConfigurationCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<OilSpillDetectorConfigurationEntity,OilSpillDetectorConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorConfigurationEntity> GetOilSpillDetectorConfigurationCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorConfigurationCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<OilSpillDetectorConfigurationEntity,OilSpillDetectorConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<OilSpillDetectorConfigurationEntity> GetOilSpillDetectorConfigurationCollectionByTargetMMSI( Guid? targetMMSI )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetOilSpillDetectorConfigurationCollectionByTargetMMSI( targetMMSI );
            var result = ToEntityList<OilSpillDetectorConfigurationEntity,OilSpillDetectorConfigurationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Position2DTimeseriesValue queries
        // ---------------------------------------------------------------------
        public Position2DTimeseriesValueEntity? GetPosition2DTimeseriesValueById( Guid id )
        {
            var entity = (Position2DTimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetPosition2DTimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (Position2DTimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Position2DTimeseriesValueEntity> GetPosition2DTimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition2DTimeseriesValueCollection( );
            var result = ToEntityList<Position2DTimeseriesValueEntity,Position2DTimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<Position2DTimeseriesValueEntity> GetPosition2DTimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition2DTimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<Position2DTimeseriesValueEntity,Position2DTimeseriesValueObject>( dataItems );
            return result;
        }

        public Position2DTimeseriesValueEntity? GetPosition2DTimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetPosition2DTimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (Position2DTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public Position2DTimeseriesValueEntity? GetPosition2DTimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetPosition2DTimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (Position2DTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<Position2DTimeseriesValueEntity> GetPosition2DTimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition2DTimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<Position2DTimeseriesValueEntity,Position2DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Position2DTimeseriesValueEntity> GetPosition2DTimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition2DTimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<Position2DTimeseriesValueEntity,Position2DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Position2DTimeseriesValueEntity> GetPosition2DTimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition2DTimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<Position2DTimeseriesValueEntity,Position2DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Position2DTimeseriesValueEntity> GetPosition2DTimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition2DTimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<Position2DTimeseriesValueEntity,Position2DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Position2DTimeseriesValueEntity> GetPosition2DTimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition2DTimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<Position2DTimeseriesValueEntity,Position2DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Position2DTimeseriesValueEntity> GetPosition2DTimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition2DTimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<Position2DTimeseriesValueEntity,Position2DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Position2DTimeseriesValueEntity> GetPosition2DTimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition2DTimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<Position2DTimeseriesValueEntity,Position2DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Position2DTimeseriesValueEntity> GetPosition2DTimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition2DTimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<Position2DTimeseriesValueEntity,Position2DTimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Position3DTimeseriesValue queries
        // ---------------------------------------------------------------------
        public Position3DTimeseriesValueEntity? GetPosition3DTimeseriesValueById( Guid id )
        {
            var entity = (Position3DTimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetPosition3DTimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (Position3DTimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Position3DTimeseriesValueEntity> GetPosition3DTimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition3DTimeseriesValueCollection( );
            var result = ToEntityList<Position3DTimeseriesValueEntity,Position3DTimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<Position3DTimeseriesValueEntity> GetPosition3DTimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition3DTimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<Position3DTimeseriesValueEntity,Position3DTimeseriesValueObject>( dataItems );
            return result;
        }

        public Position3DTimeseriesValueEntity? GetPosition3DTimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetPosition3DTimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (Position3DTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public Position3DTimeseriesValueEntity? GetPosition3DTimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetPosition3DTimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (Position3DTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<Position3DTimeseriesValueEntity> GetPosition3DTimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition3DTimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<Position3DTimeseriesValueEntity,Position3DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Position3DTimeseriesValueEntity> GetPosition3DTimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition3DTimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<Position3DTimeseriesValueEntity,Position3DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Position3DTimeseriesValueEntity> GetPosition3DTimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition3DTimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<Position3DTimeseriesValueEntity,Position3DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Position3DTimeseriesValueEntity> GetPosition3DTimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition3DTimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<Position3DTimeseriesValueEntity,Position3DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Position3DTimeseriesValueEntity> GetPosition3DTimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition3DTimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<Position3DTimeseriesValueEntity,Position3DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Position3DTimeseriesValueEntity> GetPosition3DTimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition3DTimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<Position3DTimeseriesValueEntity,Position3DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Position3DTimeseriesValueEntity> GetPosition3DTimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition3DTimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<Position3DTimeseriesValueEntity,Position3DTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<Position3DTimeseriesValueEntity> GetPosition3DTimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition3DTimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<Position3DTimeseriesValueEntity,Position3DTimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // ProcessTrackValueResult queries
        // ---------------------------------------------------------------------
        public ProcessTrackValueResultEntity? GetProcessTrackValueResultById( Guid id )
        {
            var entity = (ProcessTrackValueResultEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetProcessTrackValueResultById( id );
                if( dataObject != null )
                {
                    entity = (ProcessTrackValueResultEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ProcessTrackValueResultEntity> GetProcessTrackValueResultCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetProcessTrackValueResultCollection( );
            var result = ToEntityList<ProcessTrackValueResultEntity,ProcessTrackValueResultObject>( dataItems );
            return result;
        }
        // ---------------------------------------------------------------------
        // Property queries
        // ---------------------------------------------------------------------
        public PropertyEntity? GetPropertyById( Guid id )
        {
            var entity = (PropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetPropertyById( id );
                if( dataObject != null )
                {
                    entity = (PropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<PropertyEntity> GetPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPropertyCollection( );
            var result = ToEntityList<PropertyEntity,PropertyObject>( dataItems );
            return result;
        }
        public BindingList<PropertyEntity> GetPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPropertyCollectionByElement( element );
            var result = ToEntityList<PropertyEntity,PropertyObject>( dataItems );
            return result;
        }

        public PropertyEntity? GetPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (PropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<PropertyEntity> GetPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPropertyCollectionByDefinition( definition );
            var result = ToEntityList<PropertyEntity,PropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // BinaryProperty queries
        // ---------------------------------------------------------------------
        public BinaryPropertyEntity? GetBinaryPropertyById( Guid id )
        {
            var entity = (BinaryPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetBinaryPropertyById( id );
                if( dataObject != null )
                {
                    entity = (BinaryPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<BinaryPropertyEntity> GetBinaryPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryPropertyCollection( );
            var result = ToEntityList<BinaryPropertyEntity,BinaryPropertyObject>( dataItems );
            return result;
        }
        public BindingList<BinaryPropertyEntity> GetBinaryPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryPropertyCollectionByElement( element );
            var result = ToEntityList<BinaryPropertyEntity,BinaryPropertyObject>( dataItems );
            return result;
        }

        public BinaryPropertyEntity? GetBinaryPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBinaryPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (BinaryPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<BinaryPropertyEntity> GetBinaryPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryPropertyCollectionByDefinition( definition );
            var result = ToEntityList<BinaryPropertyEntity,BinaryPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // BooleanProperty queries
        // ---------------------------------------------------------------------
        public BooleanPropertyEntity? GetBooleanPropertyById( Guid id )
        {
            var entity = (BooleanPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetBooleanPropertyById( id );
                if( dataObject != null )
                {
                    entity = (BooleanPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<BooleanPropertyEntity> GetBooleanPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanPropertyCollection( );
            var result = ToEntityList<BooleanPropertyEntity,BooleanPropertyObject>( dataItems );
            return result;
        }
        public BindingList<BooleanPropertyEntity> GetBooleanPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanPropertyCollectionByElement( element );
            var result = ToEntityList<BooleanPropertyEntity,BooleanPropertyObject>( dataItems );
            return result;
        }

        public BooleanPropertyEntity? GetBooleanPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBooleanPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (BooleanPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<BooleanPropertyEntity> GetBooleanPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanPropertyCollectionByDefinition( definition );
            var result = ToEntityList<BooleanPropertyEntity,BooleanPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // ByteProperty queries
        // ---------------------------------------------------------------------
        public BytePropertyEntity? GetBytePropertyById( Guid id )
        {
            var entity = (BytePropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetBytePropertyById( id );
                if( dataObject != null )
                {
                    entity = (BytePropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<BytePropertyEntity> GetBytePropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBytePropertyCollection( );
            var result = ToEntityList<BytePropertyEntity,BytePropertyObject>( dataItems );
            return result;
        }
        public BindingList<BytePropertyEntity> GetBytePropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBytePropertyCollectionByElement( element );
            var result = ToEntityList<BytePropertyEntity,BytePropertyObject>( dataItems );
            return result;
        }

        public BytePropertyEntity? GetBytePropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBytePropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (BytePropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<BytePropertyEntity> GetBytePropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBytePropertyCollectionByDefinition( definition );
            var result = ToEntityList<BytePropertyEntity,BytePropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // DateTimeProperty queries
        // ---------------------------------------------------------------------
        public DateTimePropertyEntity? GetDateTimePropertyById( Guid id )
        {
            var entity = (DateTimePropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetDateTimePropertyById( id );
                if( dataObject != null )
                {
                    entity = (DateTimePropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<DateTimePropertyEntity> GetDateTimePropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimePropertyCollection( );
            var result = ToEntityList<DateTimePropertyEntity,DateTimePropertyObject>( dataItems );
            return result;
        }
        public BindingList<DateTimePropertyEntity> GetDateTimePropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimePropertyCollectionByElement( element );
            var result = ToEntityList<DateTimePropertyEntity,DateTimePropertyObject>( dataItems );
            return result;
        }

        public DateTimePropertyEntity? GetDateTimePropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDateTimePropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (DateTimePropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<DateTimePropertyEntity> GetDateTimePropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimePropertyCollectionByDefinition( definition );
            var result = ToEntityList<DateTimePropertyEntity,DateTimePropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // DoubleProperty queries
        // ---------------------------------------------------------------------
        public DoublePropertyEntity? GetDoublePropertyById( Guid id )
        {
            var entity = (DoublePropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetDoublePropertyById( id );
                if( dataObject != null )
                {
                    entity = (DoublePropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<DoublePropertyEntity> GetDoublePropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoublePropertyCollection( );
            var result = ToEntityList<DoublePropertyEntity,DoublePropertyObject>( dataItems );
            return result;
        }
        public BindingList<DoublePropertyEntity> GetDoublePropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoublePropertyCollectionByElement( element );
            var result = ToEntityList<DoublePropertyEntity,DoublePropertyObject>( dataItems );
            return result;
        }

        public DoublePropertyEntity? GetDoublePropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDoublePropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (DoublePropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<DoublePropertyEntity> GetDoublePropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoublePropertyCollectionByDefinition( definition );
            var result = ToEntityList<DoublePropertyEntity,DoublePropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // GuidProperty queries
        // ---------------------------------------------------------------------
        public GuidPropertyEntity? GetGuidPropertyById( Guid id )
        {
            var entity = (GuidPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGuidPropertyById( id );
                if( dataObject != null )
                {
                    entity = (GuidPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GuidPropertyEntity> GetGuidPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidPropertyCollection( );
            var result = ToEntityList<GuidPropertyEntity,GuidPropertyObject>( dataItems );
            return result;
        }
        public BindingList<GuidPropertyEntity> GetGuidPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidPropertyCollectionByElement( element );
            var result = ToEntityList<GuidPropertyEntity,GuidPropertyObject>( dataItems );
            return result;
        }

        public GuidPropertyEntity? GetGuidPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGuidPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (GuidPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<GuidPropertyEntity> GetGuidPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidPropertyCollectionByDefinition( definition );
            var result = ToEntityList<GuidPropertyEntity,GuidPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Int16Property queries
        // ---------------------------------------------------------------------
        public Int16PropertyEntity? GetInt16PropertyById( Guid id )
        {
            var entity = (Int16PropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt16PropertyById( id );
                if( dataObject != null )
                {
                    entity = (Int16PropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int16PropertyEntity> GetInt16PropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16PropertyCollection( );
            var result = ToEntityList<Int16PropertyEntity,Int16PropertyObject>( dataItems );
            return result;
        }
        public BindingList<Int16PropertyEntity> GetInt16PropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16PropertyCollectionByElement( element );
            var result = ToEntityList<Int16PropertyEntity,Int16PropertyObject>( dataItems );
            return result;
        }

        public Int16PropertyEntity? GetInt16PropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt16PropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (Int16PropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<Int16PropertyEntity> GetInt16PropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16PropertyCollectionByDefinition( definition );
            var result = ToEntityList<Int16PropertyEntity,Int16PropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Int32Property queries
        // ---------------------------------------------------------------------
        public Int32PropertyEntity? GetInt32PropertyById( Guid id )
        {
            var entity = (Int32PropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt32PropertyById( id );
                if( dataObject != null )
                {
                    entity = (Int32PropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int32PropertyEntity> GetInt32PropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32PropertyCollection( );
            var result = ToEntityList<Int32PropertyEntity,Int32PropertyObject>( dataItems );
            return result;
        }
        public BindingList<Int32PropertyEntity> GetInt32PropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32PropertyCollectionByElement( element );
            var result = ToEntityList<Int32PropertyEntity,Int32PropertyObject>( dataItems );
            return result;
        }

        public Int32PropertyEntity? GetInt32PropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt32PropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (Int32PropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<Int32PropertyEntity> GetInt32PropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32PropertyCollectionByDefinition( definition );
            var result = ToEntityList<Int32PropertyEntity,Int32PropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Int64Property queries
        // ---------------------------------------------------------------------
        public Int64PropertyEntity? GetInt64PropertyById( Guid id )
        {
            var entity = (Int64PropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt64PropertyById( id );
                if( dataObject != null )
                {
                    entity = (Int64PropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int64PropertyEntity> GetInt64PropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64PropertyCollection( );
            var result = ToEntityList<Int64PropertyEntity,Int64PropertyObject>( dataItems );
            return result;
        }
        public BindingList<Int64PropertyEntity> GetInt64PropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64PropertyCollectionByElement( element );
            var result = ToEntityList<Int64PropertyEntity,Int64PropertyObject>( dataItems );
            return result;
        }

        public Int64PropertyEntity? GetInt64PropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt64PropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (Int64PropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<Int64PropertyEntity> GetInt64PropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64PropertyCollectionByDefinition( definition );
            var result = ToEntityList<Int64PropertyEntity,Int64PropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // ReferenceProperty queries
        // ---------------------------------------------------------------------
        public ReferencePropertyEntity? GetReferencePropertyById( Guid id )
        {
            var entity = (ReferencePropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetReferencePropertyById( id );
                if( dataObject != null )
                {
                    entity = (ReferencePropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ReferencePropertyEntity> GetReferencePropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferencePropertyCollection( );
            var result = ToEntityList<ReferencePropertyEntity,ReferencePropertyObject>( dataItems );
            return result;
        }
        public BindingList<ReferencePropertyEntity> GetReferencePropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferencePropertyCollectionByElement( element );
            var result = ToEntityList<ReferencePropertyEntity,ReferencePropertyObject>( dataItems );
            return result;
        }

        public ReferencePropertyEntity? GetReferencePropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetReferencePropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (ReferencePropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ReferencePropertyEntity> GetReferencePropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferencePropertyCollectionByDefinition( definition );
            var result = ToEntityList<ReferencePropertyEntity,ReferencePropertyObject>( dataItems );
            return result;
        }

        public BindingList<ReferencePropertyEntity> GetReferencePropertyCollectionByValue( Guid? value__ )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferencePropertyCollectionByValue( value__ );
            var result = ToEntityList<ReferencePropertyEntity,ReferencePropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // SByteProperty queries
        // ---------------------------------------------------------------------
        public SBytePropertyEntity? GetSBytePropertyById( Guid id )
        {
            var entity = (SBytePropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSBytePropertyById( id );
                if( dataObject != null )
                {
                    entity = (SBytePropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SBytePropertyEntity> GetSBytePropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSBytePropertyCollection( );
            var result = ToEntityList<SBytePropertyEntity,SBytePropertyObject>( dataItems );
            return result;
        }
        public BindingList<SBytePropertyEntity> GetSBytePropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSBytePropertyCollectionByElement( element );
            var result = ToEntityList<SBytePropertyEntity,SBytePropertyObject>( dataItems );
            return result;
        }

        public SBytePropertyEntity? GetSBytePropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSBytePropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (SBytePropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<SBytePropertyEntity> GetSBytePropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSBytePropertyCollectionByDefinition( definition );
            var result = ToEntityList<SBytePropertyEntity,SBytePropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // SingleProperty queries
        // ---------------------------------------------------------------------
        public SinglePropertyEntity? GetSinglePropertyById( Guid id )
        {
            var entity = (SinglePropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSinglePropertyById( id );
                if( dataObject != null )
                {
                    entity = (SinglePropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SinglePropertyEntity> GetSinglePropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSinglePropertyCollection( );
            var result = ToEntityList<SinglePropertyEntity,SinglePropertyObject>( dataItems );
            return result;
        }
        public BindingList<SinglePropertyEntity> GetSinglePropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSinglePropertyCollectionByElement( element );
            var result = ToEntityList<SinglePropertyEntity,SinglePropertyObject>( dataItems );
            return result;
        }

        public SinglePropertyEntity? GetSinglePropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSinglePropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (SinglePropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<SinglePropertyEntity> GetSinglePropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSinglePropertyCollectionByDefinition( definition );
            var result = ToEntityList<SinglePropertyEntity,SinglePropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // StringProperty queries
        // ---------------------------------------------------------------------
        public StringPropertyEntity? GetStringPropertyById( Guid id )
        {
            var entity = (StringPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetStringPropertyById( id );
                if( dataObject != null )
                {
                    entity = (StringPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<StringPropertyEntity> GetStringPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringPropertyCollection( );
            var result = ToEntityList<StringPropertyEntity,StringPropertyObject>( dataItems );
            return result;
        }
        public BindingList<StringPropertyEntity> GetStringPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringPropertyCollectionByElement( element );
            var result = ToEntityList<StringPropertyEntity,StringPropertyObject>( dataItems );
            return result;
        }

        public StringPropertyEntity? GetStringPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetStringPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (StringPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<StringPropertyEntity> GetStringPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringPropertyCollectionByDefinition( definition );
            var result = ToEntityList<StringPropertyEntity,StringPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // TimeseriesProperty queries
        // ---------------------------------------------------------------------
        public TimeseriesPropertyEntity? GetTimeseriesPropertyById( Guid id )
        {
            var entity = (TimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (TimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TimeseriesPropertyEntity> GetTimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeseriesPropertyCollection( );
            var result = ToEntityList<TimeseriesPropertyEntity,TimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<TimeseriesPropertyEntity> GetTimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<TimeseriesPropertyEntity,TimeseriesPropertyObject>( dataItems );
            return result;
        }

        public TimeseriesPropertyEntity? GetTimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (TimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<TimeseriesPropertyEntity> GetTimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<TimeseriesPropertyEntity,TimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // BinaryTimeseriesProperty queries
        // ---------------------------------------------------------------------
        public BinaryTimeseriesPropertyEntity? GetBinaryTimeseriesPropertyById( Guid id )
        {
            var entity = (BinaryTimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetBinaryTimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (BinaryTimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<BinaryTimeseriesPropertyEntity> GetBinaryTimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesPropertyCollection( );
            var result = ToEntityList<BinaryTimeseriesPropertyEntity,BinaryTimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<BinaryTimeseriesPropertyEntity> GetBinaryTimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<BinaryTimeseriesPropertyEntity,BinaryTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BinaryTimeseriesPropertyEntity? GetBinaryTimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBinaryTimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (BinaryTimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<BinaryTimeseriesPropertyEntity> GetBinaryTimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<BinaryTimeseriesPropertyEntity,BinaryTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BindingList<BinaryTimeseriesPropertyEntity> GetBinaryTimeseriesPropertyCollectionByTimeseries( Guid? timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesPropertyCollectionByTimeseries( timeseries );
            var result = ToEntityList<BinaryTimeseriesPropertyEntity,BinaryTimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // BooleanTimeseriesProperty queries
        // ---------------------------------------------------------------------
        public BooleanTimeseriesPropertyEntity? GetBooleanTimeseriesPropertyById( Guid id )
        {
            var entity = (BooleanTimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetBooleanTimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (BooleanTimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<BooleanTimeseriesPropertyEntity> GetBooleanTimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesPropertyCollection( );
            var result = ToEntityList<BooleanTimeseriesPropertyEntity,BooleanTimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<BooleanTimeseriesPropertyEntity> GetBooleanTimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<BooleanTimeseriesPropertyEntity,BooleanTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BooleanTimeseriesPropertyEntity? GetBooleanTimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBooleanTimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (BooleanTimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<BooleanTimeseriesPropertyEntity> GetBooleanTimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<BooleanTimeseriesPropertyEntity,BooleanTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BindingList<BooleanTimeseriesPropertyEntity> GetBooleanTimeseriesPropertyCollectionByTimeseries( Guid? timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesPropertyCollectionByTimeseries( timeseries );
            var result = ToEntityList<BooleanTimeseriesPropertyEntity,BooleanTimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // ByteTimeseriesProperty queries
        // ---------------------------------------------------------------------
        public ByteTimeseriesPropertyEntity? GetByteTimeseriesPropertyById( Guid id )
        {
            var entity = (ByteTimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetByteTimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (ByteTimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ByteTimeseriesPropertyEntity> GetByteTimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesPropertyCollection( );
            var result = ToEntityList<ByteTimeseriesPropertyEntity,ByteTimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<ByteTimeseriesPropertyEntity> GetByteTimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<ByteTimeseriesPropertyEntity,ByteTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public ByteTimeseriesPropertyEntity? GetByteTimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetByteTimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (ByteTimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ByteTimeseriesPropertyEntity> GetByteTimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<ByteTimeseriesPropertyEntity,ByteTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BindingList<ByteTimeseriesPropertyEntity> GetByteTimeseriesPropertyCollectionByTimeseries( Guid? timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesPropertyCollectionByTimeseries( timeseries );
            var result = ToEntityList<ByteTimeseriesPropertyEntity,ByteTimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // DateTimeTimeseriesProperty queries
        // ---------------------------------------------------------------------
        public DateTimeTimeseriesPropertyEntity? GetDateTimeTimeseriesPropertyById( Guid id )
        {
            var entity = (DateTimeTimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetDateTimeTimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (DateTimeTimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<DateTimeTimeseriesPropertyEntity> GetDateTimeTimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesPropertyCollection( );
            var result = ToEntityList<DateTimeTimeseriesPropertyEntity,DateTimeTimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<DateTimeTimeseriesPropertyEntity> GetDateTimeTimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<DateTimeTimeseriesPropertyEntity,DateTimeTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public DateTimeTimeseriesPropertyEntity? GetDateTimeTimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDateTimeTimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (DateTimeTimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<DateTimeTimeseriesPropertyEntity> GetDateTimeTimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<DateTimeTimeseriesPropertyEntity,DateTimeTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BindingList<DateTimeTimeseriesPropertyEntity> GetDateTimeTimeseriesPropertyCollectionByTimeseries( Guid? timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesPropertyCollectionByTimeseries( timeseries );
            var result = ToEntityList<DateTimeTimeseriesPropertyEntity,DateTimeTimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // DoubleTimeseriesProperty queries
        // ---------------------------------------------------------------------
        public DoubleTimeseriesPropertyEntity? GetDoubleTimeseriesPropertyById( Guid id )
        {
            var entity = (DoubleTimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetDoubleTimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (DoubleTimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<DoubleTimeseriesPropertyEntity> GetDoubleTimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesPropertyCollection( );
            var result = ToEntityList<DoubleTimeseriesPropertyEntity,DoubleTimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<DoubleTimeseriesPropertyEntity> GetDoubleTimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<DoubleTimeseriesPropertyEntity,DoubleTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public DoubleTimeseriesPropertyEntity? GetDoubleTimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDoubleTimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (DoubleTimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<DoubleTimeseriesPropertyEntity> GetDoubleTimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<DoubleTimeseriesPropertyEntity,DoubleTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BindingList<DoubleTimeseriesPropertyEntity> GetDoubleTimeseriesPropertyCollectionByTimeseries( Guid? timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesPropertyCollectionByTimeseries( timeseries );
            var result = ToEntityList<DoubleTimeseriesPropertyEntity,DoubleTimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // GuidTimeseriesProperty queries
        // ---------------------------------------------------------------------
        public GuidTimeseriesPropertyEntity? GetGuidTimeseriesPropertyById( Guid id )
        {
            var entity = (GuidTimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGuidTimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (GuidTimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GuidTimeseriesPropertyEntity> GetGuidTimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesPropertyCollection( );
            var result = ToEntityList<GuidTimeseriesPropertyEntity,GuidTimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<GuidTimeseriesPropertyEntity> GetGuidTimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<GuidTimeseriesPropertyEntity,GuidTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public GuidTimeseriesPropertyEntity? GetGuidTimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGuidTimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (GuidTimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<GuidTimeseriesPropertyEntity> GetGuidTimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<GuidTimeseriesPropertyEntity,GuidTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BindingList<GuidTimeseriesPropertyEntity> GetGuidTimeseriesPropertyCollectionByTimeseries( Guid? timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesPropertyCollectionByTimeseries( timeseries );
            var result = ToEntityList<GuidTimeseriesPropertyEntity,GuidTimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Int16TimeseriesProperty queries
        // ---------------------------------------------------------------------
        public Int16TimeseriesPropertyEntity? GetInt16TimeseriesPropertyById( Guid id )
        {
            var entity = (Int16TimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt16TimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (Int16TimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int16TimeseriesPropertyEntity> GetInt16TimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesPropertyCollection( );
            var result = ToEntityList<Int16TimeseriesPropertyEntity,Int16TimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<Int16TimeseriesPropertyEntity> GetInt16TimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<Int16TimeseriesPropertyEntity,Int16TimeseriesPropertyObject>( dataItems );
            return result;
        }

        public Int16TimeseriesPropertyEntity? GetInt16TimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt16TimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (Int16TimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<Int16TimeseriesPropertyEntity> GetInt16TimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<Int16TimeseriesPropertyEntity,Int16TimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BindingList<Int16TimeseriesPropertyEntity> GetInt16TimeseriesPropertyCollectionByTimeseries( Guid? timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesPropertyCollectionByTimeseries( timeseries );
            var result = ToEntityList<Int16TimeseriesPropertyEntity,Int16TimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Int32TimeseriesProperty queries
        // ---------------------------------------------------------------------
        public Int32TimeseriesPropertyEntity? GetInt32TimeseriesPropertyById( Guid id )
        {
            var entity = (Int32TimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt32TimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (Int32TimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int32TimeseriesPropertyEntity> GetInt32TimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesPropertyCollection( );
            var result = ToEntityList<Int32TimeseriesPropertyEntity,Int32TimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<Int32TimeseriesPropertyEntity> GetInt32TimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<Int32TimeseriesPropertyEntity,Int32TimeseriesPropertyObject>( dataItems );
            return result;
        }

        public Int32TimeseriesPropertyEntity? GetInt32TimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt32TimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (Int32TimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<Int32TimeseriesPropertyEntity> GetInt32TimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<Int32TimeseriesPropertyEntity,Int32TimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BindingList<Int32TimeseriesPropertyEntity> GetInt32TimeseriesPropertyCollectionByTimeseries( Guid? timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesPropertyCollectionByTimeseries( timeseries );
            var result = ToEntityList<Int32TimeseriesPropertyEntity,Int32TimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Int64TimeseriesProperty queries
        // ---------------------------------------------------------------------
        public Int64TimeseriesPropertyEntity? GetInt64TimeseriesPropertyById( Guid id )
        {
            var entity = (Int64TimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt64TimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (Int64TimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int64TimeseriesPropertyEntity> GetInt64TimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesPropertyCollection( );
            var result = ToEntityList<Int64TimeseriesPropertyEntity,Int64TimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<Int64TimeseriesPropertyEntity> GetInt64TimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<Int64TimeseriesPropertyEntity,Int64TimeseriesPropertyObject>( dataItems );
            return result;
        }

        public Int64TimeseriesPropertyEntity? GetInt64TimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt64TimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (Int64TimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<Int64TimeseriesPropertyEntity> GetInt64TimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<Int64TimeseriesPropertyEntity,Int64TimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BindingList<Int64TimeseriesPropertyEntity> GetInt64TimeseriesPropertyCollectionByTimeseries( Guid? timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesPropertyCollectionByTimeseries( timeseries );
            var result = ToEntityList<Int64TimeseriesPropertyEntity,Int64TimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // ReferenceTimeseriesProperty queries
        // ---------------------------------------------------------------------
        public ReferenceTimeseriesPropertyEntity? GetReferenceTimeseriesPropertyById( Guid id )
        {
            var entity = (ReferenceTimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetReferenceTimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (ReferenceTimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ReferenceTimeseriesPropertyEntity> GetReferenceTimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesPropertyCollection( );
            var result = ToEntityList<ReferenceTimeseriesPropertyEntity,ReferenceTimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<ReferenceTimeseriesPropertyEntity> GetReferenceTimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<ReferenceTimeseriesPropertyEntity,ReferenceTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public ReferenceTimeseriesPropertyEntity? GetReferenceTimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetReferenceTimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (ReferenceTimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ReferenceTimeseriesPropertyEntity> GetReferenceTimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<ReferenceTimeseriesPropertyEntity,ReferenceTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BindingList<ReferenceTimeseriesPropertyEntity> GetReferenceTimeseriesPropertyCollectionByTimeseries( Guid? timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesPropertyCollectionByTimeseries( timeseries );
            var result = ToEntityList<ReferenceTimeseriesPropertyEntity,ReferenceTimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // SByteTimeseriesProperty queries
        // ---------------------------------------------------------------------
        public SByteTimeseriesPropertyEntity? GetSByteTimeseriesPropertyById( Guid id )
        {
            var entity = (SByteTimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSByteTimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (SByteTimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SByteTimeseriesPropertyEntity> GetSByteTimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesPropertyCollection( );
            var result = ToEntityList<SByteTimeseriesPropertyEntity,SByteTimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<SByteTimeseriesPropertyEntity> GetSByteTimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<SByteTimeseriesPropertyEntity,SByteTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public SByteTimeseriesPropertyEntity? GetSByteTimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSByteTimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (SByteTimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<SByteTimeseriesPropertyEntity> GetSByteTimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<SByteTimeseriesPropertyEntity,SByteTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BindingList<SByteTimeseriesPropertyEntity> GetSByteTimeseriesPropertyCollectionByTimeseries( Guid? timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesPropertyCollectionByTimeseries( timeseries );
            var result = ToEntityList<SByteTimeseriesPropertyEntity,SByteTimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // SingleTimeseriesProperty queries
        // ---------------------------------------------------------------------
        public SingleTimeseriesPropertyEntity? GetSingleTimeseriesPropertyById( Guid id )
        {
            var entity = (SingleTimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSingleTimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (SingleTimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SingleTimeseriesPropertyEntity> GetSingleTimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesPropertyCollection( );
            var result = ToEntityList<SingleTimeseriesPropertyEntity,SingleTimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<SingleTimeseriesPropertyEntity> GetSingleTimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<SingleTimeseriesPropertyEntity,SingleTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public SingleTimeseriesPropertyEntity? GetSingleTimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSingleTimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (SingleTimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<SingleTimeseriesPropertyEntity> GetSingleTimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<SingleTimeseriesPropertyEntity,SingleTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BindingList<SingleTimeseriesPropertyEntity> GetSingleTimeseriesPropertyCollectionByTimeseries( Guid? timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesPropertyCollectionByTimeseries( timeseries );
            var result = ToEntityList<SingleTimeseriesPropertyEntity,SingleTimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // StringTimeseriesProperty queries
        // ---------------------------------------------------------------------
        public StringTimeseriesPropertyEntity? GetStringTimeseriesPropertyById( Guid id )
        {
            var entity = (StringTimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetStringTimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (StringTimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<StringTimeseriesPropertyEntity> GetStringTimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesPropertyCollection( );
            var result = ToEntityList<StringTimeseriesPropertyEntity,StringTimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<StringTimeseriesPropertyEntity> GetStringTimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<StringTimeseriesPropertyEntity,StringTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public StringTimeseriesPropertyEntity? GetStringTimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetStringTimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (StringTimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<StringTimeseriesPropertyEntity> GetStringTimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<StringTimeseriesPropertyEntity,StringTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BindingList<StringTimeseriesPropertyEntity> GetStringTimeseriesPropertyCollectionByTimeseries( Guid? timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesPropertyCollectionByTimeseries( timeseries );
            var result = ToEntityList<StringTimeseriesPropertyEntity,StringTimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // TimeSpanTimeseriesProperty queries
        // ---------------------------------------------------------------------
        public TimeSpanTimeseriesPropertyEntity? GetTimeSpanTimeseriesPropertyById( Guid id )
        {
            var entity = (TimeSpanTimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTimeSpanTimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (TimeSpanTimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TimeSpanTimeseriesPropertyEntity> GetTimeSpanTimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesPropertyCollection( );
            var result = ToEntityList<TimeSpanTimeseriesPropertyEntity,TimeSpanTimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<TimeSpanTimeseriesPropertyEntity> GetTimeSpanTimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<TimeSpanTimeseriesPropertyEntity,TimeSpanTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public TimeSpanTimeseriesPropertyEntity? GetTimeSpanTimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTimeSpanTimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (TimeSpanTimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<TimeSpanTimeseriesPropertyEntity> GetTimeSpanTimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<TimeSpanTimeseriesPropertyEntity,TimeSpanTimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BindingList<TimeSpanTimeseriesPropertyEntity> GetTimeSpanTimeseriesPropertyCollectionByTimeseries( Guid? timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesPropertyCollectionByTimeseries( timeseries );
            var result = ToEntityList<TimeSpanTimeseriesPropertyEntity,TimeSpanTimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // UInt16TimeseriesProperty queries
        // ---------------------------------------------------------------------
        public UInt16TimeseriesPropertyEntity? GetUInt16TimeseriesPropertyById( Guid id )
        {
            var entity = (UInt16TimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt16TimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (UInt16TimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt16TimeseriesPropertyEntity> GetUInt16TimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesPropertyCollection( );
            var result = ToEntityList<UInt16TimeseriesPropertyEntity,UInt16TimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<UInt16TimeseriesPropertyEntity> GetUInt16TimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<UInt16TimeseriesPropertyEntity,UInt16TimeseriesPropertyObject>( dataItems );
            return result;
        }

        public UInt16TimeseriesPropertyEntity? GetUInt16TimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt16TimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (UInt16TimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<UInt16TimeseriesPropertyEntity> GetUInt16TimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<UInt16TimeseriesPropertyEntity,UInt16TimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BindingList<UInt16TimeseriesPropertyEntity> GetUInt16TimeseriesPropertyCollectionByTimeseries( Guid? timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesPropertyCollectionByTimeseries( timeseries );
            var result = ToEntityList<UInt16TimeseriesPropertyEntity,UInt16TimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // UInt32TimeseriesProperty queries
        // ---------------------------------------------------------------------
        public UInt32TimeseriesPropertyEntity? GetUInt32TimeseriesPropertyById( Guid id )
        {
            var entity = (UInt32TimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt32TimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (UInt32TimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt32TimeseriesPropertyEntity> GetUInt32TimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesPropertyCollection( );
            var result = ToEntityList<UInt32TimeseriesPropertyEntity,UInt32TimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<UInt32TimeseriesPropertyEntity> GetUInt32TimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<UInt32TimeseriesPropertyEntity,UInt32TimeseriesPropertyObject>( dataItems );
            return result;
        }

        public UInt32TimeseriesPropertyEntity? GetUInt32TimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt32TimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (UInt32TimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<UInt32TimeseriesPropertyEntity> GetUInt32TimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<UInt32TimeseriesPropertyEntity,UInt32TimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BindingList<UInt32TimeseriesPropertyEntity> GetUInt32TimeseriesPropertyCollectionByTimeseries( Guid? timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesPropertyCollectionByTimeseries( timeseries );
            var result = ToEntityList<UInt32TimeseriesPropertyEntity,UInt32TimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // UInt64TimeseriesProperty queries
        // ---------------------------------------------------------------------
        public UInt64TimeseriesPropertyEntity? GetUInt64TimeseriesPropertyById( Guid id )
        {
            var entity = (UInt64TimeseriesPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt64TimeseriesPropertyById( id );
                if( dataObject != null )
                {
                    entity = (UInt64TimeseriesPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt64TimeseriesPropertyEntity> GetUInt64TimeseriesPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesPropertyCollection( );
            var result = ToEntityList<UInt64TimeseriesPropertyEntity,UInt64TimeseriesPropertyObject>( dataItems );
            return result;
        }
        public BindingList<UInt64TimeseriesPropertyEntity> GetUInt64TimeseriesPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesPropertyCollectionByElement( element );
            var result = ToEntityList<UInt64TimeseriesPropertyEntity,UInt64TimeseriesPropertyObject>( dataItems );
            return result;
        }

        public UInt64TimeseriesPropertyEntity? GetUInt64TimeseriesPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt64TimeseriesPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (UInt64TimeseriesPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<UInt64TimeseriesPropertyEntity> GetUInt64TimeseriesPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesPropertyCollectionByDefinition( definition );
            var result = ToEntityList<UInt64TimeseriesPropertyEntity,UInt64TimeseriesPropertyObject>( dataItems );
            return result;
        }

        public BindingList<UInt64TimeseriesPropertyEntity> GetUInt64TimeseriesPropertyCollectionByTimeseries( Guid? timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesPropertyCollectionByTimeseries( timeseries );
            var result = ToEntityList<UInt64TimeseriesPropertyEntity,UInt64TimeseriesPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // TimeSpanProperty queries
        // ---------------------------------------------------------------------
        public TimeSpanPropertyEntity? GetTimeSpanPropertyById( Guid id )
        {
            var entity = (TimeSpanPropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTimeSpanPropertyById( id );
                if( dataObject != null )
                {
                    entity = (TimeSpanPropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TimeSpanPropertyEntity> GetTimeSpanPropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanPropertyCollection( );
            var result = ToEntityList<TimeSpanPropertyEntity,TimeSpanPropertyObject>( dataItems );
            return result;
        }
        public BindingList<TimeSpanPropertyEntity> GetTimeSpanPropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanPropertyCollectionByElement( element );
            var result = ToEntityList<TimeSpanPropertyEntity,TimeSpanPropertyObject>( dataItems );
            return result;
        }

        public TimeSpanPropertyEntity? GetTimeSpanPropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTimeSpanPropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (TimeSpanPropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<TimeSpanPropertyEntity> GetTimeSpanPropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanPropertyCollectionByDefinition( definition );
            var result = ToEntityList<TimeSpanPropertyEntity,TimeSpanPropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // UInt16Property queries
        // ---------------------------------------------------------------------
        public UInt16PropertyEntity? GetUInt16PropertyById( Guid id )
        {
            var entity = (UInt16PropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt16PropertyById( id );
                if( dataObject != null )
                {
                    entity = (UInt16PropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt16PropertyEntity> GetUInt16PropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16PropertyCollection( );
            var result = ToEntityList<UInt16PropertyEntity,UInt16PropertyObject>( dataItems );
            return result;
        }
        public BindingList<UInt16PropertyEntity> GetUInt16PropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16PropertyCollectionByElement( element );
            var result = ToEntityList<UInt16PropertyEntity,UInt16PropertyObject>( dataItems );
            return result;
        }

        public UInt16PropertyEntity? GetUInt16PropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt16PropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (UInt16PropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<UInt16PropertyEntity> GetUInt16PropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16PropertyCollectionByDefinition( definition );
            var result = ToEntityList<UInt16PropertyEntity,UInt16PropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // UInt32Property queries
        // ---------------------------------------------------------------------
        public UInt32PropertyEntity? GetUInt32PropertyById( Guid id )
        {
            var entity = (UInt32PropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt32PropertyById( id );
                if( dataObject != null )
                {
                    entity = (UInt32PropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt32PropertyEntity> GetUInt32PropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32PropertyCollection( );
            var result = ToEntityList<UInt32PropertyEntity,UInt32PropertyObject>( dataItems );
            return result;
        }
        public BindingList<UInt32PropertyEntity> GetUInt32PropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32PropertyCollectionByElement( element );
            var result = ToEntityList<UInt32PropertyEntity,UInt32PropertyObject>( dataItems );
            return result;
        }

        public UInt32PropertyEntity? GetUInt32PropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt32PropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (UInt32PropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<UInt32PropertyEntity> GetUInt32PropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32PropertyCollectionByDefinition( definition );
            var result = ToEntityList<UInt32PropertyEntity,UInt32PropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // UInt64Property queries
        // ---------------------------------------------------------------------
        public UInt64PropertyEntity? GetUInt64PropertyById( Guid id )
        {
            var entity = (UInt64PropertyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt64PropertyById( id );
                if( dataObject != null )
                {
                    entity = (UInt64PropertyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt64PropertyEntity> GetUInt64PropertyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64PropertyCollection( );
            var result = ToEntityList<UInt64PropertyEntity,UInt64PropertyObject>( dataItems );
            return result;
        }
        public BindingList<UInt64PropertyEntity> GetUInt64PropertyCollectionByElement( Guid element )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64PropertyCollectionByElement( element );
            var result = ToEntityList<UInt64PropertyEntity,UInt64PropertyObject>( dataItems );
            return result;
        }

        public UInt64PropertyEntity? GetUInt64PropertyByElementAndDefinition( Guid element, Guid definition )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt64PropertyByElementAndDefinition( element, definition );
            if( dataObject != null )
            {
                var result = (UInt64PropertyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<UInt64PropertyEntity> GetUInt64PropertyCollectionByDefinition( Guid definition )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64PropertyCollectionByDefinition( definition );
            var result = ToEntityList<UInt64PropertyEntity,UInt64PropertyObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // PropertyDefinition queries
        // ---------------------------------------------------------------------
        public PropertyDefinitionEntity? GetPropertyDefinitionById( Guid id )
        {
            var entity = (PropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (PropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<PropertyDefinitionEntity> GetPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPropertyDefinitionCollection( );
            var result = ToEntityList<PropertyDefinitionEntity,PropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<PropertyDefinitionEntity> GetPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<PropertyDefinitionEntity,PropertyDefinitionObject>( dataItems );
            return result;
        }

        public PropertyDefinitionEntity? GetPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (PropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // BinaryPropertyDefinition queries
        // ---------------------------------------------------------------------
        public BinaryPropertyDefinitionEntity? GetBinaryPropertyDefinitionById( Guid id )
        {
            var entity = (BinaryPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetBinaryPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (BinaryPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<BinaryPropertyDefinitionEntity> GetBinaryPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryPropertyDefinitionCollection( );
            var result = ToEntityList<BinaryPropertyDefinitionEntity,BinaryPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<BinaryPropertyDefinitionEntity> GetBinaryPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<BinaryPropertyDefinitionEntity,BinaryPropertyDefinitionObject>( dataItems );
            return result;
        }

        public BinaryPropertyDefinitionEntity? GetBinaryPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBinaryPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (BinaryPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // BooleanPropertyDefinition queries
        // ---------------------------------------------------------------------
        public BooleanPropertyDefinitionEntity? GetBooleanPropertyDefinitionById( Guid id )
        {
            var entity = (BooleanPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetBooleanPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (BooleanPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<BooleanPropertyDefinitionEntity> GetBooleanPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanPropertyDefinitionCollection( );
            var result = ToEntityList<BooleanPropertyDefinitionEntity,BooleanPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<BooleanPropertyDefinitionEntity> GetBooleanPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<BooleanPropertyDefinitionEntity,BooleanPropertyDefinitionObject>( dataItems );
            return result;
        }

        public BooleanPropertyDefinitionEntity? GetBooleanPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBooleanPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (BooleanPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // BytePropertyDefinition queries
        // ---------------------------------------------------------------------
        public BytePropertyDefinitionEntity? GetBytePropertyDefinitionById( Guid id )
        {
            var entity = (BytePropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetBytePropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (BytePropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<BytePropertyDefinitionEntity> GetBytePropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBytePropertyDefinitionCollection( );
            var result = ToEntityList<BytePropertyDefinitionEntity,BytePropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<BytePropertyDefinitionEntity> GetBytePropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBytePropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<BytePropertyDefinitionEntity,BytePropertyDefinitionObject>( dataItems );
            return result;
        }

        public BytePropertyDefinitionEntity? GetBytePropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBytePropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (BytePropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // DateTimePropertyDefinition queries
        // ---------------------------------------------------------------------
        public DateTimePropertyDefinitionEntity? GetDateTimePropertyDefinitionById( Guid id )
        {
            var entity = (DateTimePropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetDateTimePropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (DateTimePropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<DateTimePropertyDefinitionEntity> GetDateTimePropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimePropertyDefinitionCollection( );
            var result = ToEntityList<DateTimePropertyDefinitionEntity,DateTimePropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<DateTimePropertyDefinitionEntity> GetDateTimePropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimePropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<DateTimePropertyDefinitionEntity,DateTimePropertyDefinitionObject>( dataItems );
            return result;
        }

        public DateTimePropertyDefinitionEntity? GetDateTimePropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDateTimePropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (DateTimePropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // DoublePropertyDefinition queries
        // ---------------------------------------------------------------------
        public DoublePropertyDefinitionEntity? GetDoublePropertyDefinitionById( Guid id )
        {
            var entity = (DoublePropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetDoublePropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (DoublePropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<DoublePropertyDefinitionEntity> GetDoublePropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoublePropertyDefinitionCollection( );
            var result = ToEntityList<DoublePropertyDefinitionEntity,DoublePropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<DoublePropertyDefinitionEntity> GetDoublePropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoublePropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<DoublePropertyDefinitionEntity,DoublePropertyDefinitionObject>( dataItems );
            return result;
        }

        public DoublePropertyDefinitionEntity? GetDoublePropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDoublePropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (DoublePropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GuidPropertyDefinition queries
        // ---------------------------------------------------------------------
        public GuidPropertyDefinitionEntity? GetGuidPropertyDefinitionById( Guid id )
        {
            var entity = (GuidPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGuidPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (GuidPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GuidPropertyDefinitionEntity> GetGuidPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidPropertyDefinitionCollection( );
            var result = ToEntityList<GuidPropertyDefinitionEntity,GuidPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<GuidPropertyDefinitionEntity> GetGuidPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<GuidPropertyDefinitionEntity,GuidPropertyDefinitionObject>( dataItems );
            return result;
        }

        public GuidPropertyDefinitionEntity? GetGuidPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGuidPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (GuidPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // Int16PropertyDefinition queries
        // ---------------------------------------------------------------------
        public Int16PropertyDefinitionEntity? GetInt16PropertyDefinitionById( Guid id )
        {
            var entity = (Int16PropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt16PropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (Int16PropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int16PropertyDefinitionEntity> GetInt16PropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16PropertyDefinitionCollection( );
            var result = ToEntityList<Int16PropertyDefinitionEntity,Int16PropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<Int16PropertyDefinitionEntity> GetInt16PropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16PropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<Int16PropertyDefinitionEntity,Int16PropertyDefinitionObject>( dataItems );
            return result;
        }

        public Int16PropertyDefinitionEntity? GetInt16PropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt16PropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (Int16PropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // Int32PropertyDefinition queries
        // ---------------------------------------------------------------------
        public Int32PropertyDefinitionEntity? GetInt32PropertyDefinitionById( Guid id )
        {
            var entity = (Int32PropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt32PropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (Int32PropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int32PropertyDefinitionEntity> GetInt32PropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32PropertyDefinitionCollection( );
            var result = ToEntityList<Int32PropertyDefinitionEntity,Int32PropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<Int32PropertyDefinitionEntity> GetInt32PropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32PropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<Int32PropertyDefinitionEntity,Int32PropertyDefinitionObject>( dataItems );
            return result;
        }

        public Int32PropertyDefinitionEntity? GetInt32PropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt32PropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (Int32PropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // Int64PropertyDefinition queries
        // ---------------------------------------------------------------------
        public Int64PropertyDefinitionEntity? GetInt64PropertyDefinitionById( Guid id )
        {
            var entity = (Int64PropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt64PropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (Int64PropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int64PropertyDefinitionEntity> GetInt64PropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64PropertyDefinitionCollection( );
            var result = ToEntityList<Int64PropertyDefinitionEntity,Int64PropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<Int64PropertyDefinitionEntity> GetInt64PropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64PropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<Int64PropertyDefinitionEntity,Int64PropertyDefinitionObject>( dataItems );
            return result;
        }

        public Int64PropertyDefinitionEntity? GetInt64PropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt64PropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (Int64PropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // ReferencePropertyDefinition queries
        // ---------------------------------------------------------------------
        public ReferencePropertyDefinitionEntity? GetReferencePropertyDefinitionById( Guid id )
        {
            var entity = (ReferencePropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetReferencePropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (ReferencePropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ReferencePropertyDefinitionEntity> GetReferencePropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferencePropertyDefinitionCollection( );
            var result = ToEntityList<ReferencePropertyDefinitionEntity,ReferencePropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<ReferencePropertyDefinitionEntity> GetReferencePropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferencePropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<ReferencePropertyDefinitionEntity,ReferencePropertyDefinitionObject>( dataItems );
            return result;
        }

        public ReferencePropertyDefinitionEntity? GetReferencePropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetReferencePropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (ReferencePropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ReferencePropertyDefinitionEntity> GetReferencePropertyDefinitionCollectionByDefaultValue( Guid? defaultValue )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferencePropertyDefinitionCollectionByDefaultValue( defaultValue );
            var result = ToEntityList<ReferencePropertyDefinitionEntity,ReferencePropertyDefinitionObject>( dataItems );
            return result;
        }

        public BindingList<ReferencePropertyDefinitionEntity> GetReferencePropertyDefinitionCollectionByReferencedElementType( Guid? referencedElementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferencePropertyDefinitionCollectionByReferencedElementType( referencedElementType );
            var result = ToEntityList<ReferencePropertyDefinitionEntity,ReferencePropertyDefinitionObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // SBytePropertyDefinition queries
        // ---------------------------------------------------------------------
        public SBytePropertyDefinitionEntity? GetSBytePropertyDefinitionById( Guid id )
        {
            var entity = (SBytePropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSBytePropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (SBytePropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SBytePropertyDefinitionEntity> GetSBytePropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSBytePropertyDefinitionCollection( );
            var result = ToEntityList<SBytePropertyDefinitionEntity,SBytePropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<SBytePropertyDefinitionEntity> GetSBytePropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSBytePropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<SBytePropertyDefinitionEntity,SBytePropertyDefinitionObject>( dataItems );
            return result;
        }

        public SBytePropertyDefinitionEntity? GetSBytePropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSBytePropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (SBytePropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // SinglePropertyDefinition queries
        // ---------------------------------------------------------------------
        public SinglePropertyDefinitionEntity? GetSinglePropertyDefinitionById( Guid id )
        {
            var entity = (SinglePropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSinglePropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (SinglePropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SinglePropertyDefinitionEntity> GetSinglePropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSinglePropertyDefinitionCollection( );
            var result = ToEntityList<SinglePropertyDefinitionEntity,SinglePropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<SinglePropertyDefinitionEntity> GetSinglePropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSinglePropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<SinglePropertyDefinitionEntity,SinglePropertyDefinitionObject>( dataItems );
            return result;
        }

        public SinglePropertyDefinitionEntity? GetSinglePropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSinglePropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (SinglePropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // StringPropertyDefinition queries
        // ---------------------------------------------------------------------
        public StringPropertyDefinitionEntity? GetStringPropertyDefinitionById( Guid id )
        {
            var entity = (StringPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetStringPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (StringPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<StringPropertyDefinitionEntity> GetStringPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringPropertyDefinitionCollection( );
            var result = ToEntityList<StringPropertyDefinitionEntity,StringPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<StringPropertyDefinitionEntity> GetStringPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<StringPropertyDefinitionEntity,StringPropertyDefinitionObject>( dataItems );
            return result;
        }

        public StringPropertyDefinitionEntity? GetStringPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetStringPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (StringPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // TimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public TimeseriesPropertyDefinitionEntity? GetTimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (TimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (TimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TimeseriesPropertyDefinitionEntity> GetTimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<TimeseriesPropertyDefinitionEntity,TimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<TimeseriesPropertyDefinitionEntity> GetTimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<TimeseriesPropertyDefinitionEntity,TimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public TimeseriesPropertyDefinitionEntity? GetTimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (TimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // BinaryTimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public BinaryTimeseriesPropertyDefinitionEntity? GetBinaryTimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (BinaryTimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetBinaryTimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (BinaryTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<BinaryTimeseriesPropertyDefinitionEntity> GetBinaryTimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<BinaryTimeseriesPropertyDefinitionEntity,BinaryTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<BinaryTimeseriesPropertyDefinitionEntity> GetBinaryTimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<BinaryTimeseriesPropertyDefinitionEntity,BinaryTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public BinaryTimeseriesPropertyDefinitionEntity? GetBinaryTimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBinaryTimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (BinaryTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // BooleanTimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public BooleanTimeseriesPropertyDefinitionEntity? GetBooleanTimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (BooleanTimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetBooleanTimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (BooleanTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<BooleanTimeseriesPropertyDefinitionEntity> GetBooleanTimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<BooleanTimeseriesPropertyDefinitionEntity,BooleanTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<BooleanTimeseriesPropertyDefinitionEntity> GetBooleanTimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<BooleanTimeseriesPropertyDefinitionEntity,BooleanTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public BooleanTimeseriesPropertyDefinitionEntity? GetBooleanTimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBooleanTimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (BooleanTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // ByteTimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public ByteTimeseriesPropertyDefinitionEntity? GetByteTimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (ByteTimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetByteTimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (ByteTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ByteTimeseriesPropertyDefinitionEntity> GetByteTimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<ByteTimeseriesPropertyDefinitionEntity,ByteTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<ByteTimeseriesPropertyDefinitionEntity> GetByteTimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<ByteTimeseriesPropertyDefinitionEntity,ByteTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public ByteTimeseriesPropertyDefinitionEntity? GetByteTimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetByteTimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (ByteTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // DateTimeTimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public DateTimeTimeseriesPropertyDefinitionEntity? GetDateTimeTimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (DateTimeTimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetDateTimeTimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (DateTimeTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<DateTimeTimeseriesPropertyDefinitionEntity> GetDateTimeTimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<DateTimeTimeseriesPropertyDefinitionEntity,DateTimeTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<DateTimeTimeseriesPropertyDefinitionEntity> GetDateTimeTimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<DateTimeTimeseriesPropertyDefinitionEntity,DateTimeTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public DateTimeTimeseriesPropertyDefinitionEntity? GetDateTimeTimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDateTimeTimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (DateTimeTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // DoubleTimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public DoubleTimeseriesPropertyDefinitionEntity? GetDoubleTimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (DoubleTimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetDoubleTimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (DoubleTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<DoubleTimeseriesPropertyDefinitionEntity> GetDoubleTimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<DoubleTimeseriesPropertyDefinitionEntity,DoubleTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<DoubleTimeseriesPropertyDefinitionEntity> GetDoubleTimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<DoubleTimeseriesPropertyDefinitionEntity,DoubleTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public DoubleTimeseriesPropertyDefinitionEntity? GetDoubleTimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDoubleTimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (DoubleTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GuidTimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public GuidTimeseriesPropertyDefinitionEntity? GetGuidTimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (GuidTimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGuidTimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (GuidTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GuidTimeseriesPropertyDefinitionEntity> GetGuidTimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<GuidTimeseriesPropertyDefinitionEntity,GuidTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<GuidTimeseriesPropertyDefinitionEntity> GetGuidTimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<GuidTimeseriesPropertyDefinitionEntity,GuidTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public GuidTimeseriesPropertyDefinitionEntity? GetGuidTimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGuidTimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (GuidTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // Int16TimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public Int16TimeseriesPropertyDefinitionEntity? GetInt16TimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (Int16TimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt16TimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (Int16TimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int16TimeseriesPropertyDefinitionEntity> GetInt16TimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<Int16TimeseriesPropertyDefinitionEntity,Int16TimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<Int16TimeseriesPropertyDefinitionEntity> GetInt16TimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<Int16TimeseriesPropertyDefinitionEntity,Int16TimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public Int16TimeseriesPropertyDefinitionEntity? GetInt16TimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt16TimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (Int16TimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // Int32TimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public Int32TimeseriesPropertyDefinitionEntity? GetInt32TimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (Int32TimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt32TimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (Int32TimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int32TimeseriesPropertyDefinitionEntity> GetInt32TimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<Int32TimeseriesPropertyDefinitionEntity,Int32TimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<Int32TimeseriesPropertyDefinitionEntity> GetInt32TimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<Int32TimeseriesPropertyDefinitionEntity,Int32TimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public Int32TimeseriesPropertyDefinitionEntity? GetInt32TimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt32TimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (Int32TimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // Int64TimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public Int64TimeseriesPropertyDefinitionEntity? GetInt64TimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (Int64TimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt64TimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (Int64TimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int64TimeseriesPropertyDefinitionEntity> GetInt64TimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<Int64TimeseriesPropertyDefinitionEntity,Int64TimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<Int64TimeseriesPropertyDefinitionEntity> GetInt64TimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<Int64TimeseriesPropertyDefinitionEntity,Int64TimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public Int64TimeseriesPropertyDefinitionEntity? GetInt64TimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt64TimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (Int64TimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // ReferenceTimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public ReferenceTimeseriesPropertyDefinitionEntity? GetReferenceTimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (ReferenceTimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetReferenceTimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (ReferenceTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ReferenceTimeseriesPropertyDefinitionEntity> GetReferenceTimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<ReferenceTimeseriesPropertyDefinitionEntity,ReferenceTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<ReferenceTimeseriesPropertyDefinitionEntity> GetReferenceTimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<ReferenceTimeseriesPropertyDefinitionEntity,ReferenceTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public ReferenceTimeseriesPropertyDefinitionEntity? GetReferenceTimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetReferenceTimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (ReferenceTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ReferenceTimeseriesPropertyDefinitionEntity> GetReferenceTimeseriesPropertyDefinitionCollectionByReferencedElementType( Guid? referencedElementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesPropertyDefinitionCollectionByReferencedElementType( referencedElementType );
            var result = ToEntityList<ReferenceTimeseriesPropertyDefinitionEntity,ReferenceTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // SByteTimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public SByteTimeseriesPropertyDefinitionEntity? GetSByteTimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (SByteTimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSByteTimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (SByteTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SByteTimeseriesPropertyDefinitionEntity> GetSByteTimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<SByteTimeseriesPropertyDefinitionEntity,SByteTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<SByteTimeseriesPropertyDefinitionEntity> GetSByteTimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<SByteTimeseriesPropertyDefinitionEntity,SByteTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public SByteTimeseriesPropertyDefinitionEntity? GetSByteTimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSByteTimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (SByteTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // SingleTimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public SingleTimeseriesPropertyDefinitionEntity? GetSingleTimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (SingleTimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSingleTimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (SingleTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SingleTimeseriesPropertyDefinitionEntity> GetSingleTimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<SingleTimeseriesPropertyDefinitionEntity,SingleTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<SingleTimeseriesPropertyDefinitionEntity> GetSingleTimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<SingleTimeseriesPropertyDefinitionEntity,SingleTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public SingleTimeseriesPropertyDefinitionEntity? GetSingleTimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSingleTimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (SingleTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // StringTimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public StringTimeseriesPropertyDefinitionEntity? GetStringTimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (StringTimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetStringTimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (StringTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<StringTimeseriesPropertyDefinitionEntity> GetStringTimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<StringTimeseriesPropertyDefinitionEntity,StringTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<StringTimeseriesPropertyDefinitionEntity> GetStringTimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<StringTimeseriesPropertyDefinitionEntity,StringTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public StringTimeseriesPropertyDefinitionEntity? GetStringTimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetStringTimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (StringTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // TimeSpanTimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public TimeSpanTimeseriesPropertyDefinitionEntity? GetTimeSpanTimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (TimeSpanTimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTimeSpanTimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (TimeSpanTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TimeSpanTimeseriesPropertyDefinitionEntity> GetTimeSpanTimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<TimeSpanTimeseriesPropertyDefinitionEntity,TimeSpanTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<TimeSpanTimeseriesPropertyDefinitionEntity> GetTimeSpanTimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<TimeSpanTimeseriesPropertyDefinitionEntity,TimeSpanTimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public TimeSpanTimeseriesPropertyDefinitionEntity? GetTimeSpanTimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTimeSpanTimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (TimeSpanTimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // UInt16TimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public UInt16TimeseriesPropertyDefinitionEntity? GetUInt16TimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (UInt16TimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt16TimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (UInt16TimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt16TimeseriesPropertyDefinitionEntity> GetUInt16TimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<UInt16TimeseriesPropertyDefinitionEntity,UInt16TimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<UInt16TimeseriesPropertyDefinitionEntity> GetUInt16TimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<UInt16TimeseriesPropertyDefinitionEntity,UInt16TimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public UInt16TimeseriesPropertyDefinitionEntity? GetUInt16TimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt16TimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (UInt16TimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // UInt32TimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public UInt32TimeseriesPropertyDefinitionEntity? GetUInt32TimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (UInt32TimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt32TimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (UInt32TimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt32TimeseriesPropertyDefinitionEntity> GetUInt32TimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<UInt32TimeseriesPropertyDefinitionEntity,UInt32TimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<UInt32TimeseriesPropertyDefinitionEntity> GetUInt32TimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<UInt32TimeseriesPropertyDefinitionEntity,UInt32TimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public UInt32TimeseriesPropertyDefinitionEntity? GetUInt32TimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt32TimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (UInt32TimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // UInt64TimeseriesPropertyDefinition queries
        // ---------------------------------------------------------------------
        public UInt64TimeseriesPropertyDefinitionEntity? GetUInt64TimeseriesPropertyDefinitionById( Guid id )
        {
            var entity = (UInt64TimeseriesPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt64TimeseriesPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (UInt64TimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt64TimeseriesPropertyDefinitionEntity> GetUInt64TimeseriesPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesPropertyDefinitionCollection( );
            var result = ToEntityList<UInt64TimeseriesPropertyDefinitionEntity,UInt64TimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<UInt64TimeseriesPropertyDefinitionEntity> GetUInt64TimeseriesPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<UInt64TimeseriesPropertyDefinitionEntity,UInt64TimeseriesPropertyDefinitionObject>( dataItems );
            return result;
        }

        public UInt64TimeseriesPropertyDefinitionEntity? GetUInt64TimeseriesPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt64TimeseriesPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (UInt64TimeseriesPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // TimeSpanPropertyDefinition queries
        // ---------------------------------------------------------------------
        public TimeSpanPropertyDefinitionEntity? GetTimeSpanPropertyDefinitionById( Guid id )
        {
            var entity = (TimeSpanPropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTimeSpanPropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (TimeSpanPropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TimeSpanPropertyDefinitionEntity> GetTimeSpanPropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanPropertyDefinitionCollection( );
            var result = ToEntityList<TimeSpanPropertyDefinitionEntity,TimeSpanPropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<TimeSpanPropertyDefinitionEntity> GetTimeSpanPropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanPropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<TimeSpanPropertyDefinitionEntity,TimeSpanPropertyDefinitionObject>( dataItems );
            return result;
        }

        public TimeSpanPropertyDefinitionEntity? GetTimeSpanPropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTimeSpanPropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (TimeSpanPropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // UInt16PropertyDefinition queries
        // ---------------------------------------------------------------------
        public UInt16PropertyDefinitionEntity? GetUInt16PropertyDefinitionById( Guid id )
        {
            var entity = (UInt16PropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt16PropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (UInt16PropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt16PropertyDefinitionEntity> GetUInt16PropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16PropertyDefinitionCollection( );
            var result = ToEntityList<UInt16PropertyDefinitionEntity,UInt16PropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<UInt16PropertyDefinitionEntity> GetUInt16PropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16PropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<UInt16PropertyDefinitionEntity,UInt16PropertyDefinitionObject>( dataItems );
            return result;
        }

        public UInt16PropertyDefinitionEntity? GetUInt16PropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt16PropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (UInt16PropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // UInt32PropertyDefinition queries
        // ---------------------------------------------------------------------
        public UInt32PropertyDefinitionEntity? GetUInt32PropertyDefinitionById( Guid id )
        {
            var entity = (UInt32PropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt32PropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (UInt32PropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt32PropertyDefinitionEntity> GetUInt32PropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32PropertyDefinitionCollection( );
            var result = ToEntityList<UInt32PropertyDefinitionEntity,UInt32PropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<UInt32PropertyDefinitionEntity> GetUInt32PropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32PropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<UInt32PropertyDefinitionEntity,UInt32PropertyDefinitionObject>( dataItems );
            return result;
        }

        public UInt32PropertyDefinitionEntity? GetUInt32PropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt32PropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (UInt32PropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // UInt64PropertyDefinition queries
        // ---------------------------------------------------------------------
        public UInt64PropertyDefinitionEntity? GetUInt64PropertyDefinitionById( Guid id )
        {
            var entity = (UInt64PropertyDefinitionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt64PropertyDefinitionById( id );
                if( dataObject != null )
                {
                    entity = (UInt64PropertyDefinitionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt64PropertyDefinitionEntity> GetUInt64PropertyDefinitionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64PropertyDefinitionCollection( );
            var result = ToEntityList<UInt64PropertyDefinitionEntity,UInt64PropertyDefinitionObject>( dataItems );
            return result;
        }
        public BindingList<UInt64PropertyDefinitionEntity> GetUInt64PropertyDefinitionCollectionByElementType( Guid elementType )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64PropertyDefinitionCollectionByElementType( elementType );
            var result = ToEntityList<UInt64PropertyDefinitionEntity,UInt64PropertyDefinitionObject>( dataItems );
            return result;
        }

        public UInt64PropertyDefinitionEntity? GetUInt64PropertyDefinitionByElementTypeAndName( Guid elementType, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt64PropertyDefinitionByElementTypeAndName( elementType, name );
            if( dataObject != null )
            {
                var result = (UInt64PropertyDefinitionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarAlarmStatus queries
        // ---------------------------------------------------------------------
        public RadarAlarmStatusEntity? GetRadarAlarmStatusById( Guid id )
        {
            var entity = (RadarAlarmStatusEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarAlarmStatusById( id );
                if( dataObject != null )
                {
                    entity = (RadarAlarmStatusEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarAlarmStatusEntity> GetRadarAlarmStatusCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarAlarmStatusCollection( );
            var result = ToEntityList<RadarAlarmStatusEntity,RadarAlarmStatusObject>( dataItems );
            return result;
        }
        public BindingList<RadarAlarmStatusEntity> GetRadarAlarmStatusCollectionByRadar( Guid radar )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarAlarmStatusCollectionByRadar( radar );
            var result = ToEntityList<RadarAlarmStatusEntity,RadarAlarmStatusObject>( dataItems );
            return result;
        }

        public RadarAlarmStatusEntity? GetRadarAlarmStatusByRadarAndTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarAlarmStatusByRadarAndTimestamp( radar, timestamp );
            if( dataObject != null )
            {
                var result = (RadarAlarmStatusEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public RadarAlarmStatusEntity? GetRadarAlarmStatusByRadarAtTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarAlarmStatusByRadarAtTimestamp( radar, timestamp );
            if( dataObject != null )
            {
                var result = (RadarAlarmStatusEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<RadarAlarmStatusEntity> GetRadarAlarmStatusByRadarFromTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarAlarmStatusByRadarFromTimestamp( radar, timestamp );
            var result = ToEntityList<RadarAlarmStatusEntity,RadarAlarmStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarAlarmStatusEntity> GetRadarAlarmStatusByRadarUntilTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarAlarmStatusByRadarUntilTimestamp( radar, timestamp );
            var result = ToEntityList<RadarAlarmStatusEntity,RadarAlarmStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarAlarmStatusEntity> GetRadarAlarmStatusByRadarOverTimestamp( Guid radar, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarAlarmStatusByRadarOverTimestamp( radar, fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarAlarmStatusEntity,RadarAlarmStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarAlarmStatusEntity> GetRadarAlarmStatusCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarAlarmStatusCollectionByTimestamp( timestamp );
            var result = ToEntityList<RadarAlarmStatusEntity,RadarAlarmStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarAlarmStatusEntity> GetRadarAlarmStatusCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarAlarmStatusCollectionAtTimestamp( timestamp );
            var result = ToEntityList<RadarAlarmStatusEntity,RadarAlarmStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarAlarmStatusEntity> GetRadarAlarmStatusCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarAlarmStatusCollectionFromTimestamp( timestamp );
            var result = ToEntityList<RadarAlarmStatusEntity,RadarAlarmStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarAlarmStatusEntity> GetRadarAlarmStatusCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarAlarmStatusCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<RadarAlarmStatusEntity,RadarAlarmStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarAlarmStatusEntity> GetRadarAlarmStatusCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarAlarmStatusCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarAlarmStatusEntity,RadarAlarmStatusObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // RadarCommand queries
        // ---------------------------------------------------------------------
        public RadarCommandEntity? GetRadarCommandById( Guid id )
        {
            var entity = (RadarCommandEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarCommandById( id );
                if( dataObject != null )
                {
                    entity = (RadarCommandEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarCommandEntity> GetRadarCommandCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandCollection( );
            var result = ToEntityList<RadarCommandEntity,RadarCommandObject>( dataItems );
            return result;
        }
        public BindingList<RadarCommandEntity> GetRadarCommandCollectionByRadar( Guid radar )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandCollectionByRadar( radar );
            var result = ToEntityList<RadarCommandEntity,RadarCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandEntity> GetRadarCommandCollectionByRadarAndTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandCollectionByRadarAndTimestamp( radar, timestamp );
            var result = ToEntityList<RadarCommandEntity,RadarCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandEntity> GetRadarCommandCollectionByRadarAtTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandCollectionByRadarAtTimestamp( radar, timestamp );
            var result = ToEntityList<RadarCommandEntity,RadarCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandEntity> GetRadarCommandCollectionByRadarFromTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandCollectionByRadarFromTimestamp( radar, timestamp );
            var result = ToEntityList<RadarCommandEntity,RadarCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandEntity> GetRadarCommandCollectionByRadarUntilTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandCollectionByRadarUntilTimestamp( radar, timestamp );
            var result = ToEntityList<RadarCommandEntity,RadarCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandEntity> GetRadarCommandCollectionByRadarOverTimestamp( Guid radar, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandCollectionByRadarOverTimestamp( radar, fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarCommandEntity,RadarCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandEntity> GetRadarCommandCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandCollectionByTimestamp( timestamp );
            var result = ToEntityList<RadarCommandEntity,RadarCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandEntity> GetRadarCommandCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandCollectionAtTimestamp( timestamp );
            var result = ToEntityList<RadarCommandEntity,RadarCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandEntity> GetRadarCommandCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandCollectionFromTimestamp( timestamp );
            var result = ToEntityList<RadarCommandEntity,RadarCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandEntity> GetRadarCommandCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<RadarCommandEntity,RadarCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandEntity> GetRadarCommandCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarCommandEntity,RadarCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandEntity> GetRadarCommandCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandCollectionByReply( reply );
            var result = ToEntityList<RadarCommandEntity,RadarCommandObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // RadarCommandGetStatus queries
        // ---------------------------------------------------------------------
        public RadarCommandGetStatusEntity? GetRadarCommandGetStatusById( Guid id )
        {
            var entity = (RadarCommandGetStatusEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarCommandGetStatusById( id );
                if( dataObject != null )
                {
                    entity = (RadarCommandGetStatusEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarCommandGetStatusEntity> GetRadarCommandGetStatusCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandGetStatusCollection( );
            var result = ToEntityList<RadarCommandGetStatusEntity,RadarCommandGetStatusObject>( dataItems );
            return result;
        }
        public BindingList<RadarCommandGetStatusEntity> GetRadarCommandGetStatusCollectionByRadar( Guid radar )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandGetStatusCollectionByRadar( radar );
            var result = ToEntityList<RadarCommandGetStatusEntity,RadarCommandGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandGetStatusEntity> GetRadarCommandGetStatusCollectionByRadarAndTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandGetStatusCollectionByRadarAndTimestamp( radar, timestamp );
            var result = ToEntityList<RadarCommandGetStatusEntity,RadarCommandGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandGetStatusEntity> GetRadarCommandGetStatusCollectionByRadarAtTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandGetStatusCollectionByRadarAtTimestamp( radar, timestamp );
            var result = ToEntityList<RadarCommandGetStatusEntity,RadarCommandGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandGetStatusEntity> GetRadarCommandGetStatusCollectionByRadarFromTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandGetStatusCollectionByRadarFromTimestamp( radar, timestamp );
            var result = ToEntityList<RadarCommandGetStatusEntity,RadarCommandGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandGetStatusEntity> GetRadarCommandGetStatusCollectionByRadarUntilTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandGetStatusCollectionByRadarUntilTimestamp( radar, timestamp );
            var result = ToEntityList<RadarCommandGetStatusEntity,RadarCommandGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandGetStatusEntity> GetRadarCommandGetStatusCollectionByRadarOverTimestamp( Guid radar, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandGetStatusCollectionByRadarOverTimestamp( radar, fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarCommandGetStatusEntity,RadarCommandGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandGetStatusEntity> GetRadarCommandGetStatusCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandGetStatusCollectionByTimestamp( timestamp );
            var result = ToEntityList<RadarCommandGetStatusEntity,RadarCommandGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandGetStatusEntity> GetRadarCommandGetStatusCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandGetStatusCollectionAtTimestamp( timestamp );
            var result = ToEntityList<RadarCommandGetStatusEntity,RadarCommandGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandGetStatusEntity> GetRadarCommandGetStatusCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandGetStatusCollectionFromTimestamp( timestamp );
            var result = ToEntityList<RadarCommandGetStatusEntity,RadarCommandGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandGetStatusEntity> GetRadarCommandGetStatusCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandGetStatusCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<RadarCommandGetStatusEntity,RadarCommandGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandGetStatusEntity> GetRadarCommandGetStatusCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandGetStatusCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarCommandGetStatusEntity,RadarCommandGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandGetStatusEntity> GetRadarCommandGetStatusCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandGetStatusCollectionByReply( reply );
            var result = ToEntityList<RadarCommandGetStatusEntity,RadarCommandGetStatusObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // RadarCommandReply queries
        // ---------------------------------------------------------------------
        public RadarCommandReplyEntity? GetRadarCommandReplyById( Guid id )
        {
            var entity = (RadarCommandReplyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarCommandReplyById( id );
                if( dataObject != null )
                {
                    entity = (RadarCommandReplyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarCommandReplyEntity> GetRadarCommandReplyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyCollection( );
            var result = ToEntityList<RadarCommandReplyEntity,RadarCommandReplyObject>( dataItems );
            return result;
        }
        public BindingList<RadarCommandReplyEntity> GetRadarCommandReplyCollectionByRadar( Guid radar )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyCollectionByRadar( radar );
            var result = ToEntityList<RadarCommandReplyEntity,RadarCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyEntity> GetRadarCommandReplyCollectionByRadarAndTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyCollectionByRadarAndTimestamp( radar, timestamp );
            var result = ToEntityList<RadarCommandReplyEntity,RadarCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyEntity> GetRadarCommandReplyCollectionByRadarAtTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyCollectionByRadarAtTimestamp( radar, timestamp );
            var result = ToEntityList<RadarCommandReplyEntity,RadarCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyEntity> GetRadarCommandReplyCollectionByRadarFromTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyCollectionByRadarFromTimestamp( radar, timestamp );
            var result = ToEntityList<RadarCommandReplyEntity,RadarCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyEntity> GetRadarCommandReplyCollectionByRadarUntilTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyCollectionByRadarUntilTimestamp( radar, timestamp );
            var result = ToEntityList<RadarCommandReplyEntity,RadarCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyEntity> GetRadarCommandReplyCollectionByRadarOverTimestamp( Guid radar, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyCollectionByRadarOverTimestamp( radar, fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarCommandReplyEntity,RadarCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyEntity> GetRadarCommandReplyCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyCollectionByTimestamp( timestamp );
            var result = ToEntityList<RadarCommandReplyEntity,RadarCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyEntity> GetRadarCommandReplyCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyCollectionAtTimestamp( timestamp );
            var result = ToEntityList<RadarCommandReplyEntity,RadarCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyEntity> GetRadarCommandReplyCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyCollectionFromTimestamp( timestamp );
            var result = ToEntityList<RadarCommandReplyEntity,RadarCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyEntity> GetRadarCommandReplyCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<RadarCommandReplyEntity,RadarCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyEntity> GetRadarCommandReplyCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarCommandReplyEntity,RadarCommandReplyObject>( dataItems );
            return result;
        }

        public RadarCommandReplyEntity? GetRadarCommandReplyByCommand( Guid? command )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarCommandReplyByCommand( command );
            if( dataObject != null )
            {
                var result = (RadarCommandReplyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarCommandReplyGetStatus queries
        // ---------------------------------------------------------------------
        public RadarCommandReplyGetStatusEntity? GetRadarCommandReplyGetStatusById( Guid id )
        {
            var entity = (RadarCommandReplyGetStatusEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarCommandReplyGetStatusById( id );
                if( dataObject != null )
                {
                    entity = (RadarCommandReplyGetStatusEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarCommandReplyGetStatusEntity> GetRadarCommandReplyGetStatusCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyGetStatusCollection( );
            var result = ToEntityList<RadarCommandReplyGetStatusEntity,RadarCommandReplyGetStatusObject>( dataItems );
            return result;
        }
        public BindingList<RadarCommandReplyGetStatusEntity> GetRadarCommandReplyGetStatusCollectionByRadar( Guid radar )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyGetStatusCollectionByRadar( radar );
            var result = ToEntityList<RadarCommandReplyGetStatusEntity,RadarCommandReplyGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyGetStatusEntity> GetRadarCommandReplyGetStatusCollectionByRadarAndTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyGetStatusCollectionByRadarAndTimestamp( radar, timestamp );
            var result = ToEntityList<RadarCommandReplyGetStatusEntity,RadarCommandReplyGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyGetStatusEntity> GetRadarCommandReplyGetStatusCollectionByRadarAtTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyGetStatusCollectionByRadarAtTimestamp( radar, timestamp );
            var result = ToEntityList<RadarCommandReplyGetStatusEntity,RadarCommandReplyGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyGetStatusEntity> GetRadarCommandReplyGetStatusCollectionByRadarFromTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyGetStatusCollectionByRadarFromTimestamp( radar, timestamp );
            var result = ToEntityList<RadarCommandReplyGetStatusEntity,RadarCommandReplyGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyGetStatusEntity> GetRadarCommandReplyGetStatusCollectionByRadarUntilTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyGetStatusCollectionByRadarUntilTimestamp( radar, timestamp );
            var result = ToEntityList<RadarCommandReplyGetStatusEntity,RadarCommandReplyGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyGetStatusEntity> GetRadarCommandReplyGetStatusCollectionByRadarOverTimestamp( Guid radar, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyGetStatusCollectionByRadarOverTimestamp( radar, fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarCommandReplyGetStatusEntity,RadarCommandReplyGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyGetStatusEntity> GetRadarCommandReplyGetStatusCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyGetStatusCollectionByTimestamp( timestamp );
            var result = ToEntityList<RadarCommandReplyGetStatusEntity,RadarCommandReplyGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyGetStatusEntity> GetRadarCommandReplyGetStatusCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyGetStatusCollectionAtTimestamp( timestamp );
            var result = ToEntityList<RadarCommandReplyGetStatusEntity,RadarCommandReplyGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyGetStatusEntity> GetRadarCommandReplyGetStatusCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyGetStatusCollectionFromTimestamp( timestamp );
            var result = ToEntityList<RadarCommandReplyGetStatusEntity,RadarCommandReplyGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyGetStatusEntity> GetRadarCommandReplyGetStatusCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyGetStatusCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<RadarCommandReplyGetStatusEntity,RadarCommandReplyGetStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarCommandReplyGetStatusEntity> GetRadarCommandReplyGetStatusCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarCommandReplyGetStatusCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarCommandReplyGetStatusEntity,RadarCommandReplyGetStatusObject>( dataItems );
            return result;
        }

        public RadarCommandReplyGetStatusEntity? GetRadarCommandReplyGetStatusByCommand( Guid? command )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarCommandReplyGetStatusByCommand( command );
            if( dataObject != null )
            {
                var result = (RadarCommandReplyGetStatusEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarConfiguration queries
        // ---------------------------------------------------------------------
        public RadarConfigurationEntity? GetRadarConfigurationById( Guid id )
        {
            var entity = (RadarConfigurationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarConfigurationById( id );
                if( dataObject != null )
                {
                    entity = (RadarConfigurationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarConfigurationEntity> GetRadarConfigurationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarConfigurationCollection( );
            var result = ToEntityList<RadarConfigurationEntity,RadarConfigurationObject>( dataItems );
            return result;
        }
        public BindingList<RadarConfigurationEntity> GetRadarConfigurationCollectionByRadar( Guid radar )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarConfigurationCollectionByRadar( radar );
            var result = ToEntityList<RadarConfigurationEntity,RadarConfigurationObject>( dataItems );
            return result;
        }

        public RadarConfigurationEntity? GetRadarConfigurationByRadarAndTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarConfigurationByRadarAndTimestamp( radar, timestamp );
            if( dataObject != null )
            {
                var result = (RadarConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public RadarConfigurationEntity? GetRadarConfigurationByRadarAtTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarConfigurationByRadarAtTimestamp( radar, timestamp );
            if( dataObject != null )
            {
                var result = (RadarConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<RadarConfigurationEntity> GetRadarConfigurationByRadarFromTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarConfigurationByRadarFromTimestamp( radar, timestamp );
            var result = ToEntityList<RadarConfigurationEntity,RadarConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadarConfigurationEntity> GetRadarConfigurationByRadarUntilTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarConfigurationByRadarUntilTimestamp( radar, timestamp );
            var result = ToEntityList<RadarConfigurationEntity,RadarConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadarConfigurationEntity> GetRadarConfigurationByRadarOverTimestamp( Guid radar, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarConfigurationByRadarOverTimestamp( radar, fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarConfigurationEntity,RadarConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadarConfigurationEntity> GetRadarConfigurationCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarConfigurationCollectionByTimestamp( timestamp );
            var result = ToEntityList<RadarConfigurationEntity,RadarConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadarConfigurationEntity> GetRadarConfigurationCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarConfigurationCollectionAtTimestamp( timestamp );
            var result = ToEntityList<RadarConfigurationEntity,RadarConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadarConfigurationEntity> GetRadarConfigurationCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarConfigurationCollectionFromTimestamp( timestamp );
            var result = ToEntityList<RadarConfigurationEntity,RadarConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadarConfigurationEntity> GetRadarConfigurationCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarConfigurationCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<RadarConfigurationEntity,RadarConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadarConfigurationEntity> GetRadarConfigurationCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarConfigurationCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarConfigurationEntity,RadarConfigurationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // RadarImage queries
        // ---------------------------------------------------------------------
        public RadarImageEntity? GetRadarImageById( Guid id )
        {
            var entity = (RadarImageEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarImageById( id );
                if( dataObject != null )
                {
                    entity = (RadarImageEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarImageEntity> GetRadarImageCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarImageCollection( );
            var result = ToEntityList<RadarImageEntity,RadarImageObject>( dataItems );
            return result;
        }
        public BindingList<RadarImageEntity> GetRadarImageCollectionByRadar( Guid radar )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarImageCollectionByRadar( radar );
            var result = ToEntityList<RadarImageEntity,RadarImageObject>( dataItems );
            return result;
        }

        public RadarImageEntity? GetRadarImageByRadarAndTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarImageByRadarAndTimestamp( radar, timestamp );
            if( dataObject != null )
            {
                var result = (RadarImageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public RadarImageEntity? GetRadarImageByRadarAtTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarImageByRadarAtTimestamp( radar, timestamp );
            if( dataObject != null )
            {
                var result = (RadarImageEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<RadarImageEntity> GetRadarImageByRadarFromTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarImageByRadarFromTimestamp( radar, timestamp );
            var result = ToEntityList<RadarImageEntity,RadarImageObject>( dataItems );
            return result;
        }

        public BindingList<RadarImageEntity> GetRadarImageByRadarUntilTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarImageByRadarUntilTimestamp( radar, timestamp );
            var result = ToEntityList<RadarImageEntity,RadarImageObject>( dataItems );
            return result;
        }

        public BindingList<RadarImageEntity> GetRadarImageByRadarOverTimestamp( Guid radar, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarImageByRadarOverTimestamp( radar, fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarImageEntity,RadarImageObject>( dataItems );
            return result;
        }

        public BindingList<RadarImageEntity> GetRadarImageCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarImageCollectionByTimestamp( timestamp );
            var result = ToEntityList<RadarImageEntity,RadarImageObject>( dataItems );
            return result;
        }

        public BindingList<RadarImageEntity> GetRadarImageCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarImageCollectionAtTimestamp( timestamp );
            var result = ToEntityList<RadarImageEntity,RadarImageObject>( dataItems );
            return result;
        }

        public BindingList<RadarImageEntity> GetRadarImageCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarImageCollectionFromTimestamp( timestamp );
            var result = ToEntityList<RadarImageEntity,RadarImageObject>( dataItems );
            return result;
        }

        public BindingList<RadarImageEntity> GetRadarImageCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarImageCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<RadarImageEntity,RadarImageObject>( dataItems );
            return result;
        }

        public BindingList<RadarImageEntity> GetRadarImageCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarImageCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarImageEntity,RadarImageObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // RadarRawTrackTable queries
        // ---------------------------------------------------------------------
        public RadarRawTrackTableEntity? GetRadarRawTrackTableById( Guid id )
        {
            var entity = (RadarRawTrackTableEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarRawTrackTableById( id );
                if( dataObject != null )
                {
                    entity = (RadarRawTrackTableEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarRawTrackTableEntity> GetRadarRawTrackTableCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarRawTrackTableCollection( );
            var result = ToEntityList<RadarRawTrackTableEntity,RadarRawTrackTableObject>( dataItems );
            return result;
        }
        public BindingList<RadarRawTrackTableEntity> GetRadarRawTrackTableCollectionByRadar( Guid radar )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarRawTrackTableCollectionByRadar( radar );
            var result = ToEntityList<RadarRawTrackTableEntity,RadarRawTrackTableObject>( dataItems );
            return result;
        }

        public RadarRawTrackTableEntity? GetRadarRawTrackTableByRadarAndTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarRawTrackTableByRadarAndTimestamp( radar, timestamp );
            if( dataObject != null )
            {
                var result = (RadarRawTrackTableEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public RadarRawTrackTableEntity? GetRadarRawTrackTableByRadarAtTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarRawTrackTableByRadarAtTimestamp( radar, timestamp );
            if( dataObject != null )
            {
                var result = (RadarRawTrackTableEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<RadarRawTrackTableEntity> GetRadarRawTrackTableByRadarFromTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarRawTrackTableByRadarFromTimestamp( radar, timestamp );
            var result = ToEntityList<RadarRawTrackTableEntity,RadarRawTrackTableObject>( dataItems );
            return result;
        }

        public BindingList<RadarRawTrackTableEntity> GetRadarRawTrackTableByRadarUntilTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarRawTrackTableByRadarUntilTimestamp( radar, timestamp );
            var result = ToEntityList<RadarRawTrackTableEntity,RadarRawTrackTableObject>( dataItems );
            return result;
        }

        public BindingList<RadarRawTrackTableEntity> GetRadarRawTrackTableByRadarOverTimestamp( Guid radar, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarRawTrackTableByRadarOverTimestamp( radar, fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarRawTrackTableEntity,RadarRawTrackTableObject>( dataItems );
            return result;
        }

        public BindingList<RadarRawTrackTableEntity> GetRadarRawTrackTableCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarRawTrackTableCollectionByTimestamp( timestamp );
            var result = ToEntityList<RadarRawTrackTableEntity,RadarRawTrackTableObject>( dataItems );
            return result;
        }

        public BindingList<RadarRawTrackTableEntity> GetRadarRawTrackTableCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarRawTrackTableCollectionAtTimestamp( timestamp );
            var result = ToEntityList<RadarRawTrackTableEntity,RadarRawTrackTableObject>( dataItems );
            return result;
        }

        public BindingList<RadarRawTrackTableEntity> GetRadarRawTrackTableCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarRawTrackTableCollectionFromTimestamp( timestamp );
            var result = ToEntityList<RadarRawTrackTableEntity,RadarRawTrackTableObject>( dataItems );
            return result;
        }

        public BindingList<RadarRawTrackTableEntity> GetRadarRawTrackTableCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarRawTrackTableCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<RadarRawTrackTableEntity,RadarRawTrackTableObject>( dataItems );
            return result;
        }

        public BindingList<RadarRawTrackTableEntity> GetRadarRawTrackTableCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarRawTrackTableCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarRawTrackTableEntity,RadarRawTrackTableObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // RadarStatus queries
        // ---------------------------------------------------------------------
        public RadarStatusEntity? GetRadarStatusById( Guid id )
        {
            var entity = (RadarStatusEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarStatusById( id );
                if( dataObject != null )
                {
                    entity = (RadarStatusEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarStatusEntity> GetRadarStatusCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarStatusCollection( );
            var result = ToEntityList<RadarStatusEntity,RadarStatusObject>( dataItems );
            return result;
        }
        public BindingList<RadarStatusEntity> GetRadarStatusCollectionByRadar( Guid radar )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarStatusCollectionByRadar( radar );
            var result = ToEntityList<RadarStatusEntity,RadarStatusObject>( dataItems );
            return result;
        }

        public RadarStatusEntity? GetRadarStatusByRadarAndTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarStatusByRadarAndTimestamp( radar, timestamp );
            if( dataObject != null )
            {
                var result = (RadarStatusEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public RadarStatusEntity? GetRadarStatusByRadarAtTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarStatusByRadarAtTimestamp( radar, timestamp );
            if( dataObject != null )
            {
                var result = (RadarStatusEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<RadarStatusEntity> GetRadarStatusByRadarFromTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarStatusByRadarFromTimestamp( radar, timestamp );
            var result = ToEntityList<RadarStatusEntity,RadarStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarStatusEntity> GetRadarStatusByRadarUntilTimestamp( Guid radar, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarStatusByRadarUntilTimestamp( radar, timestamp );
            var result = ToEntityList<RadarStatusEntity,RadarStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarStatusEntity> GetRadarStatusByRadarOverTimestamp( Guid radar, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarStatusByRadarOverTimestamp( radar, fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarStatusEntity,RadarStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarStatusEntity> GetRadarStatusCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarStatusCollectionByTimestamp( timestamp );
            var result = ToEntityList<RadarStatusEntity,RadarStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarStatusEntity> GetRadarStatusCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarStatusCollectionAtTimestamp( timestamp );
            var result = ToEntityList<RadarStatusEntity,RadarStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarStatusEntity> GetRadarStatusCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarStatusCollectionFromTimestamp( timestamp );
            var result = ToEntityList<RadarStatusEntity,RadarStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarStatusEntity> GetRadarStatusCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarStatusCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<RadarStatusEntity,RadarStatusObject>( dataItems );
            return result;
        }

        public BindingList<RadarStatusEntity> GetRadarStatusCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarStatusCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadarStatusEntity,RadarStatusObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // RadioCommand queries
        // ---------------------------------------------------------------------
        public RadioCommandEntity? GetRadioCommandById( Guid id )
        {
            var entity = (RadioCommandEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadioCommandById( id );
                if( dataObject != null )
                {
                    entity = (RadioCommandEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadioCommandEntity> GetRadioCommandCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandCollection( );
            var result = ToEntityList<RadioCommandEntity,RadioCommandObject>( dataItems );
            return result;
        }
        public BindingList<RadioCommandEntity> GetRadioCommandCollectionByRadio( Guid radio )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandCollectionByRadio( radio );
            var result = ToEntityList<RadioCommandEntity,RadioCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandEntity> GetRadioCommandCollectionByRadioAndTimestamp( Guid radio, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandCollectionByRadioAndTimestamp( radio, timestamp );
            var result = ToEntityList<RadioCommandEntity,RadioCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandEntity> GetRadioCommandCollectionByRadioAtTimestamp( Guid radio, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandCollectionByRadioAtTimestamp( radio, timestamp );
            var result = ToEntityList<RadioCommandEntity,RadioCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandEntity> GetRadioCommandCollectionByRadioFromTimestamp( Guid radio, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandCollectionByRadioFromTimestamp( radio, timestamp );
            var result = ToEntityList<RadioCommandEntity,RadioCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandEntity> GetRadioCommandCollectionByRadioUntilTimestamp( Guid radio, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandCollectionByRadioUntilTimestamp( radio, timestamp );
            var result = ToEntityList<RadioCommandEntity,RadioCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandEntity> GetRadioCommandCollectionByRadioOverTimestamp( Guid radio, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandCollectionByRadioOverTimestamp( radio, fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadioCommandEntity,RadioCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandEntity> GetRadioCommandCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandCollectionByTimestamp( timestamp );
            var result = ToEntityList<RadioCommandEntity,RadioCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandEntity> GetRadioCommandCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandCollectionAtTimestamp( timestamp );
            var result = ToEntityList<RadioCommandEntity,RadioCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandEntity> GetRadioCommandCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandCollectionFromTimestamp( timestamp );
            var result = ToEntityList<RadioCommandEntity,RadioCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandEntity> GetRadioCommandCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<RadioCommandEntity,RadioCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandEntity> GetRadioCommandCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadioCommandEntity,RadioCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandEntity> GetRadioCommandCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandCollectionByReply( reply );
            var result = ToEntityList<RadioCommandEntity,RadioCommandObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // RadioCommandReply queries
        // ---------------------------------------------------------------------
        public RadioCommandReplyEntity? GetRadioCommandReplyById( Guid id )
        {
            var entity = (RadioCommandReplyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadioCommandReplyById( id );
                if( dataObject != null )
                {
                    entity = (RadioCommandReplyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadioCommandReplyEntity> GetRadioCommandReplyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandReplyCollection( );
            var result = ToEntityList<RadioCommandReplyEntity,RadioCommandReplyObject>( dataItems );
            return result;
        }
        public BindingList<RadioCommandReplyEntity> GetRadioCommandReplyCollectionByRadio( Guid radio )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandReplyCollectionByRadio( radio );
            var result = ToEntityList<RadioCommandReplyEntity,RadioCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandReplyEntity> GetRadioCommandReplyCollectionByRadioAndTimestamp( Guid radio, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandReplyCollectionByRadioAndTimestamp( radio, timestamp );
            var result = ToEntityList<RadioCommandReplyEntity,RadioCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandReplyEntity> GetRadioCommandReplyCollectionByRadioAtTimestamp( Guid radio, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandReplyCollectionByRadioAtTimestamp( radio, timestamp );
            var result = ToEntityList<RadioCommandReplyEntity,RadioCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandReplyEntity> GetRadioCommandReplyCollectionByRadioFromTimestamp( Guid radio, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandReplyCollectionByRadioFromTimestamp( radio, timestamp );
            var result = ToEntityList<RadioCommandReplyEntity,RadioCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandReplyEntity> GetRadioCommandReplyCollectionByRadioUntilTimestamp( Guid radio, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandReplyCollectionByRadioUntilTimestamp( radio, timestamp );
            var result = ToEntityList<RadioCommandReplyEntity,RadioCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandReplyEntity> GetRadioCommandReplyCollectionByRadioOverTimestamp( Guid radio, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandReplyCollectionByRadioOverTimestamp( radio, fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadioCommandReplyEntity,RadioCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandReplyEntity> GetRadioCommandReplyCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandReplyCollectionByTimestamp( timestamp );
            var result = ToEntityList<RadioCommandReplyEntity,RadioCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandReplyEntity> GetRadioCommandReplyCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandReplyCollectionAtTimestamp( timestamp );
            var result = ToEntityList<RadioCommandReplyEntity,RadioCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandReplyEntity> GetRadioCommandReplyCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandReplyCollectionFromTimestamp( timestamp );
            var result = ToEntityList<RadioCommandReplyEntity,RadioCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandReplyEntity> GetRadioCommandReplyCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandReplyCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<RadioCommandReplyEntity,RadioCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadioCommandReplyEntity> GetRadioCommandReplyCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioCommandReplyCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadioCommandReplyEntity,RadioCommandReplyObject>( dataItems );
            return result;
        }

        public RadioCommandReplyEntity? GetRadioCommandReplyByCommand( Guid? command )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadioCommandReplyByCommand( command );
            if( dataObject != null )
            {
                var result = (RadioCommandReplyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadioConfiguration queries
        // ---------------------------------------------------------------------
        public RadioConfigurationEntity? GetRadioConfigurationById( Guid id )
        {
            var entity = (RadioConfigurationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadioConfigurationById( id );
                if( dataObject != null )
                {
                    entity = (RadioConfigurationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadioConfigurationEntity> GetRadioConfigurationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioConfigurationCollection( );
            var result = ToEntityList<RadioConfigurationEntity,RadioConfigurationObject>( dataItems );
            return result;
        }
        public BindingList<RadioConfigurationEntity> GetRadioConfigurationCollectionByRadio( Guid radio )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioConfigurationCollectionByRadio( radio );
            var result = ToEntityList<RadioConfigurationEntity,RadioConfigurationObject>( dataItems );
            return result;
        }

        public RadioConfigurationEntity? GetRadioConfigurationByRadioAndTimestamp( Guid radio, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadioConfigurationByRadioAndTimestamp( radio, timestamp );
            if( dataObject != null )
            {
                var result = (RadioConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public RadioConfigurationEntity? GetRadioConfigurationByRadioAtTimestamp( Guid radio, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadioConfigurationByRadioAtTimestamp( radio, timestamp );
            if( dataObject != null )
            {
                var result = (RadioConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<RadioConfigurationEntity> GetRadioConfigurationByRadioFromTimestamp( Guid radio, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioConfigurationByRadioFromTimestamp( radio, timestamp );
            var result = ToEntityList<RadioConfigurationEntity,RadioConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadioConfigurationEntity> GetRadioConfigurationByRadioUntilTimestamp( Guid radio, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioConfigurationByRadioUntilTimestamp( radio, timestamp );
            var result = ToEntityList<RadioConfigurationEntity,RadioConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadioConfigurationEntity> GetRadioConfigurationByRadioOverTimestamp( Guid radio, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioConfigurationByRadioOverTimestamp( radio, fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadioConfigurationEntity,RadioConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadioConfigurationEntity> GetRadioConfigurationCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioConfigurationCollectionByTimestamp( timestamp );
            var result = ToEntityList<RadioConfigurationEntity,RadioConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadioConfigurationEntity> GetRadioConfigurationCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioConfigurationCollectionAtTimestamp( timestamp );
            var result = ToEntityList<RadioConfigurationEntity,RadioConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadioConfigurationEntity> GetRadioConfigurationCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioConfigurationCollectionFromTimestamp( timestamp );
            var result = ToEntityList<RadioConfigurationEntity,RadioConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadioConfigurationEntity> GetRadioConfigurationCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioConfigurationCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<RadioConfigurationEntity,RadioConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadioConfigurationEntity> GetRadioConfigurationCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadioConfigurationCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadioConfigurationEntity,RadioConfigurationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // RadomeCommand queries
        // ---------------------------------------------------------------------
        public RadomeCommandEntity? GetRadomeCommandById( Guid id )
        {
            var entity = (RadomeCommandEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadomeCommandById( id );
                if( dataObject != null )
                {
                    entity = (RadomeCommandEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadomeCommandEntity> GetRadomeCommandCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandCollection( );
            var result = ToEntityList<RadomeCommandEntity,RadomeCommandObject>( dataItems );
            return result;
        }
        public BindingList<RadomeCommandEntity> GetRadomeCommandCollectionByRadome( Guid radome )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandCollectionByRadome( radome );
            var result = ToEntityList<RadomeCommandEntity,RadomeCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandEntity> GetRadomeCommandCollectionByRadomeAndTimestamp( Guid radome, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandCollectionByRadomeAndTimestamp( radome, timestamp );
            var result = ToEntityList<RadomeCommandEntity,RadomeCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandEntity> GetRadomeCommandCollectionByRadomeAtTimestamp( Guid radome, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandCollectionByRadomeAtTimestamp( radome, timestamp );
            var result = ToEntityList<RadomeCommandEntity,RadomeCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandEntity> GetRadomeCommandCollectionByRadomeFromTimestamp( Guid radome, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandCollectionByRadomeFromTimestamp( radome, timestamp );
            var result = ToEntityList<RadomeCommandEntity,RadomeCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandEntity> GetRadomeCommandCollectionByRadomeUntilTimestamp( Guid radome, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandCollectionByRadomeUntilTimestamp( radome, timestamp );
            var result = ToEntityList<RadomeCommandEntity,RadomeCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandEntity> GetRadomeCommandCollectionByRadomeOverTimestamp( Guid radome, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandCollectionByRadomeOverTimestamp( radome, fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadomeCommandEntity,RadomeCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandEntity> GetRadomeCommandCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandCollectionByTimestamp( timestamp );
            var result = ToEntityList<RadomeCommandEntity,RadomeCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandEntity> GetRadomeCommandCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandCollectionAtTimestamp( timestamp );
            var result = ToEntityList<RadomeCommandEntity,RadomeCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandEntity> GetRadomeCommandCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandCollectionFromTimestamp( timestamp );
            var result = ToEntityList<RadomeCommandEntity,RadomeCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandEntity> GetRadomeCommandCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<RadomeCommandEntity,RadomeCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandEntity> GetRadomeCommandCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadomeCommandEntity,RadomeCommandObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandEntity> GetRadomeCommandCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandCollectionByReply( reply );
            var result = ToEntityList<RadomeCommandEntity,RadomeCommandObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // RadomeCommandReply queries
        // ---------------------------------------------------------------------
        public RadomeCommandReplyEntity? GetRadomeCommandReplyById( Guid id )
        {
            var entity = (RadomeCommandReplyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadomeCommandReplyById( id );
                if( dataObject != null )
                {
                    entity = (RadomeCommandReplyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadomeCommandReplyEntity> GetRadomeCommandReplyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandReplyCollection( );
            var result = ToEntityList<RadomeCommandReplyEntity,RadomeCommandReplyObject>( dataItems );
            return result;
        }
        public BindingList<RadomeCommandReplyEntity> GetRadomeCommandReplyCollectionByRadome( Guid radome )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandReplyCollectionByRadome( radome );
            var result = ToEntityList<RadomeCommandReplyEntity,RadomeCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandReplyEntity> GetRadomeCommandReplyCollectionByRadomeAndTimestamp( Guid radome, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandReplyCollectionByRadomeAndTimestamp( radome, timestamp );
            var result = ToEntityList<RadomeCommandReplyEntity,RadomeCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandReplyEntity> GetRadomeCommandReplyCollectionByRadomeAtTimestamp( Guid radome, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandReplyCollectionByRadomeAtTimestamp( radome, timestamp );
            var result = ToEntityList<RadomeCommandReplyEntity,RadomeCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandReplyEntity> GetRadomeCommandReplyCollectionByRadomeFromTimestamp( Guid radome, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandReplyCollectionByRadomeFromTimestamp( radome, timestamp );
            var result = ToEntityList<RadomeCommandReplyEntity,RadomeCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandReplyEntity> GetRadomeCommandReplyCollectionByRadomeUntilTimestamp( Guid radome, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandReplyCollectionByRadomeUntilTimestamp( radome, timestamp );
            var result = ToEntityList<RadomeCommandReplyEntity,RadomeCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandReplyEntity> GetRadomeCommandReplyCollectionByRadomeOverTimestamp( Guid radome, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandReplyCollectionByRadomeOverTimestamp( radome, fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadomeCommandReplyEntity,RadomeCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandReplyEntity> GetRadomeCommandReplyCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandReplyCollectionByTimestamp( timestamp );
            var result = ToEntityList<RadomeCommandReplyEntity,RadomeCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandReplyEntity> GetRadomeCommandReplyCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandReplyCollectionAtTimestamp( timestamp );
            var result = ToEntityList<RadomeCommandReplyEntity,RadomeCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandReplyEntity> GetRadomeCommandReplyCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandReplyCollectionFromTimestamp( timestamp );
            var result = ToEntityList<RadomeCommandReplyEntity,RadomeCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandReplyEntity> GetRadomeCommandReplyCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandReplyCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<RadomeCommandReplyEntity,RadomeCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<RadomeCommandReplyEntity> GetRadomeCommandReplyCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeCommandReplyCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadomeCommandReplyEntity,RadomeCommandReplyObject>( dataItems );
            return result;
        }

        public RadomeCommandReplyEntity? GetRadomeCommandReplyByCommand( Guid? command )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadomeCommandReplyByCommand( command );
            if( dataObject != null )
            {
                var result = (RadomeCommandReplyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadomeConfiguration queries
        // ---------------------------------------------------------------------
        public RadomeConfigurationEntity? GetRadomeConfigurationById( Guid id )
        {
            var entity = (RadomeConfigurationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadomeConfigurationById( id );
                if( dataObject != null )
                {
                    entity = (RadomeConfigurationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadomeConfigurationEntity> GetRadomeConfigurationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeConfigurationCollection( );
            var result = ToEntityList<RadomeConfigurationEntity,RadomeConfigurationObject>( dataItems );
            return result;
        }
        public BindingList<RadomeConfigurationEntity> GetRadomeConfigurationCollectionByRadome( Guid radome )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeConfigurationCollectionByRadome( radome );
            var result = ToEntityList<RadomeConfigurationEntity,RadomeConfigurationObject>( dataItems );
            return result;
        }

        public RadomeConfigurationEntity? GetRadomeConfigurationByRadomeAndTimestamp( Guid radome, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadomeConfigurationByRadomeAndTimestamp( radome, timestamp );
            if( dataObject != null )
            {
                var result = (RadomeConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public RadomeConfigurationEntity? GetRadomeConfigurationByRadomeAtTimestamp( Guid radome, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadomeConfigurationByRadomeAtTimestamp( radome, timestamp );
            if( dataObject != null )
            {
                var result = (RadomeConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<RadomeConfigurationEntity> GetRadomeConfigurationByRadomeFromTimestamp( Guid radome, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeConfigurationByRadomeFromTimestamp( radome, timestamp );
            var result = ToEntityList<RadomeConfigurationEntity,RadomeConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadomeConfigurationEntity> GetRadomeConfigurationByRadomeUntilTimestamp( Guid radome, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeConfigurationByRadomeUntilTimestamp( radome, timestamp );
            var result = ToEntityList<RadomeConfigurationEntity,RadomeConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadomeConfigurationEntity> GetRadomeConfigurationByRadomeOverTimestamp( Guid radome, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeConfigurationByRadomeOverTimestamp( radome, fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadomeConfigurationEntity,RadomeConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadomeConfigurationEntity> GetRadomeConfigurationCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeConfigurationCollectionByTimestamp( timestamp );
            var result = ToEntityList<RadomeConfigurationEntity,RadomeConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadomeConfigurationEntity> GetRadomeConfigurationCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeConfigurationCollectionAtTimestamp( timestamp );
            var result = ToEntityList<RadomeConfigurationEntity,RadomeConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadomeConfigurationEntity> GetRadomeConfigurationCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeConfigurationCollectionFromTimestamp( timestamp );
            var result = ToEntityList<RadomeConfigurationEntity,RadomeConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadomeConfigurationEntity> GetRadomeConfigurationCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeConfigurationCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<RadomeConfigurationEntity,RadomeConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<RadomeConfigurationEntity> GetRadomeConfigurationCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeConfigurationCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<RadomeConfigurationEntity,RadomeConfigurationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // ReferenceTimeseriesValue queries
        // ---------------------------------------------------------------------
        public ReferenceTimeseriesValueEntity? GetReferenceTimeseriesValueById( Guid id )
        {
            var entity = (ReferenceTimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetReferenceTimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (ReferenceTimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ReferenceTimeseriesValueEntity> GetReferenceTimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesValueCollection( );
            var result = ToEntityList<ReferenceTimeseriesValueEntity,ReferenceTimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<ReferenceTimeseriesValueEntity> GetReferenceTimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<ReferenceTimeseriesValueEntity,ReferenceTimeseriesValueObject>( dataItems );
            return result;
        }

        public ReferenceTimeseriesValueEntity? GetReferenceTimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetReferenceTimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (ReferenceTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public ReferenceTimeseriesValueEntity? GetReferenceTimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetReferenceTimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (ReferenceTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ReferenceTimeseriesValueEntity> GetReferenceTimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<ReferenceTimeseriesValueEntity,ReferenceTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<ReferenceTimeseriesValueEntity> GetReferenceTimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<ReferenceTimeseriesValueEntity,ReferenceTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<ReferenceTimeseriesValueEntity> GetReferenceTimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<ReferenceTimeseriesValueEntity,ReferenceTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<ReferenceTimeseriesValueEntity> GetReferenceTimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<ReferenceTimeseriesValueEntity,ReferenceTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<ReferenceTimeseriesValueEntity> GetReferenceTimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<ReferenceTimeseriesValueEntity,ReferenceTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<ReferenceTimeseriesValueEntity> GetReferenceTimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<ReferenceTimeseriesValueEntity,ReferenceTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<ReferenceTimeseriesValueEntity> GetReferenceTimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<ReferenceTimeseriesValueEntity,ReferenceTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<ReferenceTimeseriesValueEntity> GetReferenceTimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<ReferenceTimeseriesValueEntity,ReferenceTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<ReferenceTimeseriesValueEntity> GetReferenceTimeseriesValueCollectionByValue( Guid value__ )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesValueCollectionByValue( value__ );
            var result = ToEntityList<ReferenceTimeseriesValueEntity,ReferenceTimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // SByteTimeseriesValue queries
        // ---------------------------------------------------------------------
        public SByteTimeseriesValueEntity? GetSByteTimeseriesValueById( Guid id )
        {
            var entity = (SByteTimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSByteTimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (SByteTimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SByteTimeseriesValueEntity> GetSByteTimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesValueCollection( );
            var result = ToEntityList<SByteTimeseriesValueEntity,SByteTimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<SByteTimeseriesValueEntity> GetSByteTimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<SByteTimeseriesValueEntity,SByteTimeseriesValueObject>( dataItems );
            return result;
        }

        public SByteTimeseriesValueEntity? GetSByteTimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSByteTimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (SByteTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public SByteTimeseriesValueEntity? GetSByteTimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSByteTimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (SByteTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<SByteTimeseriesValueEntity> GetSByteTimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<SByteTimeseriesValueEntity,SByteTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<SByteTimeseriesValueEntity> GetSByteTimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<SByteTimeseriesValueEntity,SByteTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<SByteTimeseriesValueEntity> GetSByteTimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<SByteTimeseriesValueEntity,SByteTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<SByteTimeseriesValueEntity> GetSByteTimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<SByteTimeseriesValueEntity,SByteTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<SByteTimeseriesValueEntity> GetSByteTimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<SByteTimeseriesValueEntity,SByteTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<SByteTimeseriesValueEntity> GetSByteTimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<SByteTimeseriesValueEntity,SByteTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<SByteTimeseriesValueEntity> GetSByteTimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<SByteTimeseriesValueEntity,SByteTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<SByteTimeseriesValueEntity> GetSByteTimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<SByteTimeseriesValueEntity,SByteTimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // SecurityDomain queries
        // ---------------------------------------------------------------------
        public SecurityDomainEntity? GetSecurityDomainById( Guid id )
        {
            var entity = (SecurityDomainEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSecurityDomainById( id );
                if( dataObject != null )
                {
                    entity = (SecurityDomainEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SecurityDomainEntity> GetSecurityDomainCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityDomainCollection( );
            var result = ToEntityList<SecurityDomainEntity,SecurityDomainObject>( dataItems );
            return result;
        }
        public SecurityDomainEntity? GetSecurityDomainByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSecurityDomainByName( name );
            if( dataObject != null )
            {
                var result = (SecurityDomainEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // SecurityIdentifier queries
        // ---------------------------------------------------------------------
        public SecurityIdentifierEntity? GetSecurityIdentifierById( Guid id )
        {
            var entity = (SecurityIdentifierEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSecurityIdentifierById( id );
                if( dataObject != null )
                {
                    entity = (SecurityIdentifierEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SecurityIdentifierEntity> GetSecurityIdentifierCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierCollection( );
            var result = ToEntityList<SecurityIdentifierEntity,SecurityIdentifierObject>( dataItems );
            return result;
        }
        public BindingList<SecurityIdentifierEntity> GetSecurityIdentifierCollectionByDomain( Guid domain )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierCollectionByDomain( domain );
            var result = ToEntityList<SecurityIdentifierEntity,SecurityIdentifierObject>( dataItems );
            return result;
        }

        public SecurityIdentifierEntity? GetSecurityIdentifierByDomainAndIdentity( Guid domain, string identity )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSecurityIdentifierByDomainAndIdentity( domain, identity );
            if( dataObject != null )
            {
                var result = (SecurityIdentifierEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // SecurityLogin queries
        // ---------------------------------------------------------------------
        public SecurityLoginEntity? GetSecurityLoginById( Guid id )
        {
            var entity = (SecurityLoginEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSecurityLoginById( id );
                if( dataObject != null )
                {
                    entity = (SecurityLoginEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SecurityLoginEntity> GetSecurityLoginCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityLoginCollection( );
            var result = ToEntityList<SecurityLoginEntity,SecurityLoginObject>( dataItems );
            return result;
        }
        public BindingList<SecurityLoginEntity> GetSecurityLoginCollectionByDomain( Guid domain )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityLoginCollectionByDomain( domain );
            var result = ToEntityList<SecurityLoginEntity,SecurityLoginObject>( dataItems );
            return result;
        }

        public SecurityLoginEntity? GetSecurityLoginByDomainAndIdentity( Guid domain, string identity )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSecurityLoginByDomainAndIdentity( domain, identity );
            if( dataObject != null )
            {
                var result = (SecurityLoginEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // SecurityRole queries
        // ---------------------------------------------------------------------
        public SecurityRoleEntity? GetSecurityRoleById( Guid id )
        {
            var entity = (SecurityRoleEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSecurityRoleById( id );
                if( dataObject != null )
                {
                    entity = (SecurityRoleEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SecurityRoleEntity> GetSecurityRoleCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityRoleCollection( );
            var result = ToEntityList<SecurityRoleEntity,SecurityRoleObject>( dataItems );
            return result;
        }
        public BindingList<SecurityRoleEntity> GetSecurityRoleCollectionByDomain( Guid domain )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityRoleCollectionByDomain( domain );
            var result = ToEntityList<SecurityRoleEntity,SecurityRoleObject>( dataItems );
            return result;
        }

        public SecurityRoleEntity? GetSecurityRoleByDomainAndIdentity( Guid domain, string identity )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSecurityRoleByDomainAndIdentity( domain, identity );
            if( dataObject != null )
            {
                var result = (SecurityRoleEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public SecurityRoleEntity? GetSecurityRoleByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSecurityRoleByName( name );
            if( dataObject != null )
            {
                var result = (SecurityRoleEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // SecurityIdentifierRoleLink queries
        // ---------------------------------------------------------------------
        public SecurityIdentifierRoleLinkEntity? GetSecurityIdentifierRoleLinkById( Guid id )
        {
            var entity = (SecurityIdentifierRoleLinkEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSecurityIdentifierRoleLinkById( id );
                if( dataObject != null )
                {
                    entity = (SecurityIdentifierRoleLinkEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollection( );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }
        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollectionByMember( Guid member )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollectionByMember( member );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }

        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollectionByMemberAndStart( Guid member, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollectionByMemberAndStart( member, start );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }

        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollectionByMemberAtStart( Guid member, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollectionByMemberAtStart( member, start );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }

        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollectionByMemberFromStart( Guid member, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollectionByMemberFromStart( member, start );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }

        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollectionByMemberUntilStart( Guid member, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollectionByMemberUntilStart( member, start );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }

        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollectionByMemberOverStart( Guid member, DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollectionByMemberOverStart( member, fromStart, untilStart );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }

        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollectionByRole( Guid role )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollectionByRole( role );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }

        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollectionByRoleAndStart( Guid role, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollectionByRoleAndStart( role, start );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }

        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollectionByRoleAtStart( Guid role, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollectionByRoleAtStart( role, start );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }

        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollectionByRoleFromStart( Guid role, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollectionByRoleFromStart( role, start );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }

        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollectionByRoleUntilStart( Guid role, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollectionByRoleUntilStart( role, start );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }

        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollectionByRoleOverStart( Guid role, DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollectionByRoleOverStart( role, fromStart, untilStart );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }

        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollectionByStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollectionByStart( start );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }

        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollectionAtStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollectionAtStart( start );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }

        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollectionFromStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollectionFromStart( start );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }

        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollectionUntilStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollectionUntilStart( start );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }

        public BindingList<SecurityIdentifierRoleLinkEntity> GetSecurityIdentifierRoleLinkCollectionOverStart( DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityIdentifierRoleLinkCollectionOverStart( fromStart, untilStart );
            var result = ToEntityList<SecurityIdentifierRoleLinkEntity,SecurityIdentifierRoleLinkObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // SecurityLoginSession queries
        // ---------------------------------------------------------------------
        public SecurityLoginSessionEntity? GetSecurityLoginSessionById( Guid id )
        {
            var entity = (SecurityLoginSessionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSecurityLoginSessionById( id );
                if( dataObject != null )
                {
                    entity = (SecurityLoginSessionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SecurityLoginSessionEntity> GetSecurityLoginSessionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityLoginSessionCollection( );
            var result = ToEntityList<SecurityLoginSessionEntity,SecurityLoginSessionObject>( dataItems );
            return result;
        }
        public BindingList<SecurityLoginSessionEntity> GetSecurityLoginSessionCollectionByLogin( Guid login )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityLoginSessionCollectionByLogin( login );
            var result = ToEntityList<SecurityLoginSessionEntity,SecurityLoginSessionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityLoginSessionEntity> GetSecurityLoginSessionCollectionByLoginAndFromTime( Guid login, DateTime fromTime )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityLoginSessionCollectionByLoginAndFromTime( login, fromTime );
            var result = ToEntityList<SecurityLoginSessionEntity,SecurityLoginSessionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityLoginSessionEntity> GetSecurityLoginSessionCollectionByLoginAtFromTime( Guid login, DateTime fromTime )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityLoginSessionCollectionByLoginAtFromTime( login, fromTime );
            var result = ToEntityList<SecurityLoginSessionEntity,SecurityLoginSessionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityLoginSessionEntity> GetSecurityLoginSessionCollectionByLoginFromFromTime( Guid login, DateTime fromTime )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityLoginSessionCollectionByLoginFromFromTime( login, fromTime );
            var result = ToEntityList<SecurityLoginSessionEntity,SecurityLoginSessionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityLoginSessionEntity> GetSecurityLoginSessionCollectionByLoginUntilFromTime( Guid login, DateTime fromTime )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityLoginSessionCollectionByLoginUntilFromTime( login, fromTime );
            var result = ToEntityList<SecurityLoginSessionEntity,SecurityLoginSessionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityLoginSessionEntity> GetSecurityLoginSessionCollectionByLoginOverFromTime( Guid login, DateTime fromFromTime, DateTime untilFromTime )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityLoginSessionCollectionByLoginOverFromTime( login, fromFromTime, untilFromTime );
            var result = ToEntityList<SecurityLoginSessionEntity,SecurityLoginSessionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityLoginSessionEntity> GetSecurityLoginSessionCollectionByFromTime( DateTime fromTime )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityLoginSessionCollectionByFromTime( fromTime );
            var result = ToEntityList<SecurityLoginSessionEntity,SecurityLoginSessionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityLoginSessionEntity> GetSecurityLoginSessionCollectionAtFromTime( DateTime fromTime )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityLoginSessionCollectionAtFromTime( fromTime );
            var result = ToEntityList<SecurityLoginSessionEntity,SecurityLoginSessionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityLoginSessionEntity> GetSecurityLoginSessionCollectionFromFromTime( DateTime fromTime )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityLoginSessionCollectionFromFromTime( fromTime );
            var result = ToEntityList<SecurityLoginSessionEntity,SecurityLoginSessionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityLoginSessionEntity> GetSecurityLoginSessionCollectionUntilFromTime( DateTime fromTime )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityLoginSessionCollectionUntilFromTime( fromTime );
            var result = ToEntityList<SecurityLoginSessionEntity,SecurityLoginSessionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityLoginSessionEntity> GetSecurityLoginSessionCollectionOverFromTime( DateTime fromFromTime, DateTime untilFromTime )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityLoginSessionCollectionOverFromTime( fromFromTime, untilFromTime );
            var result = ToEntityList<SecurityLoginSessionEntity,SecurityLoginSessionObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // SecurityPermission queries
        // ---------------------------------------------------------------------
        public SecurityPermissionEntity? GetSecurityPermissionById( Guid id )
        {
            var entity = (SecurityPermissionEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSecurityPermissionById( id );
                if( dataObject != null )
                {
                    entity = (SecurityPermissionEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SecurityPermissionEntity> GetSecurityPermissionCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityPermissionCollection( );
            var result = ToEntityList<SecurityPermissionEntity,SecurityPermissionObject>( dataItems );
            return result;
        }
        public BindingList<SecurityPermissionEntity> GetSecurityPermissionCollectionByIdentifier( Guid identifier )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityPermissionCollectionByIdentifier( identifier );
            var result = ToEntityList<SecurityPermissionEntity,SecurityPermissionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityPermissionEntity> GetSecurityPermissionCollectionByIdentifierAndTypeCode( Guid identifier, int typeCode )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityPermissionCollectionByIdentifierAndTypeCode( identifier, typeCode );
            var result = ToEntityList<SecurityPermissionEntity,SecurityPermissionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityPermissionEntity> GetSecurityPermissionCollectionByIdentifierFromTypeCode( Guid identifier, int typeCode )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityPermissionCollectionByIdentifierFromTypeCode( identifier, typeCode );
            var result = ToEntityList<SecurityPermissionEntity,SecurityPermissionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityPermissionEntity> GetSecurityPermissionCollectionByIdentifierUntilTypeCode( Guid identifier, int typeCode )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityPermissionCollectionByIdentifierUntilTypeCode( identifier, typeCode );
            var result = ToEntityList<SecurityPermissionEntity,SecurityPermissionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityPermissionEntity> GetSecurityPermissionCollectionByIdentifierOverTypeCode( Guid identifier, int fromTypeCode, int untilTypeCode )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityPermissionCollectionByIdentifierOverTypeCode( identifier, fromTypeCode, untilTypeCode );
            var result = ToEntityList<SecurityPermissionEntity,SecurityPermissionObject>( dataItems );
            return result;
        }

        public SecurityPermissionEntity? GetSecurityPermissionByIdentifierTypeCodeAndTimestamp( Guid identifier, int typeCode, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSecurityPermissionByIdentifierTypeCodeAndTimestamp( identifier, typeCode, timestamp );
            if( dataObject != null )
            {
                var result = (SecurityPermissionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public SecurityPermissionEntity? GetSecurityPermissionByIdentifierTypeCodeAtTimestamp( Guid identifier, int typeCode, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSecurityPermissionByIdentifierTypeCodeAtTimestamp( identifier, typeCode, timestamp );
            if( dataObject != null )
            {
                var result = (SecurityPermissionEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<SecurityPermissionEntity> GetSecurityPermissionByIdentifierTypeCodeFromTimestamp( Guid identifier, int typeCode, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityPermissionByIdentifierTypeCodeFromTimestamp( identifier, typeCode, timestamp );
            var result = ToEntityList<SecurityPermissionEntity,SecurityPermissionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityPermissionEntity> GetSecurityPermissionByIdentifierTypeCodeUntilTimestamp( Guid identifier, int typeCode, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityPermissionByIdentifierTypeCodeUntilTimestamp( identifier, typeCode, timestamp );
            var result = ToEntityList<SecurityPermissionEntity,SecurityPermissionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityPermissionEntity> GetSecurityPermissionByIdentifierTypeCodeOverTimestamp( Guid identifier, int typeCode, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityPermissionByIdentifierTypeCodeOverTimestamp( identifier, typeCode, fromTimestamp, untilTimestamp );
            var result = ToEntityList<SecurityPermissionEntity,SecurityPermissionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityPermissionEntity> GetSecurityPermissionCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityPermissionCollectionByTimestamp( timestamp );
            var result = ToEntityList<SecurityPermissionEntity,SecurityPermissionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityPermissionEntity> GetSecurityPermissionCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityPermissionCollectionAtTimestamp( timestamp );
            var result = ToEntityList<SecurityPermissionEntity,SecurityPermissionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityPermissionEntity> GetSecurityPermissionCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityPermissionCollectionFromTimestamp( timestamp );
            var result = ToEntityList<SecurityPermissionEntity,SecurityPermissionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityPermissionEntity> GetSecurityPermissionCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityPermissionCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<SecurityPermissionEntity,SecurityPermissionObject>( dataItems );
            return result;
        }

        public BindingList<SecurityPermissionEntity> GetSecurityPermissionCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSecurityPermissionCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<SecurityPermissionEntity,SecurityPermissionObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // SingleTimeseriesValue queries
        // ---------------------------------------------------------------------
        public SingleTimeseriesValueEntity? GetSingleTimeseriesValueById( Guid id )
        {
            var entity = (SingleTimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSingleTimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (SingleTimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SingleTimeseriesValueEntity> GetSingleTimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesValueCollection( );
            var result = ToEntityList<SingleTimeseriesValueEntity,SingleTimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<SingleTimeseriesValueEntity> GetSingleTimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<SingleTimeseriesValueEntity,SingleTimeseriesValueObject>( dataItems );
            return result;
        }

        public SingleTimeseriesValueEntity? GetSingleTimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSingleTimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (SingleTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public SingleTimeseriesValueEntity? GetSingleTimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSingleTimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (SingleTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<SingleTimeseriesValueEntity> GetSingleTimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<SingleTimeseriesValueEntity,SingleTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<SingleTimeseriesValueEntity> GetSingleTimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<SingleTimeseriesValueEntity,SingleTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<SingleTimeseriesValueEntity> GetSingleTimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<SingleTimeseriesValueEntity,SingleTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<SingleTimeseriesValueEntity> GetSingleTimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<SingleTimeseriesValueEntity,SingleTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<SingleTimeseriesValueEntity> GetSingleTimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<SingleTimeseriesValueEntity,SingleTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<SingleTimeseriesValueEntity> GetSingleTimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<SingleTimeseriesValueEntity,SingleTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<SingleTimeseriesValueEntity> GetSingleTimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<SingleTimeseriesValueEntity,SingleTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<SingleTimeseriesValueEntity> GetSingleTimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<SingleTimeseriesValueEntity,SingleTimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // StringTimeseriesValue queries
        // ---------------------------------------------------------------------
        public StringTimeseriesValueEntity? GetStringTimeseriesValueById( Guid id )
        {
            var entity = (StringTimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetStringTimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (StringTimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<StringTimeseriesValueEntity> GetStringTimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesValueCollection( );
            var result = ToEntityList<StringTimeseriesValueEntity,StringTimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<StringTimeseriesValueEntity> GetStringTimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<StringTimeseriesValueEntity,StringTimeseriesValueObject>( dataItems );
            return result;
        }

        public StringTimeseriesValueEntity? GetStringTimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetStringTimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (StringTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public StringTimeseriesValueEntity? GetStringTimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetStringTimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (StringTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<StringTimeseriesValueEntity> GetStringTimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<StringTimeseriesValueEntity,StringTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<StringTimeseriesValueEntity> GetStringTimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<StringTimeseriesValueEntity,StringTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<StringTimeseriesValueEntity> GetStringTimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<StringTimeseriesValueEntity,StringTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<StringTimeseriesValueEntity> GetStringTimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<StringTimeseriesValueEntity,StringTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<StringTimeseriesValueEntity> GetStringTimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<StringTimeseriesValueEntity,StringTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<StringTimeseriesValueEntity> GetStringTimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<StringTimeseriesValueEntity,StringTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<StringTimeseriesValueEntity> GetStringTimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<StringTimeseriesValueEntity,StringTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<StringTimeseriesValueEntity> GetStringTimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<StringTimeseriesValueEntity,StringTimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // TimeseriesCatalogElement queries
        // ---------------------------------------------------------------------
        public TimeseriesCatalogElementEntity? GetTimeseriesCatalogElementById( Guid id )
        {
            var entity = (TimeseriesCatalogElementEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTimeseriesCatalogElementById( id );
                if( dataObject != null )
                {
                    entity = (TimeseriesCatalogElementEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TimeseriesCatalogElementEntity> GetTimeseriesCatalogElementCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeseriesCatalogElementCollection( );
            var result = ToEntityList<TimeseriesCatalogElementEntity,TimeseriesCatalogElementObject>( dataItems );
            return result;
        }
        public BindingList<TimeseriesCatalogElementEntity> GetTimeseriesCatalogElementCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeseriesCatalogElementCollectionByCatalog( catalog );
            var result = ToEntityList<TimeseriesCatalogElementEntity,TimeseriesCatalogElementObject>( dataItems );
            return result;
        }

        public TimeseriesCatalogElementEntity? GetTimeseriesCatalogElementByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTimeseriesCatalogElementByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (TimeseriesCatalogElementEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // Timeseries queries
        // ---------------------------------------------------------------------
        public TimeseriesEntity? GetTimeseriesById( Guid id )
        {
            var entity = (TimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (TimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TimeseriesEntity> GetTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeseriesCollection( );
            var result = ToEntityList<TimeseriesEntity,TimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<TimeseriesEntity> GetTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<TimeseriesEntity,TimeseriesObject>( dataItems );
            return result;
        }

        public TimeseriesEntity? GetTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (TimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // BinaryTimeseries queries
        // ---------------------------------------------------------------------
        public BinaryTimeseriesEntity? GetBinaryTimeseriesById( Guid id )
        {
            var entity = (BinaryTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetBinaryTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (BinaryTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<BinaryTimeseriesEntity> GetBinaryTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesCollection( );
            var result = ToEntityList<BinaryTimeseriesEntity,BinaryTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<BinaryTimeseriesEntity> GetBinaryTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBinaryTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<BinaryTimeseriesEntity,BinaryTimeseriesObject>( dataItems );
            return result;
        }

        public BinaryTimeseriesEntity? GetBinaryTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBinaryTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (BinaryTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // BooleanTimeseries queries
        // ---------------------------------------------------------------------
        public BooleanTimeseriesEntity? GetBooleanTimeseriesById( Guid id )
        {
            var entity = (BooleanTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetBooleanTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (BooleanTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<BooleanTimeseriesEntity> GetBooleanTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesCollection( );
            var result = ToEntityList<BooleanTimeseriesEntity,BooleanTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<BooleanTimeseriesEntity> GetBooleanTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetBooleanTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<BooleanTimeseriesEntity,BooleanTimeseriesObject>( dataItems );
            return result;
        }

        public BooleanTimeseriesEntity? GetBooleanTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetBooleanTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (BooleanTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // AisAidToNavigationOffPositionTimeseries queries
        // ---------------------------------------------------------------------
        public AisAidToNavigationOffPositionTimeseriesEntity? GetAisAidToNavigationOffPositionTimeseriesById( Guid id )
        {
            var entity = (AisAidToNavigationOffPositionTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisAidToNavigationOffPositionTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (AisAidToNavigationOffPositionTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisAidToNavigationOffPositionTimeseriesEntity> GetAisAidToNavigationOffPositionTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAidToNavigationOffPositionTimeseriesCollection( );
            var result = ToEntityList<AisAidToNavigationOffPositionTimeseriesEntity,AisAidToNavigationOffPositionTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<AisAidToNavigationOffPositionTimeseriesEntity> GetAisAidToNavigationOffPositionTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAidToNavigationOffPositionTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<AisAidToNavigationOffPositionTimeseriesEntity,AisAidToNavigationOffPositionTimeseriesObject>( dataItems );
            return result;
        }

        public AisAidToNavigationOffPositionTimeseriesEntity? GetAisAidToNavigationOffPositionTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisAidToNavigationOffPositionTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (AisAidToNavigationOffPositionTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<AisAidToNavigationOffPositionTimeseriesEntity> GetAisAidToNavigationOffPositionTimeseriesCollectionByAidToNavigation( Guid? aidToNavigation )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAidToNavigationOffPositionTimeseriesCollectionByAidToNavigation( aidToNavigation );
            var result = ToEntityList<AisAidToNavigationOffPositionTimeseriesEntity,AisAidToNavigationOffPositionTimeseriesObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // DeviceEnabledTimeseries queries
        // ---------------------------------------------------------------------
        public DeviceEnabledTimeseriesEntity? GetDeviceEnabledTimeseriesById( Guid id )
        {
            var entity = (DeviceEnabledTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetDeviceEnabledTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (DeviceEnabledTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<DeviceEnabledTimeseriesEntity> GetDeviceEnabledTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDeviceEnabledTimeseriesCollection( );
            var result = ToEntityList<DeviceEnabledTimeseriesEntity,DeviceEnabledTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<DeviceEnabledTimeseriesEntity> GetDeviceEnabledTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDeviceEnabledTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<DeviceEnabledTimeseriesEntity,DeviceEnabledTimeseriesObject>( dataItems );
            return result;
        }

        public DeviceEnabledTimeseriesEntity? GetDeviceEnabledTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDeviceEnabledTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (DeviceEnabledTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarAutomaticSensitivityTimeControlTimeseries queries
        // ---------------------------------------------------------------------
        public RadarAutomaticSensitivityTimeControlTimeseriesEntity? GetRadarAutomaticSensitivityTimeControlTimeseriesById( Guid id )
        {
            var entity = (RadarAutomaticSensitivityTimeControlTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarAutomaticSensitivityTimeControlTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarAutomaticSensitivityTimeControlTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarAutomaticSensitivityTimeControlTimeseriesEntity> GetRadarAutomaticSensitivityTimeControlTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarAutomaticSensitivityTimeControlTimeseriesCollection( );
            var result = ToEntityList<RadarAutomaticSensitivityTimeControlTimeseriesEntity,RadarAutomaticSensitivityTimeControlTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarAutomaticSensitivityTimeControlTimeseriesEntity> GetRadarAutomaticSensitivityTimeControlTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarAutomaticSensitivityTimeControlTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarAutomaticSensitivityTimeControlTimeseriesEntity,RadarAutomaticSensitivityTimeControlTimeseriesObject>( dataItems );
            return result;
        }

        public RadarAutomaticSensitivityTimeControlTimeseriesEntity? GetRadarAutomaticSensitivityTimeControlTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarAutomaticSensitivityTimeControlTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarAutomaticSensitivityTimeControlTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarBlankSector1Timeseries queries
        // ---------------------------------------------------------------------
        public RadarBlankSector1TimeseriesEntity? GetRadarBlankSector1TimeseriesById( Guid id )
        {
            var entity = (RadarBlankSector1TimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarBlankSector1TimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarBlankSector1TimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarBlankSector1TimeseriesEntity> GetRadarBlankSector1TimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarBlankSector1TimeseriesCollection( );
            var result = ToEntityList<RadarBlankSector1TimeseriesEntity,RadarBlankSector1TimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarBlankSector1TimeseriesEntity> GetRadarBlankSector1TimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarBlankSector1TimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarBlankSector1TimeseriesEntity,RadarBlankSector1TimeseriesObject>( dataItems );
            return result;
        }

        public RadarBlankSector1TimeseriesEntity? GetRadarBlankSector1TimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarBlankSector1TimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarBlankSector1TimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarBlankSector2Timeseries queries
        // ---------------------------------------------------------------------
        public RadarBlankSector2TimeseriesEntity? GetRadarBlankSector2TimeseriesById( Guid id )
        {
            var entity = (RadarBlankSector2TimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarBlankSector2TimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarBlankSector2TimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarBlankSector2TimeseriesEntity> GetRadarBlankSector2TimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarBlankSector2TimeseriesCollection( );
            var result = ToEntityList<RadarBlankSector2TimeseriesEntity,RadarBlankSector2TimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarBlankSector2TimeseriesEntity> GetRadarBlankSector2TimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarBlankSector2TimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarBlankSector2TimeseriesEntity,RadarBlankSector2TimeseriesObject>( dataItems );
            return result;
        }

        public RadarBlankSector2TimeseriesEntity? GetRadarBlankSector2TimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarBlankSector2TimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarBlankSector2TimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarEnableAutomaticFrequencyControlTimeseries queries
        // ---------------------------------------------------------------------
        public RadarEnableAutomaticFrequencyControlTimeseriesEntity? GetRadarEnableAutomaticFrequencyControlTimeseriesById( Guid id )
        {
            var entity = (RadarEnableAutomaticFrequencyControlTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarEnableAutomaticFrequencyControlTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarEnableAutomaticFrequencyControlTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarEnableAutomaticFrequencyControlTimeseriesEntity> GetRadarEnableAutomaticFrequencyControlTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarEnableAutomaticFrequencyControlTimeseriesCollection( );
            var result = ToEntityList<RadarEnableAutomaticFrequencyControlTimeseriesEntity,RadarEnableAutomaticFrequencyControlTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarEnableAutomaticFrequencyControlTimeseriesEntity> GetRadarEnableAutomaticFrequencyControlTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarEnableAutomaticFrequencyControlTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarEnableAutomaticFrequencyControlTimeseriesEntity,RadarEnableAutomaticFrequencyControlTimeseriesObject>( dataItems );
            return result;
        }

        public RadarEnableAutomaticFrequencyControlTimeseriesEntity? GetRadarEnableAutomaticFrequencyControlTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarEnableAutomaticFrequencyControlTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarEnableAutomaticFrequencyControlTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarEnableFastTimeConstantTimeseries queries
        // ---------------------------------------------------------------------
        public RadarEnableFastTimeConstantTimeseriesEntity? GetRadarEnableFastTimeConstantTimeseriesById( Guid id )
        {
            var entity = (RadarEnableFastTimeConstantTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarEnableFastTimeConstantTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarEnableFastTimeConstantTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarEnableFastTimeConstantTimeseriesEntity> GetRadarEnableFastTimeConstantTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarEnableFastTimeConstantTimeseriesCollection( );
            var result = ToEntityList<RadarEnableFastTimeConstantTimeseriesEntity,RadarEnableFastTimeConstantTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarEnableFastTimeConstantTimeseriesEntity> GetRadarEnableFastTimeConstantTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarEnableFastTimeConstantTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarEnableFastTimeConstantTimeseriesEntity,RadarEnableFastTimeConstantTimeseriesObject>( dataItems );
            return result;
        }

        public RadarEnableFastTimeConstantTimeseriesEntity? GetRadarEnableFastTimeConstantTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarEnableFastTimeConstantTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarEnableFastTimeConstantTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarEnableSensitivityTimeControlTimeseries queries
        // ---------------------------------------------------------------------
        public RadarEnableSensitivityTimeControlTimeseriesEntity? GetRadarEnableSensitivityTimeControlTimeseriesById( Guid id )
        {
            var entity = (RadarEnableSensitivityTimeControlTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarEnableSensitivityTimeControlTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarEnableSensitivityTimeControlTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarEnableSensitivityTimeControlTimeseriesEntity> GetRadarEnableSensitivityTimeControlTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarEnableSensitivityTimeControlTimeseriesCollection( );
            var result = ToEntityList<RadarEnableSensitivityTimeControlTimeseriesEntity,RadarEnableSensitivityTimeControlTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarEnableSensitivityTimeControlTimeseriesEntity> GetRadarEnableSensitivityTimeControlTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarEnableSensitivityTimeControlTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarEnableSensitivityTimeControlTimeseriesEntity,RadarEnableSensitivityTimeControlTimeseriesObject>( dataItems );
            return result;
        }

        public RadarEnableSensitivityTimeControlTimeseriesEntity? GetRadarEnableSensitivityTimeControlTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarEnableSensitivityTimeControlTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarEnableSensitivityTimeControlTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarPowerOnTimeseries queries
        // ---------------------------------------------------------------------
        public RadarPowerOnTimeseriesEntity? GetRadarPowerOnTimeseriesById( Guid id )
        {
            var entity = (RadarPowerOnTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarPowerOnTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarPowerOnTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarPowerOnTimeseriesEntity> GetRadarPowerOnTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarPowerOnTimeseriesCollection( );
            var result = ToEntityList<RadarPowerOnTimeseriesEntity,RadarPowerOnTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarPowerOnTimeseriesEntity> GetRadarPowerOnTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarPowerOnTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarPowerOnTimeseriesEntity,RadarPowerOnTimeseriesObject>( dataItems );
            return result;
        }

        public RadarPowerOnTimeseriesEntity? GetRadarPowerOnTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarPowerOnTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarPowerOnTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarSaveSettingsTimeseries queries
        // ---------------------------------------------------------------------
        public RadarSaveSettingsTimeseriesEntity? GetRadarSaveSettingsTimeseriesById( Guid id )
        {
            var entity = (RadarSaveSettingsTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarSaveSettingsTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarSaveSettingsTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarSaveSettingsTimeseriesEntity> GetRadarSaveSettingsTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarSaveSettingsTimeseriesCollection( );
            var result = ToEntityList<RadarSaveSettingsTimeseriesEntity,RadarSaveSettingsTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarSaveSettingsTimeseriesEntity> GetRadarSaveSettingsTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarSaveSettingsTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarSaveSettingsTimeseriesEntity,RadarSaveSettingsTimeseriesObject>( dataItems );
            return result;
        }

        public RadarSaveSettingsTimeseriesEntity? GetRadarSaveSettingsTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarSaveSettingsTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarSaveSettingsTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarTrackingTimeseries queries
        // ---------------------------------------------------------------------
        public RadarTrackingTimeseriesEntity? GetRadarTrackingTimeseriesById( Guid id )
        {
            var entity = (RadarTrackingTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarTrackingTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarTrackingTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarTrackingTimeseriesEntity> GetRadarTrackingTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarTrackingTimeseriesCollection( );
            var result = ToEntityList<RadarTrackingTimeseriesEntity,RadarTrackingTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarTrackingTimeseriesEntity> GetRadarTrackingTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarTrackingTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarTrackingTimeseriesEntity,RadarTrackingTimeseriesObject>( dataItems );
            return result;
        }

        public RadarTrackingTimeseriesEntity? GetRadarTrackingTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarTrackingTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarTrackingTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // MediaProxySessionEnabledTimeseries queries
        // ---------------------------------------------------------------------
        public MediaProxySessionEnabledTimeseriesEntity? GetMediaProxySessionEnabledTimeseriesById( Guid id )
        {
            var entity = (MediaProxySessionEnabledTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetMediaProxySessionEnabledTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (MediaProxySessionEnabledTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<MediaProxySessionEnabledTimeseriesEntity> GetMediaProxySessionEnabledTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaProxySessionEnabledTimeseriesCollection( );
            var result = ToEntityList<MediaProxySessionEnabledTimeseriesEntity,MediaProxySessionEnabledTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<MediaProxySessionEnabledTimeseriesEntity> GetMediaProxySessionEnabledTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaProxySessionEnabledTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<MediaProxySessionEnabledTimeseriesEntity,MediaProxySessionEnabledTimeseriesObject>( dataItems );
            return result;
        }

        public MediaProxySessionEnabledTimeseriesEntity? GetMediaProxySessionEnabledTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetMediaProxySessionEnabledTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (MediaProxySessionEnabledTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // MediaServiceEnabledTimeseries queries
        // ---------------------------------------------------------------------
        public MediaServiceEnabledTimeseriesEntity? GetMediaServiceEnabledTimeseriesById( Guid id )
        {
            var entity = (MediaServiceEnabledTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetMediaServiceEnabledTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (MediaServiceEnabledTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<MediaServiceEnabledTimeseriesEntity> GetMediaServiceEnabledTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaServiceEnabledTimeseriesCollection( );
            var result = ToEntityList<MediaServiceEnabledTimeseriesEntity,MediaServiceEnabledTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<MediaServiceEnabledTimeseriesEntity> GetMediaServiceEnabledTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetMediaServiceEnabledTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<MediaServiceEnabledTimeseriesEntity,MediaServiceEnabledTimeseriesObject>( dataItems );
            return result;
        }

        public MediaServiceEnabledTimeseriesEntity? GetMediaServiceEnabledTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetMediaServiceEnabledTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (MediaServiceEnabledTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // ByteTimeseries queries
        // ---------------------------------------------------------------------
        public ByteTimeseriesEntity? GetByteTimeseriesById( Guid id )
        {
            var entity = (ByteTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetByteTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (ByteTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ByteTimeseriesEntity> GetByteTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesCollection( );
            var result = ToEntityList<ByteTimeseriesEntity,ByteTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<ByteTimeseriesEntity> GetByteTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetByteTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<ByteTimeseriesEntity,ByteTimeseriesObject>( dataItems );
            return result;
        }

        public ByteTimeseriesEntity? GetByteTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetByteTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (ByteTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // DateTimeTimeseries queries
        // ---------------------------------------------------------------------
        public DateTimeTimeseriesEntity? GetDateTimeTimeseriesById( Guid id )
        {
            var entity = (DateTimeTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetDateTimeTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (DateTimeTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<DateTimeTimeseriesEntity> GetDateTimeTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesCollection( );
            var result = ToEntityList<DateTimeTimeseriesEntity,DateTimeTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<DateTimeTimeseriesEntity> GetDateTimeTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDateTimeTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<DateTimeTimeseriesEntity,DateTimeTimeseriesObject>( dataItems );
            return result;
        }

        public DateTimeTimeseriesEntity? GetDateTimeTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDateTimeTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (DateTimeTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // DoubleTimeseries queries
        // ---------------------------------------------------------------------
        public DoubleTimeseriesEntity? GetDoubleTimeseriesById( Guid id )
        {
            var entity = (DoubleTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetDoubleTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (DoubleTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<DoubleTimeseriesEntity> GetDoubleTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesCollection( );
            var result = ToEntityList<DoubleTimeseriesEntity,DoubleTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<DoubleTimeseriesEntity> GetDoubleTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetDoubleTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<DoubleTimeseriesEntity,DoubleTimeseriesObject>( dataItems );
            return result;
        }

        public DoubleTimeseriesEntity? GetDoubleTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetDoubleTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (DoubleTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GNSSAltitudeTimeseries queries
        // ---------------------------------------------------------------------
        public GNSSAltitudeTimeseriesEntity? GetGNSSAltitudeTimeseriesById( Guid id )
        {
            var entity = (GNSSAltitudeTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGNSSAltitudeTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (GNSSAltitudeTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GNSSAltitudeTimeseriesEntity> GetGNSSAltitudeTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSAltitudeTimeseriesCollection( );
            var result = ToEntityList<GNSSAltitudeTimeseriesEntity,GNSSAltitudeTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<GNSSAltitudeTimeseriesEntity> GetGNSSAltitudeTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSAltitudeTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<GNSSAltitudeTimeseriesEntity,GNSSAltitudeTimeseriesObject>( dataItems );
            return result;
        }

        public GNSSAltitudeTimeseriesEntity? GetGNSSAltitudeTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGNSSAltitudeTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (GNSSAltitudeTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GNSSLatitudeTimeseries queries
        // ---------------------------------------------------------------------
        public GNSSLatitudeTimeseriesEntity? GetGNSSLatitudeTimeseriesById( Guid id )
        {
            var entity = (GNSSLatitudeTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGNSSLatitudeTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (GNSSLatitudeTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GNSSLatitudeTimeseriesEntity> GetGNSSLatitudeTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSLatitudeTimeseriesCollection( );
            var result = ToEntityList<GNSSLatitudeTimeseriesEntity,GNSSLatitudeTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<GNSSLatitudeTimeseriesEntity> GetGNSSLatitudeTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSLatitudeTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<GNSSLatitudeTimeseriesEntity,GNSSLatitudeTimeseriesObject>( dataItems );
            return result;
        }

        public GNSSLatitudeTimeseriesEntity? GetGNSSLatitudeTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGNSSLatitudeTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (GNSSLatitudeTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GNSSLongitudeTimeseries queries
        // ---------------------------------------------------------------------
        public GNSSLongitudeTimeseriesEntity? GetGNSSLongitudeTimeseriesById( Guid id )
        {
            var entity = (GNSSLongitudeTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGNSSLongitudeTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (GNSSLongitudeTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GNSSLongitudeTimeseriesEntity> GetGNSSLongitudeTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSLongitudeTimeseriesCollection( );
            var result = ToEntityList<GNSSLongitudeTimeseriesEntity,GNSSLongitudeTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<GNSSLongitudeTimeseriesEntity> GetGNSSLongitudeTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGNSSLongitudeTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<GNSSLongitudeTimeseriesEntity,GNSSLongitudeTimeseriesObject>( dataItems );
            return result;
        }

        public GNSSLongitudeTimeseriesEntity? GetGNSSLongitudeTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGNSSLongitudeTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (GNSSLongitudeTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GyroCourseTimeseries queries
        // ---------------------------------------------------------------------
        public GyroCourseTimeseriesEntity? GetGyroCourseTimeseriesById( Guid id )
        {
            var entity = (GyroCourseTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGyroCourseTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (GyroCourseTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GyroCourseTimeseriesEntity> GetGyroCourseTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroCourseTimeseriesCollection( );
            var result = ToEntityList<GyroCourseTimeseriesEntity,GyroCourseTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<GyroCourseTimeseriesEntity> GetGyroCourseTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroCourseTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<GyroCourseTimeseriesEntity,GyroCourseTimeseriesObject>( dataItems );
            return result;
        }

        public GyroCourseTimeseriesEntity? GetGyroCourseTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroCourseTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (GyroCourseTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public GyroCourseTimeseriesEntity? GetGyroCourseTimeseriesByGyroDevice( Guid? gyroDevice )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroCourseTimeseriesByGyroDevice( gyroDevice );
            if( dataObject != null )
            {
                var result = (GyroCourseTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GyroHeadingMagneticNorthTimeseries queries
        // ---------------------------------------------------------------------
        public GyroHeadingMagneticNorthTimeseriesEntity? GetGyroHeadingMagneticNorthTimeseriesById( Guid id )
        {
            var entity = (GyroHeadingMagneticNorthTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGyroHeadingMagneticNorthTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (GyroHeadingMagneticNorthTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GyroHeadingMagneticNorthTimeseriesEntity> GetGyroHeadingMagneticNorthTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroHeadingMagneticNorthTimeseriesCollection( );
            var result = ToEntityList<GyroHeadingMagneticNorthTimeseriesEntity,GyroHeadingMagneticNorthTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<GyroHeadingMagneticNorthTimeseriesEntity> GetGyroHeadingMagneticNorthTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroHeadingMagneticNorthTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<GyroHeadingMagneticNorthTimeseriesEntity,GyroHeadingMagneticNorthTimeseriesObject>( dataItems );
            return result;
        }

        public GyroHeadingMagneticNorthTimeseriesEntity? GetGyroHeadingMagneticNorthTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroHeadingMagneticNorthTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (GyroHeadingMagneticNorthTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public GyroHeadingMagneticNorthTimeseriesEntity? GetGyroHeadingMagneticNorthTimeseriesByGyroDevice( Guid? gyroDevice )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroHeadingMagneticNorthTimeseriesByGyroDevice( gyroDevice );
            if( dataObject != null )
            {
                var result = (GyroHeadingMagneticNorthTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GyroHeadingTrueNorthTimeseries queries
        // ---------------------------------------------------------------------
        public GyroHeadingTrueNorthTimeseriesEntity? GetGyroHeadingTrueNorthTimeseriesById( Guid id )
        {
            var entity = (GyroHeadingTrueNorthTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGyroHeadingTrueNorthTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (GyroHeadingTrueNorthTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GyroHeadingTrueNorthTimeseriesEntity> GetGyroHeadingTrueNorthTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroHeadingTrueNorthTimeseriesCollection( );
            var result = ToEntityList<GyroHeadingTrueNorthTimeseriesEntity,GyroHeadingTrueNorthTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<GyroHeadingTrueNorthTimeseriesEntity> GetGyroHeadingTrueNorthTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroHeadingTrueNorthTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<GyroHeadingTrueNorthTimeseriesEntity,GyroHeadingTrueNorthTimeseriesObject>( dataItems );
            return result;
        }

        public GyroHeadingTrueNorthTimeseriesEntity? GetGyroHeadingTrueNorthTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroHeadingTrueNorthTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (GyroHeadingTrueNorthTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public GyroHeadingTrueNorthTimeseriesEntity? GetGyroHeadingTrueNorthTimeseriesByGyroDevice( Guid? gyroDevice )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroHeadingTrueNorthTimeseriesByGyroDevice( gyroDevice );
            if( dataObject != null )
            {
                var result = (GyroHeadingTrueNorthTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GyroPitchTimeseries queries
        // ---------------------------------------------------------------------
        public GyroPitchTimeseriesEntity? GetGyroPitchTimeseriesById( Guid id )
        {
            var entity = (GyroPitchTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGyroPitchTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (GyroPitchTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GyroPitchTimeseriesEntity> GetGyroPitchTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroPitchTimeseriesCollection( );
            var result = ToEntityList<GyroPitchTimeseriesEntity,GyroPitchTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<GyroPitchTimeseriesEntity> GetGyroPitchTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroPitchTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<GyroPitchTimeseriesEntity,GyroPitchTimeseriesObject>( dataItems );
            return result;
        }

        public GyroPitchTimeseriesEntity? GetGyroPitchTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroPitchTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (GyroPitchTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public GyroPitchTimeseriesEntity? GetGyroPitchTimeseriesByGyroDevice( Guid? gyroDevice )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroPitchTimeseriesByGyroDevice( gyroDevice );
            if( dataObject != null )
            {
                var result = (GyroPitchTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GyroRateOfTurnTimeseries queries
        // ---------------------------------------------------------------------
        public GyroRateOfTurnTimeseriesEntity? GetGyroRateOfTurnTimeseriesById( Guid id )
        {
            var entity = (GyroRateOfTurnTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGyroRateOfTurnTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (GyroRateOfTurnTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GyroRateOfTurnTimeseriesEntity> GetGyroRateOfTurnTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroRateOfTurnTimeseriesCollection( );
            var result = ToEntityList<GyroRateOfTurnTimeseriesEntity,GyroRateOfTurnTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<GyroRateOfTurnTimeseriesEntity> GetGyroRateOfTurnTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroRateOfTurnTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<GyroRateOfTurnTimeseriesEntity,GyroRateOfTurnTimeseriesObject>( dataItems );
            return result;
        }

        public GyroRateOfTurnTimeseriesEntity? GetGyroRateOfTurnTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroRateOfTurnTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (GyroRateOfTurnTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public GyroRateOfTurnTimeseriesEntity? GetGyroRateOfTurnTimeseriesByGyroDevice( Guid? gyroDevice )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroRateOfTurnTimeseriesByGyroDevice( gyroDevice );
            if( dataObject != null )
            {
                var result = (GyroRateOfTurnTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GyroRollTimeseries queries
        // ---------------------------------------------------------------------
        public GyroRollTimeseriesEntity? GetGyroRollTimeseriesById( Guid id )
        {
            var entity = (GyroRollTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGyroRollTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (GyroRollTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GyroRollTimeseriesEntity> GetGyroRollTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroRollTimeseriesCollection( );
            var result = ToEntityList<GyroRollTimeseriesEntity,GyroRollTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<GyroRollTimeseriesEntity> GetGyroRollTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroRollTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<GyroRollTimeseriesEntity,GyroRollTimeseriesObject>( dataItems );
            return result;
        }

        public GyroRollTimeseriesEntity? GetGyroRollTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroRollTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (GyroRollTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public GyroRollTimeseriesEntity? GetGyroRollTimeseriesByGyroDevice( Guid? gyroDevice )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroRollTimeseriesByGyroDevice( gyroDevice );
            if( dataObject != null )
            {
                var result = (GyroRollTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GyroSpeedTimeseries queries
        // ---------------------------------------------------------------------
        public GyroSpeedTimeseriesEntity? GetGyroSpeedTimeseriesById( Guid id )
        {
            var entity = (GyroSpeedTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGyroSpeedTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (GyroSpeedTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GyroSpeedTimeseriesEntity> GetGyroSpeedTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroSpeedTimeseriesCollection( );
            var result = ToEntityList<GyroSpeedTimeseriesEntity,GyroSpeedTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<GyroSpeedTimeseriesEntity> GetGyroSpeedTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGyroSpeedTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<GyroSpeedTimeseriesEntity,GyroSpeedTimeseriesObject>( dataItems );
            return result;
        }

        public GyroSpeedTimeseriesEntity? GetGyroSpeedTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroSpeedTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (GyroSpeedTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public GyroSpeedTimeseriesEntity? GetGyroSpeedTimeseriesByGyroDevice( Guid? gyroDevice )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGyroSpeedTimeseriesByGyroDevice( gyroDevice );
            if( dataObject != null )
            {
                var result = (GyroSpeedTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarLatitudeTimeseries queries
        // ---------------------------------------------------------------------
        public RadarLatitudeTimeseriesEntity? GetRadarLatitudeTimeseriesById( Guid id )
        {
            var entity = (RadarLatitudeTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarLatitudeTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarLatitudeTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarLatitudeTimeseriesEntity> GetRadarLatitudeTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarLatitudeTimeseriesCollection( );
            var result = ToEntityList<RadarLatitudeTimeseriesEntity,RadarLatitudeTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarLatitudeTimeseriesEntity> GetRadarLatitudeTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarLatitudeTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarLatitudeTimeseriesEntity,RadarLatitudeTimeseriesObject>( dataItems );
            return result;
        }

        public RadarLatitudeTimeseriesEntity? GetRadarLatitudeTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarLatitudeTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarLatitudeTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarLongitudeTimeseries queries
        // ---------------------------------------------------------------------
        public RadarLongitudeTimeseriesEntity? GetRadarLongitudeTimeseriesById( Guid id )
        {
            var entity = (RadarLongitudeTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarLongitudeTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarLongitudeTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarLongitudeTimeseriesEntity> GetRadarLongitudeTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarLongitudeTimeseriesCollection( );
            var result = ToEntityList<RadarLongitudeTimeseriesEntity,RadarLongitudeTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarLongitudeTimeseriesEntity> GetRadarLongitudeTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarLongitudeTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarLongitudeTimeseriesEntity,RadarLongitudeTimeseriesObject>( dataItems );
            return result;
        }

        public RadarLongitudeTimeseriesEntity? GetRadarLongitudeTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarLongitudeTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarLongitudeTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadomeDewPointTimeseries queries
        // ---------------------------------------------------------------------
        public RadomeDewPointTimeseriesEntity? GetRadomeDewPointTimeseriesById( Guid id )
        {
            var entity = (RadomeDewPointTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadomeDewPointTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadomeDewPointTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadomeDewPointTimeseriesEntity> GetRadomeDewPointTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeDewPointTimeseriesCollection( );
            var result = ToEntityList<RadomeDewPointTimeseriesEntity,RadomeDewPointTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadomeDewPointTimeseriesEntity> GetRadomeDewPointTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeDewPointTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadomeDewPointTimeseriesEntity,RadomeDewPointTimeseriesObject>( dataItems );
            return result;
        }

        public RadomeDewPointTimeseriesEntity? GetRadomeDewPointTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadomeDewPointTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadomeDewPointTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadomePressureTimeseries queries
        // ---------------------------------------------------------------------
        public RadomePressureTimeseriesEntity? GetRadomePressureTimeseriesById( Guid id )
        {
            var entity = (RadomePressureTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadomePressureTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadomePressureTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadomePressureTimeseriesEntity> GetRadomePressureTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomePressureTimeseriesCollection( );
            var result = ToEntityList<RadomePressureTimeseriesEntity,RadomePressureTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadomePressureTimeseriesEntity> GetRadomePressureTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomePressureTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadomePressureTimeseriesEntity,RadomePressureTimeseriesObject>( dataItems );
            return result;
        }

        public RadomePressureTimeseriesEntity? GetRadomePressureTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadomePressureTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadomePressureTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadomeTemperatureTimeseries queries
        // ---------------------------------------------------------------------
        public RadomeTemperatureTimeseriesEntity? GetRadomeTemperatureTimeseriesById( Guid id )
        {
            var entity = (RadomeTemperatureTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadomeTemperatureTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadomeTemperatureTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadomeTemperatureTimeseriesEntity> GetRadomeTemperatureTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeTemperatureTimeseriesCollection( );
            var result = ToEntityList<RadomeTemperatureTimeseriesEntity,RadomeTemperatureTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadomeTemperatureTimeseriesEntity> GetRadomeTemperatureTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeTemperatureTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadomeTemperatureTimeseriesEntity,RadomeTemperatureTimeseriesObject>( dataItems );
            return result;
        }

        public RadomeTemperatureTimeseriesEntity? GetRadomeTemperatureTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadomeTemperatureTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadomeTemperatureTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // VesselDraughtTimeseries queries
        // ---------------------------------------------------------------------
        public VesselDraughtTimeseriesEntity? GetVesselDraughtTimeseriesById( Guid id )
        {
            var entity = (VesselDraughtTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetVesselDraughtTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (VesselDraughtTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<VesselDraughtTimeseriesEntity> GetVesselDraughtTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetVesselDraughtTimeseriesCollection( );
            var result = ToEntityList<VesselDraughtTimeseriesEntity,VesselDraughtTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<VesselDraughtTimeseriesEntity> GetVesselDraughtTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetVesselDraughtTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<VesselDraughtTimeseriesEntity,VesselDraughtTimeseriesObject>( dataItems );
            return result;
        }

        public VesselDraughtTimeseriesEntity? GetVesselDraughtTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetVesselDraughtTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (VesselDraughtTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // ViewLatitudeTimeseries queries
        // ---------------------------------------------------------------------
        public ViewLatitudeTimeseriesEntity? GetViewLatitudeTimeseriesById( Guid id )
        {
            var entity = (ViewLatitudeTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetViewLatitudeTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (ViewLatitudeTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ViewLatitudeTimeseriesEntity> GetViewLatitudeTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewLatitudeTimeseriesCollection( );
            var result = ToEntityList<ViewLatitudeTimeseriesEntity,ViewLatitudeTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<ViewLatitudeTimeseriesEntity> GetViewLatitudeTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewLatitudeTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<ViewLatitudeTimeseriesEntity,ViewLatitudeTimeseriesObject>( dataItems );
            return result;
        }

        public ViewLatitudeTimeseriesEntity? GetViewLatitudeTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetViewLatitudeTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (ViewLatitudeTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // ViewLongitudeTimeseries queries
        // ---------------------------------------------------------------------
        public ViewLongitudeTimeseriesEntity? GetViewLongitudeTimeseriesById( Guid id )
        {
            var entity = (ViewLongitudeTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetViewLongitudeTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (ViewLongitudeTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ViewLongitudeTimeseriesEntity> GetViewLongitudeTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewLongitudeTimeseriesCollection( );
            var result = ToEntityList<ViewLongitudeTimeseriesEntity,ViewLongitudeTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<ViewLongitudeTimeseriesEntity> GetViewLongitudeTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewLongitudeTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<ViewLongitudeTimeseriesEntity,ViewLongitudeTimeseriesObject>( dataItems );
            return result;
        }

        public ViewLongitudeTimeseriesEntity? GetViewLongitudeTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetViewLongitudeTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (ViewLongitudeTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // ViewZoomLevelTimeseries queries
        // ---------------------------------------------------------------------
        public ViewZoomLevelTimeseriesEntity? GetViewZoomLevelTimeseriesById( Guid id )
        {
            var entity = (ViewZoomLevelTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetViewZoomLevelTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (ViewZoomLevelTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ViewZoomLevelTimeseriesEntity> GetViewZoomLevelTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewZoomLevelTimeseriesCollection( );
            var result = ToEntityList<ViewZoomLevelTimeseriesEntity,ViewZoomLevelTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<ViewZoomLevelTimeseriesEntity> GetViewZoomLevelTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewZoomLevelTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<ViewZoomLevelTimeseriesEntity,ViewZoomLevelTimeseriesObject>( dataItems );
            return result;
        }

        public ViewZoomLevelTimeseriesEntity? GetViewZoomLevelTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetViewZoomLevelTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (ViewZoomLevelTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // WeatherStationAbsoluteHumidityTimeseries queries
        // ---------------------------------------------------------------------
        public WeatherStationAbsoluteHumidityTimeseriesEntity? GetWeatherStationAbsoluteHumidityTimeseriesById( Guid id )
        {
            var entity = (WeatherStationAbsoluteHumidityTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetWeatherStationAbsoluteHumidityTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (WeatherStationAbsoluteHumidityTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<WeatherStationAbsoluteHumidityTimeseriesEntity> GetWeatherStationAbsoluteHumidityTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationAbsoluteHumidityTimeseriesCollection( );
            var result = ToEntityList<WeatherStationAbsoluteHumidityTimeseriesEntity,WeatherStationAbsoluteHumidityTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<WeatherStationAbsoluteHumidityTimeseriesEntity> GetWeatherStationAbsoluteHumidityTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationAbsoluteHumidityTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<WeatherStationAbsoluteHumidityTimeseriesEntity,WeatherStationAbsoluteHumidityTimeseriesObject>( dataItems );
            return result;
        }

        public WeatherStationAbsoluteHumidityTimeseriesEntity? GetWeatherStationAbsoluteHumidityTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationAbsoluteHumidityTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (WeatherStationAbsoluteHumidityTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public WeatherStationAbsoluteHumidityTimeseriesEntity? GetWeatherStationAbsoluteHumidityTimeseriesByWeatherStation( Guid? weatherStation )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationAbsoluteHumidityTimeseriesByWeatherStation( weatherStation );
            if( dataObject != null )
            {
                var result = (WeatherStationAbsoluteHumidityTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // WeatherStationAirTemperatureTimeseries queries
        // ---------------------------------------------------------------------
        public WeatherStationAirTemperatureTimeseriesEntity? GetWeatherStationAirTemperatureTimeseriesById( Guid id )
        {
            var entity = (WeatherStationAirTemperatureTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetWeatherStationAirTemperatureTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (WeatherStationAirTemperatureTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<WeatherStationAirTemperatureTimeseriesEntity> GetWeatherStationAirTemperatureTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationAirTemperatureTimeseriesCollection( );
            var result = ToEntityList<WeatherStationAirTemperatureTimeseriesEntity,WeatherStationAirTemperatureTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<WeatherStationAirTemperatureTimeseriesEntity> GetWeatherStationAirTemperatureTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationAirTemperatureTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<WeatherStationAirTemperatureTimeseriesEntity,WeatherStationAirTemperatureTimeseriesObject>( dataItems );
            return result;
        }

        public WeatherStationAirTemperatureTimeseriesEntity? GetWeatherStationAirTemperatureTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationAirTemperatureTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (WeatherStationAirTemperatureTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public WeatherStationAirTemperatureTimeseriesEntity? GetWeatherStationAirTemperatureTimeseriesByWeatherStation( Guid? weatherStation )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationAirTemperatureTimeseriesByWeatherStation( weatherStation );
            if( dataObject != null )
            {
                var result = (WeatherStationAirTemperatureTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // WeatherStationBarometricPressureTimeseries queries
        // ---------------------------------------------------------------------
        public WeatherStationBarometricPressureTimeseriesEntity? GetWeatherStationBarometricPressureTimeseriesById( Guid id )
        {
            var entity = (WeatherStationBarometricPressureTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetWeatherStationBarometricPressureTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (WeatherStationBarometricPressureTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<WeatherStationBarometricPressureTimeseriesEntity> GetWeatherStationBarometricPressureTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationBarometricPressureTimeseriesCollection( );
            var result = ToEntityList<WeatherStationBarometricPressureTimeseriesEntity,WeatherStationBarometricPressureTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<WeatherStationBarometricPressureTimeseriesEntity> GetWeatherStationBarometricPressureTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationBarometricPressureTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<WeatherStationBarometricPressureTimeseriesEntity,WeatherStationBarometricPressureTimeseriesObject>( dataItems );
            return result;
        }

        public WeatherStationBarometricPressureTimeseriesEntity? GetWeatherStationBarometricPressureTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationBarometricPressureTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (WeatherStationBarometricPressureTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public WeatherStationBarometricPressureTimeseriesEntity? GetWeatherStationBarometricPressureTimeseriesByWeatherStation( Guid? weatherStation )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationBarometricPressureTimeseriesByWeatherStation( weatherStation );
            if( dataObject != null )
            {
                var result = (WeatherStationBarometricPressureTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // WeatherStationDewPointTimeseries queries
        // ---------------------------------------------------------------------
        public WeatherStationDewPointTimeseriesEntity? GetWeatherStationDewPointTimeseriesById( Guid id )
        {
            var entity = (WeatherStationDewPointTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetWeatherStationDewPointTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (WeatherStationDewPointTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<WeatherStationDewPointTimeseriesEntity> GetWeatherStationDewPointTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationDewPointTimeseriesCollection( );
            var result = ToEntityList<WeatherStationDewPointTimeseriesEntity,WeatherStationDewPointTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<WeatherStationDewPointTimeseriesEntity> GetWeatherStationDewPointTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationDewPointTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<WeatherStationDewPointTimeseriesEntity,WeatherStationDewPointTimeseriesObject>( dataItems );
            return result;
        }

        public WeatherStationDewPointTimeseriesEntity? GetWeatherStationDewPointTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationDewPointTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (WeatherStationDewPointTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public WeatherStationDewPointTimeseriesEntity? GetWeatherStationDewPointTimeseriesByWeatherStation( Guid? weatherStation )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationDewPointTimeseriesByWeatherStation( weatherStation );
            if( dataObject != null )
            {
                var result = (WeatherStationDewPointTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // WeatherStationRelativeHumidityTimeseries queries
        // ---------------------------------------------------------------------
        public WeatherStationRelativeHumidityTimeseriesEntity? GetWeatherStationRelativeHumidityTimeseriesById( Guid id )
        {
            var entity = (WeatherStationRelativeHumidityTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetWeatherStationRelativeHumidityTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (WeatherStationRelativeHumidityTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<WeatherStationRelativeHumidityTimeseriesEntity> GetWeatherStationRelativeHumidityTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationRelativeHumidityTimeseriesCollection( );
            var result = ToEntityList<WeatherStationRelativeHumidityTimeseriesEntity,WeatherStationRelativeHumidityTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<WeatherStationRelativeHumidityTimeseriesEntity> GetWeatherStationRelativeHumidityTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationRelativeHumidityTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<WeatherStationRelativeHumidityTimeseriesEntity,WeatherStationRelativeHumidityTimeseriesObject>( dataItems );
            return result;
        }

        public WeatherStationRelativeHumidityTimeseriesEntity? GetWeatherStationRelativeHumidityTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationRelativeHumidityTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (WeatherStationRelativeHumidityTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public WeatherStationRelativeHumidityTimeseriesEntity? GetWeatherStationRelativeHumidityTimeseriesByWeatherStation( Guid? weatherStation )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationRelativeHumidityTimeseriesByWeatherStation( weatherStation );
            if( dataObject != null )
            {
                var result = (WeatherStationRelativeHumidityTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // WeatherStationWaterTemperatureTimeseries queries
        // ---------------------------------------------------------------------
        public WeatherStationWaterTemperatureTimeseriesEntity? GetWeatherStationWaterTemperatureTimeseriesById( Guid id )
        {
            var entity = (WeatherStationWaterTemperatureTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetWeatherStationWaterTemperatureTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (WeatherStationWaterTemperatureTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<WeatherStationWaterTemperatureTimeseriesEntity> GetWeatherStationWaterTemperatureTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationWaterTemperatureTimeseriesCollection( );
            var result = ToEntityList<WeatherStationWaterTemperatureTimeseriesEntity,WeatherStationWaterTemperatureTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<WeatherStationWaterTemperatureTimeseriesEntity> GetWeatherStationWaterTemperatureTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationWaterTemperatureTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<WeatherStationWaterTemperatureTimeseriesEntity,WeatherStationWaterTemperatureTimeseriesObject>( dataItems );
            return result;
        }

        public WeatherStationWaterTemperatureTimeseriesEntity? GetWeatherStationWaterTemperatureTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationWaterTemperatureTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (WeatherStationWaterTemperatureTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public WeatherStationWaterTemperatureTimeseriesEntity? GetWeatherStationWaterTemperatureTimeseriesByWeatherStation( Guid? weatherStation )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationWaterTemperatureTimeseriesByWeatherStation( weatherStation );
            if( dataObject != null )
            {
                var result = (WeatherStationWaterTemperatureTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // WeatherStationWindDirectionTimeseries queries
        // ---------------------------------------------------------------------
        public WeatherStationWindDirectionTimeseriesEntity? GetWeatherStationWindDirectionTimeseriesById( Guid id )
        {
            var entity = (WeatherStationWindDirectionTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetWeatherStationWindDirectionTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (WeatherStationWindDirectionTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<WeatherStationWindDirectionTimeseriesEntity> GetWeatherStationWindDirectionTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationWindDirectionTimeseriesCollection( );
            var result = ToEntityList<WeatherStationWindDirectionTimeseriesEntity,WeatherStationWindDirectionTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<WeatherStationWindDirectionTimeseriesEntity> GetWeatherStationWindDirectionTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationWindDirectionTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<WeatherStationWindDirectionTimeseriesEntity,WeatherStationWindDirectionTimeseriesObject>( dataItems );
            return result;
        }

        public WeatherStationWindDirectionTimeseriesEntity? GetWeatherStationWindDirectionTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationWindDirectionTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (WeatherStationWindDirectionTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public WeatherStationWindDirectionTimeseriesEntity? GetWeatherStationWindDirectionTimeseriesByWeatherStation( Guid? weatherStation )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationWindDirectionTimeseriesByWeatherStation( weatherStation );
            if( dataObject != null )
            {
                var result = (WeatherStationWindDirectionTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // WeatherStationWindSpeedTimeseries queries
        // ---------------------------------------------------------------------
        public WeatherStationWindSpeedTimeseriesEntity? GetWeatherStationWindSpeedTimeseriesById( Guid id )
        {
            var entity = (WeatherStationWindSpeedTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetWeatherStationWindSpeedTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (WeatherStationWindSpeedTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<WeatherStationWindSpeedTimeseriesEntity> GetWeatherStationWindSpeedTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationWindSpeedTimeseriesCollection( );
            var result = ToEntityList<WeatherStationWindSpeedTimeseriesEntity,WeatherStationWindSpeedTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<WeatherStationWindSpeedTimeseriesEntity> GetWeatherStationWindSpeedTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationWindSpeedTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<WeatherStationWindSpeedTimeseriesEntity,WeatherStationWindSpeedTimeseriesObject>( dataItems );
            return result;
        }

        public WeatherStationWindSpeedTimeseriesEntity? GetWeatherStationWindSpeedTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationWindSpeedTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (WeatherStationWindSpeedTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public WeatherStationWindSpeedTimeseriesEntity? GetWeatherStationWindSpeedTimeseriesByWeatherStation( Guid? weatherStation )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationWindSpeedTimeseriesByWeatherStation( weatherStation );
            if( dataObject != null )
            {
                var result = (WeatherStationWindSpeedTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GeoPosition2DTimeseries queries
        // ---------------------------------------------------------------------
        public GeoPosition2DTimeseriesEntity? GetGeoPosition2DTimeseriesById( Guid id )
        {
            var entity = (GeoPosition2DTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGeoPosition2DTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (GeoPosition2DTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GeoPosition2DTimeseriesEntity> GetGeoPosition2DTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition2DTimeseriesCollection( );
            var result = ToEntityList<GeoPosition2DTimeseriesEntity,GeoPosition2DTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<GeoPosition2DTimeseriesEntity> GetGeoPosition2DTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition2DTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<GeoPosition2DTimeseriesEntity,GeoPosition2DTimeseriesObject>( dataItems );
            return result;
        }

        public GeoPosition2DTimeseriesEntity? GetGeoPosition2DTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGeoPosition2DTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (GeoPosition2DTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // AisAidToNavigationPositionTimeseries queries
        // ---------------------------------------------------------------------
        public AisAidToNavigationPositionTimeseriesEntity? GetAisAidToNavigationPositionTimeseriesById( Guid id )
        {
            var entity = (AisAidToNavigationPositionTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetAisAidToNavigationPositionTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (AisAidToNavigationPositionTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<AisAidToNavigationPositionTimeseriesEntity> GetAisAidToNavigationPositionTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAidToNavigationPositionTimeseriesCollection( );
            var result = ToEntityList<AisAidToNavigationPositionTimeseriesEntity,AisAidToNavigationPositionTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<AisAidToNavigationPositionTimeseriesEntity> GetAisAidToNavigationPositionTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetAisAidToNavigationPositionTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<AisAidToNavigationPositionTimeseriesEntity,AisAidToNavigationPositionTimeseriesObject>( dataItems );
            return result;
        }

        public AisAidToNavigationPositionTimeseriesEntity? GetAisAidToNavigationPositionTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetAisAidToNavigationPositionTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (AisAidToNavigationPositionTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GeoPosition3DTimeseries queries
        // ---------------------------------------------------------------------
        public GeoPosition3DTimeseriesEntity? GetGeoPosition3DTimeseriesById( Guid id )
        {
            var entity = (GeoPosition3DTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGeoPosition3DTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (GeoPosition3DTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GeoPosition3DTimeseriesEntity> GetGeoPosition3DTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition3DTimeseriesCollection( );
            var result = ToEntityList<GeoPosition3DTimeseriesEntity,GeoPosition3DTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<GeoPosition3DTimeseriesEntity> GetGeoPosition3DTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGeoPosition3DTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<GeoPosition3DTimeseriesEntity,GeoPosition3DTimeseriesObject>( dataItems );
            return result;
        }

        public GeoPosition3DTimeseriesEntity? GetGeoPosition3DTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGeoPosition3DTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (GeoPosition3DTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // GuidTimeseries queries
        // ---------------------------------------------------------------------
        public GuidTimeseriesEntity? GetGuidTimeseriesById( Guid id )
        {
            var entity = (GuidTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetGuidTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (GuidTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<GuidTimeseriesEntity> GetGuidTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesCollection( );
            var result = ToEntityList<GuidTimeseriesEntity,GuidTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<GuidTimeseriesEntity> GetGuidTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetGuidTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<GuidTimeseriesEntity,GuidTimeseriesObject>( dataItems );
            return result;
        }

        public GuidTimeseriesEntity? GetGuidTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetGuidTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (GuidTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // Int16Timeseries queries
        // ---------------------------------------------------------------------
        public Int16TimeseriesEntity? GetInt16TimeseriesById( Guid id )
        {
            var entity = (Int16TimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt16TimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (Int16TimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int16TimeseriesEntity> GetInt16TimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesCollection( );
            var result = ToEntityList<Int16TimeseriesEntity,Int16TimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<Int16TimeseriesEntity> GetInt16TimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt16TimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<Int16TimeseriesEntity,Int16TimeseriesObject>( dataItems );
            return result;
        }

        public Int16TimeseriesEntity? GetInt16TimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt16TimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (Int16TimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // Int32Timeseries queries
        // ---------------------------------------------------------------------
        public Int32TimeseriesEntity? GetInt32TimeseriesById( Guid id )
        {
            var entity = (Int32TimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt32TimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (Int32TimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int32TimeseriesEntity> GetInt32TimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesCollection( );
            var result = ToEntityList<Int32TimeseriesEntity,Int32TimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<Int32TimeseriesEntity> GetInt32TimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt32TimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<Int32TimeseriesEntity,Int32TimeseriesObject>( dataItems );
            return result;
        }

        public Int32TimeseriesEntity? GetInt32TimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt32TimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (Int32TimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarAzimuthOffsetTimeseries queries
        // ---------------------------------------------------------------------
        public RadarAzimuthOffsetTimeseriesEntity? GetRadarAzimuthOffsetTimeseriesById( Guid id )
        {
            var entity = (RadarAzimuthOffsetTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarAzimuthOffsetTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarAzimuthOffsetTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarAzimuthOffsetTimeseriesEntity> GetRadarAzimuthOffsetTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarAzimuthOffsetTimeseriesCollection( );
            var result = ToEntityList<RadarAzimuthOffsetTimeseriesEntity,RadarAzimuthOffsetTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarAzimuthOffsetTimeseriesEntity> GetRadarAzimuthOffsetTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarAzimuthOffsetTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarAzimuthOffsetTimeseriesEntity,RadarAzimuthOffsetTimeseriesObject>( dataItems );
            return result;
        }

        public RadarAzimuthOffsetTimeseriesEntity? GetRadarAzimuthOffsetTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarAzimuthOffsetTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarAzimuthOffsetTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarFastTimeConstantLevelTimeseries queries
        // ---------------------------------------------------------------------
        public RadarFastTimeConstantLevelTimeseriesEntity? GetRadarFastTimeConstantLevelTimeseriesById( Guid id )
        {
            var entity = (RadarFastTimeConstantLevelTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarFastTimeConstantLevelTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarFastTimeConstantLevelTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarFastTimeConstantLevelTimeseriesEntity> GetRadarFastTimeConstantLevelTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarFastTimeConstantLevelTimeseriesCollection( );
            var result = ToEntityList<RadarFastTimeConstantLevelTimeseriesEntity,RadarFastTimeConstantLevelTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarFastTimeConstantLevelTimeseriesEntity> GetRadarFastTimeConstantLevelTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarFastTimeConstantLevelTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarFastTimeConstantLevelTimeseriesEntity,RadarFastTimeConstantLevelTimeseriesObject>( dataItems );
            return result;
        }

        public RadarFastTimeConstantLevelTimeseriesEntity? GetRadarFastTimeConstantLevelTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarFastTimeConstantLevelTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarFastTimeConstantLevelTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarFastTimeConstantModeTimeseries queries
        // ---------------------------------------------------------------------
        public RadarFastTimeConstantModeTimeseriesEntity? GetRadarFastTimeConstantModeTimeseriesById( Guid id )
        {
            var entity = (RadarFastTimeConstantModeTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarFastTimeConstantModeTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarFastTimeConstantModeTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarFastTimeConstantModeTimeseriesEntity> GetRadarFastTimeConstantModeTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarFastTimeConstantModeTimeseriesCollection( );
            var result = ToEntityList<RadarFastTimeConstantModeTimeseriesEntity,RadarFastTimeConstantModeTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarFastTimeConstantModeTimeseriesEntity> GetRadarFastTimeConstantModeTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarFastTimeConstantModeTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarFastTimeConstantModeTimeseriesEntity,RadarFastTimeConstantModeTimeseriesObject>( dataItems );
            return result;
        }

        public RadarFastTimeConstantModeTimeseriesEntity? GetRadarFastTimeConstantModeTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarFastTimeConstantModeTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarFastTimeConstantModeTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarPulseTimeseries queries
        // ---------------------------------------------------------------------
        public RadarPulseTimeseriesEntity? GetRadarPulseTimeseriesById( Guid id )
        {
            var entity = (RadarPulseTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarPulseTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarPulseTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarPulseTimeseriesEntity> GetRadarPulseTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarPulseTimeseriesCollection( );
            var result = ToEntityList<RadarPulseTimeseriesEntity,RadarPulseTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarPulseTimeseriesEntity> GetRadarPulseTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarPulseTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarPulseTimeseriesEntity,RadarPulseTimeseriesObject>( dataItems );
            return result;
        }

        public RadarPulseTimeseriesEntity? GetRadarPulseTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarPulseTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarPulseTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarSector1EndTimeseries queries
        // ---------------------------------------------------------------------
        public RadarSector1EndTimeseriesEntity? GetRadarSector1EndTimeseriesById( Guid id )
        {
            var entity = (RadarSector1EndTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarSector1EndTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarSector1EndTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarSector1EndTimeseriesEntity> GetRadarSector1EndTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarSector1EndTimeseriesCollection( );
            var result = ToEntityList<RadarSector1EndTimeseriesEntity,RadarSector1EndTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarSector1EndTimeseriesEntity> GetRadarSector1EndTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarSector1EndTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarSector1EndTimeseriesEntity,RadarSector1EndTimeseriesObject>( dataItems );
            return result;
        }

        public RadarSector1EndTimeseriesEntity? GetRadarSector1EndTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarSector1EndTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarSector1EndTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarSector1StartTimeseries queries
        // ---------------------------------------------------------------------
        public RadarSector1StartTimeseriesEntity? GetRadarSector1StartTimeseriesById( Guid id )
        {
            var entity = (RadarSector1StartTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarSector1StartTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarSector1StartTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarSector1StartTimeseriesEntity> GetRadarSector1StartTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarSector1StartTimeseriesCollection( );
            var result = ToEntityList<RadarSector1StartTimeseriesEntity,RadarSector1StartTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarSector1StartTimeseriesEntity> GetRadarSector1StartTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarSector1StartTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarSector1StartTimeseriesEntity,RadarSector1StartTimeseriesObject>( dataItems );
            return result;
        }

        public RadarSector1StartTimeseriesEntity? GetRadarSector1StartTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarSector1StartTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarSector1StartTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarSector2EndTimeseries queries
        // ---------------------------------------------------------------------
        public RadarSector2EndTimeseriesEntity? GetRadarSector2EndTimeseriesById( Guid id )
        {
            var entity = (RadarSector2EndTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarSector2EndTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarSector2EndTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarSector2EndTimeseriesEntity> GetRadarSector2EndTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarSector2EndTimeseriesCollection( );
            var result = ToEntityList<RadarSector2EndTimeseriesEntity,RadarSector2EndTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarSector2EndTimeseriesEntity> GetRadarSector2EndTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarSector2EndTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarSector2EndTimeseriesEntity,RadarSector2EndTimeseriesObject>( dataItems );
            return result;
        }

        public RadarSector2EndTimeseriesEntity? GetRadarSector2EndTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarSector2EndTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarSector2EndTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarSector2StartTimeseries queries
        // ---------------------------------------------------------------------
        public RadarSector2StartTimeseriesEntity? GetRadarSector2StartTimeseriesById( Guid id )
        {
            var entity = (RadarSector2StartTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarSector2StartTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarSector2StartTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarSector2StartTimeseriesEntity> GetRadarSector2StartTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarSector2StartTimeseriesCollection( );
            var result = ToEntityList<RadarSector2StartTimeseriesEntity,RadarSector2StartTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarSector2StartTimeseriesEntity> GetRadarSector2StartTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarSector2StartTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarSector2StartTimeseriesEntity,RadarSector2StartTimeseriesObject>( dataItems );
            return result;
        }

        public RadarSector2StartTimeseriesEntity? GetRadarSector2StartTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarSector2StartTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarSector2StartTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarSensitivityTimeControlLevelTimeseries queries
        // ---------------------------------------------------------------------
        public RadarSensitivityTimeControlLevelTimeseriesEntity? GetRadarSensitivityTimeControlLevelTimeseriesById( Guid id )
        {
            var entity = (RadarSensitivityTimeControlLevelTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarSensitivityTimeControlLevelTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarSensitivityTimeControlLevelTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarSensitivityTimeControlLevelTimeseriesEntity> GetRadarSensitivityTimeControlLevelTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarSensitivityTimeControlLevelTimeseriesCollection( );
            var result = ToEntityList<RadarSensitivityTimeControlLevelTimeseriesEntity,RadarSensitivityTimeControlLevelTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarSensitivityTimeControlLevelTimeseriesEntity> GetRadarSensitivityTimeControlLevelTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarSensitivityTimeControlLevelTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarSensitivityTimeControlLevelTimeseriesEntity,RadarSensitivityTimeControlLevelTimeseriesObject>( dataItems );
            return result;
        }

        public RadarSensitivityTimeControlLevelTimeseriesEntity? GetRadarSensitivityTimeControlLevelTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarSensitivityTimeControlLevelTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarSensitivityTimeControlLevelTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadarTuningTimeseries queries
        // ---------------------------------------------------------------------
        public RadarTuningTimeseriesEntity? GetRadarTuningTimeseriesById( Guid id )
        {
            var entity = (RadarTuningTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadarTuningTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadarTuningTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadarTuningTimeseriesEntity> GetRadarTuningTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarTuningTimeseriesCollection( );
            var result = ToEntityList<RadarTuningTimeseriesEntity,RadarTuningTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadarTuningTimeseriesEntity> GetRadarTuningTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadarTuningTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadarTuningTimeseriesEntity,RadarTuningTimeseriesObject>( dataItems );
            return result;
        }

        public RadarTuningTimeseriesEntity? GetRadarTuningTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadarTuningTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadarTuningTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // VesselPersonsOnBoardTimeseries queries
        // ---------------------------------------------------------------------
        public VesselPersonsOnBoardTimeseriesEntity? GetVesselPersonsOnBoardTimeseriesById( Guid id )
        {
            var entity = (VesselPersonsOnBoardTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetVesselPersonsOnBoardTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (VesselPersonsOnBoardTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<VesselPersonsOnBoardTimeseriesEntity> GetVesselPersonsOnBoardTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetVesselPersonsOnBoardTimeseriesCollection( );
            var result = ToEntityList<VesselPersonsOnBoardTimeseriesEntity,VesselPersonsOnBoardTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<VesselPersonsOnBoardTimeseriesEntity> GetVesselPersonsOnBoardTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetVesselPersonsOnBoardTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<VesselPersonsOnBoardTimeseriesEntity,VesselPersonsOnBoardTimeseriesObject>( dataItems );
            return result;
        }

        public VesselPersonsOnBoardTimeseriesEntity? GetVesselPersonsOnBoardTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetVesselPersonsOnBoardTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (VesselPersonsOnBoardTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // Int64Timeseries queries
        // ---------------------------------------------------------------------
        public Int64TimeseriesEntity? GetInt64TimeseriesById( Guid id )
        {
            var entity = (Int64TimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetInt64TimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (Int64TimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Int64TimeseriesEntity> GetInt64TimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesCollection( );
            var result = ToEntityList<Int64TimeseriesEntity,Int64TimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<Int64TimeseriesEntity> GetInt64TimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetInt64TimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<Int64TimeseriesEntity,Int64TimeseriesObject>( dataItems );
            return result;
        }

        public Int64TimeseriesEntity? GetInt64TimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetInt64TimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (Int64TimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // Position2DTimeseries queries
        // ---------------------------------------------------------------------
        public Position2DTimeseriesEntity? GetPosition2DTimeseriesById( Guid id )
        {
            var entity = (Position2DTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetPosition2DTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (Position2DTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Position2DTimeseriesEntity> GetPosition2DTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition2DTimeseriesCollection( );
            var result = ToEntityList<Position2DTimeseriesEntity,Position2DTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<Position2DTimeseriesEntity> GetPosition2DTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition2DTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<Position2DTimeseriesEntity,Position2DTimeseriesObject>( dataItems );
            return result;
        }

        public Position2DTimeseriesEntity? GetPosition2DTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetPosition2DTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (Position2DTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // Position3DTimeseries queries
        // ---------------------------------------------------------------------
        public Position3DTimeseriesEntity? GetPosition3DTimeseriesById( Guid id )
        {
            var entity = (Position3DTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetPosition3DTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (Position3DTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Position3DTimeseriesEntity> GetPosition3DTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition3DTimeseriesCollection( );
            var result = ToEntityList<Position3DTimeseriesEntity,Position3DTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<Position3DTimeseriesEntity> GetPosition3DTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPosition3DTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<Position3DTimeseriesEntity,Position3DTimeseriesObject>( dataItems );
            return result;
        }

        public Position3DTimeseriesEntity? GetPosition3DTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetPosition3DTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (Position3DTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // ReferenceTimeseries queries
        // ---------------------------------------------------------------------
        public ReferenceTimeseriesEntity? GetReferenceTimeseriesById( Guid id )
        {
            var entity = (ReferenceTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetReferenceTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (ReferenceTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ReferenceTimeseriesEntity> GetReferenceTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesCollection( );
            var result = ToEntityList<ReferenceTimeseriesEntity,ReferenceTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<ReferenceTimeseriesEntity> GetReferenceTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetReferenceTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<ReferenceTimeseriesEntity,ReferenceTimeseriesObject>( dataItems );
            return result;
        }

        public ReferenceTimeseriesEntity? GetReferenceTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetReferenceTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (ReferenceTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // SByteTimeseries queries
        // ---------------------------------------------------------------------
        public SByteTimeseriesEntity? GetSByteTimeseriesById( Guid id )
        {
            var entity = (SByteTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSByteTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (SByteTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SByteTimeseriesEntity> GetSByteTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesCollection( );
            var result = ToEntityList<SByteTimeseriesEntity,SByteTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<SByteTimeseriesEntity> GetSByteTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSByteTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<SByteTimeseriesEntity,SByteTimeseriesObject>( dataItems );
            return result;
        }

        public SByteTimeseriesEntity? GetSByteTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSByteTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (SByteTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // SingleTimeseries queries
        // ---------------------------------------------------------------------
        public SingleTimeseriesEntity? GetSingleTimeseriesById( Guid id )
        {
            var entity = (SingleTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetSingleTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (SingleTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<SingleTimeseriesEntity> GetSingleTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesCollection( );
            var result = ToEntityList<SingleTimeseriesEntity,SingleTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<SingleTimeseriesEntity> GetSingleTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetSingleTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<SingleTimeseriesEntity,SingleTimeseriesObject>( dataItems );
            return result;
        }

        public SingleTimeseriesEntity? GetSingleTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetSingleTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (SingleTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // StringTimeseries queries
        // ---------------------------------------------------------------------
        public StringTimeseriesEntity? GetStringTimeseriesById( Guid id )
        {
            var entity = (StringTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetStringTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (StringTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<StringTimeseriesEntity> GetStringTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesCollection( );
            var result = ToEntityList<StringTimeseriesEntity,StringTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<StringTimeseriesEntity> GetStringTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetStringTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<StringTimeseriesEntity,StringTimeseriesObject>( dataItems );
            return result;
        }

        public StringTimeseriesEntity? GetStringTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetStringTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (StringTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // TimeSpanTimeseries queries
        // ---------------------------------------------------------------------
        public TimeSpanTimeseriesEntity? GetTimeSpanTimeseriesById( Guid id )
        {
            var entity = (TimeSpanTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTimeSpanTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (TimeSpanTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TimeSpanTimeseriesEntity> GetTimeSpanTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesCollection( );
            var result = ToEntityList<TimeSpanTimeseriesEntity,TimeSpanTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<TimeSpanTimeseriesEntity> GetTimeSpanTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<TimeSpanTimeseriesEntity,TimeSpanTimeseriesObject>( dataItems );
            return result;
        }

        public TimeSpanTimeseriesEntity? GetTimeSpanTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTimeSpanTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (TimeSpanTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // UInt16Timeseries queries
        // ---------------------------------------------------------------------
        public UInt16TimeseriesEntity? GetUInt16TimeseriesById( Guid id )
        {
            var entity = (UInt16TimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt16TimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (UInt16TimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt16TimeseriesEntity> GetUInt16TimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesCollection( );
            var result = ToEntityList<UInt16TimeseriesEntity,UInt16TimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<UInt16TimeseriesEntity> GetUInt16TimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<UInt16TimeseriesEntity,UInt16TimeseriesObject>( dataItems );
            return result;
        }

        public UInt16TimeseriesEntity? GetUInt16TimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt16TimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (UInt16TimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // UInt32Timeseries queries
        // ---------------------------------------------------------------------
        public UInt32TimeseriesEntity? GetUInt32TimeseriesById( Guid id )
        {
            var entity = (UInt32TimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt32TimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (UInt32TimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt32TimeseriesEntity> GetUInt32TimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesCollection( );
            var result = ToEntityList<UInt32TimeseriesEntity,UInt32TimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<UInt32TimeseriesEntity> GetUInt32TimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<UInt32TimeseriesEntity,UInt32TimeseriesObject>( dataItems );
            return result;
        }

        public UInt32TimeseriesEntity? GetUInt32TimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt32TimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (UInt32TimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // RadomeStatusTimeseries queries
        // ---------------------------------------------------------------------
        public RadomeStatusTimeseriesEntity? GetRadomeStatusTimeseriesById( Guid id )
        {
            var entity = (RadomeStatusTimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetRadomeStatusTimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (RadomeStatusTimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<RadomeStatusTimeseriesEntity> GetRadomeStatusTimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeStatusTimeseriesCollection( );
            var result = ToEntityList<RadomeStatusTimeseriesEntity,RadomeStatusTimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<RadomeStatusTimeseriesEntity> GetRadomeStatusTimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetRadomeStatusTimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<RadomeStatusTimeseriesEntity,RadomeStatusTimeseriesObject>( dataItems );
            return result;
        }

        public RadomeStatusTimeseriesEntity? GetRadomeStatusTimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetRadomeStatusTimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (RadomeStatusTimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // UInt64Timeseries queries
        // ---------------------------------------------------------------------
        public UInt64TimeseriesEntity? GetUInt64TimeseriesById( Guid id )
        {
            var entity = (UInt64TimeseriesEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt64TimeseriesById( id );
                if( dataObject != null )
                {
                    entity = (UInt64TimeseriesEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt64TimeseriesEntity> GetUInt64TimeseriesCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesCollection( );
            var result = ToEntityList<UInt64TimeseriesEntity,UInt64TimeseriesObject>( dataItems );
            return result;
        }
        public BindingList<UInt64TimeseriesEntity> GetUInt64TimeseriesCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesCollectionByCatalog( catalog );
            var result = ToEntityList<UInt64TimeseriesEntity,UInt64TimeseriesObject>( dataItems );
            return result;
        }

        public UInt64TimeseriesEntity? GetUInt64TimeseriesByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt64TimeseriesByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (UInt64TimeseriesEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // TimeseriesCatalog queries
        // ---------------------------------------------------------------------
        public TimeseriesCatalogEntity? GetTimeseriesCatalogById( Guid id )
        {
            var entity = (TimeseriesCatalogEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTimeseriesCatalogById( id );
                if( dataObject != null )
                {
                    entity = (TimeseriesCatalogEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TimeseriesCatalogEntity> GetTimeseriesCatalogCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeseriesCatalogCollection( );
            var result = ToEntityList<TimeseriesCatalogEntity,TimeseriesCatalogObject>( dataItems );
            return result;
        }
        public BindingList<TimeseriesCatalogEntity> GetTimeseriesCatalogCollectionByCatalog( Guid? catalog )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeseriesCatalogCollectionByCatalog( catalog );
            var result = ToEntityList<TimeseriesCatalogEntity,TimeseriesCatalogObject>( dataItems );
            return result;
        }

        public TimeseriesCatalogEntity? GetTimeseriesCatalogByCatalogAndName( Guid? catalog, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTimeseriesCatalogByCatalogAndName( catalog, name );
            if( dataObject != null )
            {
                var result = (TimeseriesCatalogEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // TimeseriesInfo queries
        // ---------------------------------------------------------------------
        public TimeseriesInfoEntity? GetTimeseriesInfoById( Guid id )
        {
            var entity = (TimeseriesInfoEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTimeseriesInfoById( id );
                if( dataObject != null )
                {
                    entity = (TimeseriesInfoEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TimeseriesInfoEntity> GetTimeseriesInfoCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeseriesInfoCollection( );
            var result = ToEntityList<TimeseriesInfoEntity,TimeseriesInfoObject>( dataItems );
            return result;
        }
        // ---------------------------------------------------------------------
        // TimeSpanTimeseriesValue queries
        // ---------------------------------------------------------------------
        public TimeSpanTimeseriesValueEntity? GetTimeSpanTimeseriesValueById( Guid id )
        {
            var entity = (TimeSpanTimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTimeSpanTimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (TimeSpanTimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TimeSpanTimeseriesValueEntity> GetTimeSpanTimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesValueCollection( );
            var result = ToEntityList<TimeSpanTimeseriesValueEntity,TimeSpanTimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<TimeSpanTimeseriesValueEntity> GetTimeSpanTimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<TimeSpanTimeseriesValueEntity,TimeSpanTimeseriesValueObject>( dataItems );
            return result;
        }

        public TimeSpanTimeseriesValueEntity? GetTimeSpanTimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTimeSpanTimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (TimeSpanTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public TimeSpanTimeseriesValueEntity? GetTimeSpanTimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTimeSpanTimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (TimeSpanTimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<TimeSpanTimeseriesValueEntity> GetTimeSpanTimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<TimeSpanTimeseriesValueEntity,TimeSpanTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<TimeSpanTimeseriesValueEntity> GetTimeSpanTimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<TimeSpanTimeseriesValueEntity,TimeSpanTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<TimeSpanTimeseriesValueEntity> GetTimeSpanTimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<TimeSpanTimeseriesValueEntity,TimeSpanTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<TimeSpanTimeseriesValueEntity> GetTimeSpanTimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<TimeSpanTimeseriesValueEntity,TimeSpanTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<TimeSpanTimeseriesValueEntity> GetTimeSpanTimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<TimeSpanTimeseriesValueEntity,TimeSpanTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<TimeSpanTimeseriesValueEntity> GetTimeSpanTimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<TimeSpanTimeseriesValueEntity,TimeSpanTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<TimeSpanTimeseriesValueEntity> GetTimeSpanTimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<TimeSpanTimeseriesValueEntity,TimeSpanTimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<TimeSpanTimeseriesValueEntity> GetTimeSpanTimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTimeSpanTimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<TimeSpanTimeseriesValueEntity,TimeSpanTimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // TrackableItemTrackLink queries
        // ---------------------------------------------------------------------
        public TrackableItemTrackLinkEntity? GetTrackableItemTrackLinkById( Guid id )
        {
            var entity = (TrackableItemTrackLinkEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTrackableItemTrackLinkById( id );
                if( dataObject != null )
                {
                    entity = (TrackableItemTrackLinkEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollection( );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }
        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollectionByItem( Guid item )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollectionByItem( item );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public TrackableItemTrackLinkEntity? GetTrackableItemTrackLinkByItemAndStart( Guid item, DateTime start )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackableItemTrackLinkByItemAndStart( item, start );
            if( dataObject != null )
            {
                var result = (TrackableItemTrackLinkEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public TrackableItemTrackLinkEntity? GetTrackableItemTrackLinkByItemAtStart( Guid item, DateTime start )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackableItemTrackLinkByItemAtStart( item, start );
            if( dataObject != null )
            {
                var result = (TrackableItemTrackLinkEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkByItemFromStart( Guid item, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkByItemFromStart( item, start );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkByItemUntilStart( Guid item, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkByItemUntilStart( item, start );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkByItemOverStart( Guid item, DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkByItemOverStart( item, fromStart, untilStart );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollectionByItemAndEnd( Guid item, DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollectionByItemAndEnd( item, end );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollectionByItemAtEnd( Guid item, DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollectionByItemAtEnd( item, end );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollectionByItemFromEnd( Guid item, DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollectionByItemFromEnd( item, end );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollectionByItemUntilEnd( Guid item, DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollectionByItemUntilEnd( item, end );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollectionByItemOverEnd( Guid item, DateTime fromEnd, DateTime untilEnd )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollectionByItemOverEnd( item, fromEnd, untilEnd );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollectionByTrack( Guid track )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollectionByTrack( track );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public TrackableItemTrackLinkEntity? GetTrackableItemTrackLinkByTrackAndStart( Guid track, DateTime start )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackableItemTrackLinkByTrackAndStart( track, start );
            if( dataObject != null )
            {
                var result = (TrackableItemTrackLinkEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public TrackableItemTrackLinkEntity? GetTrackableItemTrackLinkByTrackAtStart( Guid track, DateTime start )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackableItemTrackLinkByTrackAtStart( track, start );
            if( dataObject != null )
            {
                var result = (TrackableItemTrackLinkEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkByTrackFromStart( Guid track, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkByTrackFromStart( track, start );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkByTrackUntilStart( Guid track, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkByTrackUntilStart( track, start );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkByTrackOverStart( Guid track, DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkByTrackOverStart( track, fromStart, untilStart );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollectionByTrackAndEnd( Guid track, DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollectionByTrackAndEnd( track, end );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollectionByTrackAtEnd( Guid track, DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollectionByTrackAtEnd( track, end );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollectionByTrackFromEnd( Guid track, DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollectionByTrackFromEnd( track, end );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollectionByTrackUntilEnd( Guid track, DateTime? end )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollectionByTrackUntilEnd( track, end );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollectionByTrackOverEnd( Guid track, DateTime fromEnd, DateTime untilEnd )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollectionByTrackOverEnd( track, fromEnd, untilEnd );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollectionByStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollectionByStart( start );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollectionAtStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollectionAtStart( start );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollectionFromStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollectionFromStart( start );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollectionUntilStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollectionUntilStart( start );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackableItemTrackLinkEntity> GetTrackableItemTrackLinkCollectionOverStart( DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackableItemTrackLinkCollectionOverStart( fromStart, untilStart );
            var result = ToEntityList<TrackableItemTrackLinkEntity,TrackableItemTrackLinkObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // TrackBase queries
        // ---------------------------------------------------------------------
        public TrackBaseEntity? GetTrackBaseById( Guid id )
        {
            var entity = (TrackBaseEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTrackBaseById( id );
                if( dataObject != null )
                {
                    entity = (TrackBaseEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollection( );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }
        public BindingList<TrackBaseEntity> GetTrackBaseCollectionByTracker( Guid tracker )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionByTracker( tracker );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionByTrackerAndTrackNumber( Guid tracker, long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionByTrackerAndTrackNumber( tracker, trackNumber );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionByTrackerFromTrackNumber( Guid tracker, long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionByTrackerFromTrackNumber( tracker, trackNumber );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionByTrackerUntilTrackNumber( Guid tracker, long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionByTrackerUntilTrackNumber( tracker, trackNumber );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionByTrackerOverTrackNumber( Guid tracker, long fromTrackNumber, long untilTrackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionByTrackerOverTrackNumber( tracker, fromTrackNumber, untilTrackNumber );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public TrackBaseEntity? GetTrackBaseByTrackerTrackNumberAndTimestamp( Guid tracker, long trackNumber, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackBaseByTrackerTrackNumberAndTimestamp( tracker, trackNumber, timestamp );
            if( dataObject != null )
            {
                var result = (TrackBaseEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public TrackBaseEntity? GetTrackBaseByTrackerTrackNumberAtTimestamp( Guid tracker, long trackNumber, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackBaseByTrackerTrackNumberAtTimestamp( tracker, trackNumber, timestamp );
            if( dataObject != null )
            {
                var result = (TrackBaseEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseByTrackerTrackNumberFromTimestamp( Guid tracker, long trackNumber, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseByTrackerTrackNumberFromTimestamp( tracker, trackNumber, timestamp );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseByTrackerTrackNumberUntilTimestamp( Guid tracker, long trackNumber, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseByTrackerTrackNumberUntilTimestamp( tracker, trackNumber, timestamp );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseByTrackerTrackNumberOverTimestamp( Guid tracker, long trackNumber, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseByTrackerTrackNumberOverTimestamp( tracker, trackNumber, fromTimestamp, untilTimestamp );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionByTrackerAndTimestamp( Guid tracker, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionByTrackerAndTimestamp( tracker, timestamp );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionByTrackerAtTimestamp( Guid tracker, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionByTrackerAtTimestamp( tracker, timestamp );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionByTrackerFromTimestamp( Guid tracker, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionByTrackerFromTimestamp( tracker, timestamp );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionByTrackerUntilTimestamp( Guid tracker, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionByTrackerUntilTimestamp( tracker, timestamp );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionByTrackerOverTimestamp( Guid tracker, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionByTrackerOverTimestamp( tracker, fromTimestamp, untilTimestamp );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionByTrackNumber( long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionByTrackNumber( trackNumber );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionFromTrackNumber( long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionFromTrackNumber( trackNumber );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionUntilTrackNumber( long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionUntilTrackNumber( trackNumber );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionOverTrackNumber( long fromTrackNumber, long untilTrackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionOverTrackNumber( fromTrackNumber, untilTrackNumber );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionByTimestamp( timestamp );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionAtTimestamp( timestamp );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionFromTimestamp( timestamp );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        public BindingList<TrackBaseEntity> GetTrackBaseCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackBaseCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<TrackBaseEntity,TrackBaseObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Track queries
        // ---------------------------------------------------------------------
        public TrackEntity? GetTrackById( Guid id )
        {
            var entity = (TrackEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTrackById( id );
                if( dataObject != null )
                {
                    entity = (TrackEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TrackEntity> GetTrackCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollection( );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }
        public BindingList<TrackEntity> GetTrackCollectionByTracker( Guid tracker )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionByTracker( tracker );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionByTrackerAndTrackNumber( Guid tracker, long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionByTrackerAndTrackNumber( tracker, trackNumber );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionByTrackerFromTrackNumber( Guid tracker, long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionByTrackerFromTrackNumber( tracker, trackNumber );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionByTrackerUntilTrackNumber( Guid tracker, long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionByTrackerUntilTrackNumber( tracker, trackNumber );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionByTrackerOverTrackNumber( Guid tracker, long fromTrackNumber, long untilTrackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionByTrackerOverTrackNumber( tracker, fromTrackNumber, untilTrackNumber );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public TrackEntity? GetTrackByTrackerTrackNumberAndTimestamp( Guid tracker, long trackNumber, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackByTrackerTrackNumberAndTimestamp( tracker, trackNumber, timestamp );
            if( dataObject != null )
            {
                var result = (TrackEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public TrackEntity? GetTrackByTrackerTrackNumberAtTimestamp( Guid tracker, long trackNumber, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackByTrackerTrackNumberAtTimestamp( tracker, trackNumber, timestamp );
            if( dataObject != null )
            {
                var result = (TrackEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<TrackEntity> GetTrackByTrackerTrackNumberFromTimestamp( Guid tracker, long trackNumber, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackByTrackerTrackNumberFromTimestamp( tracker, trackNumber, timestamp );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackByTrackerTrackNumberUntilTimestamp( Guid tracker, long trackNumber, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackByTrackerTrackNumberUntilTimestamp( tracker, trackNumber, timestamp );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackByTrackerTrackNumberOverTimestamp( Guid tracker, long trackNumber, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackByTrackerTrackNumberOverTimestamp( tracker, trackNumber, fromTimestamp, untilTimestamp );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionByTrackerAndTimestamp( Guid tracker, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionByTrackerAndTimestamp( tracker, timestamp );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionByTrackerAtTimestamp( Guid tracker, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionByTrackerAtTimestamp( tracker, timestamp );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionByTrackerFromTimestamp( Guid tracker, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionByTrackerFromTimestamp( tracker, timestamp );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionByTrackerUntilTimestamp( Guid tracker, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionByTrackerUntilTimestamp( tracker, timestamp );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionByTrackerOverTimestamp( Guid tracker, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionByTrackerOverTimestamp( tracker, fromTimestamp, untilTimestamp );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionByTrackNumber( long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionByTrackNumber( trackNumber );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionFromTrackNumber( long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionFromTrackNumber( trackNumber );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionUntilTrackNumber( long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionUntilTrackNumber( trackNumber );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionOverTrackNumber( long fromTrackNumber, long untilTrackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionOverTrackNumber( fromTrackNumber, untilTrackNumber );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionByTimestamp( timestamp );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionAtTimestamp( timestamp );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionFromTimestamp( timestamp );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        public BindingList<TrackEntity> GetTrackCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<TrackEntity,TrackObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Track3D queries
        // ---------------------------------------------------------------------
        public Track3DEntity? GetTrack3DById( Guid id )
        {
            var entity = (Track3DEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTrack3DById( id );
                if( dataObject != null )
                {
                    entity = (Track3DEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<Track3DEntity> GetTrack3DCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollection( );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }
        public BindingList<Track3DEntity> GetTrack3DCollectionByTracker( Guid tracker )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionByTracker( tracker );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionByTrackerAndTrackNumber( Guid tracker, long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionByTrackerAndTrackNumber( tracker, trackNumber );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionByTrackerFromTrackNumber( Guid tracker, long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionByTrackerFromTrackNumber( tracker, trackNumber );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionByTrackerUntilTrackNumber( Guid tracker, long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionByTrackerUntilTrackNumber( tracker, trackNumber );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionByTrackerOverTrackNumber( Guid tracker, long fromTrackNumber, long untilTrackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionByTrackerOverTrackNumber( tracker, fromTrackNumber, untilTrackNumber );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public Track3DEntity? GetTrack3DByTrackerTrackNumberAndTimestamp( Guid tracker, long trackNumber, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrack3DByTrackerTrackNumberAndTimestamp( tracker, trackNumber, timestamp );
            if( dataObject != null )
            {
                var result = (Track3DEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public Track3DEntity? GetTrack3DByTrackerTrackNumberAtTimestamp( Guid tracker, long trackNumber, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrack3DByTrackerTrackNumberAtTimestamp( tracker, trackNumber, timestamp );
            if( dataObject != null )
            {
                var result = (Track3DEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<Track3DEntity> GetTrack3DByTrackerTrackNumberFromTimestamp( Guid tracker, long trackNumber, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DByTrackerTrackNumberFromTimestamp( tracker, trackNumber, timestamp );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DByTrackerTrackNumberUntilTimestamp( Guid tracker, long trackNumber, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DByTrackerTrackNumberUntilTimestamp( tracker, trackNumber, timestamp );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DByTrackerTrackNumberOverTimestamp( Guid tracker, long trackNumber, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DByTrackerTrackNumberOverTimestamp( tracker, trackNumber, fromTimestamp, untilTimestamp );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionByTrackerAndTimestamp( Guid tracker, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionByTrackerAndTimestamp( tracker, timestamp );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionByTrackerAtTimestamp( Guid tracker, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionByTrackerAtTimestamp( tracker, timestamp );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionByTrackerFromTimestamp( Guid tracker, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionByTrackerFromTimestamp( tracker, timestamp );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionByTrackerUntilTimestamp( Guid tracker, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionByTrackerUntilTimestamp( tracker, timestamp );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionByTrackerOverTimestamp( Guid tracker, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionByTrackerOverTimestamp( tracker, fromTimestamp, untilTimestamp );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionByTrackNumber( long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionByTrackNumber( trackNumber );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionFromTrackNumber( long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionFromTrackNumber( trackNumber );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionUntilTrackNumber( long trackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionUntilTrackNumber( trackNumber );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionOverTrackNumber( long fromTrackNumber, long untilTrackNumber )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionOverTrackNumber( fromTrackNumber, untilTrackNumber );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionByTimestamp( timestamp );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionAtTimestamp( timestamp );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionFromTimestamp( timestamp );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        public BindingList<Track3DEntity> GetTrack3DCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrack3DCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<Track3DEntity,Track3DObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // TrackerFilterParameters queries
        // ---------------------------------------------------------------------
        public TrackerFilterParametersEntity? GetTrackerFilterParametersById( Guid id )
        {
            var entity = (TrackerFilterParametersEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTrackerFilterParametersById( id );
                if( dataObject != null )
                {
                    entity = (TrackerFilterParametersEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TrackerFilterParametersEntity> GetTrackerFilterParametersCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackerFilterParametersCollection( );
            var result = ToEntityList<TrackerFilterParametersEntity,TrackerFilterParametersObject>( dataItems );
            return result;
        }
        public BindingList<TrackerFilterParametersEntity> GetTrackerFilterParametersCollectionByTracker( Guid tracker )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackerFilterParametersCollectionByTracker( tracker );
            var result = ToEntityList<TrackerFilterParametersEntity,TrackerFilterParametersObject>( dataItems );
            return result;
        }

        public TrackerFilterParametersEntity? GetTrackerFilterParametersByTrackerAndName( Guid tracker, string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackerFilterParametersByTrackerAndName( tracker, name );
            if( dataObject != null )
            {
                var result = (TrackerFilterParametersEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // TrackerFilterParametersConfiguration queries
        // ---------------------------------------------------------------------
        public TrackerFilterParametersConfigurationEntity? GetTrackerFilterParametersConfigurationById( Guid id )
        {
            var entity = (TrackerFilterParametersConfigurationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTrackerFilterParametersConfigurationById( id );
                if( dataObject != null )
                {
                    entity = (TrackerFilterParametersConfigurationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TrackerFilterParametersConfigurationEntity> GetTrackerFilterParametersConfigurationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackerFilterParametersConfigurationCollection( );
            var result = ToEntityList<TrackerFilterParametersConfigurationEntity,TrackerFilterParametersConfigurationObject>( dataItems );
            return result;
        }
        public BindingList<TrackerFilterParametersConfigurationEntity> GetTrackerFilterParametersConfigurationCollectionByParameters( Guid parameters )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackerFilterParametersConfigurationCollectionByParameters( parameters );
            var result = ToEntityList<TrackerFilterParametersConfigurationEntity,TrackerFilterParametersConfigurationObject>( dataItems );
            return result;
        }

        public TrackerFilterParametersConfigurationEntity? GetTrackerFilterParametersConfigurationByParametersAndTimestamp( Guid parameters, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackerFilterParametersConfigurationByParametersAndTimestamp( parameters, timestamp );
            if( dataObject != null )
            {
                var result = (TrackerFilterParametersConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public TrackerFilterParametersConfigurationEntity? GetTrackerFilterParametersConfigurationByParametersAtTimestamp( Guid parameters, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackerFilterParametersConfigurationByParametersAtTimestamp( parameters, timestamp );
            if( dataObject != null )
            {
                var result = (TrackerFilterParametersConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<TrackerFilterParametersConfigurationEntity> GetTrackerFilterParametersConfigurationByParametersFromTimestamp( Guid parameters, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackerFilterParametersConfigurationByParametersFromTimestamp( parameters, timestamp );
            var result = ToEntityList<TrackerFilterParametersConfigurationEntity,TrackerFilterParametersConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<TrackerFilterParametersConfigurationEntity> GetTrackerFilterParametersConfigurationByParametersUntilTimestamp( Guid parameters, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackerFilterParametersConfigurationByParametersUntilTimestamp( parameters, timestamp );
            var result = ToEntityList<TrackerFilterParametersConfigurationEntity,TrackerFilterParametersConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<TrackerFilterParametersConfigurationEntity> GetTrackerFilterParametersConfigurationByParametersOverTimestamp( Guid parameters, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackerFilterParametersConfigurationByParametersOverTimestamp( parameters, fromTimestamp, untilTimestamp );
            var result = ToEntityList<TrackerFilterParametersConfigurationEntity,TrackerFilterParametersConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<TrackerFilterParametersConfigurationEntity> GetTrackerFilterParametersConfigurationCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackerFilterParametersConfigurationCollectionByTimestamp( timestamp );
            var result = ToEntityList<TrackerFilterParametersConfigurationEntity,TrackerFilterParametersConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<TrackerFilterParametersConfigurationEntity> GetTrackerFilterParametersConfigurationCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackerFilterParametersConfigurationCollectionAtTimestamp( timestamp );
            var result = ToEntityList<TrackerFilterParametersConfigurationEntity,TrackerFilterParametersConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<TrackerFilterParametersConfigurationEntity> GetTrackerFilterParametersConfigurationCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackerFilterParametersConfigurationCollectionFromTimestamp( timestamp );
            var result = ToEntityList<TrackerFilterParametersConfigurationEntity,TrackerFilterParametersConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<TrackerFilterParametersConfigurationEntity> GetTrackerFilterParametersConfigurationCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackerFilterParametersConfigurationCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<TrackerFilterParametersConfigurationEntity,TrackerFilterParametersConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<TrackerFilterParametersConfigurationEntity> GetTrackerFilterParametersConfigurationCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackerFilterParametersConfigurationCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<TrackerFilterParametersConfigurationEntity,TrackerFilterParametersConfigurationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // TrackInfo queries
        // ---------------------------------------------------------------------
        public TrackInfoEntity? GetTrackInfoById( Guid id )
        {
            var entity = (TrackInfoEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTrackInfoById( id );
                if( dataObject != null )
                {
                    entity = (TrackInfoEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TrackInfoEntity> GetTrackInfoCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackInfoCollection( );
            var result = ToEntityList<TrackInfoEntity,TrackInfoObject>( dataItems );
            return result;
        }
        // ---------------------------------------------------------------------
        // TrackingServiceOptions queries
        // ---------------------------------------------------------------------
        public TrackingServiceOptionsEntity? GetTrackingServiceOptionsById( Guid id )
        {
            var entity = (TrackingServiceOptionsEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTrackingServiceOptionsById( id );
                if( dataObject != null )
                {
                    entity = (TrackingServiceOptionsEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TrackingServiceOptionsEntity> GetTrackingServiceOptionsCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackingServiceOptionsCollection( );
            var result = ToEntityList<TrackingServiceOptionsEntity,TrackingServiceOptionsObject>( dataItems );
            return result;
        }
        public TrackingServiceOptionsEntity? GetTrackingServiceOptionsByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackingServiceOptionsByTimestamp( timestamp );
            if( dataObject != null )
            {
                var result = (TrackingServiceOptionsEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public TrackingServiceOptionsEntity? GetTrackingServiceOptionsAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackingServiceOptionsAtTimestamp( timestamp );
            if( dataObject != null )
            {
                var result = (TrackingServiceOptionsEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<TrackingServiceOptionsEntity> GetTrackingServiceOptionsFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackingServiceOptionsFromTimestamp( timestamp );
            var result = ToEntityList<TrackingServiceOptionsEntity,TrackingServiceOptionsObject>( dataItems );
            return result;
        }

        public BindingList<TrackingServiceOptionsEntity> GetTrackingServiceOptionsUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackingServiceOptionsUntilTimestamp( timestamp );
            var result = ToEntityList<TrackingServiceOptionsEntity,TrackingServiceOptionsObject>( dataItems );
            return result;
        }

        public BindingList<TrackingServiceOptionsEntity> GetTrackingServiceOptionsOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackingServiceOptionsOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<TrackingServiceOptionsEntity,TrackingServiceOptionsObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // TrackLink queries
        // ---------------------------------------------------------------------
        public TrackLinkEntity? GetTrackLinkById( Guid id )
        {
            var entity = (TrackLinkEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTrackLinkById( id );
                if( dataObject != null )
                {
                    entity = (TrackLinkEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TrackLinkEntity> GetTrackLinkCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollection( );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }
        public BindingList<TrackLinkEntity> GetTrackLinkCollectionByPrimary( Guid primary )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollectionByPrimary( primary );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackLinkEntity> GetTrackLinkCollectionByPrimaryAndStart( Guid primary, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollectionByPrimaryAndStart( primary, start );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackLinkEntity> GetTrackLinkCollectionByPrimaryAtStart( Guid primary, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollectionByPrimaryAtStart( primary, start );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackLinkEntity> GetTrackLinkCollectionByPrimaryFromStart( Guid primary, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollectionByPrimaryFromStart( primary, start );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackLinkEntity> GetTrackLinkCollectionByPrimaryUntilStart( Guid primary, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollectionByPrimaryUntilStart( primary, start );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackLinkEntity> GetTrackLinkCollectionByPrimaryOverStart( Guid primary, DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollectionByPrimaryOverStart( primary, fromStart, untilStart );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackLinkEntity> GetTrackLinkCollectionBySecondary( Guid secondary )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollectionBySecondary( secondary );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackLinkEntity> GetTrackLinkCollectionBySecondaryAndStart( Guid secondary, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollectionBySecondaryAndStart( secondary, start );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackLinkEntity> GetTrackLinkCollectionBySecondaryAtStart( Guid secondary, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollectionBySecondaryAtStart( secondary, start );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackLinkEntity> GetTrackLinkCollectionBySecondaryFromStart( Guid secondary, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollectionBySecondaryFromStart( secondary, start );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackLinkEntity> GetTrackLinkCollectionBySecondaryUntilStart( Guid secondary, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollectionBySecondaryUntilStart( secondary, start );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackLinkEntity> GetTrackLinkCollectionBySecondaryOverStart( Guid secondary, DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollectionBySecondaryOverStart( secondary, fromStart, untilStart );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackLinkEntity> GetTrackLinkCollectionByStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollectionByStart( start );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackLinkEntity> GetTrackLinkCollectionAtStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollectionAtStart( start );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackLinkEntity> GetTrackLinkCollectionFromStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollectionFromStart( start );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackLinkEntity> GetTrackLinkCollectionUntilStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollectionUntilStart( start );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }

        public BindingList<TrackLinkEntity> GetTrackLinkCollectionOverStart( DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackLinkCollectionOverStart( fromStart, untilStart );
            var result = ToEntityList<TrackLinkEntity,TrackLinkObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // TrackValue queries
        // ---------------------------------------------------------------------
        public TrackValueEntity? GetTrackValueById( Guid id )
        {
            var entity = (TrackValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTrackValueById( id );
                if( dataObject != null )
                {
                    entity = (TrackValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TrackValueEntity> GetTrackValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValueCollection( );
            var result = ToEntityList<TrackValueEntity,TrackValueObject>( dataItems );
            return result;
        }
        public BindingList<TrackValueEntity> GetTrackValueCollectionByTrack( Guid track )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValueCollectionByTrack( track );
            var result = ToEntityList<TrackValueEntity,TrackValueObject>( dataItems );
            return result;
        }

        public TrackValueEntity? GetTrackValueByTrackAndTimestamp( Guid track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackValueByTrackAndTimestamp( track, timestamp );
            if( dataObject != null )
            {
                var result = (TrackValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public TrackValueEntity? GetTrackValueByTrackAtTimestamp( Guid track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackValueByTrackAtTimestamp( track, timestamp );
            if( dataObject != null )
            {
                var result = (TrackValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<TrackValueEntity> GetTrackValueByTrackFromTimestamp( Guid track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValueByTrackFromTimestamp( track, timestamp );
            var result = ToEntityList<TrackValueEntity,TrackValueObject>( dataItems );
            return result;
        }

        public BindingList<TrackValueEntity> GetTrackValueByTrackUntilTimestamp( Guid track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValueByTrackUntilTimestamp( track, timestamp );
            var result = ToEntityList<TrackValueEntity,TrackValueObject>( dataItems );
            return result;
        }

        public BindingList<TrackValueEntity> GetTrackValueByTrackOverTimestamp( Guid track, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValueByTrackOverTimestamp( track, fromTimestamp, untilTimestamp );
            var result = ToEntityList<TrackValueEntity,TrackValueObject>( dataItems );
            return result;
        }

        public BindingList<TrackValueEntity> GetTrackValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<TrackValueEntity,TrackValueObject>( dataItems );
            return result;
        }

        public BindingList<TrackValueEntity> GetTrackValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<TrackValueEntity,TrackValueObject>( dataItems );
            return result;
        }

        public BindingList<TrackValueEntity> GetTrackValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<TrackValueEntity,TrackValueObject>( dataItems );
            return result;
        }

        public BindingList<TrackValueEntity> GetTrackValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<TrackValueEntity,TrackValueObject>( dataItems );
            return result;
        }

        public BindingList<TrackValueEntity> GetTrackValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<TrackValueEntity,TrackValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // TrackValue3D queries
        // ---------------------------------------------------------------------
        public TrackValue3DEntity? GetTrackValue3DById( Guid id )
        {
            var entity = (TrackValue3DEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetTrackValue3DById( id );
                if( dataObject != null )
                {
                    entity = (TrackValue3DEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<TrackValue3DEntity> GetTrackValue3DCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValue3DCollection( );
            var result = ToEntityList<TrackValue3DEntity,TrackValue3DObject>( dataItems );
            return result;
        }
        public BindingList<TrackValue3DEntity> GetTrackValue3DCollectionByTrack( Guid track )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValue3DCollectionByTrack( track );
            var result = ToEntityList<TrackValue3DEntity,TrackValue3DObject>( dataItems );
            return result;
        }

        public TrackValue3DEntity? GetTrackValue3DByTrackAndTimestamp( Guid track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackValue3DByTrackAndTimestamp( track, timestamp );
            if( dataObject != null )
            {
                var result = (TrackValue3DEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public TrackValue3DEntity? GetTrackValue3DByTrackAtTimestamp( Guid track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetTrackValue3DByTrackAtTimestamp( track, timestamp );
            if( dataObject != null )
            {
                var result = (TrackValue3DEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<TrackValue3DEntity> GetTrackValue3DByTrackFromTimestamp( Guid track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValue3DByTrackFromTimestamp( track, timestamp );
            var result = ToEntityList<TrackValue3DEntity,TrackValue3DObject>( dataItems );
            return result;
        }

        public BindingList<TrackValue3DEntity> GetTrackValue3DByTrackUntilTimestamp( Guid track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValue3DByTrackUntilTimestamp( track, timestamp );
            var result = ToEntityList<TrackValue3DEntity,TrackValue3DObject>( dataItems );
            return result;
        }

        public BindingList<TrackValue3DEntity> GetTrackValue3DByTrackOverTimestamp( Guid track, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValue3DByTrackOverTimestamp( track, fromTimestamp, untilTimestamp );
            var result = ToEntityList<TrackValue3DEntity,TrackValue3DObject>( dataItems );
            return result;
        }

        public BindingList<TrackValue3DEntity> GetTrackValue3DCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValue3DCollectionByTimestamp( timestamp );
            var result = ToEntityList<TrackValue3DEntity,TrackValue3DObject>( dataItems );
            return result;
        }

        public BindingList<TrackValue3DEntity> GetTrackValue3DCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValue3DCollectionAtTimestamp( timestamp );
            var result = ToEntityList<TrackValue3DEntity,TrackValue3DObject>( dataItems );
            return result;
        }

        public BindingList<TrackValue3DEntity> GetTrackValue3DCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValue3DCollectionFromTimestamp( timestamp );
            var result = ToEntityList<TrackValue3DEntity,TrackValue3DObject>( dataItems );
            return result;
        }

        public BindingList<TrackValue3DEntity> GetTrackValue3DCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValue3DCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<TrackValue3DEntity,TrackValue3DObject>( dataItems );
            return result;
        }

        public BindingList<TrackValue3DEntity> GetTrackValue3DCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetTrackValue3DCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<TrackValue3DEntity,TrackValue3DObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // UInt16TimeseriesValue queries
        // ---------------------------------------------------------------------
        public UInt16TimeseriesValueEntity? GetUInt16TimeseriesValueById( Guid id )
        {
            var entity = (UInt16TimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt16TimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (UInt16TimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt16TimeseriesValueEntity> GetUInt16TimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesValueCollection( );
            var result = ToEntityList<UInt16TimeseriesValueEntity,UInt16TimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<UInt16TimeseriesValueEntity> GetUInt16TimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<UInt16TimeseriesValueEntity,UInt16TimeseriesValueObject>( dataItems );
            return result;
        }

        public UInt16TimeseriesValueEntity? GetUInt16TimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt16TimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (UInt16TimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public UInt16TimeseriesValueEntity? GetUInt16TimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt16TimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (UInt16TimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<UInt16TimeseriesValueEntity> GetUInt16TimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<UInt16TimeseriesValueEntity,UInt16TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt16TimeseriesValueEntity> GetUInt16TimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<UInt16TimeseriesValueEntity,UInt16TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt16TimeseriesValueEntity> GetUInt16TimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<UInt16TimeseriesValueEntity,UInt16TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt16TimeseriesValueEntity> GetUInt16TimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<UInt16TimeseriesValueEntity,UInt16TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt16TimeseriesValueEntity> GetUInt16TimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<UInt16TimeseriesValueEntity,UInt16TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt16TimeseriesValueEntity> GetUInt16TimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<UInt16TimeseriesValueEntity,UInt16TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt16TimeseriesValueEntity> GetUInt16TimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<UInt16TimeseriesValueEntity,UInt16TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt16TimeseriesValueEntity> GetUInt16TimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt16TimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<UInt16TimeseriesValueEntity,UInt16TimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // UInt32TimeseriesValue queries
        // ---------------------------------------------------------------------
        public UInt32TimeseriesValueEntity? GetUInt32TimeseriesValueById( Guid id )
        {
            var entity = (UInt32TimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt32TimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (UInt32TimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt32TimeseriesValueEntity> GetUInt32TimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesValueCollection( );
            var result = ToEntityList<UInt32TimeseriesValueEntity,UInt32TimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<UInt32TimeseriesValueEntity> GetUInt32TimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<UInt32TimeseriesValueEntity,UInt32TimeseriesValueObject>( dataItems );
            return result;
        }

        public UInt32TimeseriesValueEntity? GetUInt32TimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt32TimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (UInt32TimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public UInt32TimeseriesValueEntity? GetUInt32TimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt32TimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (UInt32TimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<UInt32TimeseriesValueEntity> GetUInt32TimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<UInt32TimeseriesValueEntity,UInt32TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt32TimeseriesValueEntity> GetUInt32TimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<UInt32TimeseriesValueEntity,UInt32TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt32TimeseriesValueEntity> GetUInt32TimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<UInt32TimeseriesValueEntity,UInt32TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt32TimeseriesValueEntity> GetUInt32TimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<UInt32TimeseriesValueEntity,UInt32TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt32TimeseriesValueEntity> GetUInt32TimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<UInt32TimeseriesValueEntity,UInt32TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt32TimeseriesValueEntity> GetUInt32TimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<UInt32TimeseriesValueEntity,UInt32TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt32TimeseriesValueEntity> GetUInt32TimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<UInt32TimeseriesValueEntity,UInt32TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt32TimeseriesValueEntity> GetUInt32TimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt32TimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<UInt32TimeseriesValueEntity,UInt32TimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // UInt64TimeseriesValue queries
        // ---------------------------------------------------------------------
        public UInt64TimeseriesValueEntity? GetUInt64TimeseriesValueById( Guid id )
        {
            var entity = (UInt64TimeseriesValueEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetUInt64TimeseriesValueById( id );
                if( dataObject != null )
                {
                    entity = (UInt64TimeseriesValueEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<UInt64TimeseriesValueEntity> GetUInt64TimeseriesValueCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesValueCollection( );
            var result = ToEntityList<UInt64TimeseriesValueEntity,UInt64TimeseriesValueObject>( dataItems );
            return result;
        }
        public BindingList<UInt64TimeseriesValueEntity> GetUInt64TimeseriesValueCollectionByTimeseries( Guid timeseries )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesValueCollectionByTimeseries( timeseries );
            var result = ToEntityList<UInt64TimeseriesValueEntity,UInt64TimeseriesValueObject>( dataItems );
            return result;
        }

        public UInt64TimeseriesValueEntity? GetUInt64TimeseriesValueByTimeseriesAndTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt64TimeseriesValueByTimeseriesAndTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (UInt64TimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public UInt64TimeseriesValueEntity? GetUInt64TimeseriesValueByTimeseriesAtTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetUInt64TimeseriesValueByTimeseriesAtTimestamp( timeseries, timestamp );
            if( dataObject != null )
            {
                var result = (UInt64TimeseriesValueEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<UInt64TimeseriesValueEntity> GetUInt64TimeseriesValueByTimeseriesFromTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesValueByTimeseriesFromTimestamp( timeseries, timestamp );
            var result = ToEntityList<UInt64TimeseriesValueEntity,UInt64TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt64TimeseriesValueEntity> GetUInt64TimeseriesValueByTimeseriesUntilTimestamp( Guid timeseries, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesValueByTimeseriesUntilTimestamp( timeseries, timestamp );
            var result = ToEntityList<UInt64TimeseriesValueEntity,UInt64TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt64TimeseriesValueEntity> GetUInt64TimeseriesValueByTimeseriesOverTimestamp( Guid timeseries, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesValueByTimeseriesOverTimestamp( timeseries, fromTimestamp, untilTimestamp );
            var result = ToEntityList<UInt64TimeseriesValueEntity,UInt64TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt64TimeseriesValueEntity> GetUInt64TimeseriesValueCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesValueCollectionByTimestamp( timestamp );
            var result = ToEntityList<UInt64TimeseriesValueEntity,UInt64TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt64TimeseriesValueEntity> GetUInt64TimeseriesValueCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesValueCollectionAtTimestamp( timestamp );
            var result = ToEntityList<UInt64TimeseriesValueEntity,UInt64TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt64TimeseriesValueEntity> GetUInt64TimeseriesValueCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesValueCollectionFromTimestamp( timestamp );
            var result = ToEntityList<UInt64TimeseriesValueEntity,UInt64TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt64TimeseriesValueEntity> GetUInt64TimeseriesValueCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesValueCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<UInt64TimeseriesValueEntity,UInt64TimeseriesValueObject>( dataItems );
            return result;
        }

        public BindingList<UInt64TimeseriesValueEntity> GetUInt64TimeseriesValueCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetUInt64TimeseriesValueCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<UInt64TimeseriesValueEntity,UInt64TimeseriesValueObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // VehicleType queries
        // ---------------------------------------------------------------------
        public VehicleTypeEntity? GetVehicleTypeById( Guid id )
        {
            var entity = (VehicleTypeEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetVehicleTypeById( id );
                if( dataObject != null )
                {
                    entity = (VehicleTypeEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<VehicleTypeEntity> GetVehicleTypeCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetVehicleTypeCollection( );
            var result = ToEntityList<VehicleTypeEntity,VehicleTypeObject>( dataItems );
            return result;
        }
        public VehicleTypeEntity? GetVehicleTypeByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetVehicleTypeByName( name );
            if( dataObject != null )
            {
                var result = (VehicleTypeEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // VesselType queries
        // ---------------------------------------------------------------------
        public VesselTypeEntity? GetVesselTypeById( Guid id )
        {
            var entity = (VesselTypeEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetVesselTypeById( id );
                if( dataObject != null )
                {
                    entity = (VesselTypeEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<VesselTypeEntity> GetVesselTypeCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetVesselTypeCollection( );
            var result = ToEntityList<VesselTypeEntity,VesselTypeObject>( dataItems );
            return result;
        }
        public VesselTypeEntity? GetVesselTypeByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetVesselTypeByName( name );
            if( dataObject != null )
            {
                var result = (VesselTypeEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public VesselTypeEntity? GetVesselTypeByCode( int code )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetVesselTypeByCode( code );
            if( dataObject != null )
            {
                var result = (VesselTypeEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<VesselTypeEntity> GetVesselTypeFromCode( int code )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetVesselTypeFromCode( code );
            var result = ToEntityList<VesselTypeEntity,VesselTypeObject>( dataItems );
            return result;
        }

        public BindingList<VesselTypeEntity> GetVesselTypeUntilCode( int code )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetVesselTypeUntilCode( code );
            var result = ToEntityList<VesselTypeEntity,VesselTypeObject>( dataItems );
            return result;
        }

        public BindingList<VesselTypeEntity> GetVesselTypeOverCode( int fromCode, int untilCode )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetVesselTypeOverCode( fromCode, untilCode );
            var result = ToEntityList<VesselTypeEntity,VesselTypeObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // View queries
        // ---------------------------------------------------------------------
        public ViewEntity? GetViewById( Guid id )
        {
            var entity = (ViewEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetViewById( id );
                if( dataObject != null )
                {
                    entity = (ViewEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ViewEntity> GetViewCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewCollection( );
            var result = ToEntityList<ViewEntity,ViewObject>( dataItems );
            return result;
        }
        public ViewEntity? GetViewByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetViewByName( name );
            if( dataObject != null )
            {
                var result = (ViewEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // ViewCameraLink queries
        // ---------------------------------------------------------------------
        public ViewCameraLinkEntity? GetViewCameraLinkById( Guid id )
        {
            var entity = (ViewCameraLinkEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetViewCameraLinkById( id );
                if( dataObject != null )
                {
                    entity = (ViewCameraLinkEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ViewCameraLinkEntity> GetViewCameraLinkCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewCameraLinkCollection( );
            var result = ToEntityList<ViewCameraLinkEntity,ViewCameraLinkObject>( dataItems );
            return result;
        }
        public BindingList<ViewCameraLinkEntity> GetViewCameraLinkCollectionByView( Guid view )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewCameraLinkCollectionByView( view );
            var result = ToEntityList<ViewCameraLinkEntity,ViewCameraLinkObject>( dataItems );
            return result;
        }

        public ViewCameraLinkEntity? GetViewCameraLinkByViewAndStart( Guid view, DateTime start )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetViewCameraLinkByViewAndStart( view, start );
            if( dataObject != null )
            {
                var result = (ViewCameraLinkEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public ViewCameraLinkEntity? GetViewCameraLinkByViewAtStart( Guid view, DateTime start )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetViewCameraLinkByViewAtStart( view, start );
            if( dataObject != null )
            {
                var result = (ViewCameraLinkEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ViewCameraLinkEntity> GetViewCameraLinkByViewFromStart( Guid view, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewCameraLinkByViewFromStart( view, start );
            var result = ToEntityList<ViewCameraLinkEntity,ViewCameraLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewCameraLinkEntity> GetViewCameraLinkByViewUntilStart( Guid view, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewCameraLinkByViewUntilStart( view, start );
            var result = ToEntityList<ViewCameraLinkEntity,ViewCameraLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewCameraLinkEntity> GetViewCameraLinkByViewOverStart( Guid view, DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewCameraLinkByViewOverStart( view, fromStart, untilStart );
            var result = ToEntityList<ViewCameraLinkEntity,ViewCameraLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewCameraLinkEntity> GetViewCameraLinkCollectionByCamera( Guid camera )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewCameraLinkCollectionByCamera( camera );
            var result = ToEntityList<ViewCameraLinkEntity,ViewCameraLinkObject>( dataItems );
            return result;
        }

        public ViewCameraLinkEntity? GetViewCameraLinkByCameraAndStart( Guid camera, DateTime start )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetViewCameraLinkByCameraAndStart( camera, start );
            if( dataObject != null )
            {
                var result = (ViewCameraLinkEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public ViewCameraLinkEntity? GetViewCameraLinkByCameraAtStart( Guid camera, DateTime start )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetViewCameraLinkByCameraAtStart( camera, start );
            if( dataObject != null )
            {
                var result = (ViewCameraLinkEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ViewCameraLinkEntity> GetViewCameraLinkByCameraFromStart( Guid camera, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewCameraLinkByCameraFromStart( camera, start );
            var result = ToEntityList<ViewCameraLinkEntity,ViewCameraLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewCameraLinkEntity> GetViewCameraLinkByCameraUntilStart( Guid camera, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewCameraLinkByCameraUntilStart( camera, start );
            var result = ToEntityList<ViewCameraLinkEntity,ViewCameraLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewCameraLinkEntity> GetViewCameraLinkByCameraOverStart( Guid camera, DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewCameraLinkByCameraOverStart( camera, fromStart, untilStart );
            var result = ToEntityList<ViewCameraLinkEntity,ViewCameraLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewCameraLinkEntity> GetViewCameraLinkCollectionByStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewCameraLinkCollectionByStart( start );
            var result = ToEntityList<ViewCameraLinkEntity,ViewCameraLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewCameraLinkEntity> GetViewCameraLinkCollectionAtStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewCameraLinkCollectionAtStart( start );
            var result = ToEntityList<ViewCameraLinkEntity,ViewCameraLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewCameraLinkEntity> GetViewCameraLinkCollectionFromStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewCameraLinkCollectionFromStart( start );
            var result = ToEntityList<ViewCameraLinkEntity,ViewCameraLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewCameraLinkEntity> GetViewCameraLinkCollectionUntilStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewCameraLinkCollectionUntilStart( start );
            var result = ToEntityList<ViewCameraLinkEntity,ViewCameraLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewCameraLinkEntity> GetViewCameraLinkCollectionOverStart( DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewCameraLinkCollectionOverStart( fromStart, untilStart );
            var result = ToEntityList<ViewCameraLinkEntity,ViewCameraLinkObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // ViewTrackerLink queries
        // ---------------------------------------------------------------------
        public ViewTrackerLinkEntity? GetViewTrackerLinkById( Guid id )
        {
            var entity = (ViewTrackerLinkEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetViewTrackerLinkById( id );
                if( dataObject != null )
                {
                    entity = (ViewTrackerLinkEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ViewTrackerLinkEntity> GetViewTrackerLinkCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewTrackerLinkCollection( );
            var result = ToEntityList<ViewTrackerLinkEntity,ViewTrackerLinkObject>( dataItems );
            return result;
        }
        public BindingList<ViewTrackerLinkEntity> GetViewTrackerLinkCollectionByView( Guid view )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewTrackerLinkCollectionByView( view );
            var result = ToEntityList<ViewTrackerLinkEntity,ViewTrackerLinkObject>( dataItems );
            return result;
        }

        public ViewTrackerLinkEntity? GetViewTrackerLinkByViewAndStart( Guid view, DateTime start )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetViewTrackerLinkByViewAndStart( view, start );
            if( dataObject != null )
            {
                var result = (ViewTrackerLinkEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public ViewTrackerLinkEntity? GetViewTrackerLinkByViewAtStart( Guid view, DateTime start )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetViewTrackerLinkByViewAtStart( view, start );
            if( dataObject != null )
            {
                var result = (ViewTrackerLinkEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ViewTrackerLinkEntity> GetViewTrackerLinkByViewFromStart( Guid view, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewTrackerLinkByViewFromStart( view, start );
            var result = ToEntityList<ViewTrackerLinkEntity,ViewTrackerLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewTrackerLinkEntity> GetViewTrackerLinkByViewUntilStart( Guid view, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewTrackerLinkByViewUntilStart( view, start );
            var result = ToEntityList<ViewTrackerLinkEntity,ViewTrackerLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewTrackerLinkEntity> GetViewTrackerLinkByViewOverStart( Guid view, DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewTrackerLinkByViewOverStart( view, fromStart, untilStart );
            var result = ToEntityList<ViewTrackerLinkEntity,ViewTrackerLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewTrackerLinkEntity> GetViewTrackerLinkCollectionByTracker( Guid tracker )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewTrackerLinkCollectionByTracker( tracker );
            var result = ToEntityList<ViewTrackerLinkEntity,ViewTrackerLinkObject>( dataItems );
            return result;
        }

        public ViewTrackerLinkEntity? GetViewTrackerLinkByTrackerAndStart( Guid tracker, DateTime start )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetViewTrackerLinkByTrackerAndStart( tracker, start );
            if( dataObject != null )
            {
                var result = (ViewTrackerLinkEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public ViewTrackerLinkEntity? GetViewTrackerLinkByTrackerAtStart( Guid tracker, DateTime start )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetViewTrackerLinkByTrackerAtStart( tracker, start );
            if( dataObject != null )
            {
                var result = (ViewTrackerLinkEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ViewTrackerLinkEntity> GetViewTrackerLinkByTrackerFromStart( Guid tracker, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewTrackerLinkByTrackerFromStart( tracker, start );
            var result = ToEntityList<ViewTrackerLinkEntity,ViewTrackerLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewTrackerLinkEntity> GetViewTrackerLinkByTrackerUntilStart( Guid tracker, DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewTrackerLinkByTrackerUntilStart( tracker, start );
            var result = ToEntityList<ViewTrackerLinkEntity,ViewTrackerLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewTrackerLinkEntity> GetViewTrackerLinkByTrackerOverStart( Guid tracker, DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewTrackerLinkByTrackerOverStart( tracker, fromStart, untilStart );
            var result = ToEntityList<ViewTrackerLinkEntity,ViewTrackerLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewTrackerLinkEntity> GetViewTrackerLinkCollectionByStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewTrackerLinkCollectionByStart( start );
            var result = ToEntityList<ViewTrackerLinkEntity,ViewTrackerLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewTrackerLinkEntity> GetViewTrackerLinkCollectionAtStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewTrackerLinkCollectionAtStart( start );
            var result = ToEntityList<ViewTrackerLinkEntity,ViewTrackerLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewTrackerLinkEntity> GetViewTrackerLinkCollectionFromStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewTrackerLinkCollectionFromStart( start );
            var result = ToEntityList<ViewTrackerLinkEntity,ViewTrackerLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewTrackerLinkEntity> GetViewTrackerLinkCollectionUntilStart( DateTime start )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewTrackerLinkCollectionUntilStart( start );
            var result = ToEntityList<ViewTrackerLinkEntity,ViewTrackerLinkObject>( dataItems );
            return result;
        }

        public BindingList<ViewTrackerLinkEntity> GetViewTrackerLinkCollectionOverStart( DateTime fromStart, DateTime untilStart )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetViewTrackerLinkCollectionOverStart( fromStart, untilStart );
            var result = ToEntityList<ViewTrackerLinkEntity,ViewTrackerLinkObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // WeatherStationCommand queries
        // ---------------------------------------------------------------------
        public WeatherStationCommandEntity? GetWeatherStationCommandById( Guid id )
        {
            var entity = (WeatherStationCommandEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetWeatherStationCommandById( id );
                if( dataObject != null )
                {
                    entity = (WeatherStationCommandEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<WeatherStationCommandEntity> GetWeatherStationCommandCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandCollection( );
            var result = ToEntityList<WeatherStationCommandEntity,WeatherStationCommandObject>( dataItems );
            return result;
        }
        public BindingList<WeatherStationCommandEntity> GetWeatherStationCommandCollectionByWeatherStation( Guid weatherStation )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandCollectionByWeatherStation( weatherStation );
            var result = ToEntityList<WeatherStationCommandEntity,WeatherStationCommandObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandEntity> GetWeatherStationCommandCollectionByWeatherStationAndTimestamp( Guid weatherStation, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandCollectionByWeatherStationAndTimestamp( weatherStation, timestamp );
            var result = ToEntityList<WeatherStationCommandEntity,WeatherStationCommandObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandEntity> GetWeatherStationCommandCollectionByWeatherStationAtTimestamp( Guid weatherStation, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandCollectionByWeatherStationAtTimestamp( weatherStation, timestamp );
            var result = ToEntityList<WeatherStationCommandEntity,WeatherStationCommandObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandEntity> GetWeatherStationCommandCollectionByWeatherStationFromTimestamp( Guid weatherStation, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandCollectionByWeatherStationFromTimestamp( weatherStation, timestamp );
            var result = ToEntityList<WeatherStationCommandEntity,WeatherStationCommandObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandEntity> GetWeatherStationCommandCollectionByWeatherStationUntilTimestamp( Guid weatherStation, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandCollectionByWeatherStationUntilTimestamp( weatherStation, timestamp );
            var result = ToEntityList<WeatherStationCommandEntity,WeatherStationCommandObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandEntity> GetWeatherStationCommandCollectionByWeatherStationOverTimestamp( Guid weatherStation, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandCollectionByWeatherStationOverTimestamp( weatherStation, fromTimestamp, untilTimestamp );
            var result = ToEntityList<WeatherStationCommandEntity,WeatherStationCommandObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandEntity> GetWeatherStationCommandCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandCollectionByTimestamp( timestamp );
            var result = ToEntityList<WeatherStationCommandEntity,WeatherStationCommandObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandEntity> GetWeatherStationCommandCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandCollectionAtTimestamp( timestamp );
            var result = ToEntityList<WeatherStationCommandEntity,WeatherStationCommandObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandEntity> GetWeatherStationCommandCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandCollectionFromTimestamp( timestamp );
            var result = ToEntityList<WeatherStationCommandEntity,WeatherStationCommandObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandEntity> GetWeatherStationCommandCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<WeatherStationCommandEntity,WeatherStationCommandObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandEntity> GetWeatherStationCommandCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<WeatherStationCommandEntity,WeatherStationCommandObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandEntity> GetWeatherStationCommandCollectionByReply( Guid? reply )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandCollectionByReply( reply );
            var result = ToEntityList<WeatherStationCommandEntity,WeatherStationCommandObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // WeatherStationCommandReply queries
        // ---------------------------------------------------------------------
        public WeatherStationCommandReplyEntity? GetWeatherStationCommandReplyById( Guid id )
        {
            var entity = (WeatherStationCommandReplyEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetWeatherStationCommandReplyById( id );
                if( dataObject != null )
                {
                    entity = (WeatherStationCommandReplyEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<WeatherStationCommandReplyEntity> GetWeatherStationCommandReplyCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandReplyCollection( );
            var result = ToEntityList<WeatherStationCommandReplyEntity,WeatherStationCommandReplyObject>( dataItems );
            return result;
        }
        public BindingList<WeatherStationCommandReplyEntity> GetWeatherStationCommandReplyCollectionByWeatherStation( Guid weatherStation )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandReplyCollectionByWeatherStation( weatherStation );
            var result = ToEntityList<WeatherStationCommandReplyEntity,WeatherStationCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandReplyEntity> GetWeatherStationCommandReplyCollectionByWeatherStationAndTimestamp( Guid weatherStation, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandReplyCollectionByWeatherStationAndTimestamp( weatherStation, timestamp );
            var result = ToEntityList<WeatherStationCommandReplyEntity,WeatherStationCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandReplyEntity> GetWeatherStationCommandReplyCollectionByWeatherStationAtTimestamp( Guid weatherStation, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandReplyCollectionByWeatherStationAtTimestamp( weatherStation, timestamp );
            var result = ToEntityList<WeatherStationCommandReplyEntity,WeatherStationCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandReplyEntity> GetWeatherStationCommandReplyCollectionByWeatherStationFromTimestamp( Guid weatherStation, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandReplyCollectionByWeatherStationFromTimestamp( weatherStation, timestamp );
            var result = ToEntityList<WeatherStationCommandReplyEntity,WeatherStationCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandReplyEntity> GetWeatherStationCommandReplyCollectionByWeatherStationUntilTimestamp( Guid weatherStation, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandReplyCollectionByWeatherStationUntilTimestamp( weatherStation, timestamp );
            var result = ToEntityList<WeatherStationCommandReplyEntity,WeatherStationCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandReplyEntity> GetWeatherStationCommandReplyCollectionByWeatherStationOverTimestamp( Guid weatherStation, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandReplyCollectionByWeatherStationOverTimestamp( weatherStation, fromTimestamp, untilTimestamp );
            var result = ToEntityList<WeatherStationCommandReplyEntity,WeatherStationCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandReplyEntity> GetWeatherStationCommandReplyCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandReplyCollectionByTimestamp( timestamp );
            var result = ToEntityList<WeatherStationCommandReplyEntity,WeatherStationCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandReplyEntity> GetWeatherStationCommandReplyCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandReplyCollectionAtTimestamp( timestamp );
            var result = ToEntityList<WeatherStationCommandReplyEntity,WeatherStationCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandReplyEntity> GetWeatherStationCommandReplyCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandReplyCollectionFromTimestamp( timestamp );
            var result = ToEntityList<WeatherStationCommandReplyEntity,WeatherStationCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandReplyEntity> GetWeatherStationCommandReplyCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandReplyCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<WeatherStationCommandReplyEntity,WeatherStationCommandReplyObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationCommandReplyEntity> GetWeatherStationCommandReplyCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationCommandReplyCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<WeatherStationCommandReplyEntity,WeatherStationCommandReplyObject>( dataItems );
            return result;
        }

        public WeatherStationCommandReplyEntity? GetWeatherStationCommandReplyByCommand( Guid? command )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationCommandReplyByCommand( command );
            if( dataObject != null )
            {
                var result = (WeatherStationCommandReplyEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // WeatherStationConfiguration queries
        // ---------------------------------------------------------------------
        public WeatherStationConfigurationEntity? GetWeatherStationConfigurationById( Guid id )
        {
            var entity = (WeatherStationConfigurationEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetWeatherStationConfigurationById( id );
                if( dataObject != null )
                {
                    entity = (WeatherStationConfigurationEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<WeatherStationConfigurationEntity> GetWeatherStationConfigurationCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationConfigurationCollection( );
            var result = ToEntityList<WeatherStationConfigurationEntity,WeatherStationConfigurationObject>( dataItems );
            return result;
        }
        public BindingList<WeatherStationConfigurationEntity> GetWeatherStationConfigurationCollectionByWeatherStation( Guid weatherStation )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationConfigurationCollectionByWeatherStation( weatherStation );
            var result = ToEntityList<WeatherStationConfigurationEntity,WeatherStationConfigurationObject>( dataItems );
            return result;
        }

        public WeatherStationConfigurationEntity? GetWeatherStationConfigurationByWeatherStationAndTimestamp( Guid weatherStation, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationConfigurationByWeatherStationAndTimestamp( weatherStation, timestamp );
            if( dataObject != null )
            {
                var result = (WeatherStationConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public WeatherStationConfigurationEntity? GetWeatherStationConfigurationByWeatherStationAtTimestamp( Guid weatherStation, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetWeatherStationConfigurationByWeatherStationAtTimestamp( weatherStation, timestamp );
            if( dataObject != null )
            {
                var result = (WeatherStationConfigurationEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<WeatherStationConfigurationEntity> GetWeatherStationConfigurationByWeatherStationFromTimestamp( Guid weatherStation, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationConfigurationByWeatherStationFromTimestamp( weatherStation, timestamp );
            var result = ToEntityList<WeatherStationConfigurationEntity,WeatherStationConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationConfigurationEntity> GetWeatherStationConfigurationByWeatherStationUntilTimestamp( Guid weatherStation, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationConfigurationByWeatherStationUntilTimestamp( weatherStation, timestamp );
            var result = ToEntityList<WeatherStationConfigurationEntity,WeatherStationConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationConfigurationEntity> GetWeatherStationConfigurationByWeatherStationOverTimestamp( Guid weatherStation, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationConfigurationByWeatherStationOverTimestamp( weatherStation, fromTimestamp, untilTimestamp );
            var result = ToEntityList<WeatherStationConfigurationEntity,WeatherStationConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationConfigurationEntity> GetWeatherStationConfigurationCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationConfigurationCollectionByTimestamp( timestamp );
            var result = ToEntityList<WeatherStationConfigurationEntity,WeatherStationConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationConfigurationEntity> GetWeatherStationConfigurationCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationConfigurationCollectionAtTimestamp( timestamp );
            var result = ToEntityList<WeatherStationConfigurationEntity,WeatherStationConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationConfigurationEntity> GetWeatherStationConfigurationCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationConfigurationCollectionFromTimestamp( timestamp );
            var result = ToEntityList<WeatherStationConfigurationEntity,WeatherStationConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationConfigurationEntity> GetWeatherStationConfigurationCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationConfigurationCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<WeatherStationConfigurationEntity,WeatherStationConfigurationObject>( dataItems );
            return result;
        }

        public BindingList<WeatherStationConfigurationEntity> GetWeatherStationConfigurationCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetWeatherStationConfigurationCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<WeatherStationConfigurationEntity,WeatherStationConfigurationObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // Zone queries
        // ---------------------------------------------------------------------
        public ZoneEntity? GetZoneById( Guid id )
        {
            var entity = (ZoneEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetZoneById( id );
                if( dataObject != null )
                {
                    entity = (ZoneEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ZoneEntity> GetZoneCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneCollection( );
            var result = ToEntityList<ZoneEntity,ZoneObject>( dataItems );
            return result;
        }
        public ZoneEntity? GetZoneByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetZoneByName( name );
            if( dataObject != null )
            {
                var result = (ZoneEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // CircularZone queries
        // ---------------------------------------------------------------------
        public CircularZoneEntity? GetCircularZoneById( Guid id )
        {
            var entity = (CircularZoneEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetCircularZoneById( id );
                if( dataObject != null )
                {
                    entity = (CircularZoneEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<CircularZoneEntity> GetCircularZoneCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetCircularZoneCollection( );
            var result = ToEntityList<CircularZoneEntity,CircularZoneObject>( dataItems );
            return result;
        }
        public CircularZoneEntity? GetCircularZoneByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetCircularZoneByName( name );
            if( dataObject != null )
            {
                var result = (CircularZoneEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // PolygonZone queries
        // ---------------------------------------------------------------------
        public PolygonZoneEntity? GetPolygonZoneById( Guid id )
        {
            var entity = (PolygonZoneEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetPolygonZoneById( id );
                if( dataObject != null )
                {
                    entity = (PolygonZoneEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<PolygonZoneEntity> GetPolygonZoneCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetPolygonZoneCollection( );
            var result = ToEntityList<PolygonZoneEntity,PolygonZoneObject>( dataItems );
            return result;
        }
        public PolygonZoneEntity? GetPolygonZoneByName( string name )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetPolygonZoneByName( name );
            if( dataObject != null )
            {
                var result = (PolygonZoneEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        // ---------------------------------------------------------------------
        // ZoneExceptions queries
        // ---------------------------------------------------------------------
        public ZoneExceptionsEntity? GetZoneExceptionsById( Guid id )
        {
            var entity = (ZoneExceptionsEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetZoneExceptionsById( id );
                if( dataObject != null )
                {
                    entity = (ZoneExceptionsEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ZoneExceptionsEntity> GetZoneExceptionsCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneExceptionsCollection( );
            var result = ToEntityList<ZoneExceptionsEntity,ZoneExceptionsObject>( dataItems );
            return result;
        }
        public BindingList<ZoneExceptionsEntity> GetZoneExceptionsCollectionByZone( Guid zone )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneExceptionsCollectionByZone( zone );
            var result = ToEntityList<ZoneExceptionsEntity,ZoneExceptionsObject>( dataItems );
            return result;
        }

        public ZoneExceptionsEntity? GetZoneExceptionsByZoneAndTimestamp( Guid zone, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetZoneExceptionsByZoneAndTimestamp( zone, timestamp );
            if( dataObject != null )
            {
                var result = (ZoneExceptionsEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public ZoneExceptionsEntity? GetZoneExceptionsByZoneAtTimestamp( Guid zone, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetZoneExceptionsByZoneAtTimestamp( zone, timestamp );
            if( dataObject != null )
            {
                var result = (ZoneExceptionsEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ZoneExceptionsEntity> GetZoneExceptionsByZoneFromTimestamp( Guid zone, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneExceptionsByZoneFromTimestamp( zone, timestamp );
            var result = ToEntityList<ZoneExceptionsEntity,ZoneExceptionsObject>( dataItems );
            return result;
        }

        public BindingList<ZoneExceptionsEntity> GetZoneExceptionsByZoneUntilTimestamp( Guid zone, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneExceptionsByZoneUntilTimestamp( zone, timestamp );
            var result = ToEntityList<ZoneExceptionsEntity,ZoneExceptionsObject>( dataItems );
            return result;
        }

        public BindingList<ZoneExceptionsEntity> GetZoneExceptionsByZoneOverTimestamp( Guid zone, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneExceptionsByZoneOverTimestamp( zone, fromTimestamp, untilTimestamp );
            var result = ToEntityList<ZoneExceptionsEntity,ZoneExceptionsObject>( dataItems );
            return result;
        }

        public BindingList<ZoneExceptionsEntity> GetZoneExceptionsCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneExceptionsCollectionByTimestamp( timestamp );
            var result = ToEntityList<ZoneExceptionsEntity,ZoneExceptionsObject>( dataItems );
            return result;
        }

        public BindingList<ZoneExceptionsEntity> GetZoneExceptionsCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneExceptionsCollectionAtTimestamp( timestamp );
            var result = ToEntityList<ZoneExceptionsEntity,ZoneExceptionsObject>( dataItems );
            return result;
        }

        public BindingList<ZoneExceptionsEntity> GetZoneExceptionsCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneExceptionsCollectionFromTimestamp( timestamp );
            var result = ToEntityList<ZoneExceptionsEntity,ZoneExceptionsObject>( dataItems );
            return result;
        }

        public BindingList<ZoneExceptionsEntity> GetZoneExceptionsCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneExceptionsCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<ZoneExceptionsEntity,ZoneExceptionsObject>( dataItems );
            return result;
        }

        public BindingList<ZoneExceptionsEntity> GetZoneExceptionsCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneExceptionsCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<ZoneExceptionsEntity,ZoneExceptionsObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // ZoneExceptionsVesselLink queries
        // ---------------------------------------------------------------------
        public ZoneExceptionsVesselLinkEntity? GetZoneExceptionsVesselLinkById( Guid id )
        {
            var entity = (ZoneExceptionsVesselLinkEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetZoneExceptionsVesselLinkById( id );
                if( dataObject != null )
                {
                    entity = (ZoneExceptionsVesselLinkEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ZoneExceptionsVesselLinkEntity> GetZoneExceptionsVesselLinkCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneExceptionsVesselLinkCollection( );
            var result = ToEntityList<ZoneExceptionsVesselLinkEntity,ZoneExceptionsVesselLinkObject>( dataItems );
            return result;
        }
        public BindingList<ZoneExceptionsVesselLinkEntity> GetZoneExceptionsVesselLinkCollectionByZoneExceptions( Guid zoneExceptions )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneExceptionsVesselLinkCollectionByZoneExceptions( zoneExceptions );
            var result = ToEntityList<ZoneExceptionsVesselLinkEntity,ZoneExceptionsVesselLinkObject>( dataItems );
            return result;
        }

        public ZoneExceptionsVesselLinkEntity? GetZoneExceptionsVesselLinkByZoneExceptionsAndVessel( Guid zoneExceptions, Guid vessel )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetZoneExceptionsVesselLinkByZoneExceptionsAndVessel( zoneExceptions, vessel );
            if( dataObject != null )
            {
                var result = (ZoneExceptionsVesselLinkEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ZoneExceptionsVesselLinkEntity> GetZoneExceptionsVesselLinkCollectionByVessel( Guid vessel )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneExceptionsVesselLinkCollectionByVessel( vessel );
            var result = ToEntityList<ZoneExceptionsVesselLinkEntity,ZoneExceptionsVesselLinkObject>( dataItems );
            return result;
        }

        // ---------------------------------------------------------------------
        // ZoneTrackAlarm queries
        // ---------------------------------------------------------------------
        public ZoneTrackAlarmEntity? GetZoneTrackAlarmById( Guid id )
        {
            var entity = (ZoneTrackAlarmEntity?)GetEntityFromCache( id );
            if( entity == null )
            {
                var dataContext = DataContext;
                var dataObject = dataContext.GetZoneTrackAlarmById( id );
                if( dataObject != null )
                {
                    entity = (ZoneTrackAlarmEntity)AddToContext( dataObject );
                }
            }
            return entity;
        }

        public BindingList<ZoneTrackAlarmEntity> GetZoneTrackAlarmCollection( )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneTrackAlarmCollection( );
            var result = ToEntityList<ZoneTrackAlarmEntity,ZoneTrackAlarmObject>( dataItems );
            return result;
        }
        public BindingList<ZoneTrackAlarmEntity> GetZoneTrackAlarmCollectionByTrack( Guid track )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneTrackAlarmCollectionByTrack( track );
            var result = ToEntityList<ZoneTrackAlarmEntity,ZoneTrackAlarmObject>( dataItems );
            return result;
        }

        public ZoneTrackAlarmEntity? GetZoneTrackAlarmByTrackAndTimestamp( Guid track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetZoneTrackAlarmByTrackAndTimestamp( track, timestamp );
            if( dataObject != null )
            {
                var result = (ZoneTrackAlarmEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public ZoneTrackAlarmEntity? GetZoneTrackAlarmByTrackAtTimestamp( Guid track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetZoneTrackAlarmByTrackAtTimestamp( track, timestamp );
            if( dataObject != null )
            {
                var result = (ZoneTrackAlarmEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ZoneTrackAlarmEntity> GetZoneTrackAlarmByTrackFromTimestamp( Guid track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneTrackAlarmByTrackFromTimestamp( track, timestamp );
            var result = ToEntityList<ZoneTrackAlarmEntity,ZoneTrackAlarmObject>( dataItems );
            return result;
        }

        public BindingList<ZoneTrackAlarmEntity> GetZoneTrackAlarmByTrackUntilTimestamp( Guid track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneTrackAlarmByTrackUntilTimestamp( track, timestamp );
            var result = ToEntityList<ZoneTrackAlarmEntity,ZoneTrackAlarmObject>( dataItems );
            return result;
        }

        public BindingList<ZoneTrackAlarmEntity> GetZoneTrackAlarmByTrackOverTimestamp( Guid track, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneTrackAlarmByTrackOverTimestamp( track, fromTimestamp, untilTimestamp );
            var result = ToEntityList<ZoneTrackAlarmEntity,ZoneTrackAlarmObject>( dataItems );
            return result;
        }

        public BindingList<ZoneTrackAlarmEntity> GetZoneTrackAlarmCollectionByZone( Guid zone )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneTrackAlarmCollectionByZone( zone );
            var result = ToEntityList<ZoneTrackAlarmEntity,ZoneTrackAlarmObject>( dataItems );
            return result;
        }

        public BindingList<ZoneTrackAlarmEntity> GetZoneTrackAlarmCollectionByZoneAndTrack( Guid zone, Guid track )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneTrackAlarmCollectionByZoneAndTrack( zone, track );
            var result = ToEntityList<ZoneTrackAlarmEntity,ZoneTrackAlarmObject>( dataItems );
            return result;
        }

        public ZoneTrackAlarmEntity? GetZoneTrackAlarmByZoneTrackAndTimestamp( Guid zone, Guid track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetZoneTrackAlarmByZoneTrackAndTimestamp( zone, track, timestamp );
            if( dataObject != null )
            {
                var result = (ZoneTrackAlarmEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public ZoneTrackAlarmEntity? GetZoneTrackAlarmByZoneTrackAtTimestamp( Guid zone, Guid track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataObject = dataContext.GetZoneTrackAlarmByZoneTrackAtTimestamp( zone, track, timestamp );
            if( dataObject != null )
            {
                var result = (ZoneTrackAlarmEntity)AddToContext( dataObject );
                return result;
            }
            return null;
        }

        public BindingList<ZoneTrackAlarmEntity> GetZoneTrackAlarmByZoneTrackFromTimestamp( Guid zone, Guid track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneTrackAlarmByZoneTrackFromTimestamp( zone, track, timestamp );
            var result = ToEntityList<ZoneTrackAlarmEntity,ZoneTrackAlarmObject>( dataItems );
            return result;
        }

        public BindingList<ZoneTrackAlarmEntity> GetZoneTrackAlarmByZoneTrackUntilTimestamp( Guid zone, Guid track, DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneTrackAlarmByZoneTrackUntilTimestamp( zone, track, timestamp );
            var result = ToEntityList<ZoneTrackAlarmEntity,ZoneTrackAlarmObject>( dataItems );
            return result;
        }

        public BindingList<ZoneTrackAlarmEntity> GetZoneTrackAlarmByZoneTrackOverTimestamp( Guid zone, Guid track, DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneTrackAlarmByZoneTrackOverTimestamp( zone, track, fromTimestamp, untilTimestamp );
            var result = ToEntityList<ZoneTrackAlarmEntity,ZoneTrackAlarmObject>( dataItems );
            return result;
        }

        public BindingList<ZoneTrackAlarmEntity> GetZoneTrackAlarmCollectionByTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneTrackAlarmCollectionByTimestamp( timestamp );
            var result = ToEntityList<ZoneTrackAlarmEntity,ZoneTrackAlarmObject>( dataItems );
            return result;
        }

        public BindingList<ZoneTrackAlarmEntity> GetZoneTrackAlarmCollectionAtTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneTrackAlarmCollectionAtTimestamp( timestamp );
            var result = ToEntityList<ZoneTrackAlarmEntity,ZoneTrackAlarmObject>( dataItems );
            return result;
        }

        public BindingList<ZoneTrackAlarmEntity> GetZoneTrackAlarmCollectionFromTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneTrackAlarmCollectionFromTimestamp( timestamp );
            var result = ToEntityList<ZoneTrackAlarmEntity,ZoneTrackAlarmObject>( dataItems );
            return result;
        }

        public BindingList<ZoneTrackAlarmEntity> GetZoneTrackAlarmCollectionUntilTimestamp( DateTime timestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneTrackAlarmCollectionUntilTimestamp( timestamp );
            var result = ToEntityList<ZoneTrackAlarmEntity,ZoneTrackAlarmObject>( dataItems );
            return result;
        }

        public BindingList<ZoneTrackAlarmEntity> GetZoneTrackAlarmCollectionOverTimestamp( DateTime fromTimestamp, DateTime untilTimestamp )
        {
            var dataContext = DataContext;
            var dataItems = dataContext.GetZoneTrackAlarmCollectionOverTimestamp( fromTimestamp, untilTimestamp );
            var result = ToEntityList<ZoneTrackAlarmEntity,ZoneTrackAlarmObject>( dataItems );
            return result;
        }

    }
}
