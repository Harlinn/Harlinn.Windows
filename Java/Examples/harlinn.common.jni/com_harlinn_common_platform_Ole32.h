/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_harlinn_common_platform_Ole32 */

#ifndef _Included_com_harlinn_common_platform_Ole32
#define _Included_com_harlinn_common_platform_Ole32
#ifdef __cplusplus
extern "C" {
#endif
#undef com_harlinn_common_platform_Ole32_S_OK
#define com_harlinn_common_platform_Ole32_S_OK 0L
#undef com_harlinn_common_platform_Ole32_S_FALSE
#define com_harlinn_common_platform_Ole32_S_FALSE 1L
#undef com_harlinn_common_platform_Ole32_RPC_E_CHANGED_MODE
#define com_harlinn_common_platform_Ole32_RPC_E_CHANGED_MODE -2147417850L
#undef com_harlinn_common_platform_Ole32_COINITBASE_MULTITHREADED
#define com_harlinn_common_platform_Ole32_COINITBASE_MULTITHREADED 0L
#undef com_harlinn_common_platform_Ole32_COINIT_APARTMENTTHREADED
#define com_harlinn_common_platform_Ole32_COINIT_APARTMENTTHREADED 2L
#undef com_harlinn_common_platform_Ole32_COINIT_DISABLE_OLE1DDE
#define com_harlinn_common_platform_Ole32_COINIT_DISABLE_OLE1DDE 4L
#undef com_harlinn_common_platform_Ole32_COINIT_SPEED_OVER_MEMORY
#define com_harlinn_common_platform_Ole32_COINIT_SPEED_OVER_MEMORY 8L
/*
 * Class:     com_harlinn_common_platform_Ole32
 * Method:    CoInitializeEx
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_harlinn_common_platform_Ole32_CoInitializeEx
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_harlinn_common_platform_Ole32
 * Method:    CoUninitialize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_harlinn_common_platform_Ole32_CoUninitialize
  (JNIEnv *, jclass);

/*
 * Class:     com_harlinn_common_platform_Ole32
 * Method:    CoCreateGuid
 * Signature: ()[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_harlinn_common_platform_Ole32_CoCreateGuid
  (JNIEnv *, jclass);

/*
 * Class:     com_harlinn_common_platform_Ole32
 * Method:    StringFromGUID
 * Signature: (ISSBBBBBBBB)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_harlinn_common_platform_Ole32_StringFromGUID
  (JNIEnv *, jclass, jint, jshort, jshort, jbyte, jbyte, jbyte, jbyte, jbyte, jbyte, jbyte, jbyte);

/*
 * Class:     com_harlinn_common_platform_Ole32
 * Method:    IIDFromString
 * Signature: (Ljava/lang/String;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_harlinn_common_platform_Ole32_IIDFromString
  (JNIEnv *, jclass, jstring);

#ifdef __cplusplus
}
#endif
#endif
