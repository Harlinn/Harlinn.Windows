#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0      POS   float   xy  
; NORMAL                   0   xyz         1     NONE   float   xyz 
; TANGENT                  0   xyzw        2     NONE   float   xyzw
; TEXCOORD                 0   xy          3     NONE   float   xy  
; TEXCOORD                 2   xyz         4     NONE   float   xyz 
; TEXCOORD                 3   xyz         5     NONE   float       
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader hash: 8c0d3f3aba5937a18e492dd94d584266
;
; Pipeline Runtime Information: 
;
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0          noperspective       
; NORMAL                   0                 linear       
; TANGENT                  0                 linear       
; TEXCOORD                 0                 linear       
; TEXCOORD                 2                 linear       
; TEXCOORD                 3                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
; cbuffer MaterialConstants
; {
;
;   struct MaterialConstants
;   {
;
;       float4 baseColorFactor;                       ; Offset:    0
;       float3 emissiveFactor;                        ; Offset:   16
;       float normalTextureScale;                     ; Offset:   28
;       float2 metallicRoughnessFactor;               ; Offset:   32
;       uint flags;                                   ; Offset:   40
;   
;   } MaterialConstants;                              ; Offset:    0 Size:    44
;
; }
;
; cbuffer GlobalConstants
; {
;
;   struct hostlayout.GlobalConstants
;   {
;
;       column_major float4x4 ViewProj;               ; Offset:    0
;       column_major float4x4 SunShadowMatrix;        ; Offset:   64
;       float3 ViewerPos;                             ; Offset:  128
;       float3 SunDirection;                          ; Offset:  144
;       float3 SunIntensity;                          ; Offset:  160
;       float _pad;                                   ; Offset:  172
;       float IBLRange;                               ; Offset:  176
;       float IBLBias;                                ; Offset:  180
;   
;   } GlobalConstants;                                ; Offset:    0 Size:   184
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; MaterialConstants                 cbuffer      NA          NA     CB0            cb0     1
; GlobalConstants                   cbuffer      NA          NA     CB1            cb1     1
; defaultSampler                    sampler      NA          NA      S0            s10     1
; cubeMapSampler                    sampler      NA          NA      S1            s12     1
; baseColorSampler                  sampler      NA          NA      S2             s0     1
; metallicRoughnessSampler          sampler      NA          NA      S3             s1     1
; occlusionSampler                  sampler      NA          NA      S4             s2     1
; emissiveSampler                   sampler      NA          NA      S5             s3     1
; normalSampler                     sampler      NA          NA      S6             s4     1
; baseColorTexture                  texture     f32          2d      T0             t0     1
; metallicRoughnessTexture          texture     f32          2d      T1             t1     1
; occlusionTexture                  texture     f32          2d      T2             t2     1
; emissiveTexture                   texture     f32          2d      T3             t3     1
; normalTexture                     texture     f32          2d      T4             t4     1
; radianceIBLTexture                texture     f32        cube      T5            t10     1
; irradianceIBLTexture              texture     f32        cube      T6            t11     1
; texSSAO                           texture     f32          2d      T7            t12     1
;
;
; ViewId state:
;
; Number of inputs: 23, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 16, 17, 18 }
;   output 1 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 16, 17, 18 }
;   output 2 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 16, 17, 18 }
;   output 3 depends on inputs: { 12, 13 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.Texture2D<vector<float, 3> >" = type { <3 x float>, %"class.Texture2D<vector<float, 3> >::mips_type" }
%"class.Texture2D<vector<float, 3> >::mips_type" = type { i32 }
%"class.Texture2D<vector<float, 1> >" = type { <1 x float>, %"class.Texture2D<vector<float, 1> >::mips_type" }
%"class.Texture2D<vector<float, 1> >::mips_type" = type { i32 }
%"class.TextureCube<vector<float, 3> >" = type { <3 x float> }
%"class.Texture2D<float>" = type { float, %"class.Texture2D<float>::mips_type" }
%"class.Texture2D<float>::mips_type" = type { i32 }
%MaterialConstants = type { <4 x float>, <3 x float>, float, <2 x float>, i32 }
%hostlayout.GlobalConstants = type { [4 x <4 x float>], [4 x <4 x float>], <3 x float>, <3 x float>, <3 x float>, float, float, float }
%struct.SamplerState = type { i32 }

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 7, i32 12, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 6, i32 11, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 5, i32 10, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 4, i32 4, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 3, i32 3, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 2, i32 2, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 6, i32 4, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %10 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 5, i32 3, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %11 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 4, i32 2, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %12 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 3, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %13 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 2, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %14 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 1, i32 12, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %15 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 0, i32 10, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %16 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %17 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %18 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %19 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %20 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %21 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %22 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %23 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %24 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %25 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %26 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %27 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %28 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %29 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %30 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %31 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %32 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %33 = extractvalue %dx.types.CBufRet.f32 %32, 0
  %34 = extractvalue %dx.types.CBufRet.f32 %32, 1
  %35 = extractvalue %dx.types.CBufRet.f32 %32, 2
  %36 = extractvalue %dx.types.CBufRet.f32 %32, 3
  %37 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %8, %dx.types.Handle %13, float %21, float %22, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %38 = extractvalue %dx.types.ResRet.f32 %37, 0
  %39 = extractvalue %dx.types.ResRet.f32 %37, 1
  %40 = extractvalue %dx.types.ResRet.f32 %37, 2
  %41 = extractvalue %dx.types.ResRet.f32 %37, 3
  %42 = fmul fast float %38, %33
  %43 = fmul fast float %39, %34
  %44 = fmul fast float %40, %35
  %45 = fmul fast float %41, %36
  %46 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %47 = extractvalue %dx.types.CBufRet.f32 %46, 0
  %48 = extractvalue %dx.types.CBufRet.f32 %46, 1
  %49 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %7, %dx.types.Handle %12, float %21, float %22, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %50 = extractvalue %dx.types.ResRet.f32 %49, 1
  %51 = extractvalue %dx.types.ResRet.f32 %49, 2
  %52 = fmul fast float %51, %47
  %53 = fmul fast float %50, %48
  %54 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %6, %dx.types.Handle %11, float %21, float %22, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %55 = extractvalue %dx.types.ResRet.f32 %54, 0
  %56 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %57 = extractvalue %dx.types.CBufRet.f32 %56, 0
  %58 = extractvalue %dx.types.CBufRet.f32 %56, 1
  %59 = extractvalue %dx.types.CBufRet.f32 %56, 2
  %60 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %5, %dx.types.Handle %10, float %21, float %22, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %61 = extractvalue %dx.types.ResRet.f32 %60, 0
  %62 = extractvalue %dx.types.ResRet.f32 %60, 1
  %63 = extractvalue %dx.types.ResRet.f32 %60, 2
  %64 = fmul fast float %61, %57
  %65 = fmul fast float %62, %58
  %66 = fmul fast float %63, %59
  %67 = call float @dx.op.dot3.f32(i32 55, float %27, float %28, float %29, float %27, float %28, float %29)  ; Dot3(ax,ay,az,bx,by,bz)
  %68 = call float @dx.op.unary.f32(i32 25, float %67)  ; Rsqrt(value)
  %69 = fmul fast float %68, %27
  %70 = fmul fast float %68, %28
  %71 = fmul fast float %68, %29
  %72 = call float @dx.op.dot3.f32(i32 55, float %23, float %24, float %25, float %23, float %24, float %25)  ; Dot3(ax,ay,az,bx,by,bz)
  %73 = call float @dx.op.unary.f32(i32 25, float %72)  ; Rsqrt(value)
  %74 = fmul fast float %73, %23
  %75 = fmul fast float %73, %24
  %76 = fmul fast float %73, %25
  %77 = fmul fast float %76, %70
  %78 = fmul fast float %75, %71
  %79 = fsub fast float %77, %78
  %80 = fmul fast float %74, %71
  %81 = fmul fast float %76, %69
  %82 = fsub fast float %80, %81
  %83 = fmul fast float %75, %69
  %84 = fmul fast float %74, %70
  %85 = fsub fast float %83, %84
  %86 = call float @dx.op.dot3.f32(i32 55, float %79, float %82, float %85, float %79, float %82, float %85)  ; Dot3(ax,ay,az,bx,by,bz)
  %87 = call float @dx.op.unary.f32(i32 25, float %86)  ; Rsqrt(value)
  %88 = fmul fast float %87, %26
  %89 = fmul fast float %88, %79
  %90 = fmul fast float %88, %82
  %91 = fmul fast float %88, %85
  %92 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %4, %dx.types.Handle %9, float %21, float %22, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %93 = extractvalue %dx.types.ResRet.f32 %92, 0
  %94 = extractvalue %dx.types.ResRet.f32 %92, 1
  %95 = extractvalue %dx.types.ResRet.f32 %92, 2
  %96 = fmul fast float %93, 2.000000e+00
  %97 = fmul fast float %94, 2.000000e+00
  %98 = fmul fast float %95, 2.000000e+00
  %99 = fadd fast float %96, -1.000000e+00
  %100 = fadd fast float %97, -1.000000e+00
  %101 = fadd fast float %98, -1.000000e+00
  %102 = extractvalue %dx.types.CBufRet.f32 %56, 3
  %103 = fmul fast float %99, %102
  %104 = fmul fast float %100, %102
  %105 = call float @dx.op.dot3.f32(i32 55, float %103, float %104, float %101, float %103, float %104, float %101)  ; Dot3(ax,ay,az,bx,by,bz)
  %106 = call float @dx.op.unary.f32(i32 25, float %105)  ; Rsqrt(value)
  %107 = fmul fast float %103, %106
  %108 = fmul fast float %104, %106
  %109 = fmul fast float %106, %101
  %110 = fmul fast float %107, %74
  %111 = call float @dx.op.tertiary.f32(i32 46, float %108, float %89, float %110)  ; FMad(a,b,c)
  %112 = call float @dx.op.tertiary.f32(i32 46, float %109, float %69, float %111)  ; FMad(a,b,c)
  %113 = fmul fast float %107, %75
  %114 = call float @dx.op.tertiary.f32(i32 46, float %108, float %90, float %113)  ; FMad(a,b,c)
  %115 = call float @dx.op.tertiary.f32(i32 46, float %109, float %70, float %114)  ; FMad(a,b,c)
  %116 = fmul fast float %107, %76
  %117 = call float @dx.op.tertiary.f32(i32 46, float %108, float %91, float %116)  ; FMad(a,b,c)
  %118 = call float @dx.op.tertiary.f32(i32 46, float %109, float %71, float %117)  ; FMad(a,b,c)
  %119 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %120 = extractvalue %dx.types.CBufRet.f32 %119, 0
  %121 = extractvalue %dx.types.CBufRet.f32 %119, 1
  %122 = extractvalue %dx.types.CBufRet.f32 %119, 2
  %123 = fsub fast float %120, %18
  %124 = fsub fast float %121, %19
  %125 = fsub fast float %122, %20
  %126 = call float @dx.op.dot3.f32(i32 55, float %123, float %124, float %125, float %123, float %124, float %125)  ; Dot3(ax,ay,az,bx,by,bz)
  %127 = call float @dx.op.unary.f32(i32 25, float %126)  ; Rsqrt(value)
  %128 = fmul fast float %123, %127
  %129 = fmul fast float %124, %127
  %130 = fmul fast float %125, %127
  %131 = call float @dx.op.dot3.f32(i32 55, float %112, float %115, float %118, float %128, float %129, float %130)  ; Dot3(ax,ay,az,bx,by,bz)
  %132 = call float @dx.op.unary.f32(i32 7, float %131)  ; Saturate(value)
  %133 = fmul fast float %42, 0x3FEEB851E0000000
  %134 = fmul fast float %43, 0x3FEEB851E0000000
  %135 = fmul fast float %44, 0x3FEEB851E0000000
  %136 = fsub fast float 1.000000e+00, %52
  %137 = fmul fast float %133, %136
  %138 = fmul fast float %134, %136
  %139 = fmul fast float %135, %136
  %140 = fmul fast float %137, %55
  %141 = fmul fast float %138, %55
  %142 = fmul fast float %139, %55
  %143 = fadd fast float %42, 0xBFA47AE140000000
  %144 = fadd fast float %43, 0xBFA47AE140000000
  %145 = fadd fast float %44, 0xBFA47AE140000000
  %146 = fmul fast float %52, %143
  %147 = fmul fast float %52, %144
  %148 = fmul fast float %52, %145
  %149 = fadd fast float %146, 0x3FA47AE140000000
  %150 = fadd fast float %147, 0x3FA47AE140000000
  %151 = fadd fast float %148, 0x3FA47AE140000000
  %152 = fmul fast float %55, %149
  %153 = fmul fast float %55, %150
  %154 = fmul fast float %55, %151
  %155 = fptoui float %30 to i32
  %156 = fptoui float %31 to i32
  %157 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %1, i32 0, i32 %155, i32 %156, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %158 = extractvalue %dx.types.ResRet.f32 %157, 0
  %159 = fmul fast float %140, %158
  %160 = fmul fast float %141, %158
  %161 = fmul fast float %142, %158
  %162 = fmul fast float %152, %158
  %163 = fmul fast float %153, %158
  %164 = fmul fast float %154, %158
  %165 = fadd fast float %128, %112
  %166 = fadd fast float %129, %115
  %167 = fadd fast float %130, %118
  %168 = call float @dx.op.dot3.f32(i32 55, float %165, float %166, float %167, float %165, float %166, float %167)  ; Dot3(ax,ay,az,bx,by,bz)
  %169 = call float @dx.op.unary.f32(i32 25, float %168)  ; Rsqrt(value)
  %170 = fmul fast float %169, %165
  %171 = fmul fast float %169, %166
  %172 = fmul fast float %169, %167
  %173 = call float @dx.op.dot3.f32(i32 55, float %112, float %115, float %118, float %170, float %171, float %172)  ; Dot3(ax,ay,az,bx,by,bz)
  %174 = call float @dx.op.unary.f32(i32 7, float %173)  ; Saturate(value)
  %175 = fmul fast float %53, 2.000000e+00
  %176 = fmul fast float %174, %174
  %177 = fmul fast float %176, %175
  %178 = fsub fast float 1.000000e+00, %132
  %179 = fmul fast float %178, %178
  %180 = fadd fast float %177, -5.000000e-01
  %181 = fmul fast float %179, %179
  %182 = fmul fast float %181, %178
  %183 = fmul fast float %182, %180
  %184 = fadd fast float %183, 1.000000e+00
  %185 = fmul fast float %159, %184
  %186 = fmul fast float %160, %184
  %187 = fmul fast float %161, %184
  %188 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %2, %dx.types.Handle %15, float %112, float %115, float %118, float undef, i32 undef, i32 undef, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %189 = extractvalue %dx.types.ResRet.f32 %188, 0
  %190 = extractvalue %dx.types.ResRet.f32 %188, 1
  %191 = extractvalue %dx.types.ResRet.f32 %188, 2
  %192 = fmul fast float %185, %189
  %193 = fmul fast float %186, %190
  %194 = fmul fast float %187, %191
  %195 = fadd fast float %192, %64
  %196 = fadd fast float %193, %65
  %197 = fadd fast float %194, %66
  %198 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %199 = extractvalue %dx.types.CBufRet.f32 %198, 0
  %200 = fmul fast float %199, %53
  %201 = extractvalue %dx.types.CBufRet.f32 %198, 1
  %202 = fadd fast float %200, %201
  %203 = fsub fast float 1.000000e+00, %162
  %204 = fsub fast float 1.000000e+00, %163
  %205 = fsub fast float 1.000000e+00, %164
  %206 = fmul fast float %203, %182
  %207 = fmul fast float %204, %182
  %208 = fmul fast float %205, %182
  %209 = fadd fast float %206, %162
  %210 = fadd fast float %207, %163
  %211 = fadd fast float %208, %164
  %212 = fsub fast float -0.000000e+00, %128
  %213 = fsub fast float -0.000000e+00, %129
  %214 = fsub fast float -0.000000e+00, %130
  %215 = call float @dx.op.dot3.f32(i32 55, float %212, float %213, float %214, float %112, float %115, float %118)  ; Dot3(ax,ay,az,bx,by,bz)
  %216 = fmul fast float %215, 2.000000e+00
  %217 = fmul fast float %216, %112
  %218 = fmul fast float %216, %115
  %219 = fmul fast float %216, %118
  %220 = fsub fast float %212, %217
  %221 = fsub fast float %213, %218
  %222 = fsub fast float %214, %219
  %223 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %3, %dx.types.Handle %14, float %220, float %221, float %222, float undef, i32 undef, i32 undef, i32 undef, float %202)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %224 = extractvalue %dx.types.ResRet.f32 %223, 0
  %225 = extractvalue %dx.types.ResRet.f32 %223, 1
  %226 = extractvalue %dx.types.ResRet.f32 %223, 2
  %227 = fmul fast float %224, %209
  %228 = fmul fast float %225, %210
  %229 = fmul fast float %226, %211
  %230 = fadd fast float %195, %227
  %231 = fadd fast float %196, %228
  %232 = fadd fast float %197, %229
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %230)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %231)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %232)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %45)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!26}
!dx.entryPoints = !{!27}

!0 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 2}
!2 = !{i32 1, i32 6}
!3 = !{!"ps", i32 6, i32 2}
!4 = !{!5, null, !15, !18}
!5 = !{!6, !8, !9, !10, !11, !12, !13, !14}
!6 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !7}
!7 = !{i32 0, i32 9}
!8 = !{i32 1, %"class.Texture2D<vector<float, 3> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i32 0, !7}
!9 = !{i32 2, %"class.Texture2D<vector<float, 1> >"* undef, !"", i32 0, i32 2, i32 1, i32 2, i32 0, !7}
!10 = !{i32 3, %"class.Texture2D<vector<float, 3> >"* undef, !"", i32 0, i32 3, i32 1, i32 2, i32 0, !7}
!11 = !{i32 4, %"class.Texture2D<vector<float, 3> >"* undef, !"", i32 0, i32 4, i32 1, i32 2, i32 0, !7}
!12 = !{i32 5, %"class.TextureCube<vector<float, 3> >"* undef, !"", i32 0, i32 10, i32 1, i32 5, i32 0, !7}
!13 = !{i32 6, %"class.TextureCube<vector<float, 3> >"* undef, !"", i32 0, i32 11, i32 1, i32 5, i32 0, !7}
!14 = !{i32 7, %"class.Texture2D<float>"* undef, !"", i32 0, i32 12, i32 1, i32 2, i32 0, !7}
!15 = !{!16, !17}
!16 = !{i32 0, %MaterialConstants* undef, !"", i32 0, i32 0, i32 1, i32 44, null}
!17 = !{i32 1, %hostlayout.GlobalConstants* undef, !"", i32 0, i32 1, i32 1, i32 184, null}
!18 = !{!19, !20, !21, !22, !23, !24, !25}
!19 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 10, i32 1, i32 0, null}
!20 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 12, i32 1, i32 0, null}
!21 = !{i32 2, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!22 = !{i32 3, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!23 = !{i32 4, %struct.SamplerState* undef, !"", i32 0, i32 2, i32 1, i32 0, null}
!24 = !{i32 5, %struct.SamplerState* undef, !"", i32 0, i32 3, i32 1, i32 0, null}
!25 = !{i32 6, %struct.SamplerState* undef, !"", i32 0, i32 4, i32 1, i32 0, null}
!26 = !{[25 x i32] [i32 23, i32 4, i32 7, i32 7, i32 0, i32 0, i32 7, i32 7, i32 7, i32 0, i32 7, i32 7, i32 7, i32 7, i32 15, i32 15, i32 0, i32 0, i32 7, i32 7, i32 7, i32 0, i32 0, i32 0, i32 0]}
!27 = !{void ()* @main, !"main", !28, !4, null}
!28 = !{!29, !42, null}
!29 = !{!30, !33, !35, !37, !38, !40}
!30 = !{i32 0, !"SV_Position", i8 9, i8 3, !31, i8 4, i32 1, i8 4, i32 0, i8 0, !32}
!31 = !{i32 0}
!32 = !{i32 3, i32 3}
!33 = !{i32 1, !"NORMAL", i8 9, i8 0, !31, i8 2, i32 1, i8 3, i32 1, i8 0, !34}
!34 = !{i32 3, i32 7}
!35 = !{i32 2, !"TANGENT", i8 9, i8 0, !31, i8 2, i32 1, i8 4, i32 2, i8 0, !36}
!36 = !{i32 3, i32 15}
!37 = !{i32 3, !"TEXCOORD", i8 9, i8 0, !31, i8 2, i32 1, i8 2, i32 3, i8 0, !32}
!38 = !{i32 4, !"TEXCOORD", i8 9, i8 0, !39, i8 2, i32 1, i8 3, i32 4, i8 0, !34}
!39 = !{i32 2}
!40 = !{i32 5, !"TEXCOORD", i8 9, i8 0, !41, i8 2, i32 1, i8 3, i32 5, i8 0, null}
!41 = !{i32 3}
!42 = !{!43}
!43 = !{i32 0, !"SV_Target", i8 9, i8 16, !31, i8 0, i32 1, i8 4, i32 0, i8 0, !36}

#endif

const unsigned char g_pDefaultNoUV1PS[] = {
  0x44, 0x58, 0x42, 0x43, 0x74, 0x8b, 0x1b, 0x28, 0xea, 0x59, 0x65, 0x0a,
  0x26, 0x6e, 0x8b, 0x79, 0x07, 0xf7, 0xfb, 0x41, 0x01, 0x00, 0x00, 0x00,
  0x2c, 0x25, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x56, 0x01, 0x00, 0x00, 0x90, 0x01, 0x00, 0x00,
  0x80, 0x04, 0x00, 0x00, 0x20, 0x06, 0x00, 0x00, 0xb4, 0x13, 0x00, 0x00,
  0xd0, 0x13, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0xfe, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xd4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdb, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xec, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00,
  0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x41, 0x4e, 0x47, 0x45,
  0x4e, 0x54, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58,
  0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x4f, 0x53, 0x47, 0x31, 0x32, 0x00,
  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
  0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x61, 0x72,
  0x67, 0x65, 0x74, 0x00, 0x50, 0x53, 0x56, 0x30, 0xe8, 0x02, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x06, 0x01, 0x00, 0x06,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x2c, 0x00, 0x00, 0x00, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00,
  0x54, 0x41, 0x4e, 0x47, 0x45, 0x4e, 0x54, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x03, 0x03, 0x04, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x43, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x04, 0x43, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x05, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x10, 0x03, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x98, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0xfc, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x7f,
  0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0x7f, 0x7f, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x7f, 0x0c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x53, 0x54, 0x41, 0x54,
  0x8c, 0x0d, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x63, 0x03, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x02, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x74, 0x0d, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x5a, 0x03, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0xca, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xe0, 0xc1, 0x08,
  0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00,
  0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88,
  0x62, 0x20, 0xe4, 0xa6, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x7f, 0x25,
  0xa4, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x51, 0x31, 0x0c, 0xc3, 0x40, 0x50,
  0x71, 0xcf, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0x1f, 0x02, 0xcd, 0xb0,
  0x10, 0x28, 0x58, 0x0a, 0xa3, 0x10, 0x0c, 0x33, 0x0c, 0xc3, 0x40, 0x10,
  0xc4, 0x40, 0x4d, 0x41, 0x06, 0x62, 0x18, 0x86, 0x61, 0x18, 0xe8, 0x29,
  0xc3, 0x40, 0x0c, 0x14, 0x15, 0x45, 0x21, 0x18, 0x82, 0x20, 0x08, 0x82,
  0x20, 0x68, 0x2a, 0xc5, 0x40, 0x0c, 0xc3, 0x40, 0xd5, 0x51, 0xc3, 0xe5,
  0x4f, 0xd8, 0x43, 0x48, 0x3e, 0xb7, 0x51, 0xc5, 0x4a, 0x4c, 0x7e, 0x71,
  0xdb, 0x88, 0x18, 0x86, 0x61, 0x28, 0xc4, 0x45, 0x30, 0x04, 0x61, 0x73,
  0x04, 0x41, 0x31, 0x18, 0xa2, 0x20, 0x08, 0x8d, 0xb6, 0x81, 0x80, 0x61,
  0x04, 0x62, 0x98, 0xa9, 0x0d, 0xc6, 0x81, 0x1d, 0xc2, 0x61, 0x1e, 0xe6,
  0xc1, 0x0d, 0x68, 0xa1, 0x1c, 0xf0, 0x81, 0x1e, 0xea, 0x41, 0x1e, 0xca,
  0x41, 0x0e, 0x48, 0x81, 0x0f, 0xec, 0xa1, 0x1c, 0xc6, 0x81, 0x1e, 0xde,
  0x41, 0x1e, 0xf8, 0xc0, 0x1c, 0xd8, 0xe1, 0x1d, 0xc2, 0x81, 0x1e, 0xd8,
  0x00, 0x0c, 0xe8, 0xc0, 0x0f, 0xc0, 0xc0, 0x0f, 0xf4, 0x40, 0x0f, 0xda,
  0x21, 0x1d, 0xe0, 0x61, 0x1e, 0x7e, 0x81, 0x1e, 0xf2, 0x01, 0x1e, 0xca,
  0x01, 0x05, 0xc4, 0x4c, 0x62, 0x30, 0x0e, 0xec, 0x10, 0x0e, 0xf3, 0x30,
  0x0f, 0x6e, 0x40, 0x0b, 0xe5, 0x80, 0x0f, 0xf4, 0x50, 0x0f, 0xf2, 0x50,
  0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x60, 0x0f, 0xe5, 0x30, 0x0e, 0xf4, 0xf0,
  0x0e, 0xf2, 0xc0, 0x07, 0xe6, 0xc0, 0x0e, 0xef, 0x10, 0x0e, 0xf4, 0xc0,
  0x06, 0x60, 0x40, 0x07, 0x7e, 0x00, 0x06, 0x7e, 0x80, 0x04, 0xef, 0x23,
  0x70, 0x18, 0x61, 0x18, 0x66, 0x6a, 0x83, 0x71, 0x60, 0x87, 0x70, 0x98,
  0x87, 0x79, 0x70, 0x03, 0x5a, 0x28, 0x07, 0x7c, 0xa0, 0x87, 0x7a, 0x90,
  0x87, 0x72, 0x90, 0x03, 0x52, 0xe0, 0x03, 0x7b, 0x28, 0x87, 0x71, 0xa0,
  0x87, 0x77, 0x90, 0x07, 0x3e, 0x30, 0x07, 0x76, 0x78, 0x87, 0x70, 0xa0,
  0x07, 0x36, 0x00, 0x83, 0x39, 0xf0, 0x03, 0x30, 0xf0, 0x03, 0x3d, 0xd0,
  0x83, 0x76, 0x48, 0x07, 0x78, 0x98, 0x87, 0x5f, 0xa0, 0x87, 0x7c, 0x80,
  0x87, 0x72, 0x40, 0x01, 0x31, 0x93, 0x18, 0x8c, 0x03, 0x3b, 0x84, 0xc3,
  0x3c, 0xcc, 0x83, 0x1b, 0xd0, 0x42, 0x39, 0xe0, 0x03, 0x3d, 0xd4, 0x83,
  0x3c, 0x94, 0x83, 0x1c, 0x90, 0x02, 0x1f, 0xd8, 0x43, 0x39, 0x8c, 0x03,
  0x3d, 0xbc, 0x83, 0x3c, 0xf0, 0x81, 0x39, 0xb0, 0xc3, 0x3b, 0x84, 0x03,
  0x3d, 0xb0, 0x01, 0x18, 0xcc, 0x81, 0x1f, 0x80, 0x81, 0x1f, 0x20, 0x41,
  0x1c, 0x89, 0x1c, 0x46, 0x08, 0x86, 0x99, 0xda, 0x60, 0x1c, 0xd8, 0x21,
  0x1c, 0xe6, 0x61, 0x1e, 0xdc, 0x80, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1,
  0x1e, 0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8, 0xc0, 0x1e, 0xca, 0x61,
  0x1c, 0xe8, 0xe1, 0x1d, 0xe4, 0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21,
  0x1c, 0xe8, 0x81, 0x0d, 0xc0, 0x20, 0x0e, 0xfc, 0x00, 0x0c, 0xfc, 0x40,
  0x0f, 0xf4, 0xa0, 0x1d, 0xd2, 0x01, 0x1e, 0xe6, 0xe1, 0x17, 0xe8, 0x21,
  0x1f, 0xe0, 0xa1, 0x1c, 0x50, 0x40, 0xcc, 0x24, 0x06, 0xe3, 0xc0, 0x0e,
  0xe1, 0x30, 0x0f, 0xf3, 0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f,
  0xf5, 0x20, 0x0f, 0xe5, 0x20, 0x07, 0xa4, 0xc0, 0x07, 0xf6, 0x50, 0x0e,
  0xe3, 0x40, 0x0f, 0xef, 0x20, 0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e,
  0xe1, 0x40, 0x0f, 0x6c, 0x00, 0x06, 0x71, 0xe0, 0x07, 0x60, 0xe0, 0x07,
  0x48, 0x30, 0x4f, 0x42, 0x67, 0x22, 0x83, 0x71, 0x60, 0x87, 0x70, 0x98,
  0x87, 0x79, 0x70, 0x03, 0x5a, 0x28, 0x07, 0x7c, 0xa0, 0x87, 0x7a, 0x90,
  0x87, 0x72, 0x18, 0x85, 0x7a, 0x10, 0x87, 0x72, 0xe0, 0x03, 0x7b, 0x28,
  0x87, 0x71, 0xa0, 0x87, 0x77, 0x90, 0x07, 0x3e, 0x30, 0x07, 0x76, 0x78,
  0x87, 0x70, 0xa0, 0x07, 0x36, 0x00, 0x83, 0x39, 0xf0, 0x03, 0x30, 0xf0,
  0x03, 0x14, 0x88, 0xa4, 0xce, 0x14, 0x06, 0xe3, 0xc0, 0x0e, 0xe1, 0x30,
  0x0f, 0xf3, 0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f, 0xf5, 0x20,
  0x0f, 0xe5, 0x20, 0x07, 0xa4, 0xc0, 0x07, 0xe6, 0xc0, 0x0e, 0xef, 0x10,
  0x0e, 0xf4, 0xe0, 0x07, 0x7a, 0xa0, 0x07, 0xed, 0x90, 0x0e, 0xf0, 0x30,
  0x0f, 0xbf, 0x40, 0x0f, 0xf9, 0x00, 0x0f, 0xe5, 0x80, 0x02, 0x62, 0x26,
  0x6b, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e, 0xdc, 0x80, 0x16, 0xca,
  0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8,
  0xc0, 0x1c, 0xd8, 0xe1, 0x1d, 0xc2, 0x81, 0x1e, 0xfc, 0x00, 0x09, 0x03,
  0x4b, 0xed, 0x30, 0x82, 0x30, 0x5c, 0x64, 0x02, 0x13, 0x11, 0x21, 0xc0,
  0xc2, 0x39, 0x8d, 0x34, 0x01, 0xcd, 0x24, 0xa1, 0xc2, 0x13, 0x87, 0x97,
  0x20, 0x38, 0x09, 0xbc, 0xd3, 0x0e, 0x47, 0x9a, 0x16, 0x00, 0x73, 0xa8,
  0xc9, 0x07, 0x17, 0x27, 0x00, 0x16, 0xce, 0x69, 0xa4, 0x09, 0x68, 0x26,
  0x09, 0x21, 0xb2, 0x2c, 0x8a, 0xe2, 0x30, 0x0c, 0x34, 0xdf, 0x24, 0x4d,
  0x11, 0x25, 0x4c, 0x3e, 0x0b, 0x30, 0xcf, 0x42, 0x44, 0xec, 0x04, 0x4c,
  0x04, 0x0a, 0x08, 0xaa, 0x33, 0x83, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x43, 0x9e, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x86, 0x3c, 0x06, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x10, 0x20, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x34, 0x40, 0x00, 0x0c, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x79, 0x80, 0x00, 0x08,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x13, 0x01, 0x01,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x67, 0x02,
  0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f,
  0x05, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43,
  0x9e, 0x06, 0x08, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x86, 0x3c, 0x18, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x0c, 0x79, 0x36, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc8, 0x02, 0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x22, 0x4a, 0xa0, 0x08, 0x46, 0x00, 0x8a, 0xa1, 0x24,
  0xca, 0xa0, 0x10, 0x4a, 0xa1, 0x28, 0xca, 0xa2, 0x1c, 0x0a, 0xa3, 0xb0,
  0x0a, 0x5e, 0xa0, 0x40, 0x0a, 0xa7, 0x80, 0x0a, 0xaa, 0x00, 0x03, 0x0a,
  0x50, 0xa0, 0x40, 0x05, 0x0a, 0x58, 0xa0, 0xb0, 0x05, 0x0a, 0x5c, 0xa0,
  0xd0, 0x05, 0xca, 0xa3, 0x4c, 0x05, 0x4a, 0x7b, 0xa0, 0x38, 0xa8, 0x28,
  0x89, 0x32, 0x28, 0x84, 0x11, 0x80, 0x22, 0x28, 0x10, 0xd2, 0x6a, 0x80,
  0xc2, 0x19, 0x00, 0x2a, 0x67, 0x00, 0x28, 0x9d, 0x01, 0xa0, 0x75, 0x06,
  0x80, 0xdc, 0x19, 0x00, 0x82, 0x67, 0x00, 0x28, 0x9e, 0x01, 0xa0, 0x79,
  0x06, 0x80, 0xe8, 0x19, 0x00, 0xb2, 0x67, 0x00, 0xe8, 0x1e, 0x2b, 0xbb,
  0x88, 0xe3, 0x00, 0x80, 0xe3, 0x38, 0x80, 0xe3, 0x38, 0x8e, 0xe7, 0x01,
  0x80, 0xe3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x7f, 0x01, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44,
  0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b,
  0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b,
  0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81,
  0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x04,
  0x62, 0x99, 0x20, 0x10, 0xcc, 0x06, 0x61, 0x20, 0x26, 0x08, 0x44, 0xb3,
  0x41, 0x30, 0x0c, 0x0a, 0x70, 0x73, 0x13, 0x04, 0xc2, 0xd9, 0x30, 0x20,
  0x09, 0x31, 0x41, 0x08, 0x83, 0x37, 0x20, 0x24, 0x16, 0x36, 0x57, 0x36,
  0xf4, 0xc6, 0xf6, 0x26, 0x47, 0x55, 0x86, 0x47, 0x57, 0x27, 0x57, 0x36,
  0x41, 0x20, 0x9e, 0x0d, 0x82, 0xd1, 0x6c, 0x48, 0x8c, 0x85, 0x31, 0x8c,
  0x81, 0x30, 0x9c, 0x09, 0x42, 0x19, 0xc0, 0x01, 0xb1, 0xb6, 0x32, 0xba,
  0x30, 0x36, 0xb6, 0xb4, 0x31, 0xa9, 0xb7, 0xba, 0x33, 0x34, 0xb7, 0xb2,
  0xb9, 0x39, 0xaa, 0x32, 0x3c, 0xba, 0x3a, 0xb9, 0xb2, 0x0d, 0xc9, 0x00,
  0x45, 0xc6, 0x30, 0x10, 0x86, 0x33, 0x41, 0x48, 0x83, 0x38, 0x20, 0xf4,
  0x36, 0x36, 0xc6, 0x56, 0x37, 0x97, 0xf6, 0xe6, 0x46, 0x55, 0x86, 0x47,
  0x57, 0x27, 0x57, 0xb6, 0x21, 0x21, 0x26, 0xca, 0x20, 0x06, 0xc2, 0x70,
  0x26, 0x08, 0x04, 0xc4, 0xa7, 0xac, 0x2d, 0x6d, 0x6e, 0x2e, 0xcd, 0xae,
  0x8c, 0xaa, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x6c, 0x43, 0x62, 0x41, 0x97,
  0x61, 0x0d, 0x84, 0xe1, 0x4c, 0x10, 0x88, 0x88, 0x8d, 0xdb, 0x9b, 0x5c,
  0x5b, 0x18, 0x1b, 0x55, 0x19, 0x1e, 0x5d, 0x9d, 0x5c, 0xd9, 0x86, 0x24,
  0x83, 0x34, 0x23, 0x1b, 0x08, 0xc3, 0x99, 0x20, 0x10, 0xd2, 0x04, 0x61,
  0x0d, 0xe4, 0x80, 0x92, 0x5c, 0x18, 0x59, 0x5a, 0x98, 0xdb, 0x58, 0x59,
  0x92, 0x10, 0x13, 0x55, 0x19, 0x1e, 0x5d, 0x9d, 0x5c, 0xd9, 0x04, 0x81,
  0x98, 0x36, 0x24, 0x5c, 0xe7, 0x19, 0xdf, 0xc0, 0x19, 0x0e, 0xa9, 0x34,
  0x39, 0xb9, 0x30, 0xb2, 0xb4, 0x30, 0xb7, 0xb1, 0xb2, 0x24, 0x21, 0x26,
  0xaa, 0x32, 0x3c, 0xba, 0x3a, 0xb9, 0xb2, 0x09, 0x02, 0x41, 0x6d, 0x48,
  0x92, 0x2e, 0x0c, 0x0c, 0x31, 0x18, 0x38, 0xc3, 0x99, 0x20, 0x10, 0xd5,
  0x04, 0xc1, 0x0d, 0xe6, 0x80, 0x07, 0x5d, 0x19, 0xde, 0xd4, 0x54, 0xd0,
  0xd3, 0x04, 0x81, 0xb0, 0x36, 0x24, 0x64, 0x50, 0x06, 0x66, 0x60, 0x9c,
  0xc1, 0x40, 0x18, 0xce, 0x06, 0xe4, 0x91, 0x2a, 0x6c, 0x03, 0x83, 0x31,
  0x40, 0x83, 0x09, 0x42, 0x1c, 0xd4, 0x01, 0xa3, 0xa6, 0x30, 0xba, 0x32,
  0xb9, 0xb4, 0x30, 0xb6, 0xa1, 0x37, 0xb7, 0x39, 0xba, 0x30, 0x37, 0xba,
  0xb9, 0x09, 0x02, 0x71, 0x6d, 0x40, 0x0c, 0x35, 0x58, 0x03, 0xc3, 0x18,
  0xd8, 0x00, 0x98, 0x20, 0xd0, 0xc1, 0x1d, 0xf0, 0x39, 0x62, 0x7b, 0x13,
  0x0b, 0x63, 0x1b, 0x7a, 0x73, 0x9b, 0xa3, 0x0b, 0x73, 0xa3, 0x9b, 0x9b,
  0x20, 0x10, 0xd8, 0x06, 0x64, 0x70, 0x83, 0x37, 0x30, 0x86, 0x01, 0x0e,
  0x80, 0x0d, 0x42, 0x1b, 0xc4, 0xc1, 0x04, 0xc1, 0x0e, 0xf0, 0x80, 0x0e,
  0x59, 0x99, 0x59, 0x58, 0x1d, 0x1b, 0xdd, 0x54, 0x58, 0x1b, 0x1c, 0x5b,
  0x99, 0xdc, 0x06, 0xc4, 0x98, 0x03, 0x3a, 0x30, 0xbe, 0xc1, 0x00, 0xe8,
  0x8c, 0xd5, 0x89, 0x95, 0x35, 0x85, 0xc1, 0x4d, 0x85, 0xb5, 0xc1, 0xb1,
  0x95, 0xc9, 0x6d, 0x40, 0x86, 0x39, 0xb0, 0x03, 0xe3, 0x0c, 0x06, 0x03,
  0x20, 0x24, 0x16, 0x36, 0x57, 0x36, 0xf4, 0xc6, 0xf6, 0x26, 0x37, 0x15,
  0xd6, 0x06, 0xc7, 0x56, 0x26, 0xb7, 0x01, 0x21, 0xe6, 0x00, 0x0f, 0x0c,
  0x63, 0x30, 0x00, 0x62, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x63,
  0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x61, 0x6d,
  0x70, 0x6c, 0x65, 0x72, 0x1b, 0x10, 0x6b, 0x0e, 0xf4, 0xc0, 0x18, 0x06,
  0x03, 0x20, 0xf4, 0x36, 0x36, 0xc6, 0x56, 0x37, 0x97, 0xf6, 0xe6, 0x36,
  0x15, 0xd6, 0x06, 0xc7, 0x56, 0x26, 0xb7, 0x01, 0xc9, 0xe6, 0x80, 0x0f,
  0x0c, 0x62, 0x30, 0x00, 0x3e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x76,
  0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x1b, 0x10, 0x6e, 0x0e,
  0xfc, 0xc0, 0xb0, 0x06, 0x03, 0x60, 0xe3, 0xf6, 0x26, 0xd7, 0x16, 0xc6,
  0x36, 0x15, 0xd6, 0x06, 0xc7, 0x56, 0x26, 0xb7, 0x01, 0x49, 0xe6, 0x00,
  0x14, 0x8c, 0x6c, 0x30, 0x80, 0x0d, 0x47, 0x1d, 0xdc, 0x41, 0x1e, 0xec,
  0x41, 0x1f, 0xfc, 0x41, 0x28, 0x6c, 0x20, 0xd2, 0x00, 0x90, 0x03, 0x51,
  0x98, 0x20, 0xc0, 0x01, 0x1d, 0xf0, 0x11, 0x0b, 0x9b, 0x2b, 0x1b, 0x7a,
  0x63, 0x7b, 0x93, 0x33, 0x0a, 0x1b, 0xa3, 0x7b, 0x93, 0x9b, 0x20, 0x68,
  0x6e, 0xb0, 0x01, 0x49, 0x4a, 0xc1, 0x32, 0xc8, 0xa0, 0x69, 0x4c, 0x81,
  0x4e, 0x59, 0x5b, 0xda, 0xdc, 0x5c, 0x9a, 0x5d, 0x99, 0x51, 0xd8, 0x18,
  0xdd, 0x9b, 0xdc, 0x04, 0x81, 0xc8, 0x36, 0x20, 0x09, 0x2a, 0x58, 0xa9,
  0x40, 0x06, 0x4d, 0x63, 0x0a, 0x94, 0xdc, 0xde, 0xe4, 0xda, 0xc2, 0xd8,
  0xa8, 0xca, 0xf0, 0xe8, 0xea, 0xe4, 0xca, 0xa6, 0xc6, 0xc2, 0xd8, 0xca,
  0x26, 0x08, 0x84, 0xb6, 0x01, 0x49, 0x56, 0xc1, 0x62, 0x05, 0x32, 0x68,
  0x1a, 0x53, 0xe0, 0xd5, 0x56, 0x46, 0x17, 0xc6, 0xc6, 0x96, 0x36, 0x26,
  0xf5, 0x56, 0x77, 0x86, 0xe6, 0x56, 0x36, 0x37, 0x67, 0x14, 0x36, 0x46,
  0xf7, 0x26, 0x37, 0x41, 0x20, 0xb6, 0x0d, 0x48, 0xe2, 0x0a, 0xd6, 0x2b,
  0x90, 0x41, 0xd3, 0x98, 0x02, 0x0b, 0x33, 0xb6, 0xb0, 0xb3, 0xb9, 0x09,
  0x02, 0xc1, 0x6d, 0x30, 0x92, 0x58, 0xb0, 0x64, 0x81, 0x0c, 0xb8, 0x0d,
  0x06, 0x1b, 0x9c, 0x82, 0x2a, 0xb4, 0x02, 0x2c, 0xcc, 0xc2, 0x04, 0x61,
  0x0e, 0xec, 0x80, 0x88, 0x55, 0x5a, 0xd9, 0x1d, 0x94, 0xdc, 0x9b, 0xda,
  0x86, 0x21, 0xcb, 0x88, 0x0d, 0x48, 0x62, 0x0b, 0xc4, 0x2d, 0x58, 0x06,
  0x19, 0x34, 0x7c, 0xa6, 0xea, 0xdc, 0xa6, 0xd0, 0xc2, 0xc8, 0xde, 0xee,
  0x9a, 0xc2, 0xe8, 0xe4, 0xd2, 0xf0, 0x26, 0x08, 0x44, 0xb7, 0x01, 0x49,
  0x72, 0x81, 0xb8, 0x05, 0x4b, 0x17, 0xc8, 0xa0, 0x61, 0x62, 0x95, 0x56,
  0x76, 0x57, 0x26, 0x07, 0xf5, 0x36, 0x37, 0x41, 0x20, 0xbc, 0x0d, 0x48,
  0xc2, 0x0b, 0x56, 0x2f, 0x90, 0x41, 0xd3, 0x98, 0x02, 0x99, 0xa9, 0x3a,
  0x37, 0xa2, 0x34, 0xb9, 0xb2, 0x31, 0xba, 0xb4, 0x37, 0xb7, 0x09, 0x02,
  0xf1, 0x6d, 0x30, 0x92, 0x5f, 0xb0, 0xc0, 0x81, 0x0c, 0x1a, 0x32, 0x53,
  0x75, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x13,
  0x04, 0x02, 0x0c, 0x36, 0x18, 0x89, 0x38, 0x58, 0xe3, 0x40, 0x06, 0x0d,
  0x89, 0x2f, 0xb8, 0x30, 0xb2, 0x09, 0x02, 0x11, 0x06, 0x1b, 0x8c, 0xa4,
  0x1c, 0x2c, 0x73, 0x20, 0x83, 0x86, 0x48, 0x92, 0x10, 0x93, 0x54, 0x98,
  0xdb, 0x59, 0xd9, 0x04, 0x81, 0x10, 0x83, 0x0d, 0x48, 0x82, 0x0e, 0x56,
  0x3a, 0x90, 0x41, 0xd3, 0x98, 0x02, 0x8f, 0x24, 0x21, 0x26, 0xa1, 0xb4,
  0xb0, 0xb9, 0x09, 0x02, 0x31, 0x06, 0x1b, 0x90, 0x64, 0x1d, 0x2c, 0x76,
  0x20, 0x83, 0xa6, 0x31, 0x85, 0x0d, 0x09, 0x1c, 0xe0, 0xc2, 0x2e, 0xf8,
  0x42, 0x38, 0x90, 0xc3, 0x39, 0xa8, 0x43, 0x3b, 0x6c, 0x28, 0x0c, 0x52,
  0xa0, 0x85, 0x5a, 0x70, 0x87, 0x09, 0x82, 0x00, 0x6c, 0x00, 0x36, 0x0c,
  0x46, 0x3c, 0xc4, 0xc3, 0x86, 0x40, 0x1e, 0x36, 0x0c, 0x03, 0x3c, 0xcc,
  0xc3, 0x04, 0xe1, 0x0e, 0xf2, 0x60, 0x43, 0x50, 0x0f, 0x24, 0xda, 0xc2,
  0xd2, 0xdc, 0xb8, 0x4c, 0x59, 0x7d, 0x41, 0xbd, 0xcd, 0xa5, 0xd1, 0xa5,
  0xbd, 0xb9, 0x4d, 0x10, 0x0a, 0x34, 0x98, 0x20, 0x14, 0x69, 0xb0, 0x21,
  0x30, 0x26, 0x08, 0x85, 0x1a, 0x4c, 0x10, 0x8a, 0x35, 0xd8, 0x20, 0x58,
  0xd6, 0x86, 0xc5, 0xc0, 0x87, 0x7c, 0xd0, 0x87, 0x7d, 0xe0, 0x87, 0x81,
  0x1f, 0x8c, 0x7e, 0xf0, 0x07, 0x1a, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c,
  0x13, 0x84, 0x82, 0x0d, 0x36, 0x08, 0x16, 0x19, 0x6c, 0x58, 0x06, 0x90,
  0xc8, 0x87, 0x7e, 0xd8, 0x87, 0x90, 0x18, 0xf4, 0x61, 0xe8, 0x07, 0x91,
  0xe0, 0x41, 0x15, 0xe4, 0x74, 0x54, 0xe4, 0x44, 0x35, 0x41, 0x20, 0xc8,
  0x60, 0x83, 0x60, 0x95, 0xc4, 0x86, 0x85, 0x20, 0x89, 0x7c, 0xe8, 0x87,
  0x7d, 0x08, 0x89, 0x81, 0x1f, 0x88, 0x7e, 0x30, 0x09, 0x22, 0x54, 0x45,
  0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x1b, 0x16, 0x0b, 0x25, 0xf2, 0xa1,
  0x1f, 0xf6, 0x21, 0x24, 0x86, 0x90, 0xb0, 0xfa, 0xc1, 0x1f, 0x36, 0x04,
  0xc4, 0x86, 0x25, 0x43, 0x89, 0x7c, 0xe8, 0x07, 0x95, 0x08, 0x89, 0x41,
  0x1f, 0xb2, 0x7e, 0x10, 0x89, 0x0d, 0x81, 0xb5, 0x61, 0xe1, 0x50, 0x22,
  0x1f, 0xfa, 0x81, 0x25, 0x42, 0x62, 0xd0, 0x07, 0xae, 0x1f, 0x80, 0x0d,
  0xc6, 0x3f, 0x8c, 0xc4, 0x49, 0xa4, 0xc4, 0x4a, 0xb4, 0x04, 0x93, 0x29,
  0xab, 0x2f, 0xaa, 0x30, 0xb9, 0xb3, 0x32, 0xba, 0x09, 0x42, 0xd1, 0x06,
  0x1b, 0x16, 0xe3, 0x25, 0xf2, 0x01, 0x26, 0xf6, 0xa1, 0x1f, 0x06, 0x7e,
  0x30, 0xfa, 0xc1, 0x24, 0x36, 0x04, 0x31, 0xb1, 0x61, 0x70, 0x09, 0x99,
  0x00, 0x36, 0x14, 0xf0, 0x70, 0x0f, 0x33, 0x31, 0x0a, 0x00, 0x0d, 0x33,
  0xb6, 0xb7, 0x30, 0xba, 0xb9, 0x09, 0x02, 0x51, 0x06, 0x2c, 0xd2, 0xdc,
  0xe6, 0xe8, 0xe6, 0x26, 0x08, 0x84, 0x19, 0xd0, 0x98, 0x4b, 0x3b, 0xfb,
  0x62, 0x23, 0x9b, 0x20, 0x10, 0x67, 0x40, 0x63, 0x2e, 0xed, 0xec, 0x6b,
  0x8e, 0x8e, 0x08, 0x5d, 0x19, 0xde, 0x17, 0xdb, 0x5b, 0x18, 0x19, 0x11,
  0xba, 0x32, 0xbc, 0x2f, 0xb7, 0x37, 0xb9, 0xb6, 0x0d, 0x4c, 0x4d, 0xd8,
  0xc4, 0x4d, 0xe0, 0x44, 0x4e, 0xe8, 0xc4, 0x4e, 0x64, 0x3c, 0x31, 0xf4,
  0x04, 0x19, 0x54, 0x61, 0x63, 0xb3, 0x6b, 0x73, 0x49, 0x23, 0x2b, 0x73,
  0xa3, 0x9b, 0x12, 0x04, 0x55, 0xc8, 0xf0, 0x5c, 0xec, 0xca, 0xe4, 0xe6,
  0xd2, 0xde, 0xdc, 0xa6, 0x04, 0x44, 0x13, 0x32, 0x3c, 0x17, 0xbb, 0x30,
  0x36, 0xbb, 0x32, 0xb9, 0x29, 0x81, 0x51, 0x87, 0x0c, 0xcf, 0x65, 0x0e,
  0x2d, 0x8c, 0xac, 0x4c, 0xae, 0xe9, 0x8d, 0xac, 0x8c, 0x6d, 0x4a, 0x90,
  0x94, 0x21, 0xc3, 0x73, 0x91, 0x2b, 0x9b, 0x7b, 0xab, 0x93, 0x1b, 0x2b,
  0x9b, 0x9b, 0x12, 0x88, 0x42, 0x25, 0x32, 0x3c, 0x17, 0xba, 0x3c, 0xb8,
  0xb2, 0x20, 0x37, 0xb7, 0x37, 0xba, 0x30, 0xba, 0xb4, 0x37, 0xb7, 0xb9,
  0x29, 0x82, 0x3b, 0xcc, 0x43, 0x1d, 0x32, 0x3c, 0x17, 0xbb, 0xb4, 0xb2,
  0xbb, 0x24, 0xb2, 0x29, 0xba, 0x30, 0xba, 0xb2, 0x29, 0x41, 0x3d, 0xd4,
  0x21, 0xc3, 0x73, 0x29, 0x73, 0xa3, 0x93, 0xcb, 0x83, 0x7a, 0x4b, 0x73,
  0xa3, 0x9b, 0x9b, 0x12, 0xcc, 0x44, 0x17, 0x32, 0x3c, 0x97, 0xb1, 0xb7,
  0x3a, 0x37, 0xba, 0x32, 0xb9, 0xb9, 0x29, 0x41, 0x4f, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x96, 0xb0, 0x0d, 0x97,
  0xef, 0x3c, 0xbe, 0x10, 0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25,
  0x61, 0x00, 0x02, 0xe6, 0x17, 0xb7, 0x6d, 0x0a, 0xd2, 0x70, 0xf9, 0xce,
  0xe3, 0x0b, 0x11, 0x01, 0x4c, 0x44, 0x08, 0x34, 0xc3, 0x42, 0x18, 0x81,
  0x33, 0x5c, 0xbe, 0xf3, 0xf8, 0x83, 0x33, 0xdd, 0x7e, 0x71, 0xdb, 0x16,
  0x30, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0xe2, 0x00, 0x83, 0xd8, 0x3c, 0xd4,
  0xe4, 0x17, 0xb7, 0x6d, 0x03, 0xd0, 0x70, 0xf9, 0xce, 0xe3, 0x4b, 0x00,
  0xf3, 0x2c, 0x84, 0x5f, 0xdc, 0xb6, 0x21, 0x54, 0xc3, 0xe5, 0x3b, 0x8f,
  0x2f, 0x01, 0xcc, 0xb3, 0x10, 0x25, 0x51, 0x11, 0x8b, 0x5f, 0xdc, 0xb6,
  0x09, 0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x4d, 0x4e, 0x44, 0xa0, 0xd4,
  0xf4, 0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x1d, 0x48, 0xc3, 0xe5, 0x3b, 0x8f,
  0x3f, 0x11, 0xd1, 0x84, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x06, 0xd5,
  0x70, 0xf9, 0xce, 0xe3, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0x51, 0x3a, 0xc0,
  0xe0, 0x17, 0xb7, 0x6d, 0x05, 0xcf, 0x70, 0xf9, 0xce, 0xe3, 0x53, 0x0d,
  0x10, 0x61, 0x7e, 0x71, 0xdb, 0x06, 0x40, 0x30, 0x00, 0xd2, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x8c, 0x0d, 0x3f, 0x3a, 0xba, 0x59, 0x37, 0xa1,
  0x8e, 0x49, 0x2d, 0xd9, 0x4d, 0x58, 0x42, 0x66, 0x44, 0x58, 0x49, 0x4c,
  0x54, 0x11, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x02, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x3c, 0x11, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x4c, 0x04, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0xca, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xe0, 0xc1, 0x08,
  0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00,
  0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88,
  0x62, 0x20, 0xe4, 0xa6, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x7f, 0x25,
  0xa4, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x51, 0x31, 0x0c, 0xc3, 0x40, 0x50,
  0x71, 0xcf, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0x1f, 0x02, 0xcd, 0xb0,
  0x10, 0x28, 0x58, 0x0a, 0xa3, 0x10, 0x0c, 0x33, 0x0c, 0xc3, 0x40, 0x10,
  0xc4, 0x40, 0x4d, 0x41, 0x06, 0x62, 0x18, 0x86, 0x61, 0x18, 0xe8, 0x29,
  0xc3, 0x40, 0x0c, 0x14, 0x15, 0x45, 0x21, 0x18, 0x82, 0x20, 0x08, 0x82,
  0x20, 0x68, 0x2a, 0xc5, 0x40, 0x0c, 0xc3, 0x40, 0xd5, 0x51, 0xc3, 0xe5,
  0x4f, 0xd8, 0x43, 0x48, 0x3e, 0xb7, 0x51, 0xc5, 0x4a, 0x4c, 0x7e, 0x71,
  0xdb, 0x88, 0x18, 0x86, 0x61, 0x28, 0xc4, 0x45, 0x30, 0x04, 0x61, 0x73,
  0x04, 0x41, 0x31, 0x18, 0xa2, 0x20, 0x08, 0x8d, 0xb6, 0x81, 0x80, 0x61,
  0x04, 0x62, 0x98, 0xa9, 0x0d, 0xc6, 0x81, 0x1d, 0xc2, 0x61, 0x1e, 0xe6,
  0xc1, 0x0d, 0x68, 0xa1, 0x1c, 0xf0, 0x81, 0x1e, 0xea, 0x41, 0x1e, 0xca,
  0x41, 0x0e, 0x48, 0x81, 0x0f, 0xec, 0xa1, 0x1c, 0xc6, 0x81, 0x1e, 0xde,
  0x41, 0x1e, 0xf8, 0xc0, 0x1c, 0xd8, 0xe1, 0x1d, 0xc2, 0x81, 0x1e, 0xd8,
  0x00, 0x0c, 0xe8, 0xc0, 0x0f, 0xc0, 0xc0, 0x0f, 0xf4, 0x40, 0x0f, 0xda,
  0x21, 0x1d, 0xe0, 0x61, 0x1e, 0x7e, 0x81, 0x1e, 0xf2, 0x01, 0x1e, 0xca,
  0x01, 0x05, 0xc4, 0x4c, 0x62, 0x30, 0x0e, 0xec, 0x10, 0x0e, 0xf3, 0x30,
  0x0f, 0x6e, 0x40, 0x0b, 0xe5, 0x80, 0x0f, 0xf4, 0x50, 0x0f, 0xf2, 0x50,
  0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x60, 0x0f, 0xe5, 0x30, 0x0e, 0xf4, 0xf0,
  0x0e, 0xf2, 0xc0, 0x07, 0xe6, 0xc0, 0x0e, 0xef, 0x10, 0x0e, 0xf4, 0xc0,
  0x06, 0x60, 0x40, 0x07, 0x7e, 0x00, 0x06, 0x7e, 0x80, 0x04, 0xef, 0x23,
  0x70, 0x18, 0x61, 0x18, 0x66, 0x6a, 0x83, 0x71, 0x60, 0x87, 0x70, 0x98,
  0x87, 0x79, 0x70, 0x03, 0x5a, 0x28, 0x07, 0x7c, 0xa0, 0x87, 0x7a, 0x90,
  0x87, 0x72, 0x90, 0x03, 0x52, 0xe0, 0x03, 0x7b, 0x28, 0x87, 0x71, 0xa0,
  0x87, 0x77, 0x90, 0x07, 0x3e, 0x30, 0x07, 0x76, 0x78, 0x87, 0x70, 0xa0,
  0x07, 0x36, 0x00, 0x83, 0x39, 0xf0, 0x03, 0x30, 0xf0, 0x03, 0x3d, 0xd0,
  0x83, 0x76, 0x48, 0x07, 0x78, 0x98, 0x87, 0x5f, 0xa0, 0x87, 0x7c, 0x80,
  0x87, 0x72, 0x40, 0x01, 0x31, 0x93, 0x18, 0x8c, 0x03, 0x3b, 0x84, 0xc3,
  0x3c, 0xcc, 0x83, 0x1b, 0xd0, 0x42, 0x39, 0xe0, 0x03, 0x3d, 0xd4, 0x83,
  0x3c, 0x94, 0x83, 0x1c, 0x90, 0x02, 0x1f, 0xd8, 0x43, 0x39, 0x8c, 0x03,
  0x3d, 0xbc, 0x83, 0x3c, 0xf0, 0x81, 0x39, 0xb0, 0xc3, 0x3b, 0x84, 0x03,
  0x3d, 0xb0, 0x01, 0x18, 0xcc, 0x81, 0x1f, 0x80, 0x81, 0x1f, 0x20, 0x41,
  0x1c, 0x89, 0x1c, 0x46, 0x08, 0x86, 0x99, 0xda, 0x60, 0x1c, 0xd8, 0x21,
  0x1c, 0xe6, 0x61, 0x1e, 0xdc, 0x80, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1,
  0x1e, 0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8, 0xc0, 0x1e, 0xca, 0x61,
  0x1c, 0xe8, 0xe1, 0x1d, 0xe4, 0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21,
  0x1c, 0xe8, 0x81, 0x0d, 0xc0, 0x20, 0x0e, 0xfc, 0x00, 0x0c, 0xfc, 0x40,
  0x0f, 0xf4, 0xa0, 0x1d, 0xd2, 0x01, 0x1e, 0xe6, 0xe1, 0x17, 0xe8, 0x21,
  0x1f, 0xe0, 0xa1, 0x1c, 0x50, 0x40, 0xcc, 0x24, 0x06, 0xe3, 0xc0, 0x0e,
  0xe1, 0x30, 0x0f, 0xf3, 0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f,
  0xf5, 0x20, 0x0f, 0xe5, 0x20, 0x07, 0xa4, 0xc0, 0x07, 0xf6, 0x50, 0x0e,
  0xe3, 0x40, 0x0f, 0xef, 0x20, 0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e,
  0xe1, 0x40, 0x0f, 0x6c, 0x00, 0x06, 0x71, 0xe0, 0x07, 0x60, 0xe0, 0x07,
  0x48, 0x30, 0x4f, 0x42, 0x67, 0x22, 0x83, 0x71, 0x60, 0x87, 0x70, 0x98,
  0x87, 0x79, 0x70, 0x03, 0x5a, 0x28, 0x07, 0x7c, 0xa0, 0x87, 0x7a, 0x90,
  0x87, 0x72, 0x18, 0x85, 0x7a, 0x10, 0x87, 0x72, 0xe0, 0x03, 0x7b, 0x28,
  0x87, 0x71, 0xa0, 0x87, 0x77, 0x90, 0x07, 0x3e, 0x30, 0x07, 0x76, 0x78,
  0x87, 0x70, 0xa0, 0x07, 0x36, 0x00, 0x83, 0x39, 0xf0, 0x03, 0x30, 0xf0,
  0x03, 0x14, 0x88, 0xa4, 0xce, 0x14, 0x06, 0xe3, 0xc0, 0x0e, 0xe1, 0x30,
  0x0f, 0xf3, 0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f, 0xf5, 0x20,
  0x0f, 0xe5, 0x20, 0x07, 0xa4, 0xc0, 0x07, 0xe6, 0xc0, 0x0e, 0xef, 0x10,
  0x0e, 0xf4, 0xe0, 0x07, 0x7a, 0xa0, 0x07, 0xed, 0x90, 0x0e, 0xf0, 0x30,
  0x0f, 0xbf, 0x40, 0x0f, 0xf9, 0x00, 0x0f, 0xe5, 0x80, 0x02, 0x62, 0x26,
  0x6b, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e, 0xdc, 0x80, 0x16, 0xca,
  0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8,
  0xc0, 0x1c, 0xd8, 0xe1, 0x1d, 0xc2, 0x81, 0x1e, 0xfc, 0x00, 0x09, 0x03,
  0x4b, 0xed, 0x30, 0x82, 0x30, 0x5c, 0x64, 0x02, 0x13, 0x11, 0x21, 0xc0,
  0xc2, 0x39, 0x8d, 0x34, 0x01, 0xcd, 0x24, 0xa1, 0xc2, 0x13, 0x87, 0x97,
  0x20, 0x38, 0x09, 0xbc, 0xd3, 0x0e, 0x47, 0x9a, 0x16, 0x00, 0x73, 0xa8,
  0xc9, 0x07, 0x17, 0x27, 0x00, 0x16, 0xce, 0x69, 0xa4, 0x09, 0x68, 0x26,
  0x09, 0x21, 0xb2, 0x2c, 0x8a, 0xe2, 0x30, 0x0c, 0x34, 0xdf, 0x24, 0x4d,
  0x11, 0x25, 0x4c, 0x3e, 0x0b, 0x30, 0xcf, 0x42, 0x44, 0xec, 0x04, 0x4c,
  0x04, 0x0a, 0x08, 0xaa, 0x33, 0x83, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x43, 0x9e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x86, 0x3c, 0x06, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x10, 0x20, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x34, 0x40, 0x00, 0x0c, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x79, 0x80, 0x00, 0x08,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x13, 0x01, 0x01,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x67, 0x02,
  0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f,
  0x05, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43,
  0x9e, 0x06, 0x08, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x86, 0x3c, 0x18, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x0c, 0x79, 0x36, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc8, 0x02, 0x01, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x22, 0x4a, 0xa0, 0x08, 0x8a, 0x61, 0x04, 0xa0, 0x24,
  0xca, 0xa0, 0x10, 0x4a, 0xa1, 0x28, 0xca, 0xa2, 0x1c, 0x0a, 0xa3, 0xb0,
  0x0a, 0x5e, 0xa0, 0x3c, 0xa8, 0x28, 0x89, 0x32, 0x28, 0x84, 0x11, 0x80,
  0x22, 0x28, 0x10, 0x0a, 0x67, 0x00, 0xa8, 0x9c, 0x01, 0xa0, 0x74, 0x06,
  0x80, 0xd6, 0x19, 0x00, 0x72, 0x67, 0x00, 0x28, 0x9e, 0x01, 0x20, 0x7a,
  0x06, 0x80, 0xec, 0x19, 0x00, 0xba, 0xc7, 0xca, 0x2e, 0xe2, 0x38, 0x00,
  0xe0, 0x38, 0x0e, 0xe0, 0x38, 0x8e, 0xe3, 0x79, 0x00, 0xe0, 0x38, 0x0e,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0xaf, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b,
  0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99,
  0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62,
  0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73,
  0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x04, 0x62, 0x99, 0x20, 0x10,
  0xcc, 0x06, 0x61, 0x20, 0x26, 0x08, 0x44, 0xb3, 0x41, 0x18, 0x0c, 0x0a,
  0x70, 0x73, 0x1b, 0x06, 0xc4, 0x20, 0x26, 0x08, 0x84, 0x33, 0x41, 0x08,
  0x03, 0x30, 0x20, 0x30, 0x41, 0x20, 0x9e, 0x0d, 0x82, 0xd2, 0x6c, 0x48,
  0x94, 0x85, 0x51, 0x94, 0x81, 0x50, 0x9c, 0x09, 0x42, 0x19, 0x84, 0xc1,
  0x86, 0x64, 0x80, 0x18, 0x65, 0x18, 0x08, 0xc5, 0x99, 0x20, 0xa4, 0x81,
  0x18, 0x6c, 0x48, 0x08, 0x89, 0x51, 0x88, 0x81, 0x50, 0x9c, 0x09, 0x02,
  0x01, 0x6d, 0x48, 0x28, 0x88, 0x51, 0xa8, 0x81, 0x50, 0x9c, 0x09, 0x02,
  0x11, 0x6d, 0x48, 0x2c, 0x88, 0x51, 0xac, 0x81, 0x50, 0x9c, 0x09, 0x02,
  0x21, 0x4d, 0x10, 0xd6, 0x60, 0x0c, 0x26, 0x08, 0xc4, 0xb4, 0x21, 0xc1,
  0x32, 0x46, 0xd1, 0x06, 0x4c, 0x71, 0x26, 0x08, 0x04, 0xb5, 0x21, 0x31,
  0x32, 0x46, 0xe1, 0x06, 0x4c, 0x71, 0x26, 0x08, 0x44, 0x35, 0x41, 0x70,
  0x03, 0x32, 0x98, 0x20, 0x10, 0xd6, 0x86, 0xc4, 0xfb, 0x18, 0x05, 0x0c,
  0x06, 0x42, 0x71, 0x36, 0x20, 0x4f, 0x34, 0x55, 0xd7, 0xd6, 0x85, 0xc1,
  0x04, 0x21, 0x0e, 0xca, 0x60, 0x82, 0x40, 0x5c, 0x1b, 0x10, 0x65, 0x0c,
  0x18, 0x45, 0x19, 0xc8, 0x00, 0x98, 0x20, 0xd0, 0x81, 0x19, 0x4c, 0x10,
  0x08, 0x6c, 0x03, 0x32, 0x98, 0x01, 0xa3, 0x0c, 0xc3, 0x19, 0x00, 0x1b,
  0x84, 0x32, 0x40, 0x83, 0x09, 0x82, 0x1d, 0x9c, 0xc1, 0x06, 0x44, 0x51,
  0x03, 0x46, 0xd1, 0x06, 0x05, 0xd8, 0x80, 0x0c, 0x6a, 0xc0, 0x28, 0x60,
  0x30, 0x28, 0xc0, 0x06, 0x84, 0x50, 0x03, 0x46, 0x51, 0x06, 0x05, 0xd8,
  0x80, 0x50, 0x6a, 0xc0, 0x28, 0xc3, 0xa0, 0x00, 0x1b, 0x10, 0x4b, 0x0d,
  0x18, 0x85, 0x18, 0x14, 0x60, 0x03, 0x82, 0xa9, 0x01, 0xa3, 0x50, 0x83,
  0x02, 0x6c, 0x40, 0x0c, 0x35, 0x60, 0x14, 0x6b, 0x50, 0x80, 0x0d, 0xc7,
  0x1a, 0xb0, 0x41, 0x1b, 0xb8, 0xc1, 0x1b, 0xc0, 0x41, 0x1c, 0x6c, 0x20,
  0xc4, 0x00, 0x48, 0x03, 0x39, 0x98, 0x20, 0xdc, 0x01, 0x1a, 0x6c, 0x08,
  0xe8, 0x60, 0x82, 0x20, 0x00, 0x24, 0xda, 0xc2, 0xd2, 0xdc, 0xb8, 0x4c,
  0x59, 0x7d, 0x41, 0xbd, 0xcd, 0xa5, 0xd1, 0xa5, 0xbd, 0xb9, 0x4d, 0x10,
  0x0a, 0x6d, 0x82, 0x50, 0x6c, 0x1b, 0x02, 0x65, 0x82, 0x50, 0x70, 0x13,
  0x84, 0xa2, 0xdb, 0x20, 0x50, 0xd4, 0x86, 0x45, 0xc1, 0x83, 0x3c, 0xd0,
  0x83, 0x3d, 0xe0, 0x83, 0x81, 0x0f, 0x94, 0x3e, 0xf0, 0x03, 0x1a, 0x4e,
  0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x13, 0x84, 0xc2, 0xdb, 0x20, 0x50, 0xde,
  0x86, 0x65, 0x00, 0x85, 0x3c, 0xe8, 0x83, 0x3d, 0x08, 0x85, 0x41, 0x0f,
  0x86, 0x3e, 0x10, 0x05, 0x1e, 0x54, 0x41, 0x4e, 0x47, 0x45, 0x4e, 0x54,
  0x13, 0x04, 0x22, 0xdb, 0x20, 0x50, 0xa5, 0xb0, 0x61, 0x21, 0x48, 0x21,
  0x0f, 0xfa, 0x60, 0x0f, 0x42, 0x61, 0xe0, 0x03, 0xa2, 0x0f, 0x4c, 0x81,
  0x08, 0x55, 0x11, 0xd6, 0xd0, 0xd3, 0x93, 0x14, 0xd1, 0x86, 0x85, 0x42,
  0x85, 0x3c, 0xe8, 0x83, 0x3d, 0x08, 0x85, 0x21, 0x14, 0xa8, 0x3e, 0xf0,
  0x83, 0x0d, 0x01, 0xb1, 0x61, 0xb1, 0x50, 0x21, 0x0f, 0xfa, 0x40, 0x15,
  0x42, 0x61, 0xd0, 0x03, 0xab, 0x0f, 0x44, 0x61, 0x43, 0x40, 0x6d, 0x58,
  0x30, 0x54, 0xc8, 0x83, 0x3e, 0x60, 0x85, 0x50, 0x18, 0xf4, 0x00, 0xeb,
  0x03, 0x60, 0x83, 0xf1, 0x07, 0xa3, 0x70, 0x0a, 0xa9, 0xb0, 0x0a, 0xad,
  0xc0, 0x64, 0xca, 0xea, 0x8b, 0x2a, 0x4c, 0xee, 0xac, 0x8c, 0x6e, 0x82,
  0x50, 0x7c, 0x1b, 0x16, 0xe5, 0x15, 0xf2, 0x00, 0x16, 0xf6, 0xa0, 0x0f,
  0x06, 0x3e, 0x50, 0xfa, 0xc0, 0x14, 0x36, 0x04, 0xb1, 0xb0, 0x61, 0x70,
  0x05, 0x59, 0x00, 0x36, 0x14, 0x76, 0x70, 0x07, 0xb3, 0x30, 0x07, 0x40,
  0x15, 0x36, 0x36, 0xbb, 0x36, 0x97, 0x34, 0xb2, 0x32, 0x37, 0xba, 0x29,
  0x41, 0x50, 0x85, 0x0c, 0xcf, 0xc5, 0xae, 0x4c, 0x6e, 0x2e, 0xed, 0xcd,
  0x6d, 0x4a, 0x40, 0x34, 0x21, 0xc3, 0x73, 0xb1, 0x0b, 0x63, 0xb3, 0x2b,
  0x93, 0x9b, 0x12, 0x18, 0x75, 0xc8, 0xf0, 0x5c, 0xe6, 0xd0, 0xc2, 0xc8,
  0xca, 0xe4, 0x9a, 0xde, 0xc8, 0xca, 0xd8, 0xa6, 0x04, 0x48, 0x19, 0x32,
  0x3c, 0x17, 0xb9, 0xb2, 0xb9, 0xb7, 0x3a, 0xb9, 0xb1, 0xb2, 0xb9, 0x29,
  0x81, 0x1c, 0xd4, 0x21, 0xc3, 0x73, 0xb1, 0x4b, 0x2b, 0xbb, 0x4b, 0x22,
  0x9b, 0xa2, 0x0b, 0xa3, 0x2b, 0x9b, 0x12, 0xd0, 0x41, 0x1d, 0x32, 0x3c,
  0x97, 0x32, 0x37, 0x3a, 0xb9, 0x3c, 0xa8, 0xb7, 0x34, 0x37, 0xba, 0xb9,
  0x29, 0xc1, 0x2c, 0x00, 0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06,
  0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f,
  0xf4, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00,
  0x96, 0xb0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x50, 0x45, 0x41, 0x44,
  0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02, 0xe6, 0x17, 0xb7, 0x6d, 0x0a,
  0xd2, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11, 0x01, 0x4c, 0x44, 0x08, 0x34,
  0xc3, 0x42, 0x18, 0x81, 0x33, 0x5c, 0xbe, 0xf3, 0xf8, 0x83, 0x33, 0xdd,
  0x7e, 0x71, 0xdb, 0x16, 0x30, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0xe2, 0x00,
  0x83, 0xd8, 0x3c, 0xd4, 0xe4, 0x17, 0xb7, 0x6d, 0x03, 0xd0, 0x70, 0xf9,
  0xce, 0xe3, 0x4b, 0x00, 0xf3, 0x2c, 0x84, 0x5f, 0xdc, 0xb6, 0x21, 0x54,
  0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x01, 0xcc, 0xb3, 0x10, 0x25, 0x51, 0x11,
  0x8b, 0x5f, 0xdc, 0xb6, 0x09, 0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x4d,
  0x4e, 0x44, 0xa0, 0xd4, 0xf4, 0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x1d, 0x48,
  0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x11, 0xd1, 0x84, 0x00, 0x11, 0xe6, 0x17,
  0xb7, 0x6d, 0x06, 0xd5, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0xc4, 0x35, 0x51,
  0x11, 0x51, 0x3a, 0xc0, 0xe0, 0x17, 0xb7, 0x6d, 0x05, 0xcf, 0x70, 0xf9,
  0xce, 0xe3, 0x53, 0x0d, 0x10, 0x61, 0x7e, 0x71, 0xdb, 0x06, 0x40, 0x30,
  0x00, 0xd2, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0xca, 0x01, 0x00, 0x00,
  0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00,
  0xa4, 0x8d, 0x00, 0x50, 0x51, 0x02, 0x44, 0x14, 0x5f, 0x11, 0x06, 0x14,
  0x44, 0xd9, 0x15, 0x57, 0xc9, 0x14, 0xde, 0x0c, 0x40, 0xc9, 0x95, 0x1b,
  0x0d, 0x63, 0x04, 0x20, 0x08, 0x82, 0xf0, 0x2f, 0x8c, 0x11, 0x80, 0x20,
  0x08, 0x82, 0xa0, 0x30, 0x46, 0xa0, 0xe2, 0xf5, 0x29, 0x7b, 0x63, 0x04,
  0x2a, 0x5e, 0x9f, 0xb2, 0x2f, 0x8c, 0x11, 0xbc, 0x34, 0xbc, 0xde, 0xdf,
  0x18, 0x01, 0x08, 0x82, 0x20, 0xfe, 0x0b, 0x63, 0x04, 0x20, 0x08, 0x82,
  0x20, 0x18, 0x8c, 0x11, 0x80, 0x20, 0x08, 0xe2, 0xdf, 0x0c, 0x00, 0x00,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xb0, 0xd1, 0xc1, 0x12, 0x06, 0x69,
  0x80, 0x06, 0xd5, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x6c, 0x75, 0xc0,
  0x88, 0x81, 0x1c, 0xac, 0x81, 0x35, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06,
  0x9b, 0x1d, 0x34, 0x63, 0xe0, 0x06, 0x6d, 0x70, 0x8d, 0x18, 0x24, 0x00,
  0x08, 0x82, 0xc1, 0x76, 0x07, 0x0e, 0x19, 0xc0, 0x01, 0x1c, 0x60, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0xb0, 0xe1, 0xc1, 0x53, 0x06, 0x72, 0x20,
  0x07, 0xd9, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x6c, 0x79, 0x00, 0x99,
  0xc1, 0x1d, 0xdc, 0x81, 0x36, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x9b,
  0x1e, 0x44, 0x67, 0x90, 0x07, 0x79, 0xb0, 0x8d, 0x18, 0x24, 0x00, 0x08,
  0x82, 0xc1, 0xb6, 0x07, 0x12, 0x1a, 0xdc, 0xc1, 0x1d, 0x70, 0x23, 0x06,
  0x09, 0x00, 0x82, 0x60, 0xb0, 0xf1, 0xc1, 0xb4, 0x06, 0x79, 0x50, 0x07,
  0xdd, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x6c, 0x7d, 0x40, 0xb1, 0x41,
  0x1d, 0xdc, 0x81, 0x37, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x9b, 0x1f,
  0x54, 0x6d, 0x70, 0x07, 0x7c, 0xf0, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82,
  0xc1, 0xf6, 0x07, 0x96, 0x1b, 0xe4, 0x81, 0x1f, 0x80, 0xc1, 0x88, 0x41,
  0x02, 0x80, 0x20, 0x18, 0x6c, 0xa0, 0x70, 0xbd, 0x81, 0x1f, 0xf0, 0x41,
  0x18, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0xc1, 0x16, 0x0a, 0x18, 0x1c,
  0x80, 0x42, 0x1d, 0x88, 0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x6c,
  0xa2, 0x90, 0xc5, 0x81, 0x1f, 0xe4, 0xc1, 0x18, 0x8c, 0x18, 0x24, 0x00,
  0x08, 0x82, 0xc1, 0x36, 0x0a, 0xda, 0x1b, 0x88, 0x82, 0x28, 0x90, 0xc1,
  0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x6c, 0xa4, 0xb0, 0xc1, 0x01, 0x28,
  0x80, 0x42, 0x19, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xe1, 0x0a,
  0x7e, 0xe0, 0x07, 0xa1, 0x20, 0x07, 0xdd, 0x88, 0x41, 0x02, 0x80, 0x20,
  0x18, 0x18, 0xaf, 0xf0, 0x07, 0x7f, 0x20, 0x0a, 0x66, 0xe0, 0x8d, 0x18,
  0x24, 0x00, 0x08, 0x82, 0x81, 0x01, 0x0b, 0xa0, 0x00, 0x0a, 0xa3, 0x30,
  0x07, 0xdf, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xb1, 0x10, 0x0a,
  0xa2, 0x40, 0x0a, 0x75, 0x00, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60,
  0x60, 0xc8, 0x82, 0x28, 0x8c, 0x42, 0x29, 0xa4, 0x41, 0x18, 0x8c, 0x18,
  0x24, 0x00, 0x08, 0x82, 0x81, 0x31, 0x0b, 0xa3, 0x80, 0x0a, 0xa6, 0x70,
  0x07, 0x62, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x06, 0x2d, 0x90,
  0x42, 0x2a, 0x9c, 0xc2, 0x1a, 0x8c, 0xc1, 0x88, 0x41, 0x02, 0x80, 0x20,
  0x18, 0x18, 0xb5, 0x50, 0x0a, 0xaa, 0x80, 0x0a, 0x78, 0x40, 0x06, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xd8, 0x82, 0x29, 0xac, 0x42, 0x2a,
  0xf0, 0x41, 0x19, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x71, 0x0b,
  0xa7, 0xd0, 0x0a, 0xaa, 0xb0, 0x07, 0x66, 0x30, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0x06, 0x2e, 0xa0, 0x82, 0x2b, 0xac, 0xc2, 0x1b, 0x9c, 0xc1,
  0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xb9, 0x90, 0x0a, 0xaf, 0xc0,
  0x0a, 0x7c, 0x80, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xe8,
  0x82, 0x2a, 0xb4, 0x42, 0x2b, 0xf8, 0x41, 0x1a, 0x8c, 0x18, 0x24, 0x00,
  0x08, 0x82, 0x81, 0xb1, 0x0b, 0xab, 0xe0, 0x0a, 0xae, 0x20, 0x07, 0x6a,
  0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x18, 0x2d, 0xbc, 0xc1, 0xf3,
  0x0a, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30,
  0x9a, 0x40, 0x0c, 0x23, 0x06, 0x0f, 0x00, 0x82, 0x60, 0xd0, 0xfc, 0x42,
  0x1c, 0x74, 0x18, 0xf4, 0x94, 0x41, 0x19, 0xd0, 0x02, 0x2d, 0xc0, 0x41,
  0x19, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2,
  0x68, 0x02, 0x31, 0x18, 0x91, 0xc8, 0xc7, 0x88, 0x44, 0x3e, 0x46, 0x24,
  0xf2, 0x31, 0x22, 0x91, 0xcf, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x60,
  0xe2, 0xd0, 0x07, 0xdd, 0x2f, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10,
  0x8c, 0x18, 0x3c, 0x00, 0x08, 0x82, 0x41, 0xb3, 0x0e, 0x7d, 0xa0, 0x06,
  0x65, 0xc0, 0x6d, 0x71, 0x10, 0x07, 0xe0, 0x00, 0x0e, 0x7c, 0x10, 0x07,
  0xa3, 0x09, 0x41, 0x30, 0x9a, 0x20, 0x08, 0x16, 0x14, 0xf2, 0xb1, 0xa1,
  0x90, 0xcf, 0x88, 0xc1, 0x03, 0x80, 0x20, 0x18, 0x34, 0xf0, 0x20, 0x0a,
  0x70, 0xb0, 0x06, 0x61, 0x00, 0x06, 0x76, 0x60, 0x07, 0xe5, 0x50, 0x0e,
  0xa1, 0x60, 0x07, 0xa3, 0x09, 0x01, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08,
  0x06, 0x18, 0x3b, 0x9c, 0xc2, 0x19, 0xa8, 0xc3, 0x68, 0x42, 0x00, 0x8c,
  0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x18, 0x3c, 0x00, 0x08, 0x82,
  0x41, 0x63, 0x0f, 0xa8, 0x70, 0x07, 0x72, 0x70, 0x06, 0x66, 0xc0, 0x07,
  0x7c, 0xb0, 0x0e, 0xeb, 0x70, 0x0a, 0x7c, 0x30, 0x9a, 0x10, 0x00, 0xa3,
  0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x36, 0x1c, 0xf2, 0xb1, 0xe1, 0x90,
  0x8f, 0x0d, 0x87, 0x7c, 0x46, 0x0c, 0x16, 0x00, 0x04, 0xc1, 0xe0, 0xe1,
  0x07, 0x56, 0x40, 0x83, 0x33, 0x30, 0x03, 0x34, 0x38, 0x03, 0x33, 0x18,
  0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0x88, 0x1f, 0x62, 0x21, 0xb0, 0x40,
  0x0d, 0xe4, 0x63, 0x82, 0x1a, 0xc8, 0xc7, 0x06, 0x35, 0x90, 0xcf, 0x88,
  0xc1, 0x02, 0x80, 0x20, 0x18, 0x3c, 0x21, 0x11, 0x0b, 0x71, 0x00, 0x07,
  0x6f, 0x10, 0x07, 0x70, 0xf0, 0x06, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60,
  0x10, 0x85, 0x84, 0x2d, 0x04, 0x16, 0xcc, 0x81, 0x7c, 0x4c, 0x98, 0x03,
  0xf9, 0xd8, 0x30, 0x07, 0xf2, 0xb1, 0xe0, 0x90, 0x8f, 0x0d, 0x87, 0x7c,
  0x4c, 0x08, 0xe2, 0x63, 0x46, 0x22, 0x1f, 0x2b, 0x18, 0xf9, 0x98, 0x10,
  0xc4, 0xc7, 0x10, 0x47, 0x3e, 0xa6, 0x38, 0xf2, 0x31, 0x21, 0x88, 0xcf,
  0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x3c, 0x2f, 0xf1, 0x0b, 0x07, 0x11,
  0x1c, 0x44, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0xd1, 0x4b, 0x90,
  0x43, 0x60, 0x81, 0x1f, 0xc8, 0xc7, 0x02, 0x45, 0x3e, 0x26, 0x20, 0xf2,
  0xb1, 0xc1, 0x90, 0xcf, 0x88, 0xc1, 0x03, 0x80, 0x20, 0x18, 0x34, 0x36,
  0x81, 0x0e, 0xb8, 0x30, 0x0b, 0xa7, 0x60, 0x0a, 0xbc, 0xc0, 0x0b, 0x2b,
  0xb1, 0x12, 0xe7, 0xc0, 0x0b, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04,
  0xa3, 0x09, 0x83, 0x60, 0x83, 0x38, 0xc8, 0xc7, 0x86, 0x71, 0x90, 0x8f,
  0x0d, 0xe4, 0x20, 0x1f, 0x1b, 0xcc, 0x01, 0x3e, 0x36, 0x9c, 0x03, 0x7c,
  0x6c, 0x40, 0x07, 0xf8, 0x8c, 0x26, 0xb8, 0xc1, 0x60, 0x44, 0x20, 0x1f,
  0x23, 0x04, 0xf9, 0x8c, 0x18, 0x2c, 0x00, 0x08, 0x82, 0xc1, 0x23, 0x16,
  0xf2, 0x20, 0x04, 0x84, 0x10, 0x10, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60,
  0x10, 0x89, 0xc5, 0x3d, 0x04, 0x46, 0x04, 0xf2, 0x31, 0x42, 0x90, 0x8f,
  0x0d, 0x88, 0x7c, 0x6c, 0x20, 0x03, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x41, 0x55, 0x16, 0xfd, 0x30, 0x58, 0xc1, 0x88, 0x01, 0x02, 0x80,
  0x20, 0x18, 0x54, 0x66, 0xe1, 0x0f, 0xc3, 0x1a, 0x04, 0x66, 0x98, 0x81,
  0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0x42, 0x0b, 0x90, 0x30,
  0xb0, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xaa, 0xb4, 0x08, 0x09,
  0xa3, 0x0d, 0x02, 0x4b, 0xd0, 0x40, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0x50, 0xad, 0xc5, 0x48, 0x24, 0x5a, 0x30, 0x62, 0x80, 0x00, 0x20,
  0x08, 0x06, 0x15, 0x5b, 0x90, 0x44, 0xf2, 0x06, 0xc1, 0x88, 0xc1, 0x01,
  0x80, 0x20, 0x18, 0x60, 0x6b, 0x61, 0x12, 0xe7, 0x70, 0x12, 0xa3, 0x09,
  0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x60, 0x43, 0x3a, 0xc4,
  0xc7, 0x86, 0x74, 0x88, 0x8f, 0x0d, 0xe9, 0x10, 0x9f, 0x11, 0x83, 0x05,
  0x00, 0x41, 0x30, 0x78, 0xee, 0xe2, 0x24, 0x06, 0x21, 0x18, 0x84, 0x60,
  0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xa2, 0xbb, 0x60, 0x89, 0xc0, 0x8a,
  0x40, 0x3e, 0x56, 0x08, 0xf2, 0xb1, 0x62, 0x90, 0xcf, 0x88, 0xc1, 0x02,
  0x80, 0x20, 0x18, 0x3c, 0x7c, 0xc1, 0x12, 0x13, 0xd4, 0x0c, 0x42, 0x30,
  0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x11, 0x5f, 0xb0, 0x45, 0x60, 0xbb,
  0x90, 0x12, 0xf2, 0xb1, 0x5d, 0x50, 0x09, 0xf9, 0xd8, 0x2e, 0xac, 0x84,
  0x7c, 0x2c, 0x25, 0x68, 0x21, 0x3e, 0x46, 0x04, 0xf2, 0x31, 0x42, 0x90,
  0x8f, 0x11, 0x83, 0x7c, 0x6c, 0xa8, 0x05, 0xf9, 0xd8, 0x60, 0x0b, 0xf2,
  0xb1, 0xe1, 0x16, 0xe4, 0x63, 0xe5, 0x40, 0x13, 0xf0, 0xb1, 0x72, 0xa8,
  0x09, 0xf8, 0x58, 0x39, 0xd8, 0x04, 0x7c, 0xcc, 0x17, 0x06, 0xf9, 0xd8,
  0x2f, 0x0c, 0xf2, 0x31, 0x70, 0x18, 0xe4, 0x63, 0xc3, 0x4e, 0xc0, 0xc7,
  0x06, 0x9e, 0x80, 0x8f, 0x0d, 0x3d, 0x01, 0x1f, 0x0b, 0x87, 0x41, 0x3e,
  0x26, 0x0e, 0x83, 0x7c, 0x6c, 0x1c, 0x06, 0xf9, 0x5c, 0x3f, 0x10, 0x73,
  0xfd, 0x40, 0xcc, 0x88, 0x41, 0x03, 0x80, 0x20, 0x18, 0x4c, 0xb4, 0xe1,
  0x16, 0x3c, 0xc1, 0x1a, 0x42, 0x80, 0x16, 0x68, 0x81, 0x16, 0x68, 0x31,
  0x9a, 0x10, 0x00, 0x36, 0x05, 0xf2, 0xb1, 0x49, 0x90, 0x8f, 0x4d, 0x83,
  0x7c, 0x4c, 0x21, 0xe4, 0x63, 0x4a, 0x21, 0x1f, 0x53, 0x0c, 0xf9, 0x58,
  0x19, 0xd4, 0x01, 0x7c, 0xac, 0x0c, 0xe6, 0x00, 0x3e, 0x56, 0x06, 0x71,
  0x00, 0x9f, 0x11, 0x83, 0x05, 0x00, 0x41, 0x30, 0x78, 0xc2, 0x23, 0x2e,
  0x06, 0x21, 0x18, 0x84, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xa2,
  0xf0, 0xb0, 0x8b, 0xc0, 0x82, 0x42, 0x3e, 0x26, 0x14, 0xf2, 0xb1, 0xa1,
  0x90, 0xcf, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x3c, 0xe6, 0x61, 0x17,
  0x7d, 0xa0, 0x07, 0x77, 0x30, 0x08, 0xc1, 0x88, 0x81, 0x01, 0x80, 0x20,
  0x18, 0x44, 0xe6, 0x61, 0x1b, 0x81, 0xe9, 0x43, 0x5c, 0xc8, 0xc7, 0x04,
  0x41, 0x3e, 0x16, 0x08, 0xf2, 0xb1, 0xb9, 0x70, 0x83, 0xf8, 0x58, 0x10,
  0xc8, 0xc7, 0x06, 0xbe, 0x80, 0x8f, 0x09, 0x82, 0x7c, 0x2c, 0x20, 0xe4,
  0x63, 0xc1, 0x20, 0x1f, 0x0b, 0xf2, 0x02, 0x3e, 0xa6, 0x05, 0xf2, 0x31,
  0x4d, 0x90, 0x8f, 0x69, 0x83, 0x7c, 0x46, 0x0c, 0x1e, 0x00, 0x04, 0xc1,
  0xa0, 0xb1, 0x0f, 0xd4, 0xd0, 0x8b, 0xb6, 0x60, 0x85, 0x54, 0x30, 0x05,
  0xbe, 0x38, 0x8d, 0xd3, 0x38, 0x0d, 0xbe, 0x18, 0x4d, 0x08, 0x80, 0xd1,
  0x04, 0x21, 0x18, 0x4d, 0x18, 0x04, 0x3b, 0x06, 0xf9, 0xd8, 0x31, 0xc8,
  0xc7, 0x8e, 0x41, 0x3e, 0x36, 0x8c, 0x04, 0x7c, 0x6c, 0x18, 0x09, 0xf8,
  0xd8, 0x30, 0x12, 0xf0, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x4c,
  0x3f, 0x6a, 0xc3, 0x2e, 0xde, 0x63, 0x34, 0x21, 0x00, 0x2c, 0x98, 0x09,
  0xf9, 0x8c, 0x26, 0x0c, 0x81, 0x09, 0x01, 0x7c, 0x8c, 0x35, 0xd2, 0x20,
  0x3e, 0xd6, 0x1a, 0x69, 0x10, 0x1f, 0x73, 0x8d, 0x34, 0x88, 0x8f, 0x0d,
  0x98, 0x7c, 0x6c, 0xc8, 0xe4, 0x63, 0x83, 0x26, 0x1f, 0x1b, 0xde, 0x00,
  0x3e, 0x36, 0xbc, 0x01, 0x7c, 0x6c, 0x78, 0x03, 0xf8, 0xd8, 0x6e, 0xd0,
  0x42, 0x7c, 0x8c, 0x37, 0x68, 0x21, 0x3e, 0xd6, 0x1b, 0xb4, 0x10, 0x9f,
  0x11, 0x83, 0x05, 0x00, 0x41, 0x30, 0x78, 0x60, 0x04, 0x3c, 0x06, 0x21,
  0x38, 0x07, 0x72, 0x08, 0x07, 0x0b, 0x74, 0x43, 0x3e, 0x16, 0xa4, 0x83,
  0x7c, 0x4c, 0x38, 0x07, 0xf9, 0xd8, 0x50, 0x0e, 0xf2, 0x31, 0x64, 0x88,
  0x8f, 0x21, 0x43, 0x7c, 0x0c, 0x19, 0xe2, 0x33, 0x62, 0xf0, 0x00, 0x20,
  0x08, 0x06, 0x0d, 0x8d, 0xc4, 0x07, 0x6f, 0xc4, 0xc6, 0x20, 0x04, 0xbf,
  0xa1, 0x1e, 0xea, 0xa1, 0x1e, 0xd5, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08,
  0xc1, 0x68, 0xc2, 0x20, 0xd8, 0x20, 0xc9, 0xc7, 0x06, 0x49, 0x3e, 0x36,
  0x48, 0xf2, 0xb1, 0x31, 0x18, 0xe0, 0x63, 0x63, 0x30, 0xc0, 0xc7, 0xc6,
  0x60, 0x80, 0xcf, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x64, 0x42,
  0x23, 0x38, 0x82, 0x23, 0x29, 0x32, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82,
  0x01, 0x42, 0x26, 0x34, 0x82, 0x23, 0x38, 0xc2, 0x1f, 0xc2, 0x88, 0x41,
  0x02, 0x80, 0x20, 0x18, 0x20, 0x64, 0x42, 0x23, 0x38, 0x82, 0x23, 0x28,
  0x12, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x42, 0x26, 0x34, 0x82,
  0x23, 0x38, 0xb2, 0x22, 0x7c, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
