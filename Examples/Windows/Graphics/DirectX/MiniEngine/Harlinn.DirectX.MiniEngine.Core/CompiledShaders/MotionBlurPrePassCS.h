#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader hash: ad6d48d52219e3b3918621cd1ce1cdf9
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; ColorBuffer                       texture     f32          2d      T0             t0     1
; VelocityBuffer                    texture     u32          2d      T1             t1     1
; PrepBuffer                            UAV     f32          2d      U0             u0     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.Texture2D<vector<float, 3> >" = type { <3 x float>, %"class.Texture2D<vector<float, 3> >::mips_type" }
%"class.Texture2D<vector<float, 3> >::mips_type" = type { i32 }
%"class.Texture2D<unsigned int>" = type { i32, %"class.Texture2D<unsigned int>::mips_type" }
%"class.Texture2D<unsigned int>::mips_type" = type { i32 }
%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %5 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  %6 = shl i32 %4, 1
  %7 = shl i32 %5, 1
  %8 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %2, i32 0, i32 %6, i32 %7, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %9 = extractvalue %dx.types.ResRet.i32 %8, 0
  %10 = shl i32 %9, 4
  %11 = and i32 %10, 8176
  %12 = shl i32 %9, 6
  %13 = and i32 %12, 32768
  %14 = or i32 %11, %13
  %15 = call float @dx.op.legacyF16ToF32(i32 131, i32 %14)  ; LegacyF16ToF32(value)
  %16 = fmul fast float %15, 3.276800e+04
  %17 = lshr i32 %9, 6
  %18 = and i32 %17, 8176
  %19 = lshr i32 %9, 4
  %20 = and i32 %19, 32768
  %21 = or i32 %18, %20
  %22 = call float @dx.op.legacyF16ToF32(i32 131, i32 %21)  ; LegacyF16ToF32(value)
  %23 = fmul fast float %22, 3.276800e+04
  %24 = fmul fast float %16, %16
  %25 = fmul fast float %23, %23
  %26 = fadd fast float %25, %24
  %27 = call float @dx.op.unary.f32(i32 24, float %26)  ; Sqrt(value)
  %28 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %3, i32 0, i32 %6, i32 %7, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %29 = extractvalue %dx.types.ResRet.f32 %28, 0
  %30 = extractvalue %dx.types.ResRet.f32 %28, 1
  %31 = extractvalue %dx.types.ResRet.f32 %28, 2
  %32 = fmul fast float %27, 8.000000e+00
  %33 = call float @dx.op.unary.f32(i32 7, float %32)  ; Saturate(value)
  %34 = fmul fast float %29, %33
  %35 = fmul fast float %30, %33
  %36 = fmul fast float %31, %33
  %37 = or i32 %6, 1
  %38 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %2, i32 0, i32 %37, i32 %7, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %39 = extractvalue %dx.types.ResRet.i32 %38, 0
  %40 = shl i32 %39, 4
  %41 = and i32 %40, 8176
  %42 = shl i32 %39, 6
  %43 = and i32 %42, 32768
  %44 = or i32 %41, %43
  %45 = call float @dx.op.legacyF16ToF32(i32 131, i32 %44)  ; LegacyF16ToF32(value)
  %46 = fmul fast float %45, 3.276800e+04
  %47 = lshr i32 %39, 6
  %48 = and i32 %47, 8176
  %49 = lshr i32 %39, 4
  %50 = and i32 %49, 32768
  %51 = or i32 %48, %50
  %52 = call float @dx.op.legacyF16ToF32(i32 131, i32 %51)  ; LegacyF16ToF32(value)
  %53 = fmul fast float %52, 3.276800e+04
  %54 = fmul fast float %46, %46
  %55 = fmul fast float %53, %53
  %56 = fadd fast float %55, %54
  %57 = call float @dx.op.unary.f32(i32 24, float %56)  ; Sqrt(value)
  %58 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %3, i32 0, i32 %37, i32 %7, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %59 = extractvalue %dx.types.ResRet.f32 %58, 0
  %60 = extractvalue %dx.types.ResRet.f32 %58, 1
  %61 = extractvalue %dx.types.ResRet.f32 %58, 2
  %62 = fmul fast float %57, 8.000000e+00
  %63 = call float @dx.op.unary.f32(i32 7, float %62)  ; Saturate(value)
  %64 = fmul fast float %59, %63
  %65 = fmul fast float %60, %63
  %66 = fmul fast float %61, %63
  %67 = or i32 %7, 1
  %68 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %2, i32 0, i32 %6, i32 %67, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %69 = extractvalue %dx.types.ResRet.i32 %68, 0
  %70 = shl i32 %69, 4
  %71 = and i32 %70, 8176
  %72 = shl i32 %69, 6
  %73 = and i32 %72, 32768
  %74 = or i32 %71, %73
  %75 = call float @dx.op.legacyF16ToF32(i32 131, i32 %74)  ; LegacyF16ToF32(value)
  %76 = fmul fast float %75, 3.276800e+04
  %77 = lshr i32 %69, 6
  %78 = and i32 %77, 8176
  %79 = lshr i32 %69, 4
  %80 = and i32 %79, 32768
  %81 = or i32 %78, %80
  %82 = call float @dx.op.legacyF16ToF32(i32 131, i32 %81)  ; LegacyF16ToF32(value)
  %83 = fmul fast float %82, 3.276800e+04
  %84 = fmul fast float %76, %76
  %85 = fmul fast float %83, %83
  %86 = fadd fast float %85, %84
  %87 = call float @dx.op.unary.f32(i32 24, float %86)  ; Sqrt(value)
  %88 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %3, i32 0, i32 %6, i32 %67, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %89 = extractvalue %dx.types.ResRet.f32 %88, 0
  %90 = extractvalue %dx.types.ResRet.f32 %88, 1
  %91 = extractvalue %dx.types.ResRet.f32 %88, 2
  %92 = fmul fast float %87, 8.000000e+00
  %93 = call float @dx.op.unary.f32(i32 7, float %92)  ; Saturate(value)
  %94 = fmul fast float %89, %93
  %95 = fmul fast float %90, %93
  %96 = fmul fast float %91, %93
  %97 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %2, i32 0, i32 %37, i32 %67, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %98 = extractvalue %dx.types.ResRet.i32 %97, 0
  %99 = shl i32 %98, 4
  %100 = and i32 %99, 8176
  %101 = shl i32 %98, 6
  %102 = and i32 %101, 32768
  %103 = or i32 %100, %102
  %104 = call float @dx.op.legacyF16ToF32(i32 131, i32 %103)  ; LegacyF16ToF32(value)
  %105 = fmul fast float %104, 3.276800e+04
  %106 = lshr i32 %98, 6
  %107 = and i32 %106, 8176
  %108 = lshr i32 %98, 4
  %109 = and i32 %108, 32768
  %110 = or i32 %107, %109
  %111 = call float @dx.op.legacyF16ToF32(i32 131, i32 %110)  ; LegacyF16ToF32(value)
  %112 = fmul fast float %111, 3.276800e+04
  %113 = fmul fast float %105, %105
  %114 = fmul fast float %112, %112
  %115 = fadd fast float %114, %113
  %116 = call float @dx.op.unary.f32(i32 24, float %115)  ; Sqrt(value)
  %117 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %3, i32 0, i32 %37, i32 %67, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %118 = extractvalue %dx.types.ResRet.f32 %117, 0
  %119 = extractvalue %dx.types.ResRet.f32 %117, 1
  %120 = extractvalue %dx.types.ResRet.f32 %117, 2
  %121 = fmul fast float %116, 8.000000e+00
  %122 = call float @dx.op.unary.f32(i32 7, float %121)  ; Saturate(value)
  %123 = fmul fast float %118, %122
  %124 = fmul fast float %119, %122
  %125 = fmul fast float %120, %122
  %126 = fadd fast float %33, 0x3F1A36E2E0000000
  %127 = fadd fast float %126, %63
  %128 = fadd fast float %127, %93
  %129 = fadd fast float %128, %122
  %130 = fmul fast float %129, 7.500000e-01
  %131 = call float @dx.op.unary.f32(i32 27, float %130)  ; Round_ni(value)
  %132 = fmul fast float %131, 0x3FD5555560000000
  %133 = fadd fast float %64, %34
  %134 = fadd fast float %65, %35
  %135 = fadd fast float %66, %36
  %136 = fadd fast float %133, %94
  %137 = fadd fast float %134, %95
  %138 = fadd fast float %135, %96
  %139 = fadd fast float %136, %123
  %140 = fadd fast float %137, %124
  %141 = fadd fast float %138, %125
  %142 = fdiv fast float %139, %129
  %143 = fdiv fast float %140, %129
  %144 = fdiv fast float %141, %129
  %145 = fmul fast float %132, %142
  %146 = fmul fast float %143, %132
  %147 = fmul fast float %144, %132
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %1, i32 %4, i32 %5, i32 undef, float %145, float %146, float %147, float %132, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.legacyF16ToF32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!12}

!0 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 2}
!2 = !{i32 1, i32 6}
!3 = !{!"cs", i32 6, i32 2}
!4 = !{!5, !10, null, null}
!5 = !{!6, !8}
!6 = !{i32 0, %"class.Texture2D<vector<float, 3> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !7}
!7 = !{i32 0, i32 9}
!8 = !{i32 1, %"class.Texture2D<unsigned int>"* undef, !"", i32 0, i32 1, i32 1, i32 2, i32 0, !9}
!9 = !{i32 0, i32 5}
!10 = !{!11}
!11 = !{i32 0, %"class.RWTexture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!12 = !{void ()* @main, !"main", null, !4, !13}
!13 = !{i32 4, !14}
!14 = !{i32 8, i32 8, i32 1}

#endif

const unsigned char g_pMotionBlurPrePassCS[] = {
  0x44, 0x58, 0x42, 0x43, 0x68, 0x68, 0x58, 0xb8, 0x62, 0x5d, 0x25, 0x63,
  0x8c, 0xb8, 0x8a, 0xcf, 0x88, 0x3e, 0xc9, 0xd4, 0x01, 0x00, 0x00, 0x00,
  0xec, 0x13, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
  0x08, 0x01, 0x00, 0x00, 0x4c, 0x02, 0x00, 0x00, 0x90, 0x09, 0x00, 0x00,
  0xac, 0x09, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0x90, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x3c, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x15, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0x7f, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x7f, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x7f,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x54, 0x41, 0x54, 0x3c, 0x07, 0x00, 0x00, 0x62, 0x00, 0x05, 0x00,
  0xcf, 0x01, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x02, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x24, 0x07, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0xc6, 0x01, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0x90, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0xe6, 0x08, 0xc0, 0xa0,
  0x0c, 0xc3, 0x30, 0x10, 0x31, 0x03, 0x50, 0x06, 0x63, 0x30, 0xe8, 0x98,
  0x23, 0x40, 0x28, 0xb9, 0x67, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x0f,
  0x81, 0x66, 0x58, 0x08, 0x14, 0x28, 0x65, 0x01, 0x86, 0x65, 0x18, 0x06,
  0xc3, 0x30, 0x8c, 0x84, 0x98, 0x9b, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90,
  0xfc, 0x95, 0x90, 0x56, 0x62, 0xf2, 0x91, 0xdb, 0x46, 0xc5, 0x30, 0x0c,
  0xc3, 0x50, 0x14, 0x67, 0x58, 0x86, 0x61, 0x18, 0x86, 0x61, 0xa0, 0xe7,
  0xa6, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x7f, 0x25, 0xa4, 0x95, 0x98,
  0xfc, 0xe2, 0xb6, 0x51, 0x61, 0x18, 0x86, 0x31, 0x14, 0x25, 0x1a, 0x96,
  0x61, 0x18, 0x86, 0x61, 0x18, 0x48, 0x2a, 0x83, 0x31, 0x0c, 0x44, 0xcd,
  0x11, 0x04, 0xc5, 0x58, 0x86, 0x64, 0x18, 0x2c, 0xba, 0x06, 0x02, 0x86,
  0x11, 0x06, 0x63, 0xa6, 0x36, 0x18, 0x07, 0x76, 0x08, 0x87, 0x79, 0x98,
  0x07, 0x37, 0xa0, 0x85, 0x72, 0xc0, 0x07, 0x7a, 0xa8, 0x07, 0x79, 0x28,
  0x07, 0x39, 0x20, 0x05, 0x3e, 0xb0, 0x87, 0x72, 0x18, 0x07, 0x7a, 0x78,
  0x07, 0x79, 0xe0, 0x03, 0x73, 0x60, 0x87, 0x77, 0x08, 0x07, 0x7a, 0x60,
  0x03, 0x30, 0x98, 0x03, 0x3f, 0x00, 0x03, 0x3f, 0xd0, 0x03, 0x3d, 0x68,
  0x87, 0x74, 0x80, 0x87, 0x79, 0xf8, 0x05, 0x7a, 0xc8, 0x07, 0x78, 0x28,
  0x07, 0x14, 0x0c, 0x33, 0x89, 0xc1, 0x38, 0xb0, 0x43, 0x38, 0xcc, 0xc3,
  0x3c, 0xb8, 0x01, 0x2d, 0x94, 0x03, 0x3e, 0xd0, 0x43, 0x3d, 0xc8, 0x43,
  0x39, 0xc8, 0x01, 0x29, 0xf0, 0x81, 0x3d, 0x94, 0xc3, 0x38, 0xd0, 0xc3,
  0x3b, 0xc8, 0x03, 0x1f, 0x98, 0x03, 0x3b, 0xbc, 0x43, 0x38, 0xd0, 0x03,
  0x1b, 0x80, 0xc1, 0x1c, 0xf8, 0x01, 0x18, 0xf8, 0x01, 0x12, 0xb4, 0x8d,
  0xb8, 0x99, 0xd0, 0x60, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e, 0xdc,
  0x80, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c, 0xe4,
  0x80, 0x14, 0xf8, 0xa0, 0x1e, 0xdc, 0x61, 0x1e, 0xd2, 0xe1, 0x1c, 0xdc,
  0xa1, 0x1c, 0xc8, 0x01, 0x0c, 0xd2, 0xc1, 0x1d, 0xe8, 0xc1, 0x0f, 0xf4,
  0x40, 0x0f, 0xda, 0x21, 0x1d, 0xe0, 0x61, 0x1e, 0x7e, 0x81, 0x1e, 0xf2,
  0x01, 0x1e, 0xca, 0x01, 0x05, 0xc3, 0x4c, 0xdd, 0x38, 0xb0, 0x43, 0x38,
  0xcc, 0xc3, 0x3c, 0xb8, 0x01, 0x2d, 0x94, 0x03, 0x3e, 0xd0, 0x43, 0x3d,
  0xc8, 0x43, 0x39, 0xc8, 0x01, 0x29, 0xf0, 0x41, 0x3d, 0xb8, 0xc3, 0x3c,
  0xa4, 0xc3, 0x39, 0xb8, 0x43, 0x39, 0x90, 0x03, 0x18, 0xa4, 0x83, 0x3b,
  0xd0, 0x83, 0x1f, 0x20, 0x61, 0xf0, 0xe8, 0x1b, 0x46, 0x20, 0x8c, 0x99,
  0xc8, 0x60, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e, 0xdc, 0x40, 0x16,
  0x6e, 0x81, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c,
  0xe4, 0x80, 0x14, 0xf8, 0xc0, 0x1e, 0xca, 0x61, 0x1c, 0xe8, 0xe1, 0x1d,
  0xe4, 0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0x81, 0x0d,
  0xc0, 0x80, 0x0e, 0xfc, 0x00, 0x0c, 0xfc, 0x00, 0x05, 0x21, 0x89, 0x00,
  0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e,
  0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07,
  0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
  0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e, 0x00, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x04, 0x10, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x0e, 0x20,
  0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x30,
  0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4,
  0x79, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0xc8, 0x23, 0x01, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x90, 0x87, 0x02, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x80, 0x21, 0xcf, 0x05, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x59, 0x20, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x1a, 0x4a, 0xa0, 0x08, 0x46, 0x00, 0x8a, 0xa1, 0x24,
  0x4a, 0xa1, 0x10, 0x0a, 0xa2, 0x08, 0x03, 0x4a, 0x55, 0xa0, 0xb0, 0xc8,
  0x1a, 0x01, 0xa0, 0x6e, 0x06, 0x80, 0xc0, 0x19, 0x00, 0x1a, 0x67, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b,
  0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99,
  0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62,
  0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73,
  0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x84, 0x01, 0x99, 0x20, 0x0c,
  0xc9, 0x06, 0x61, 0x20, 0x26, 0x08, 0x83, 0xb2, 0x41, 0x30, 0x0c, 0x0a,
  0x63, 0x73, 0x13, 0x84, 0x61, 0xd9, 0x30, 0x20, 0x09, 0x31, 0x41, 0xe8,
  0x28, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x75, 0x66, 0x66, 0x65,
  0x72, 0x13, 0x84, 0x81, 0xd9, 0x20, 0x18, 0xcd, 0x86, 0xc4, 0x58, 0x18,
  0xc3, 0x18, 0x08, 0xc3, 0x99, 0x20, 0x80, 0x41, 0x45, 0xc7, 0xaa, 0x8c,
  0xed, 0x6d, 0x2c, 0x8d, 0x2e, 0x4f, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0x6e,
  0x82, 0x30, 0x34, 0x1b, 0x04, 0x43, 0xda, 0x90, 0x0c, 0x50, 0x64, 0x0c,
  0x03, 0x61, 0x4c, 0x1b, 0x84, 0x87, 0x9a, 0x20, 0x8c, 0x81, 0x45, 0x05,
  0x4a, 0xae, 0x0c, 0x4e, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0x6e, 0x82, 0x60,
  0x4d, 0x1b, 0x16, 0xc3, 0xba, 0x0c, 0x63, 0x20, 0x30, 0x0c, 0x73, 0x36,
  0x04, 0xd9, 0x06, 0xa2, 0xd2, 0x00, 0x60, 0x82, 0x20, 0x00, 0x1b, 0x80,
  0x0d, 0x83, 0xd1, 0x75, 0x1b, 0x02, 0x6f, 0xc3, 0x30, 0x70, 0x1f, 0x89,
  0xb6, 0xb0, 0x34, 0xb7, 0x09, 0xc2, 0xe0, 0x4c, 0x10, 0x86, 0x67, 0xc3,
  0x30, 0x06, 0x63, 0x30, 0x6c, 0x10, 0xc4, 0x80, 0x0c, 0x36, 0x14, 0x5c,
  0x18, 0x00, 0x5b, 0x19, 0xd0, 0x30, 0x63, 0x7b, 0x0b, 0xa3, 0x9b, 0x9b,
  0x20, 0x0c, 0x10, 0x8b, 0x34, 0xb7, 0x39, 0xba, 0xb9, 0x09, 0xc2, 0x10,
  0x11, 0xa1, 0x2b, 0xc3, 0xfb, 0x62, 0x7b, 0x0b, 0x23, 0x63, 0x42, 0x57,
  0x86, 0xf7, 0x35, 0x47, 0xf7, 0x26, 0x57, 0xc6, 0xa2, 0x2e, 0xcd, 0x8d,
  0x6e, 0x6e, 0x82, 0x30, 0x48, 0x1b, 0x94, 0x33, 0x40, 0x83, 0x34, 0x50,
  0x83, 0x35, 0x18, 0x03, 0x36, 0x18, 0xda, 0xc0, 0x0d, 0xaa, 0xb0, 0xb1,
  0xd9, 0xb5, 0xb9, 0xa4, 0x91, 0x95, 0xb9, 0xd1, 0x4d, 0x09, 0x82, 0x2a,
  0x64, 0x78, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x02,
  0xa2, 0x09, 0x19, 0x9e, 0x8b, 0x5d, 0x18, 0x9b, 0x5d, 0x99, 0xdc, 0x94,
  0xc0, 0xa8, 0x43, 0x86, 0xe7, 0x32, 0x87, 0x16, 0x46, 0x56, 0x26, 0xd7,
  0xf4, 0x46, 0x56, 0xc6, 0x36, 0x25, 0x48, 0xca, 0x90, 0xe1, 0xb9, 0xc8,
  0x95, 0xcd, 0xbd, 0xd5, 0xc9, 0x8d, 0x95, 0xcd, 0x4d, 0x09, 0xb4, 0x4a,
  0x64, 0x78, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x74,
  0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x82, 0xaf, 0x0e, 0x19, 0x9e,
  0x4b, 0x99, 0x1b, 0x9d, 0x5c, 0x1e, 0xd4, 0x5b, 0x9a, 0x1b, 0xdd, 0xdc,
  0x94, 0xa0, 0x0c, 0xba, 0x90, 0xe1, 0xb9, 0x8c, 0xbd, 0xd5, 0xb9, 0xd1,
  0x95, 0xc9, 0xcd, 0x4d, 0x09, 0xdc, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x1f, 0x00, 0x00, 0x00, 0x76, 0x20, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10,
  0x11, 0xc0, 0x44, 0x84, 0x40, 0x33, 0x2c, 0x84, 0x19, 0x50, 0xc3, 0xe5,
  0x3b, 0x8f, 0xbf, 0x10, 0x06, 0x20, 0x60, 0x5f, 0xad, 0xb7, 0xce, 0x77,
  0xdb, 0x56, 0x50, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x44, 0x5c, 0x13, 0x15,
  0x11, 0xa5, 0x03, 0x0c, 0x7e, 0x71, 0xdb, 0x46, 0x50, 0x0d, 0x97, 0xef,
  0x3c, 0xfe, 0x44, 0x5c, 0x13, 0x15, 0x11, 0xa5, 0x03, 0x0c, 0x3e, 0x72,
  0xdb, 0x36, 0x60, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x44, 0x5c, 0x13, 0x15,
  0x11, 0xec, 0xe4, 0x44, 0x84, 0x5f, 0xdc, 0xb6, 0x05, 0x48, 0xc3, 0xe5,
  0x3b, 0x8f, 0x3f, 0x1d, 0x11, 0x01, 0x0c, 0xe2, 0xe0, 0x23, 0xb7, 0x6d,
  0x02, 0xcf, 0x70, 0xf9, 0xce, 0xe3, 0x53, 0x0d, 0x10, 0x61, 0x7e, 0x71,
  0xdb, 0x06, 0x40, 0x30, 0x00, 0xd2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xad, 0x6d, 0x48, 0xd5, 0x22, 0x19, 0xe3, 0xb3, 0x91, 0x86, 0x21, 0xcd,
  0x1c, 0xe1, 0xcd, 0xf9, 0x44, 0x58, 0x49, 0x4c, 0x38, 0x0a, 0x00, 0x00,
  0x62, 0x00, 0x05, 0x00, 0x8e, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x02, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x0a, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x85, 0x02, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x90, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a,
  0xe6, 0x08, 0xc0, 0xa0, 0x0c, 0xc3, 0x30, 0x10, 0x31, 0x03, 0x50, 0x06,
  0x63, 0x30, 0xe8, 0x98, 0x23, 0x40, 0x28, 0xb9, 0x67, 0xb8, 0xfc, 0x09,
  0x7b, 0x08, 0xc9, 0x0f, 0x81, 0x66, 0x58, 0x08, 0x14, 0x28, 0x65, 0x01,
  0x86, 0x65, 0x18, 0x06, 0xc3, 0x30, 0x8c, 0x84, 0x98, 0x9b, 0x86, 0xcb,
  0x9f, 0xb0, 0x87, 0x90, 0xfc, 0x95, 0x90, 0x56, 0x62, 0xf2, 0x91, 0xdb,
  0x46, 0xc5, 0x30, 0x0c, 0xc3, 0x50, 0x14, 0x67, 0x58, 0x86, 0x61, 0x18,
  0x86, 0x61, 0xa0, 0xe7, 0xa6, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x7f,
  0x25, 0xa4, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x51, 0x61, 0x18, 0x86, 0x31,
  0x14, 0x25, 0x1a, 0x96, 0x61, 0x18, 0x86, 0x61, 0x18, 0x48, 0x2a, 0x83,
  0x31, 0x0c, 0x44, 0xcd, 0x11, 0x04, 0xc5, 0x58, 0x86, 0x64, 0x18, 0x2c,
  0xba, 0x06, 0x02, 0x86, 0x11, 0x06, 0x63, 0xa6, 0x36, 0x18, 0x07, 0x76,
  0x08, 0x87, 0x79, 0x98, 0x07, 0x37, 0xa0, 0x85, 0x72, 0xc0, 0x07, 0x7a,
  0xa8, 0x07, 0x79, 0x28, 0x07, 0x39, 0x20, 0x05, 0x3e, 0xb0, 0x87, 0x72,
  0x18, 0x07, 0x7a, 0x78, 0x07, 0x79, 0xe0, 0x03, 0x73, 0x60, 0x87, 0x77,
  0x08, 0x07, 0x7a, 0x60, 0x03, 0x30, 0x98, 0x03, 0x3f, 0x00, 0x03, 0x3f,
  0xd0, 0x03, 0x3d, 0x68, 0x87, 0x74, 0x80, 0x87, 0x79, 0xf8, 0x05, 0x7a,
  0xc8, 0x07, 0x78, 0x28, 0x07, 0x14, 0x0c, 0x33, 0x89, 0xc1, 0x38, 0xb0,
  0x43, 0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x01, 0x2d, 0x94, 0x03, 0x3e, 0xd0,
  0x43, 0x3d, 0xc8, 0x43, 0x39, 0xc8, 0x01, 0x29, 0xf0, 0x81, 0x3d, 0x94,
  0xc3, 0x38, 0xd0, 0xc3, 0x3b, 0xc8, 0x03, 0x1f, 0x98, 0x03, 0x3b, 0xbc,
  0x43, 0x38, 0xd0, 0x03, 0x1b, 0x80, 0xc1, 0x1c, 0xf8, 0x01, 0x18, 0xf8,
  0x01, 0x12, 0xb4, 0x8d, 0xb8, 0x99, 0xd0, 0x60, 0x1c, 0xd8, 0x21, 0x1c,
  0xe6, 0x61, 0x1e, 0xdc, 0x80, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e,
  0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8, 0xa0, 0x1e, 0xdc, 0x61, 0x1e,
  0xd2, 0xe1, 0x1c, 0xdc, 0xa1, 0x1c, 0xc8, 0x01, 0x0c, 0xd2, 0xc1, 0x1d,
  0xe8, 0xc1, 0x0f, 0xf4, 0x40, 0x0f, 0xda, 0x21, 0x1d, 0xe0, 0x61, 0x1e,
  0x7e, 0x81, 0x1e, 0xf2, 0x01, 0x1e, 0xca, 0x01, 0x05, 0xc3, 0x4c, 0xdd,
  0x38, 0xb0, 0x43, 0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x01, 0x2d, 0x94, 0x03,
  0x3e, 0xd0, 0x43, 0x3d, 0xc8, 0x43, 0x39, 0xc8, 0x01, 0x29, 0xf0, 0x41,
  0x3d, 0xb8, 0xc3, 0x3c, 0xa4, 0xc3, 0x39, 0xb8, 0x43, 0x39, 0x90, 0x03,
  0x18, 0xa4, 0x83, 0x3b, 0xd0, 0x83, 0x1f, 0x20, 0x61, 0xf0, 0xe8, 0x1b,
  0x46, 0x20, 0x8c, 0x99, 0xc8, 0x60, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61,
  0x1e, 0xdc, 0x40, 0x16, 0x6e, 0x81, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1,
  0x1e, 0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8, 0xc0, 0x1e, 0xca, 0x61,
  0x1c, 0xe8, 0xe1, 0x1d, 0xe4, 0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21,
  0x1c, 0xe8, 0x81, 0x0d, 0xc0, 0x80, 0x0e, 0xfc, 0x00, 0x0c, 0xfc, 0x00,
  0x05, 0x21, 0x89, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x04, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0x0e, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0xf2, 0x30, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0xe4, 0x79, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xc8, 0x23, 0x01, 0x01, 0x30, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x87, 0x02, 0x02, 0x20, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0xcf, 0x05, 0x04, 0xc0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0x20, 0x00, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x1a, 0x4a, 0xa0, 0x08, 0x8a,
  0x61, 0x04, 0xa0, 0x24, 0x4a, 0xa1, 0x10, 0x0a, 0x82, 0xac, 0x11, 0x00,
  0xea, 0x66, 0x00, 0x08, 0x9c, 0x01, 0xa0, 0x71, 0x06, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1,
  0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41,
  0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a,
  0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9,
  0x10, 0x04, 0x13, 0x84, 0x01, 0x99, 0x20, 0x0c, 0xc9, 0x06, 0x61, 0x20,
  0x26, 0x08, 0x83, 0xb2, 0x41, 0x18, 0x0c, 0x0a, 0x63, 0x73, 0x1b, 0x06,
  0xc4, 0x20, 0x26, 0x08, 0xc3, 0x32, 0x41, 0xe8, 0x22, 0x02, 0x13, 0x84,
  0x81, 0xd9, 0x20, 0x28, 0xcd, 0x86, 0x44, 0x59, 0x18, 0x45, 0x19, 0x08,
  0xc5, 0x99, 0x20, 0x80, 0x81, 0x34, 0x41, 0x18, 0x9a, 0x0d, 0x82, 0x12,
  0x6d, 0x48, 0x06, 0x88, 0x51, 0x86, 0x81, 0x50, 0xa4, 0x0d, 0xc2, 0x33,
  0x4d, 0x10, 0xc6, 0x60, 0x9a, 0x20, 0x58, 0xd0, 0x86, 0x45, 0xa9, 0x18,
  0x45, 0x19, 0x08, 0xcb, 0xb2, 0x9c, 0x0d, 0xc1, 0xb5, 0x81, 0xa0, 0x30,
  0x00, 0x98, 0x20, 0x08, 0x00, 0x89, 0xb6, 0xb0, 0x34, 0xb7, 0x09, 0xc2,
  0xe0, 0x4c, 0x10, 0x86, 0x67, 0xc3, 0xd0, 0x75, 0xc3, 0x06, 0x81, 0xf3,
  0x36, 0x14, 0xda, 0x06, 0x64, 0x5f, 0x15, 0x36, 0x36, 0xbb, 0x36, 0x97,
  0x34, 0xb2, 0x32, 0x37, 0xba, 0x29, 0x41, 0x50, 0x85, 0x0c, 0xcf, 0xc5,
  0xae, 0x4c, 0x6e, 0x2e, 0xed, 0xcd, 0x6d, 0x4a, 0x40, 0x34, 0x21, 0xc3,
  0x73, 0xb1, 0x0b, 0x63, 0xb3, 0x2b, 0x93, 0x9b, 0x12, 0x18, 0x75, 0xc8,
  0xf0, 0x5c, 0xe6, 0xd0, 0xc2, 0xc8, 0xca, 0xe4, 0x9a, 0xde, 0xc8, 0xca,
  0xd8, 0xa6, 0x04, 0x48, 0x19, 0x32, 0x3c, 0x17, 0xb9, 0xb2, 0xb9, 0xb7,
  0x3a, 0xb9, 0xb1, 0xb2, 0xb9, 0x29, 0x01, 0x56, 0x87, 0x0c, 0xcf, 0xa5,
  0xcc, 0x8d, 0x4e, 0x2e, 0x0f, 0xea, 0x2d, 0xcd, 0x8d, 0x6e, 0x6e, 0x4a,
  0xf0, 0x01, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06,
  0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f,
  0xf4, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
  0x76, 0x20, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44, 0x84,
  0x40, 0x33, 0x2c, 0x84, 0x19, 0x50, 0xc3, 0xe5, 0x3b, 0x8f, 0xbf, 0x10,
  0x06, 0x20, 0x60, 0x5f, 0xad, 0xb7, 0xce, 0x77, 0xdb, 0x56, 0x50, 0x0d,
  0x97, 0xef, 0x3c, 0xfe, 0x44, 0x5c, 0x13, 0x15, 0x11, 0xa5, 0x03, 0x0c,
  0x7e, 0x71, 0xdb, 0x46, 0x50, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x44, 0x5c,
  0x13, 0x15, 0x11, 0xa5, 0x03, 0x0c, 0x3e, 0x72, 0xdb, 0x36, 0x60, 0x0d,
  0x97, 0xef, 0x3c, 0xfe, 0x44, 0x5c, 0x13, 0x15, 0x11, 0xec, 0xe4, 0x44,
  0x84, 0x5f, 0xdc, 0xb6, 0x05, 0x48, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x1d,
  0x11, 0x01, 0x0c, 0xe2, 0xe0, 0x23, 0xb7, 0x6d, 0x02, 0xcf, 0x70, 0xf9,
  0xce, 0xe3, 0x53, 0x0d, 0x10, 0x61, 0x7e, 0x71, 0xdb, 0x06, 0x40, 0x30,
  0x00, 0xd2, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00,
  0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x34, 0xcc, 0x00, 0x14, 0x61, 0x40, 0x81, 0xff, 0x15, 0x20, 0x20, 0x41,
  0x19, 0x0a, 0x14, 0x4c, 0x39, 0x94, 0x5c, 0xe9, 0x06, 0x94, 0x4d, 0x19,
  0x06, 0x50, 0x52, 0x1e, 0x25, 0x30, 0x02, 0x40, 0xc6, 0x18, 0x01, 0x08,
  0x82, 0x20, 0xfd, 0x8d, 0x11, 0xac, 0xb5, 0x5a, 0xab, 0xdf, 0x18, 0xc1,
  0x8d, 0xb7, 0x63, 0xcb, 0x8d, 0x11, 0x80, 0x20, 0x08, 0xc2, 0x60, 0x30,
  0x46, 0x00, 0x82, 0x20, 0x08, 0x8f, 0x01, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x70, 0x81, 0x01, 0x73, 0x70, 0xdc, 0x35, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x57, 0x18, 0x34, 0x07, 0x18, 0x80, 0x01, 0x36, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0x97, 0x18, 0x38, 0x88, 0xe7, 0x65, 0x23,
  0x06, 0x06, 0x00, 0x82, 0x60, 0x40, 0xa4, 0x81, 0xf3, 0x8d, 0x18, 0x18,
  0x00, 0x08, 0x82, 0x01, 0xa1, 0x06, 0xcf, 0x18, 0x94, 0x40, 0x06, 0x57,
  0x42, 0x19, 0xdc, 0x88, 0x41, 0x03, 0x80, 0x20, 0x18, 0x3c, 0x6a, 0x90,
  0x19, 0x63, 0x20, 0x04, 0x9a, 0xa6, 0x69, 0xa3, 0x09, 0x01, 0x50, 0x81,
  0x18, 0x5c, 0x05, 0x9b, 0xd6, 0x80, 0x06, 0x57, 0x01, 0xa7, 0x35, 0x04,
  0x3b, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0xd4, 0x1b, 0x74, 0x81, 0x05,
  0x90, 0x7c, 0x0a, 0x69, 0x03, 0xac, 0x40, 0x0c, 0xb4, 0x94, 0x35, 0xc0,
  0x0a, 0xc6, 0x40, 0x6b, 0x08, 0x76, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c,
  0x28, 0x3b, 0x20, 0x83, 0xc0, 0x82, 0x4b, 0x3e, 0x86, 0x20, 0xf2, 0x31,
  0x41, 0x90, 0x8f, 0x05, 0x02, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1,
  0xe0, 0xf8, 0x03, 0x34, 0x08, 0x46, 0x0c, 0x1a, 0x00, 0x04, 0xc1, 0x40,
  0xea, 0x83, 0x36, 0xc8, 0xee, 0xc0, 0xaa, 0xdc, 0xc0, 0x0d, 0xdc, 0xc0,
  0x0d, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0xc1,
  0x8a, 0x30, 0x90, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x1c, 0xa5,
  0xd0, 0x06, 0x81, 0x15, 0x81, 0x7c, 0xac, 0x10, 0xe4, 0x63, 0xc5, 0x20,
  0x9f, 0xfa, 0x46, 0x61, 0x47, 0x0c, 0x1a, 0x00, 0x04, 0xc1, 0xe0, 0x41,
  0x85, 0x3b, 0x20, 0x83, 0x50, 0x08, 0x3e, 0x3c, 0xc0, 0x03, 0x3c, 0xc0,
  0x83, 0xd1, 0x84, 0x00, 0xa8, 0x00, 0x14, 0xae, 0x82, 0x3c, 0xd0, 0x1a,
  0x4c, 0xe1, 0x2a, 0xd0, 0x03, 0xad, 0x21, 0xd8, 0x11, 0x03, 0x03, 0x00,
  0x41, 0x30, 0xa0, 0x5a, 0x61, 0x0f, 0x02, 0x0b, 0xdc, 0x40, 0x3e, 0x85,
  0xac, 0x02, 0x56, 0x00, 0x0a, 0x5a, 0x4a, 0x2a, 0x60, 0x05, 0xa1, 0xa0,
  0x35, 0x04, 0x3b, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x14, 0x2d, 0x88,
  0x42, 0x60, 0x41, 0x1d, 0xc8, 0xc7, 0x10, 0x44, 0x3e, 0x26, 0x08, 0xf2,
  0xb1, 0x40, 0x80, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x1c, 0xbd,
  0x60, 0x0a, 0xc1, 0x88, 0x41, 0x03, 0x80, 0x20, 0x18, 0x48, 0xbb, 0xb0,
  0x0a, 0x77, 0x50, 0x0b, 0xd5, 0x1c, 0xb0, 0x02, 0x2b, 0xb0, 0x02, 0x2b,
  0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0x82, 0x15,
  0x7f, 0x20, 0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x38, 0xc6, 0x61,
  0x15, 0x02, 0x2b, 0x02, 0xf9, 0x58, 0x21, 0xc8, 0xc7, 0x8a, 0x41, 0x3e,
  0xc5, 0x07, 0xe1, 0xb0, 0x23, 0x06, 0x0d, 0x00, 0x82, 0x60, 0xf0, 0x98,
  0x43, 0x2d, 0x88, 0xc2, 0x2f, 0xf8, 0x41, 0x60, 0x0b, 0xb6, 0x60, 0x0b,
  0xb6, 0x30, 0x9a, 0x10, 0x00, 0x15, 0xf8, 0xc2, 0x55, 0x70, 0x0b, 0x5a,
  0x03, 0x39, 0x5c, 0x05, 0xb8, 0xa0, 0x35, 0x04, 0x3b, 0x62, 0x60, 0x00,
  0x20, 0x08, 0x06, 0xd4, 0x3a, 0xe4, 0x42, 0x60, 0x01, 0x2b, 0xc8, 0xa7,
  0x90, 0x74, 0xc0, 0x0a, 0x7c, 0x41, 0x4b, 0x39, 0x07, 0xac, 0xe0, 0x17,
  0xb4, 0x86, 0x60, 0x47, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x80, 0x92, 0x07,
  0x70, 0x08, 0x2c, 0x98, 0x05, 0xf9, 0x18, 0x82, 0xc8, 0xc7, 0x04, 0x41,
  0x3e, 0x16, 0x08, 0xf0, 0x19, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0x63,
  0x1f, 0xc8, 0x21, 0x18, 0x31, 0x68, 0x00, 0x10, 0x04, 0x03, 0x29, 0x1f,
  0xd2, 0xa1, 0x16, 0xe6, 0x41, 0x16, 0x2a, 0x75, 0x50, 0x07, 0x75, 0x50,
  0x87, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0xb0,
  0xa2, 0x17, 0xe4, 0x33, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x47, 0x48,
  0xa4, 0x43, 0x60, 0x45, 0x20, 0x1f, 0x2b, 0x04, 0xf9, 0x58, 0x31, 0xc8,
  0x67, 0xc4, 0xa0, 0x01, 0x40, 0x10, 0x0c, 0x9e, 0x91, 0x90, 0x87, 0x5f,
  0xe0, 0x07, 0x3e, 0xf0, 0xe6, 0x61, 0x1e, 0xe6, 0x61, 0x1e, 0x46, 0x13,
  0x02, 0xa0, 0x82, 0x7d, 0xb8, 0x0a, 0xe8, 0x41, 0x6b, 0x08, 0x89, 0xab,
  0xa0, 0x1e, 0xb4, 0x86, 0x60, 0x47, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x80,
  0x42, 0x09, 0x7b, 0x08, 0x2c, 0x48, 0x07, 0xf9, 0x14, 0x62, 0x12, 0x58,
  0xc1, 0x3e, 0x68, 0x29, 0x24, 0x81, 0x15, 0xf0, 0x83, 0xd6, 0x10, 0xec,
  0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x50, 0x2f, 0xd1, 0x0f, 0x81, 0x05,
  0xf0, 0x20, 0x1f, 0x43, 0x10, 0xf9, 0x98, 0x20, 0xc8, 0xc7, 0x02, 0x01,
  0x3e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x70, 0xe0, 0x44, 0x48, 0x04,
  0x23, 0x06, 0x0d, 0x00, 0x82, 0x60, 0x20, 0xd9, 0x84, 0x49, 0xc8, 0x03,
  0x4c, 0xc0, 0x82, 0x1c, 0x9c, 0xc4, 0x49, 0x9c, 0xc4, 0x49, 0x8c, 0x26,
  0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0x82, 0x15, 0xfa, 0x20,
  0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x38, 0x7c, 0xc2, 0x24, 0x02,
  0x2b, 0x02, 0xf9, 0x58, 0x21, 0xc8, 0xc7, 0x8a, 0x41, 0x3e, 0xd6, 0x0b,
  0x20, 0x01, 0x1f, 0x0b, 0x40, 0x01, 0x3e, 0x16, 0x8c, 0x01, 0x7c, 0x2c,
  0x38, 0xe0, 0x63, 0x81, 0x49, 0xc8, 0x67, 0xc4, 0xc0, 0x00, 0x40, 0x10,
  0x0c, 0x8e, 0xb3, 0x60, 0x89, 0xc0, 0x82, 0x93, 0x90, 0x8f, 0x95, 0xc2,
  0x38, 0xc0, 0xc7, 0x4a, 0x61, 0x1c, 0xe0, 0x63, 0xa5, 0x30, 0x0e, 0xf0,
  0xb1, 0x41, 0x0d, 0xe0, 0x63, 0x83, 0x1a, 0xc0, 0xc7, 0x06, 0x35, 0x80,
  0x8f, 0x0d, 0x10, 0x7c, 0x6c, 0x80, 0xe0, 0x63, 0x03, 0x04, 0x1f, 0x1b,
  0x1a, 0xfa, 0xd8, 0xe0, 0xd0, 0xc7, 0x86, 0x87, 0x3e, 0xd6, 0x0c, 0xf2,
  0xb1, 0xc1, 0x91, 0x8f, 0x0d, 0x8f, 0x7c, 0x46, 0x0c, 0x1c, 0x00, 0x04,
  0xc1, 0x80, 0xb9, 0x0b, 0x9e, 0x98, 0x09, 0x98, 0x78, 0x09, 0xb3, 0x18,
  0x84, 0x00, 0xda, 0x09, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
