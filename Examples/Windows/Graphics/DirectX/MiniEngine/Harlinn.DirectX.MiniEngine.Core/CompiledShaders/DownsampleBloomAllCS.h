#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader hash: f79587473e161fc05a4ea39d697eef39
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; cbuffer cb0
; {
;
;   struct cb0
;   {
;
;       float2 g_inverseDimensions;                   ; Offset:    0
;   
;   } cb0;                                            ; Offset:    0 Size:     8
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; cb0                               cbuffer      NA          NA     CB0            cb0     1
; BiLinearClamp                     sampler      NA          NA      S0             s0     1
; BloomBuf                          texture     f32          2d      T0             t0     1
; Result1                               UAV     f32          2d      U0             u0     1
; Result2                               UAV     f32          2d      U1             u1     1
; Result3                               UAV     f32          2d      U2             u2     1
; Result4                               UAV     f32          2d      U3             u3     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.Texture2D<vector<float, 3> >" = type { <3 x float>, %"class.Texture2D<vector<float, 3> >::mips_type" }
%"class.Texture2D<vector<float, 3> >::mips_type" = type { i32 }
%"class.RWTexture2D<vector<float, 3> >" = type { <3 x float> }
%cb0 = type { <2 x float> }
%struct.SamplerState = type { i32 }

@"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim" = addrspace(3) global [192 x float] undef, align 4

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 3, i32 3, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 2, i32 2, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %8 = call i32 @dx.op.flattenedThreadIdInGroup.i32(i32 96)  ; FlattenedThreadIdInGroup()
  %9 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %10 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  %11 = or i32 %10, %9
  %12 = uitofp i32 %9 to float
  %13 = uitofp i32 %10 to float
  %14 = fmul fast float %12, 2.000000e+00
  %15 = fmul fast float %13, 2.000000e+00
  %16 = fadd fast float %14, 1.000000e+00
  %17 = fadd fast float %15, 1.000000e+00
  %18 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %7, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %19 = extractvalue %dx.types.CBufRet.f32 %18, 0
  %20 = extractvalue %dx.types.CBufRet.f32 %18, 1
  %21 = fmul fast float %16, %19
  %22 = fmul fast float %17, %20
  %23 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %5, %dx.types.Handle %6, float %21, float %22, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %24 = extractvalue %dx.types.ResRet.f32 %23, 0
  %25 = extractvalue %dx.types.ResRet.f32 %23, 1
  %26 = extractvalue %dx.types.ResRet.f32 %23, 2
  %27 = mul i32 %8, 3
  %28 = add i32 0, %27
  %29 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %28
  store float %24, float addrspace(3)* %29, align 4
  %30 = mul i32 %8, 3
  %31 = add i32 1, %30
  %32 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %31
  store float %25, float addrspace(3)* %32, align 4
  %33 = mul i32 %8, 3
  %34 = add i32 2, %33
  %35 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %34
  store float %26, float addrspace(3)* %35, align 4
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %4, i32 %9, i32 %10, i32 undef, float %24, float %25, float %26, float %24, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %36 = and i32 %11, 1
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %92

; <label>:38                                      ; preds = %0
  %39 = add i32 %8, 1
  %40 = mul i32 %39, 3
  %41 = add i32 0, %40
  %42 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %41
  %43 = load float, float addrspace(3)* %42, align 4
  %44 = mul i32 %39, 3
  %45 = add i32 1, %44
  %46 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %45
  %47 = load float, float addrspace(3)* %46, align 4
  %48 = mul i32 %39, 3
  %49 = add i32 2, %48
  %50 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %49
  %51 = load float, float addrspace(3)* %50, align 4
  %52 = fadd fast float %43, %24
  %53 = fadd fast float %47, %25
  %54 = fadd fast float %51, %26
  %55 = add i32 %8, 8
  %56 = mul i32 %55, 3
  %57 = add i32 0, %56
  %58 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %57
  %59 = load float, float addrspace(3)* %58, align 4
  %60 = mul i32 %55, 3
  %61 = add i32 1, %60
  %62 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %61
  %63 = load float, float addrspace(3)* %62, align 4
  %64 = mul i32 %55, 3
  %65 = add i32 2, %64
  %66 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %65
  %67 = load float, float addrspace(3)* %66, align 4
  %68 = fadd fast float %52, %59
  %69 = fadd fast float %53, %63
  %70 = fadd fast float %54, %67
  %71 = add i32 %8, 9
  %72 = mul i32 %71, 3
  %73 = add i32 0, %72
  %74 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %73
  %75 = load float, float addrspace(3)* %74, align 4
  %76 = mul i32 %71, 3
  %77 = add i32 1, %76
  %78 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %77
  %79 = load float, float addrspace(3)* %78, align 4
  %80 = mul i32 %71, 3
  %81 = add i32 2, %80
  %82 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %81
  %83 = load float, float addrspace(3)* %82, align 4
  %84 = fadd fast float %68, %75
  %85 = fadd fast float %69, %79
  %86 = fadd fast float %70, %83
  %87 = fmul fast float %84, 2.500000e-01
  %88 = fmul fast float %85, 2.500000e-01
  %89 = fmul fast float %86, 2.500000e-01
  store float %87, float addrspace(3)* %29, align 4
  store float %88, float addrspace(3)* %32, align 4
  store float %89, float addrspace(3)* %35, align 4
  %90 = lshr i32 %9, 1
  %91 = lshr i32 %10, 1
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %3, i32 %90, i32 %91, i32 undef, float %87, float %88, float %89, float %87, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %92

; <label>:92                                      ; preds = %38, %0
  %93 = phi float [ %87, %38 ], [ %24, %0 ]
  %94 = phi float [ %88, %38 ], [ %25, %0 ]
  %95 = phi float [ %89, %38 ], [ %26, %0 ]
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %96 = and i32 %11, 3
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %152

; <label>:98                                      ; preds = %92
  %99 = add i32 %8, 2
  %100 = mul i32 %99, 3
  %101 = add i32 0, %100
  %102 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %101
  %103 = load float, float addrspace(3)* %102, align 4
  %104 = mul i32 %99, 3
  %105 = add i32 1, %104
  %106 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %105
  %107 = load float, float addrspace(3)* %106, align 4
  %108 = mul i32 %99, 3
  %109 = add i32 2, %108
  %110 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %109
  %111 = load float, float addrspace(3)* %110, align 4
  %112 = fadd fast float %103, %93
  %113 = fadd fast float %107, %94
  %114 = fadd fast float %111, %95
  %115 = add i32 %8, 16
  %116 = mul i32 %115, 3
  %117 = add i32 0, %116
  %118 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %117
  %119 = load float, float addrspace(3)* %118, align 4
  %120 = mul i32 %115, 3
  %121 = add i32 1, %120
  %122 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %121
  %123 = load float, float addrspace(3)* %122, align 4
  %124 = mul i32 %115, 3
  %125 = add i32 2, %124
  %126 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %125
  %127 = load float, float addrspace(3)* %126, align 4
  %128 = fadd fast float %112, %119
  %129 = fadd fast float %113, %123
  %130 = fadd fast float %114, %127
  %131 = add i32 %8, 18
  %132 = mul i32 %131, 3
  %133 = add i32 0, %132
  %134 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %133
  %135 = load float, float addrspace(3)* %134, align 4
  %136 = mul i32 %131, 3
  %137 = add i32 1, %136
  %138 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %137
  %139 = load float, float addrspace(3)* %138, align 4
  %140 = mul i32 %131, 3
  %141 = add i32 2, %140
  %142 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %141
  %143 = load float, float addrspace(3)* %142, align 4
  %144 = fadd fast float %128, %135
  %145 = fadd fast float %129, %139
  %146 = fadd fast float %130, %143
  %147 = fmul fast float %144, 2.500000e-01
  %148 = fmul fast float %145, 2.500000e-01
  %149 = fmul fast float %146, 2.500000e-01
  store float %147, float addrspace(3)* %29, align 4
  store float %148, float addrspace(3)* %32, align 4
  store float %149, float addrspace(3)* %35, align 4
  %150 = lshr i32 %9, 2
  %151 = lshr i32 %10, 2
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %2, i32 %150, i32 %151, i32 undef, float %147, float %148, float %149, float %147, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %152

; <label>:152                                     ; preds = %98, %92
  %153 = phi float [ %147, %98 ], [ %93, %92 ]
  %154 = phi float [ %148, %98 ], [ %94, %92 ]
  %155 = phi float [ %149, %98 ], [ %95, %92 ]
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %156 = and i32 %11, 7
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %212

; <label>:158                                     ; preds = %152
  %159 = add i32 %8, 4
  %160 = mul i32 %159, 3
  %161 = add i32 0, %160
  %162 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %161
  %163 = load float, float addrspace(3)* %162, align 4
  %164 = mul i32 %159, 3
  %165 = add i32 1, %164
  %166 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %165
  %167 = load float, float addrspace(3)* %166, align 4
  %168 = mul i32 %159, 3
  %169 = add i32 2, %168
  %170 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %169
  %171 = load float, float addrspace(3)* %170, align 4
  %172 = fadd fast float %163, %153
  %173 = fadd fast float %167, %154
  %174 = fadd fast float %171, %155
  %175 = add i32 %8, 32
  %176 = mul i32 %175, 3
  %177 = add i32 0, %176
  %178 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %177
  %179 = load float, float addrspace(3)* %178, align 4
  %180 = mul i32 %175, 3
  %181 = add i32 1, %180
  %182 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %181
  %183 = load float, float addrspace(3)* %182, align 4
  %184 = mul i32 %175, 3
  %185 = add i32 2, %184
  %186 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %185
  %187 = load float, float addrspace(3)* %186, align 4
  %188 = fadd fast float %172, %179
  %189 = fadd fast float %173, %183
  %190 = fadd fast float %174, %187
  %191 = add i32 %8, 36
  %192 = mul i32 %191, 3
  %193 = add i32 0, %192
  %194 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %193
  %195 = load float, float addrspace(3)* %194, align 4
  %196 = mul i32 %191, 3
  %197 = add i32 1, %196
  %198 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %197
  %199 = load float, float addrspace(3)* %198, align 4
  %200 = mul i32 %191, 3
  %201 = add i32 2, %200
  %202 = getelementptr [192 x float], [192 x float] addrspace(3)* @"\01?g_Tile@@3PAV?$vector@M$02@@A.v.1dim", i32 0, i32 %201
  %203 = load float, float addrspace(3)* %202, align 4
  %204 = fadd fast float %188, %195
  %205 = fadd fast float %189, %199
  %206 = fadd fast float %190, %203
  %207 = fmul fast float %204, 2.500000e-01
  %208 = fmul fast float %205, 2.500000e-01
  %209 = fmul fast float %206, 2.500000e-01
  %210 = lshr i32 %9, 3
  %211 = lshr i32 %10, 3
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %1, i32 %210, i32 %211, i32 undef, float %207, float %208, float %209, float %207, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %212

; <label>:212                                     ; preds = %158, %152
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.flattenedThreadIdInGroup.i32(i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #1

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #2

; Function Attrs: noduplicate nounwind
declare void @dx.op.barrier(i32, i32) #3

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #1

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }
attributes #3 = { noduplicate nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!17}

!0 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 2}
!2 = !{i32 1, i32 6}
!3 = !{!"cs", i32 6, i32 2}
!4 = !{!5, !8, !13, !15}
!5 = !{!6}
!6 = !{i32 0, %"class.Texture2D<vector<float, 3> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !7}
!7 = !{i32 0, i32 9}
!8 = !{!9, !10, !11, !12}
!9 = !{i32 0, %"class.RWTexture2D<vector<float, 3> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!10 = !{i32 1, %"class.RWTexture2D<vector<float, 3> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!11 = !{i32 2, %"class.RWTexture2D<vector<float, 3> >"* undef, !"", i32 0, i32 2, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!12 = !{i32 3, %"class.RWTexture2D<vector<float, 3> >"* undef, !"", i32 0, i32 3, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!13 = !{!14}
!14 = !{i32 0, %cb0* undef, !"", i32 0, i32 0, i32 1, i32 8, null}
!15 = !{!16}
!16 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!17 = !{void ()* @main, !"main", null, !4, !18}
!18 = !{i32 4, !19}
!19 = !{i32 8, i32 8, i32 1}

#endif

const unsigned char g_pDownsampleBloomAllCS[] = {
  0x44, 0x58, 0x42, 0x43, 0x8d, 0xbf, 0x15, 0x84, 0xb3, 0x58, 0x50, 0xb9,
  0xb9, 0x11, 0x54, 0x05, 0x3f, 0x75, 0x68, 0xb8, 0x01, 0x00, 0x00, 0x00,
  0x48, 0x16, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
  0x68, 0x01, 0x00, 0x00, 0x78, 0x02, 0x00, 0x00, 0xa4, 0x0a, 0x00, 0x00,
  0xc0, 0x0a, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0xf0, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x08, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x5c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x15, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0x7f, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x7f, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x54, 0x41, 0x54,
  0x24, 0x08, 0x00, 0x00, 0x62, 0x00, 0x05, 0x00, 0x09, 0x02, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x02, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x0c, 0x08, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x00, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x86, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x01, 0xd5, 0x06, 0x62, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x36,
  0x18, 0xc4, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x03, 0x48, 0x00, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x86, 0x09, 0x01, 0x01, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x61, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x9c, 0xc1, 0x0c,
  0x40, 0x02, 0x07, 0x00, 0x83, 0x08, 0xc1, 0x30, 0x02, 0x50, 0x82, 0x81,
  0x88, 0x39, 0x02, 0x30, 0x28, 0x82, 0x61, 0xd0, 0x51, 0x06, 0xc3, 0x30,
  0x28, 0xb9, 0x69, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x5f, 0x09, 0x69,
  0x25, 0x26, 0xbf, 0xb8, 0x6d, 0x54, 0x00, 0x00, 0x00, 0x18, 0x73, 0x04,
  0x08, 0x31, 0xf7, 0x0c, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x21, 0xd0,
  0x0c, 0x0b, 0x81, 0x82, 0xa6, 0x30, 0x8b, 0xe1, 0x38, 0x00, 0x00, 0x00,
  0x86, 0x61, 0x00, 0xf4, 0x94, 0x65, 0x30, 0x1c, 0xc3, 0x30, 0x00, 0x00,
  0x00, 0x18, 0x8a, 0xca, 0x30, 0x18, 0x06, 0x4d, 0x47, 0x0d, 0x97, 0x3f,
  0x61, 0x0f, 0x21, 0xf9, 0xdc, 0x46, 0x15, 0x2b, 0x31, 0xf9, 0xc5, 0x6d,
  0x23, 0x02, 0x00, 0x00, 0xa0, 0x10, 0x95, 0xe1, 0x18, 0x64, 0xcd, 0x11,
  0x04, 0xc5, 0x70, 0x0c, 0xc6, 0x30, 0x30, 0xca, 0x06, 0x02, 0x86, 0x11,
  0x06, 0x60, 0xa6, 0x36, 0x18, 0x07, 0x76, 0x08, 0x87, 0x79, 0x98, 0x07,
  0x37, 0xa0, 0x85, 0x72, 0xc0, 0x07, 0x7a, 0xa8, 0x07, 0x79, 0x28, 0x07,
  0x39, 0x20, 0x05, 0x3e, 0xb0, 0x87, 0x72, 0x18, 0x07, 0x7a, 0x78, 0x07,
  0x79, 0xe0, 0x03, 0x73, 0x60, 0x87, 0x77, 0x08, 0x07, 0x7a, 0x60, 0x03,
  0x30, 0x98, 0x03, 0x3f, 0x00, 0x03, 0x3f, 0xd0, 0x03, 0x3d, 0x68, 0x87,
  0x74, 0x80, 0x87, 0x79, 0xf8, 0x05, 0x7a, 0xc8, 0x07, 0x78, 0x28, 0x07,
  0x14, 0x18, 0x33, 0x89, 0xc1, 0x38, 0xb0, 0x43, 0x38, 0xcc, 0xc3, 0x3c,
  0xb8, 0x01, 0x2d, 0x94, 0x03, 0x3e, 0xd0, 0x43, 0x3d, 0xc8, 0x43, 0x39,
  0xc8, 0x01, 0x29, 0xf0, 0x81, 0x3d, 0x94, 0xc3, 0x38, 0xd0, 0xc3, 0x3b,
  0xc8, 0x03, 0x1f, 0x98, 0x03, 0x3b, 0xbc, 0x43, 0x38, 0xd0, 0x03, 0x1b,
  0x80, 0xc1, 0x1c, 0xf8, 0x01, 0x18, 0xf8, 0x01, 0x12, 0xb8, 0x8e, 0xbc,
  0x99, 0xc8, 0x60, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e, 0xdc, 0x40,
  0x16, 0x6e, 0x81, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1,
  0x1c, 0xe4, 0x80, 0x14, 0xf8, 0xc0, 0x1e, 0xca, 0x61, 0x1c, 0xe8, 0xe1,
  0x1d, 0xe4, 0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0x81,
  0x0d, 0xc0, 0x60, 0x0e, 0xfc, 0x00, 0x0c, 0xfc, 0x00, 0x05, 0x1c, 0x81,
  0xc3, 0x08, 0x02, 0x70, 0x83, 0x10, 0xd0, 0x28, 0x10, 0x69, 0xbc, 0x49,
  0x9a, 0x22, 0x4a, 0x98, 0x7c, 0x16, 0x60, 0x9e, 0x85, 0x88, 0xd8, 0x09,
  0x98, 0x08, 0x14, 0x18, 0x54, 0x02, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0x24, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x76,
  0x34, 0xf0, 0x90, 0x87, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0xcf, 0x01, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x04, 0x08, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0f, 0x10, 0x00, 0x02, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x22, 0x20, 0x00, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x4c, 0x40, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xb1, 0x80,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x93,
  0x01, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x16,
  0x08, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0xc2,
  0x46, 0x00, 0xc8, 0x28, 0x81, 0x22, 0x18, 0x01, 0x28, 0x86, 0x92, 0x28,
  0x83, 0x82, 0x28, 0x87, 0x42, 0x28, 0x40, 0x86, 0x42, 0x2a, 0xac, 0x52,
  0x1e, 0x28, 0xc8, 0x80, 0xa2, 0xa0, 0x60, 0x06, 0x80, 0xbe, 0x19, 0x00,
  0x0a, 0x67, 0x00, 0x68, 0x9c, 0x01, 0x20, 0x72, 0x06, 0x80, 0xcc, 0x19,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b,
  0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99,
  0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62,
  0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73,
  0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x04, 0x43, 0x99, 0x20, 0x18,
  0xcb, 0x06, 0x61, 0x20, 0x26, 0x08, 0x06, 0xb3, 0x41, 0x30, 0x0c, 0x0a,
  0x63, 0x73, 0x13, 0x04, 0xa3, 0xd9, 0x30, 0x20, 0x09, 0x31, 0x41, 0xf8,
  0x34, 0x22, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x42, 0x75, 0x66, 0x13, 0x04,
  0xc3, 0xd9, 0x20, 0x18, 0xcd, 0x86, 0xc4, 0x58, 0x18, 0xc3, 0x18, 0x08,
  0xc3, 0xd9, 0x10, 0x3c, 0x13, 0x84, 0x30, 0xd8, 0x78, 0x48, 0x95, 0xcd,
  0xd5, 0xb1, 0xd1, 0xc5, 0x4c, 0x10, 0xb0, 0x64, 0xc3, 0x62, 0x44, 0x92,
  0x61, 0x0c, 0xc4, 0x34, 0x4d, 0x0e, 0x0f, 0xa9, 0xb2, 0xb9, 0x3a, 0x36,
  0x3a, 0x99, 0x0d, 0xcb, 0x10, 0x55, 0xc6, 0x30, 0x10, 0xd3, 0x34, 0x39,
  0x3c, 0xa4, 0xca, 0xe6, 0xea, 0xd8, 0xe8, 0x66, 0x36, 0x2c, 0x44, 0x74,
  0x19, 0xc4, 0x40, 0x4c, 0xd3, 0xe4, 0x4c, 0x10, 0x8c, 0x87, 0x87, 0x54,
  0xd9, 0x5c, 0x1d, 0x1b, 0x1d, 0xcd, 0x86, 0x25, 0x8b, 0x34, 0x23, 0x1b,
  0x88, 0x69, 0x9a, 0x9c, 0x0d, 0x04, 0x65, 0x61, 0xdb, 0x04, 0x81, 0x0c,
  0x3a, 0x0e, 0x63, 0x62, 0x30, 0x13, 0x04, 0x03, 0xda, 0x80, 0x18, 0x9d,
  0x67, 0x18, 0xc3, 0x07, 0x6c, 0x08, 0xc0, 0x60, 0x82, 0x60, 0x06, 0x1e,
  0x1b, 0xa1, 0x34, 0xa6, 0x34, 0xb7, 0xb2, 0x30, 0xb9, 0x21, 0xb6, 0xb0,
  0x36, 0xb8, 0x0d, 0x88, 0x21, 0x06, 0x63, 0x60, 0x18, 0x83, 0x01, 0x6c,
  0x08, 0xc8, 0x60, 0x03, 0x01, 0x71, 0x61, 0x50, 0x06, 0x13, 0x84, 0x31,
  0xe0, 0x38, 0x9d, 0x7d, 0xa5, 0xb9, 0xd9, 0x95, 0xc9, 0xcd, 0x95, 0x11,
  0xa5, 0xb5, 0x95, 0xb9, 0xcd, 0xa5, 0xbd, 0xb9, 0xcd, 0x4d, 0x10, 0x8c,
  0x68, 0x83, 0x91, 0xa0, 0x41, 0x66, 0xa4, 0x41, 0xb3, 0x41, 0xf8, 0xd4,
  0x60, 0xc3, 0x60, 0x9c, 0xc1, 0x1a, 0x4c, 0x10, 0x8a, 0x60, 0x03, 0xb0,
  0x61, 0x30, 0xdc, 0xc0, 0x0d, 0x36, 0x04, 0x6f, 0xb0, 0x61, 0x18, 0xda,
  0x00, 0x0e, 0x48, 0xb4, 0x85, 0xa5, 0xb9, 0x4d, 0x10, 0x0c, 0x69, 0xc3,
  0xf0, 0x7d, 0xc3, 0x06, 0x61, 0x0e, 0xe8, 0x60, 0x43, 0xd1, 0x06, 0x72,
  0x00, 0x98, 0x41, 0x1d, 0x10, 0x0a, 0x93, 0x93, 0x0b, 0xcb, 0xfb, 0xa2,
  0x3b, 0x9b, 0x6b, 0xfb, 0x12, 0xcb, 0xa3, 0x2b, 0x9b, 0x9b, 0x20, 0x18,
  0x13, 0x9f, 0x30, 0x39, 0xb9, 0xb0, 0xbc, 0x2f, 0xba, 0xb3, 0xb9, 0xb6,
  0x2f, 0x36, 0xb2, 0x39, 0xba, 0x09, 0x82, 0x41, 0xf1, 0x10, 0x0b, 0x93,
  0x93, 0x4b, 0x2b, 0x93, 0x23, 0x22, 0x26, 0x17, 0xe6, 0x36, 0x86, 0x56,
  0x36, 0x47, 0xc3, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x6e, 0x82, 0x60, 0x54,
  0x2c, 0xd2, 0xdc, 0xe6, 0xe8, 0xe6, 0x26, 0x08, 0x86, 0x45, 0x22, 0xcd,
  0x8d, 0x6e, 0x6e, 0x82, 0x60, 0x5c, 0x44, 0xe8, 0xca, 0xf0, 0xbe, 0xdc,
  0xde, 0xe4, 0xda, 0x98, 0xd0, 0x95, 0xe1, 0x7d, 0xcd, 0xd1, 0xbd, 0xc9,
  0x95, 0xb1, 0xa8, 0x4b, 0x73, 0xa3, 0x9b, 0x9b, 0x20, 0x18, 0xd8, 0x06,
  0xea, 0x0e, 0xf0, 0x20, 0x0f, 0xf4, 0x60, 0x0f, 0x32, 0x3e, 0xc8, 0xfa,
  0xc0, 0x0f, 0xfe, 0x00, 0x14, 0x42, 0x41, 0x14, 0x46, 0x61, 0x20, 0x85,
  0x39, 0x28, 0x05, 0x53, 0xa8, 0xc2, 0xc6, 0x66, 0xd7, 0xe6, 0x92, 0x46,
  0x56, 0xe6, 0x46, 0x37, 0x25, 0x08, 0xaa, 0x90, 0xe1, 0xb9, 0xd8, 0x95,
  0xc9, 0xcd, 0xa5, 0xbd, 0xb9, 0x4d, 0x09, 0x88, 0x26, 0x64, 0x78, 0x2e,
  0x76, 0x61, 0x6c, 0x76, 0x65, 0x72, 0x53, 0x02, 0xa3, 0x0e, 0x19, 0x9e,
  0xcb, 0x1c, 0x5a, 0x18, 0x59, 0x99, 0x5c, 0xd3, 0x1b, 0x59, 0x19, 0xdb,
  0x94, 0x20, 0x29, 0x43, 0x86, 0xe7, 0x22, 0x57, 0x36, 0xf7, 0x56, 0x27,
  0x37, 0x56, 0x36, 0x37, 0x25, 0x28, 0x83, 0x4a, 0x64, 0x78, 0x2e, 0x74,
  0x79, 0x70, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
  0x6e, 0x73, 0x53, 0x84, 0x35, 0x80, 0x83, 0x3a, 0x64, 0x78, 0x2e, 0x65,
  0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x53, 0x82,
  0x3a, 0xe8, 0x42, 0x86, 0xe7, 0x32, 0xf6, 0x56, 0xe7, 0x46, 0x57, 0x26,
  0x37, 0x37, 0x25, 0x30, 0x05, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc,
  0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4,
  0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0x05, 0x50, 0x06, 0x81, 0xdf, 0xf9, 0x4b, 0x4d, 0xb3, 0xcb, 0x40, 0xe0,
  0x0c, 0x1a, 0xb4, 0xfe, 0x48, 0xf6, 0xf2, 0x98, 0xfe, 0x96, 0x03, 0x9b,
  0x24, 0x98, 0x0c, 0x08, 0x0c, 0xba, 0xec, 0xae, 0x18, 0x39, 0xdd, 0x36,
  0x83, 0x66, 0xb8, 0x7c, 0xe7, 0xf1, 0x03, 0x20, 0x8a, 0x10, 0x22, 0xb2,
  0x83, 0x6d, 0xb8, 0x7c, 0xe7, 0xf1, 0x85, 0x80, 0x2a, 0x0a, 0x22, 0x2a,
  0x1d, 0x60, 0x28, 0x09, 0x03, 0x10, 0x30, 0xbf, 0xb8, 0x6d, 0x43, 0x90,
  0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x88, 0x08, 0x60, 0x22, 0x42, 0xa0, 0x19,
  0x16, 0xc2, 0x04, 0xc4, 0x60, 0xb8, 0x7c, 0xe7, 0xf1, 0x8b, 0x05, 0x98,
  0x26, 0xa2, 0x21, 0x86, 0xf6, 0x88, 0x08, 0x60, 0x10, 0x07, 0xb1, 0x01,
  0x23, 0x87, 0x7a, 0x7c, 0xe4, 0xb6, 0x8d, 0xa0, 0x1a, 0x2e, 0xdf, 0x79,
  0x7c, 0x09, 0x60, 0x9e, 0x85, 0x28, 0x89, 0x8a, 0x58, 0xfc, 0xe2, 0xb6,
  0xad, 0xc0, 0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0x89, 0xb8, 0x26, 0x2a, 0x22,
  0xd8, 0xc9, 0x89, 0x08, 0xbf, 0xb8, 0x6d, 0x1b, 0x90, 0x86, 0xcb, 0x77,
  0x1e, 0x7f, 0x3a, 0x22, 0x02, 0x18, 0xc4, 0xc1, 0x47, 0x6e, 0xdb, 0x02,
  0x08, 0x06, 0x40, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf7, 0x95, 0x87, 0x47, 0x3e, 0x16, 0x1f, 0xc0, 0x5a, 0x4e, 0xa3, 0x9d,
  0x69, 0x7e, 0xef, 0x39, 0x44, 0x58, 0x49, 0x4c, 0x80, 0x0b, 0x00, 0x00,
  0x62, 0x00, 0x05, 0x00, 0xe0, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x02, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x68, 0x0b, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0xd7, 0x02, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x86, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x01, 0xd5, 0x06, 0x62,
  0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x36, 0x18, 0xc4, 0xff, 0xff,
  0xff, 0xff, 0x0f, 0x00, 0x03, 0x48, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x86,
  0x09, 0x01, 0x01, 0x00, 0x89, 0x20, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xa4, 0xc1, 0x0c, 0x40, 0x02, 0x07, 0x00,
  0x83, 0x08, 0xc1, 0x30, 0x02, 0x50, 0x82, 0x81, 0x88, 0x39, 0x02, 0x30,
  0x28, 0x82, 0x61, 0xd0, 0x51, 0x06, 0xc3, 0x30, 0x28, 0xb9, 0x69, 0xb8,
  0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x5f, 0x09, 0x69, 0x25, 0x26, 0xbf, 0xb8,
  0x6d, 0x54, 0x00, 0x00, 0x00, 0x18, 0x73, 0x04, 0x08, 0x31, 0xf7, 0x0c,
  0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x21, 0xd0, 0x0c, 0x0b, 0x81, 0x82,
  0xa6, 0x30, 0x8b, 0xe1, 0x38, 0x00, 0x00, 0x00, 0x86, 0x61, 0x00, 0xf4,
  0x94, 0x65, 0x30, 0x1c, 0xc3, 0x30, 0x00, 0x00, 0x00, 0x18, 0x8a, 0xca,
  0x30, 0x18, 0x06, 0x4d, 0x47, 0x0d, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9,
  0xdc, 0x46, 0x15, 0x2b, 0x31, 0xf9, 0xc5, 0x6d, 0x23, 0x02, 0x00, 0x00,
  0xa0, 0x10, 0x95, 0xe1, 0x18, 0x64, 0xcd, 0x11, 0x04, 0xc5, 0x70, 0x0c,
  0xc6, 0x30, 0x30, 0xca, 0x06, 0x02, 0x86, 0x11, 0x06, 0x60, 0xa6, 0x36,
  0x18, 0x07, 0x76, 0x08, 0x87, 0x79, 0x98, 0x07, 0x37, 0xa0, 0x85, 0x72,
  0xc0, 0x07, 0x7a, 0xa8, 0x07, 0x79, 0x28, 0x07, 0x39, 0x20, 0x05, 0x3e,
  0xb0, 0x87, 0x72, 0x18, 0x07, 0x7a, 0x78, 0x07, 0x79, 0xe0, 0x03, 0x73,
  0x60, 0x87, 0x77, 0x08, 0x07, 0x7a, 0x60, 0x03, 0x30, 0x98, 0x03, 0x3f,
  0x00, 0x03, 0x3f, 0xd0, 0x03, 0x3d, 0x68, 0x87, 0x74, 0x80, 0x87, 0x79,
  0xf8, 0x05, 0x7a, 0xc8, 0x07, 0x78, 0x28, 0x07, 0x14, 0x18, 0x33, 0x89,
  0xc1, 0x38, 0xb0, 0x43, 0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x01, 0x2d, 0x94,
  0x03, 0x3e, 0xd0, 0x43, 0x3d, 0xc8, 0x43, 0x39, 0xc8, 0x01, 0x29, 0xf0,
  0x81, 0x3d, 0x94, 0xc3, 0x38, 0xd0, 0xc3, 0x3b, 0xc8, 0x03, 0x1f, 0x98,
  0x03, 0x3b, 0xbc, 0x43, 0x38, 0xd0, 0x03, 0x1b, 0x80, 0xc1, 0x1c, 0xf8,
  0x01, 0x18, 0xf8, 0x01, 0x12, 0xb8, 0x8e, 0xbc, 0x99, 0xc8, 0x60, 0x1c,
  0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e, 0xdc, 0x40, 0x16, 0x6e, 0x81, 0x16,
  0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14,
  0xf8, 0xc0, 0x1e, 0xca, 0x61, 0x1c, 0xe8, 0xe1, 0x1d, 0xe4, 0x81, 0x0f,
  0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0x81, 0x0d, 0xc0, 0x60, 0x0e,
  0xfc, 0x00, 0x0c, 0xfc, 0x00, 0x05, 0x1c, 0x81, 0xc3, 0x08, 0x02, 0x70,
  0x83, 0x10, 0xd0, 0x28, 0x10, 0x69, 0xbc, 0x49, 0x9a, 0x22, 0x4a, 0x98,
  0x7c, 0x16, 0x60, 0x9e, 0x85, 0x88, 0xd8, 0x09, 0x98, 0x08, 0x14, 0x18,
  0x54, 0x0e, 0x22, 0x00, 0xc3, 0x14, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0x24, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x76,
  0x26, 0xf0, 0x90, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0xcf, 0x01, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x04, 0x08, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0f, 0x10, 0x00, 0x02, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x22, 0x20, 0x00, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x4c, 0x40, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xb1, 0x80,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x93,
  0x01, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x16,
  0x08, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0xc2,
  0x46, 0x00, 0xc8, 0x28, 0x81, 0x22, 0x28, 0x86, 0x11, 0x80, 0x92, 0x28,
  0x83, 0x82, 0x28, 0x04, 0x0a, 0x66, 0x00, 0xe8, 0x9b, 0x01, 0xa0, 0x70,
  0x06, 0x80, 0xc8, 0x19, 0x00, 0x32, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1,
  0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41,
  0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a,
  0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9,
  0x10, 0x04, 0x13, 0x04, 0x43, 0x99, 0x20, 0x18, 0xcb, 0x06, 0x61, 0x20,
  0x26, 0x08, 0x06, 0xb3, 0x41, 0x18, 0x0c, 0x0a, 0x63, 0x73, 0x1b, 0x06,
  0xc4, 0x20, 0x26, 0x08, 0x46, 0x33, 0x41, 0xf8, 0x26, 0x02, 0x13, 0x04,
  0xc3, 0xd9, 0x20, 0x28, 0xcd, 0x86, 0x44, 0x59, 0x18, 0x45, 0x19, 0x08,
  0xc5, 0xd9, 0x10, 0x3c, 0x13, 0x84, 0x30, 0xa0, 0x26, 0x08, 0x58, 0xb2,
  0x61, 0x51, 0x22, 0x46, 0x51, 0x06, 0x42, 0x92, 0x24, 0x67, 0xc3, 0x32,
  0x44, 0x8c, 0x32, 0x0c, 0x84, 0x24, 0x49, 0xce, 0x86, 0x85, 0x88, 0x18,
  0x85, 0x18, 0x08, 0x49, 0x92, 0x9c, 0x09, 0x82, 0xf1, 0x6c, 0x58, 0xac,
  0x88, 0x51, 0xac, 0x81, 0x90, 0x24, 0xc9, 0xd9, 0x40, 0x4c, 0x54, 0x75,
  0x4d, 0x10, 0xc8, 0xa0, 0x9a, 0x20, 0x18, 0xd0, 0x06, 0x44, 0xc9, 0x18,
  0x45, 0x19, 0x34, 0x60, 0x43, 0xb0, 0x4d, 0x10, 0xcc, 0xc0, 0xda, 0x80,
  0x28, 0x1d, 0xa3, 0x28, 0x83, 0x02, 0x6c, 0x08, 0xbc, 0x0d, 0x04, 0x84,
  0x71, 0xdf, 0x04, 0xa1, 0x08, 0x48, 0xb4, 0x85, 0xa5, 0xb9, 0x4d, 0x10,
  0x8c, 0x68, 0xc3, 0xa0, 0x69, 0xc3, 0x06, 0x61, 0x0c, 0xc8, 0x60, 0x43,
  0x11, 0x06, 0x62, 0x00, 0x80, 0x41, 0x19, 0x54, 0x61, 0x63, 0xb3, 0x6b,
  0x73, 0x49, 0x23, 0x2b, 0x73, 0xa3, 0x9b, 0x12, 0x04, 0x55, 0xc8, 0xf0,
  0x5c, 0xec, 0xca, 0xe4, 0xe6, 0xd2, 0xde, 0xdc, 0xa6, 0x04, 0x44, 0x13,
  0x32, 0x3c, 0x17, 0xbb, 0x30, 0x36, 0xbb, 0x32, 0xb9, 0x29, 0x81, 0x51,
  0x87, 0x0c, 0xcf, 0x65, 0x0e, 0x2d, 0x8c, 0xac, 0x4c, 0xae, 0xe9, 0x8d,
  0xac, 0x8c, 0x6d, 0x4a, 0x80, 0x94, 0x21, 0xc3, 0x73, 0x91, 0x2b, 0x9b,
  0x7b, 0xab, 0x93, 0x1b, 0x2b, 0x9b, 0x9b, 0x12, 0x7c, 0x75, 0xc8, 0xf0,
  0x5c, 0xca, 0xdc, 0xe8, 0xe4, 0xf2, 0xa0, 0xde, 0xd2, 0xdc, 0xe8, 0xe6,
  0xa6, 0x04, 0x65, 0x00, 0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06,
  0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f,
  0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1,
  0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x05, 0x50, 0x06, 0x81,
  0xdf, 0xf9, 0x4b, 0x4d, 0xb3, 0xcb, 0x40, 0xe0, 0x0c, 0x1a, 0xb4, 0xfe,
  0x48, 0xf6, 0xf2, 0x98, 0xfe, 0x96, 0x03, 0x9b, 0x24, 0x98, 0x0c, 0x08,
  0x0c, 0xba, 0xec, 0xae, 0x18, 0x39, 0xdd, 0x36, 0x83, 0x66, 0xb8, 0x7c,
  0xe7, 0xf1, 0x03, 0x20, 0x8a, 0x10, 0x22, 0xb2, 0x83, 0x6d, 0xb8, 0x7c,
  0xe7, 0xf1, 0x85, 0x80, 0x2a, 0x0a, 0x22, 0x2a, 0x1d, 0x60, 0x28, 0x09,
  0x03, 0x10, 0x30, 0xbf, 0xb8, 0x6d, 0x43, 0x90, 0x86, 0xcb, 0x77, 0x1e,
  0x5f, 0x88, 0x08, 0x60, 0x22, 0x42, 0xa0, 0x19, 0x16, 0xc2, 0x04, 0xc4,
  0x60, 0xb8, 0x7c, 0xe7, 0xf1, 0x8b, 0x05, 0x98, 0x26, 0xa2, 0x21, 0x86,
  0xf6, 0x88, 0x08, 0x60, 0x10, 0x07, 0xb1, 0x01, 0x23, 0x87, 0x7a, 0x7c,
  0xe4, 0xb6, 0x8d, 0xa0, 0x1a, 0x2e, 0xdf, 0x79, 0x7c, 0x09, 0x60, 0x9e,
  0x85, 0x28, 0x89, 0x8a, 0x58, 0xfc, 0xe2, 0xb6, 0xad, 0xc0, 0x1a, 0x2e,
  0xdf, 0x79, 0xfc, 0x89, 0xb8, 0x26, 0x2a, 0x22, 0xd8, 0xc9, 0x89, 0x08,
  0xbf, 0xb8, 0x6d, 0x1b, 0x90, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x3a, 0x22,
  0x02, 0x18, 0xc4, 0xc1, 0x47, 0x6e, 0xdb, 0x02, 0x08, 0x06, 0x40, 0x1a,
  0x00, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0x26, 0x01, 0x00, 0x00,
  0x13, 0x04, 0x47, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0xc4, 0x14, 0x41, 0x19, 0x8c, 0x00, 0x94, 0x47, 0x09, 0x90, 0x51, 0x72,
  0x33, 0x00, 0x65, 0x18, 0x50, 0xa0, 0x01, 0xa5, 0x1b, 0x50, 0xc0, 0x01,
  0x65, 0x57, 0x7c, 0x05, 0x52, 0x24, 0xe5, 0x50, 0x40, 0x85, 0x44, 0xc0,
  0x08, 0xc0, 0x0c, 0xc0, 0x18, 0x01, 0x08, 0x82, 0x20, 0xfe, 0x8d, 0x11,
  0x80, 0x20, 0x08, 0x82, 0x60, 0x30, 0x46, 0x00, 0x82, 0x20, 0x88, 0x7e,
  0x00, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x90, 0x99,
  0x81, 0x34, 0x7d, 0x5f, 0x19, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x41,
  0x76, 0x06, 0x13, 0x45, 0x06, 0x64, 0x60, 0x06, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x90, 0xa1, 0x01, 0x55, 0x99, 0x81, 0x19, 0x9c, 0xc1, 0x88,
  0x41, 0x02, 0x80, 0x20, 0x18, 0x64, 0x69, 0x50, 0x59, 0x64, 0x40, 0x06,
  0x68, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x99, 0x1a, 0x58, 0x59,
  0x19, 0x94, 0x41, 0x1a, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x41, 0xb6,
  0x06, 0xd7, 0x66, 0x06, 0x66, 0xa0, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82,
  0x60, 0x90, 0xb1, 0x01, 0xd6, 0x9d, 0xc1, 0x19, 0xac, 0xc1, 0x88, 0x41,
  0x01, 0x80, 0x20, 0x18, 0x1c, 0x73, 0x40, 0x8d, 0x18, 0x18, 0x00, 0x08,
  0x82, 0x41, 0x32, 0x07, 0x56, 0x1a, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82,
  0x41, 0x42, 0x07, 0x57, 0x1b, 0x54, 0x20, 0xec, 0x0d, 0x40, 0xdd, 0x00,
  0x94, 0x09, 0x8f, 0x7c, 0x4c, 0x80, 0xe4, 0x63, 0x82, 0x04, 0x1f, 0x13,
  0x26, 0xf8, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x81, 0x85, 0x07, 0xdd,
  0x22, 0x07, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0x56, 0x08, 0xf2,
  0xb1, 0x42, 0x90, 0xcf, 0x88, 0xc1, 0x03, 0x80, 0x20, 0x18, 0x3c, 0xa0,
  0x10, 0x06, 0x52, 0x24, 0x04, 0x9a, 0x76, 0x07, 0x77, 0x70, 0x06, 0xdb,
  0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0xd4, 0x94,
  0x07, 0x52, 0x7c, 0x10, 0xc0, 0x0a, 0x06, 0x55, 0xe8, 0x83, 0x60, 0xd8,
  0x80, 0x08, 0x8c, 0x01, 0x28, 0x8b, 0x0f, 0xa4, 0x44, 0x21, 0x80, 0x15,
  0x0c, 0xad, 0x00, 0x0a, 0xc1, 0xb0, 0x01, 0x11, 0x20, 0x03, 0x50, 0xd9,
  0x1f, 0x48, 0x91, 0x42, 0x00, 0x2b, 0x18, 0x60, 0x61, 0x14, 0x82, 0x61,
  0x03, 0x22, 0x50, 0x06, 0x60, 0xc4, 0xc0, 0x01, 0x40, 0x10, 0x0c, 0x22,
  0x56, 0x98, 0x03, 0x30, 0xd8, 0x34, 0x3a, 0x60, 0x16, 0x85, 0xb9, 0x83,
  0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x98, 0x56, 0x41, 0x0e, 0x46, 0xa1,
  0xb2, 0x53, 0xd0, 0xe1, 0x86, 0xa0, 0x14, 0xc0, 0x60, 0x96, 0x21, 0x10,
  0x82, 0xf2, 0x52, 0x01, 0x2a, 0x28, 0x05, 0x29, 0x54, 0x08, 0x60, 0x05,
  0x83, 0x2d, 0xa4, 0x42, 0x40, 0x01, 0x30, 0xaa, 0x48, 0x05, 0xa9, 0x57,
  0x08, 0x60, 0x05, 0x83, 0x2e, 0xb4, 0x42, 0x40, 0x01, 0x30, 0x2a, 0x69,
  0x05, 0x29, 0x59, 0x08, 0x60, 0x05, 0x83, 0x2f, 0xc4, 0x42, 0x40, 0x01,
  0x30, 0x2c, 0xd9, 0xe0, 0x63, 0xc6, 0x06, 0x1f, 0x1b, 0x36, 0xf8, 0x94,
  0x1b, 0xcc, 0x02, 0x54, 0x50, 0x0b, 0x52, 0xb8, 0x10, 0xc0, 0x0a, 0x06,
  0x73, 0xc8, 0x85, 0x80, 0x02, 0x60, 0x54, 0x91, 0x0b, 0x52, 0xbf, 0x10,
  0xc0, 0x0a, 0x06, 0x75, 0xe8, 0x85, 0x80, 0x02, 0x60, 0x54, 0xd2, 0x0b,
  0x52, 0xe2, 0x10, 0xc0, 0x0a, 0x06, 0x77, 0x08, 0x87, 0x80, 0x02, 0x60,
  0x18, 0x94, 0xc0, 0xc7, 0x20, 0x03, 0x3e, 0x06, 0x0d, 0xf0, 0x29, 0x3f,
  0x28, 0x07, 0xa8, 0xa0, 0x1c, 0xa4, 0xd0, 0x21, 0x80, 0x15, 0x0c, 0xf6,
  0x90, 0x0e, 0x01, 0x05, 0xc0, 0xa8, 0x22, 0x1d, 0xa4, 0xde, 0x21, 0x80,
  0x15, 0x0c, 0xfa, 0xd0, 0x0e, 0x01, 0x05, 0xc0, 0xa8, 0xa4, 0x1d, 0xa4,
  0xe4, 0x21, 0x80, 0x15, 0x0c, 0xfe, 0x10, 0x0f, 0x01, 0x05, 0xc0, 0x30,
  0x28, 0x81, 0x8f, 0x41, 0x06, 0x7c, 0x0c, 0x1a, 0xe0, 0x63, 0x83, 0x2d,
  0xc8, 0xc7, 0x86, 0x5b, 0x90, 0x8f, 0x0d, 0xb8, 0x20, 0x9f, 0x61, 0x03,
  0x82, 0x0f, 0x86, 0x01, 0x18, 0x36, 0x20, 0xf2, 0x40, 0x18, 0x80, 0x61,
  0x03, 0xc2, 0x0e, 0x82, 0x01, 0x28, 0x58, 0xe0, 0x07, 0x2c, 0x58, 0xe8,
  0x07, 0x1c, 0x31, 0x70, 0x00, 0x10, 0x04, 0x83, 0x68, 0x24, 0xd4, 0x01,
  0x17, 0x84, 0x60, 0x1d, 0x0a, 0x62, 0x28, 0xdc, 0x61, 0x96, 0x40, 0x18,
  0xa8, 0x00, 0x94, 0xc0, 0x24, 0x80, 0x81, 0x0a, 0x40, 0x09, 0x4c, 0x02,
  0x18, 0xa8, 0x00, 0x94, 0xc0, 0x24, 0x80, 0x11, 0x03, 0x03, 0x00, 0x41,
  0x30, 0x98, 0x4a, 0x82, 0x1d, 0xfa, 0xa1, 0x66, 0x81, 0x1f, 0x74, 0xb8,
  0x21, 0xf8, 0x07, 0x30, 0x98, 0x65, 0x18, 0x88, 0xa0, 0x70, 0x41, 0x24,
  0xa0, 0x82, 0x7f, 0x90, 0x12, 0x89, 0x00, 0x56, 0x30, 0xc0, 0xc4, 0x48,
  0x04, 0x14, 0x00, 0xa3, 0x8a, 0x91, 0x90, 0x4a, 0x89, 0x00, 0x56, 0x30,
  0xd0, 0xc4, 0x49, 0x04, 0x14, 0x00, 0xa3, 0x92, 0x93, 0x90, 0x62, 0x89,
  0x00, 0x56, 0x30, 0xe0, 0xc4, 0x4a, 0x04, 0x14, 0x00, 0xc3, 0x12, 0x09,
  0x3e, 0x66, 0x48, 0xf0, 0xb1, 0x41, 0x82, 0x4f, 0xa1, 0x43, 0x3e, 0x40,
  0x05, 0x2f, 0x21, 0x25, 0x13, 0x01, 0xac, 0x60, 0x00, 0x8b, 0x99, 0x08,
  0x28, 0x00, 0x46, 0x15, 0x33, 0x21, 0x95, 0x13, 0x01, 0xac, 0x60, 0x20,
  0x8b, 0x9b, 0x08, 0x28, 0x00, 0x46, 0x25, 0x37, 0x21, 0xc5, 0x13, 0x01,
  0xac, 0x60, 0x40, 0x8b, 0x9d, 0x08, 0x28, 0x00, 0x86, 0x41, 0x09, 0x7c,
  0x0c, 0x32, 0xe0, 0x63, 0xd0, 0x00, 0x9f, 0xc2, 0x07, 0x94, 0x80, 0x0a,
  0x7e, 0x42, 0x4a, 0x2c, 0x02, 0x58, 0xc1, 0x00, 0x17, 0x63, 0x11, 0x50,
  0x00, 0x8c, 0x2a, 0xc6, 0x42, 0x2a, 0x2d, 0x02, 0x58, 0xc1, 0x40, 0x17,
  0x67, 0x11, 0x50, 0x00, 0x8c, 0x4a, 0xce, 0x42, 0x8a, 0x2d, 0x02, 0x58,
  0xc1, 0x80, 0x17, 0x6b, 0x11, 0x50, 0x00, 0x0c, 0x83, 0x12, 0xf8, 0x18,
  0x64, 0xc0, 0xc7, 0xa0, 0x01, 0x3e, 0x36, 0xc0, 0x84, 0x7c, 0x6c, 0x88,
  0x09, 0xf9, 0xd8, 0x20, 0x13, 0xf2, 0x19, 0x36, 0x20, 0xec, 0x61, 0x18,
  0x80, 0x61, 0x03, 0x62, 0x1e, 0x84, 0x01, 0x18, 0x36, 0x20, 0xe0, 0x21,
  0x18, 0x80, 0x52, 0x89, 0xba, 0xc0, 0x52, 0x09, 0xbb, 0xc0, 0x11, 0x03,
  0x07, 0x00, 0x41, 0x30, 0x88, 0xfa, 0x82, 0x2c, 0x66, 0x42, 0x08, 0xca,
  0xa2, 0x20, 0x86, 0x02, 0x2d, 0x66, 0x09, 0x88, 0x81, 0x0a, 0x40, 0x19,
  0xe8, 0x41, 0x18, 0xa8, 0x00, 0x94, 0x81, 0x1e, 0x84, 0x81, 0x0a, 0x40,
  0x19, 0xe8, 0x41, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0xe9, 0x2f,
  0xcc, 0xe2, 0x2e, 0xaa, 0x25, 0x7e, 0x42, 0x87, 0x1b, 0x82, 0xbc, 0x00,
  0x83, 0x59, 0x86, 0xc2, 0x08, 0x4a, 0x26, 0xec, 0x02, 0x2a, 0xc8, 0x0b,
  0x29, 0xbe, 0x08, 0x60, 0x05, 0x83, 0x6a, 0xf4, 0x45, 0x40, 0x01, 0x30,
  0xaa, 0xe8, 0x0b, 0xa9, 0xd1, 0x08, 0x60, 0x05, 0x83, 0x6b, 0x84, 0x46,
  0x40, 0x01, 0x30, 0x2a, 0x09, 0x0d, 0x29, 0xd3, 0x08, 0x60, 0x05, 0x83,
  0x6c, 0x94, 0x46, 0x40, 0x01, 0x30, 0x2c, 0x91, 0xe0, 0x63, 0x86, 0x04,
  0x1f, 0x1b, 0x24, 0xf8, 0x94, 0x58, 0xc0, 0x05, 0x54, 0x90, 0x1a, 0x52,
  0xac, 0x11, 0xc0, 0x0a, 0x06, 0xdd, 0x68, 0x8d, 0x80, 0x02, 0x60, 0x54,
  0xd1, 0x1a, 0x52, 0xb3, 0x11, 0xc0, 0x0a, 0x06, 0xdf, 0x88, 0x8d, 0x80,
  0x02, 0x60, 0x54, 0x12, 0x1b, 0x52, 0xb6, 0x11, 0xc0, 0x0a, 0x06, 0xf1,
  0xa8, 0x8d, 0x80, 0x02, 0x60, 0x18, 0x94, 0xc0, 0xc7, 0x20, 0x03, 0x3e,
  0x06, 0x0d, 0xf0, 0x29, 0xb9, 0xf8, 0x0b, 0xa8, 0x20, 0x37, 0xa4, 0x78,
  0x23, 0x80, 0x15, 0x0c, 0xea, 0xd1, 0x1b, 0x01, 0x05, 0xc0, 0xa8, 0xa2,
  0x37, 0xa4, 0xc6, 0x23, 0x80, 0x15, 0x0c, 0xee, 0x11, 0x1e, 0x01, 0x05,
  0xc0, 0xa8, 0x24, 0x3c, 0xa4, 0xcc, 0x23, 0x80, 0x15, 0x0c, 0xf2, 0x51,
  0x1e, 0x01, 0x05, 0xc0, 0x30, 0x28, 0x81, 0x8f, 0x41, 0x06, 0x7c, 0x0c,
  0x1a, 0xe0, 0x63, 0x83, 0x6a, 0xc8, 0xc7, 0x86, 0xd5, 0x90, 0x8f, 0x0d,
  0xac, 0x21, 0x9f, 0x22, 0x8d, 0xf5, 0xc0, 0x22, 0x0d, 0xf6, 0xc0, 0x11,
  0x03, 0x07, 0x00, 0x41, 0x30, 0x88, 0xee, 0xc3, 0x37, 0x5c, 0x43, 0x08,
  0x7e, 0xa3, 0x20, 0x86, 0x42, 0x3c, 0x66, 0x09, 0x0c, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};
