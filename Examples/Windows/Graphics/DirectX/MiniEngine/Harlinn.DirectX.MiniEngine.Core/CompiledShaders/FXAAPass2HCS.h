#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader hash: 732f0634b9120f37ce662cd6d0ccd73c
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; cbuffer CB0
; {
;
;   struct CB0
;   {
;
;       float2 RcpTextureSize;                        ; Offset:    0
;       float ContrastThreshold;                      ; Offset:    8
;       float SubpixelRemoval;                        ; Offset:   12
;       uint LastQueueIndex;                          ; Offset:   16
;       uint2 StartPixel;                             ; Offset:   20
;   
;   } CB0;                                            ; Offset:    0 Size:    28
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; CB0                               cbuffer      NA          NA     CB0            cb0     1
; LinearSampler                     sampler      NA          NA      S0             s0     1
; Luma                              texture     f32          2d      T0             t0     1
; WorkQueue                         texture    byte         r/o      T1             t1     1
; ColorQueue                        texture     f32         buf      T2             t2     1
; DstColor                              UAV     u32          2d      U0             u0     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%"class.Texture2D<float>" = type { float, %"class.Texture2D<float>::mips_type" }
%"class.Texture2D<float>::mips_type" = type { i32 }
%struct.ByteAddressBuffer = type { i32 }
%"class.Buffer<vector<float, 3> >" = type { <3 x float> }
%"class.RWTexture2D<unsigned int>" = type { i32 }
%CB0 = type { <2 x float>, float, float, i32, <2 x i32> }
%struct.SamplerState = type { i32 }

@s_SampleDistances = internal unnamed_addr constant [8 x float] [float 1.000000e+00, float 2.500000e+00, float 4.500000e+00, float 6.500000e+00, float 8.500000e+00, float 1.050000e+01, float 1.450000e+01, float 2.250000e+01], align 4

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 2, i32 2, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %7 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %8 = shl i32 %7, 2
  %9 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %3, i32 %8, i32 undef, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %10 = extractvalue %dx.types.ResRet.i32 %9, 0
  %11 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %6, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %12 = extractvalue %dx.types.CBufRet.i32 %11, 1
  %13 = extractvalue %dx.types.CBufRet.i32 %11, 2
  %14 = lshr i32 %10, 8
  %15 = lshr i32 %10, 20
  %16 = and i32 %14, 4095
  %17 = add i32 %16, %12
  %18 = add i32 %13, %15
  %19 = and i32 %10, 1
  %20 = and i32 %10, 254
  %21 = uitofp i32 %20 to float
  %22 = shl nuw nsw i32 %19, 1
  %23 = add nsw i32 %22, -1
  %24 = add i32 %23, %18
  %25 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %4, i32 0, i32 %17, i32 %24, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %26 = extractvalue %dx.types.ResRet.f32 %25, 0
  %27 = uitofp i32 %17 to float
  %28 = uitofp i32 %18 to float
  %29 = uitofp i32 %19 to float
  %30 = fadd fast float %27, 5.000000e-01
  %31 = fadd fast float %28, %29
  %32 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %33 = extractvalue %dx.types.CBufRet.f32 %32, 0
  %34 = extractvalue %dx.types.CBufRet.f32 %32, 1
  %35 = fmul fast float %30, %33
  %36 = fmul fast float %34, %31
  %37 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %4, i32 0, i32 %17, i32 %18, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %38 = extractvalue %dx.types.ResRet.f32 %37, 0
  %39 = fadd fast float %38, %26
  %40 = fmul fast float %39, 5.000000e-01
  %41 = fsub fast float %26, %38
  %42 = fcmp fast ogt float %41, 0.000000e+00
  %43 = fcmp fast olt float %41, 0.000000e+00
  %44 = zext i1 %42 to i32
  %45 = zext i1 %43 to i32
  %46 = sub nsw i32 %44, %45
  %47 = sitofp i32 %46 to float
  %48 = call float @dx.op.unary.f32(i32 6, float %41)  ; FAbs(value)
  %49 = fmul fast float %48, 2.500000e-01
  br label %50

; <label>:50                                      ; preds = %98, %0
  %51 = phi float [ 2.250000e+01, %0 ], [ %80, %98 ]
  %52 = phi float [ 2.250000e+01, %0 ], [ %99, %98 ]
  %53 = phi i32 [ 0, %0 ], [ %81, %98 ]
  %54 = phi i32 [ 0, %0 ], [ %100, %98 ]
  %55 = phi i32 [ 0, %0 ], [ %101, %98 ]
  %56 = getelementptr inbounds [8 x float], [8 x float]* @s_SampleDistances, i32 0, i32 %55
  %57 = load float, float* %56, align 4, !tbaa !20
  %58 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %59 = extractvalue %dx.types.CBufRet.f32 %58, 0
  %60 = fmul fast float %59, %57
  %61 = fsub fast float %35, %60
  %62 = fadd fast float %60, %35
  %63 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %4, %dx.types.Handle %5, float %61, float %36, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %64 = extractvalue %dx.types.ResRet.f32 %63, 0
  %65 = fsub fast float %64, %40
  %66 = call float @dx.op.unary.f32(i32 6, float %65)  ; FAbs(value)
  %67 = fcmp fast oge float %66, %49
  %68 = fcmp fast olt float %57, %51
  %69 = and i1 %68, %67
  br i1 %69, label %70, label %79

; <label>:70                                      ; preds = %50
  %71 = fcmp fast ogt float %65, 0.000000e+00
  %72 = fcmp fast olt float %65, 0.000000e+00
  %73 = zext i1 %71 to i32
  %74 = zext i1 %72 to i32
  %75 = sub nsw i32 %73, %74
  %76 = sitofp i32 %75 to float
  %77 = fcmp fast oeq float %76, %47
  %78 = zext i1 %77 to i32
  br label %79

; <label>:79                                      ; preds = %70, %50
  %80 = phi float [ %57, %70 ], [ %51, %50 ]
  %81 = phi i32 [ %78, %70 ], [ %53, %50 ]
  %82 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %4, %dx.types.Handle %5, float %62, float %36, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %83 = extractvalue %dx.types.ResRet.f32 %82, 0
  %84 = fsub fast float %83, %40
  %85 = call float @dx.op.unary.f32(i32 6, float %84)  ; FAbs(value)
  %86 = fcmp fast oge float %85, %49
  %87 = fcmp fast olt float %57, %52
  %88 = and i1 %87, %86
  br i1 %88, label %89, label %98

; <label>:89                                      ; preds = %79
  %90 = fcmp fast ogt float %84, 0.000000e+00
  %91 = fcmp fast olt float %84, 0.000000e+00
  %92 = zext i1 %90 to i32
  %93 = zext i1 %91 to i32
  %94 = sub nsw i32 %92, %93
  %95 = sitofp i32 %94 to float
  %96 = fcmp fast oeq float %95, %47
  %97 = zext i1 %96 to i32
  br label %98

; <label>:98                                      ; preds = %89, %79
  %99 = phi float [ %57, %89 ], [ %52, %79 ]
  %100 = phi i32 [ %97, %89 ], [ %54, %79 ]
  %101 = add nuw nsw i32 %55, 1
  %102 = icmp eq i32 %101, 7
  br i1 %102, label %103, label %50

; <label>:103                                     ; preds = %98
  %104 = fmul fast float %21, 0x3F60204080000000
  %105 = call float @dx.op.binary.f32(i32 36, float %80, float %99)  ; FMin(a,b)
  %106 = fadd fast float %99, %80
  %107 = fdiv fast float %105, %106
  %108 = fsub fast float 5.000000e-01, %107
  %109 = fcmp fast olt float %80, %99
  %110 = icmp ne i32 %81, 0
  %111 = icmp ne i32 %100, 0
  %112 = select i1 %109, i1 %110, i1 %111
  %113 = select i1 %112, float %108, float 0.000000e+00
  %114 = call float @dx.op.binary.f32(i32 35, float %104, float %113)  ; FMax(a,b)
  %115 = fcmp fast ogt float %114, 0x3F847AE140000000
  br i1 %115, label %116, label %158

; <label>:116                                     ; preds = %103
  %117 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %2, i32 %7, i32 undef)  ; BufferLoad(srv,index,wot)
  %118 = extractvalue %dx.types.ResRet.f32 %117, 0
  %119 = extractvalue %dx.types.ResRet.f32 %117, 1
  %120 = extractvalue %dx.types.ResRet.f32 %117, 2
  %121 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %1, i32 undef, i32 %17, i32 %18, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %122 = extractvalue %dx.types.ResRet.i32 %121, 0
  %123 = shl i32 %122, 4
  %124 = and i32 %123, 32752
  %125 = call float @dx.op.legacyF16ToF32(i32 131, i32 %124)  ; LegacyF16ToF32(value)
  %126 = lshr i32 %122, 7
  %127 = and i32 %126, 32752
  %128 = call float @dx.op.legacyF16ToF32(i32 131, i32 %127)  ; LegacyF16ToF32(value)
  %129 = lshr i32 %122, 17
  %130 = and i32 %129, 32736
  %131 = call float @dx.op.legacyF16ToF32(i32 131, i32 %130)  ; LegacyF16ToF32(value)
  %132 = fsub fast float %118, %125
  %133 = fsub fast float %119, %128
  %134 = fsub fast float %120, %131
  %135 = fmul fast float %132, %114
  %136 = fmul fast float %133, %114
  %137 = fmul fast float %134, %114
  %138 = fadd fast float %135, %125
  %139 = fadd fast float %136, %128
  %140 = fadd fast float %137, %131
  %141 = call float @dx.op.binary.f32(i32 36, float %138, float 6.451200e+04)  ; FMin(a,b)
  %142 = call float @dx.op.binary.f32(i32 36, float %139, float 6.451200e+04)  ; FMin(a,b)
  %143 = call float @dx.op.binary.f32(i32 36, float %140, float 6.451200e+04)  ; FMin(a,b)
  %144 = call i32 @dx.op.legacyF32ToF16(i32 130, float %141)  ; LegacyF32ToF16(value)
  %145 = add i32 %144, 8
  %146 = lshr i32 %145, 4
  %147 = and i32 %146, 2047
  %148 = call i32 @dx.op.legacyF32ToF16(i32 130, float %142)  ; LegacyF32ToF16(value)
  %149 = shl i32 %148, 7
  %150 = add i32 %149, 1024
  %151 = and i32 %150, 4192256
  %152 = call i32 @dx.op.legacyF32ToF16(i32 130, float %143)  ; LegacyF32ToF16(value)
  %153 = shl i32 %152, 17
  %154 = add i32 %153, 2097152
  %155 = and i32 %154, -4194304
  %156 = or i32 %151, %147
  %157 = or i32 %156, %155
  call void @dx.op.textureStore.i32(i32 67, %dx.types.Handle %1, i32 %17, i32 %18, i32 undef, i32 %157, i32 %157, i32 %157, i32 %157, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %158

; <label>:158                                     ; preds = %116, %103
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.legacyF32ToF16(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind
declare void @dx.op.textureStore.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32, i8) #2

; Function Attrs: nounwind readnone
declare float @dx.op.legacyF16ToF32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #1

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!17}

!0 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 2}
!2 = !{i32 1, i32 6}
!3 = !{!"cs", i32 6, i32 2}
!4 = !{!5, !10, !13, !15}
!5 = !{!6, !8, !9}
!6 = !{i32 0, %"class.Texture2D<float>"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !7}
!7 = !{i32 0, i32 9}
!8 = !{i32 1, %struct.ByteAddressBuffer* undef, !"", i32 0, i32 1, i32 1, i32 11, i32 0, null}
!9 = !{i32 2, %"class.Buffer<vector<float, 3> >"* undef, !"", i32 0, i32 2, i32 1, i32 10, i32 0, !7}
!10 = !{!11}
!11 = !{i32 0, %"class.RWTexture2D<unsigned int>"* undef, !"", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !12}
!12 = !{i32 0, i32 5}
!13 = !{!14}
!14 = !{i32 0, %CB0* undef, !"", i32 0, i32 0, i32 1, i32 28, null}
!15 = !{!16}
!16 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!17 = !{void ()* @main, !"main", null, !4, !18}
!18 = !{i32 0, i64 16, i32 4, !19}
!19 = !{i32 64, i32 1, i32 1}
!20 = !{!21, !21, i64 0}
!21 = !{!"float", !22, i64 0}
!22 = !{!"omnipotent char", !23, i64 0}
!23 = !{!"Simple C/C++ TBAA"}

#endif

const unsigned char g_pFXAAPass2HCS[] = {
  0x44, 0x58, 0x42, 0x43, 0xb1, 0xb8, 0xa4, 0x30, 0x34, 0x35, 0x9e, 0xf3,
  0x02, 0xd8, 0xa1, 0x01, 0xde, 0xc8, 0x23, 0x61, 0x01, 0x00, 0x00, 0x00,
  0x64, 0x19, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
  0x50, 0x01, 0x00, 0x00, 0x14, 0x02, 0x00, 0x00, 0x20, 0x0c, 0x00, 0x00,
  0x3c, 0x0c, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0xd8, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0xbc, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x15, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0x7f, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x53, 0x54, 0x41, 0x54, 0x04, 0x0a, 0x00, 0x00,
  0x62, 0x00, 0x05, 0x00, 0x81, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x02, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xec, 0x09, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x78, 0x02, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x86, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x01, 0xd5, 0x06, 0x62,
  0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xf4, 0xc1, 0x0c, 0x40, 0x22, 0x00, 0x14,
  0x8c, 0x00, 0x94, 0x60, 0x20, 0x62, 0x8e, 0x00, 0x0c, 0xca, 0x60, 0x18,
  0x06, 0x1d, 0x37, 0x0d, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x2b, 0x21,
  0xad, 0xc4, 0xe4, 0x23, 0xb7, 0x8d, 0x0a, 0xc3, 0x30, 0x0c, 0x63, 0x8e,
  0x00, 0x21, 0xe5, 0x9e, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x3f, 0x04,
  0x9a, 0x61, 0x21, 0x50, 0xb0, 0x94, 0x23, 0x31, 0x18, 0xc3, 0x50, 0x0c,
  0x6a, 0x6e, 0x1a, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x57, 0x42, 0x5a,
  0x89, 0xc9, 0x2f, 0x6e, 0x1b, 0x15, 0x00, 0x00, 0x00, 0x46, 0x51, 0x1e,
  0x83, 0x31, 0x0c, 0xc3, 0x30, 0x0c, 0x83, 0xa0, 0x32, 0x18, 0x06, 0x40,
  0x52, 0x19, 0x00, 0x03, 0x20, 0xaa, 0x30, 0x8f, 0xc1, 0x30, 0x00, 0x00,
  0x00, 0x86, 0x61, 0x00, 0x64, 0x15, 0x02, 0x30, 0x00, 0x80, 0xb0, 0x52,
  0x3c, 0x06, 0x63, 0x18, 0xa4, 0x15, 0x25, 0x31, 0x18, 0xc3, 0x30, 0x0c,
  0xc3, 0x30, 0x88, 0x2b, 0xcb, 0x60, 0x30, 0x86, 0x61, 0x18, 0x86, 0x61,
  0x28, 0xe4, 0x95, 0x01, 0x30, 0x0c, 0x02, 0x8f, 0x1a, 0x2e, 0x7f, 0xc2,
  0x1e, 0x42, 0xf2, 0xb9, 0x8d, 0x2a, 0x56, 0x62, 0xf2, 0x91, 0xdb, 0x46,
  0x84, 0x61, 0x18, 0x46, 0x21, 0x44, 0x83, 0x31, 0x68, 0x3c, 0x6a, 0xb8,
  0xfc, 0x09, 0x7b, 0x08, 0xc9, 0xe7, 0x36, 0xaa, 0x58, 0x89, 0xc9, 0x2f,
  0x6e, 0x1b, 0x11, 0x00, 0x00, 0x00, 0x85, 0x28, 0x0d, 0xc6, 0x20, 0x73,
  0x8e, 0x20, 0x28, 0x06, 0x63, 0x28, 0x86, 0x81, 0x52, 0x3a, 0x10, 0x30,
  0x53, 0x18, 0x8c, 0x03, 0x3b, 0x84, 0xc3, 0x3c, 0xcc, 0x83, 0x1b, 0xd0,
  0x42, 0x39, 0xe0, 0x03, 0x3d, 0xd4, 0x83, 0x3c, 0x94, 0x83, 0x1c, 0x90,
  0x02, 0x1f, 0x98, 0x03, 0x3b, 0xbc, 0x43, 0x38, 0xd0, 0x83, 0x1f, 0xe8,
  0x81, 0x1e, 0xb4, 0x43, 0x3a, 0xc0, 0xc3, 0x3c, 0xfc, 0x02, 0x3d, 0xe4,
  0x03, 0x3c, 0x94, 0x03, 0x0a, 0x8c, 0x99, 0xac, 0x71, 0x60, 0x87, 0x70,
  0x98, 0x87, 0x79, 0x70, 0x03, 0x5a, 0x28, 0x07, 0x7c, 0xa0, 0x87, 0x7a,
  0x90, 0x87, 0x72, 0x90, 0x03, 0x52, 0xe0, 0x03, 0x73, 0x60, 0x87, 0x77,
  0x08, 0x07, 0x7a, 0xf0, 0x03, 0x24, 0x00, 0x2c, 0xb5, 0x87, 0x49, 0x53,
  0x44, 0x09, 0x93, 0xbf, 0x61, 0x13, 0xa1, 0x0d, 0x43, 0x44, 0x48, 0xd2,
  0x46, 0x15, 0x05, 0x11, 0xa1, 0xc0, 0xa0, 0x77, 0x18, 0x61, 0x00, 0x66,
  0xfa, 0xc6, 0x81, 0x1d, 0xc2, 0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x44, 0xa1,
  0x1e, 0xcc, 0xc1, 0x1c, 0xca, 0x41, 0x1e, 0xf8, 0xc0, 0x1e, 0xca, 0x61,
  0x1c, 0xe8, 0xe1, 0x1d, 0xe4, 0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21,
  0x1c, 0xe8, 0x81, 0x0d, 0xc0, 0x60, 0x0e, 0xfc, 0x00, 0x0c, 0xfc, 0x00,
  0x05, 0x31, 0xc9, 0x33, 0x7d, 0xe3, 0xc0, 0x0e, 0xe1, 0x30, 0x0f, 0xf3,
  0xe0, 0x06, 0xb2, 0x70, 0x0b, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f, 0xf5,
  0x20, 0x0f, 0xe5, 0x20, 0x07, 0xa4, 0xc0, 0x07, 0xf5, 0xe0, 0x0e, 0xf3,
  0x90, 0x0e, 0xe7, 0xe0, 0x0e, 0xe5, 0x40, 0x0e, 0x60, 0x90, 0x0e, 0xee,
  0x40, 0x0f, 0x7e, 0x80, 0x02, 0x83, 0xe8, 0x61, 0x04, 0x01, 0x18, 0x46,
  0x10, 0x8c, 0x1b, 0xb8, 0x8d, 0x46, 0x85, 0x0d, 0x00, 0xc6, 0x4d, 0xf8,
  0x4d, 0xd2, 0x14, 0x51, 0xc2, 0xe4, 0xb3, 0x00, 0xf3, 0x2c, 0x44, 0xc4,
  0x4e, 0xc0, 0x44, 0xa0, 0xc0, 0x20, 0x7d, 0x8e, 0x00, 0x14, 0x00, 0x00,
  0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e,
  0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07,
  0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
  0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f, 0x24, 0x90, 0x21, 0x23,
  0x45, 0x44, 0x80, 0x1d, 0x4c, 0x30, 0xc0, 0xc1, 0x30, 0x00, 0x00, 0x10,
  0x00, 0x00, 0x30, 0xe4, 0x21, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xc8, 0x73, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xa7, 0x01, 0x02, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x0f, 0x04, 0x04, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x09, 0x08, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x14, 0x10,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x2c,
  0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2,
  0x60, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
  0xe4, 0xd1, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x60, 0xc8, 0xc3, 0x01, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xc0, 0x90, 0xc7, 0x03, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0x0f, 0x18, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x67, 0x0c, 0x80, 0x00, 0x10, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x06, 0x40, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x49, 0x03,
  0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x02,
  0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0xe2,
  0x0b, 0x84, 0x8c, 0x12, 0x28, 0x82, 0x11, 0x80, 0x62, 0x28, 0x89, 0xb2,
  0x28, 0x8a, 0x52, 0x28, 0x9c, 0x32, 0x28, 0x87, 0x82, 0x28, 0x8c, 0x02,
  0x29, 0x94, 0x42, 0x28, 0xc0, 0x80, 0x72, 0x2b, 0x60, 0x81, 0xe2, 0x28,
  0x1f, 0x42, 0x47, 0x00, 0x6a, 0x80, 0xdc, 0x19, 0x00, 0x82, 0x67, 0x00,
  0x68, 0x9e, 0x01, 0xa0, 0x7a, 0x06, 0x80, 0xf0, 0x19, 0x00, 0xca, 0x67,
  0x00, 0x68, 0x9f, 0x01, 0xa0, 0x60, 0x2c, 0x04, 0x04, 0x41, 0x10, 0xff,
  0x40, 0x10, 0x04, 0x45, 0x30, 0x00, 0x41, 0x10, 0x4c, 0xc1, 0x00, 0x04,
  0x41, 0xb0, 0x05, 0x03, 0x10, 0x04, 0x61, 0x18, 0x0c, 0x40, 0x10, 0x84,
  0x65, 0x30, 0x00, 0x41, 0x10, 0xb6, 0xc1, 0x00, 0x04, 0x41, 0x74, 0x07,
  0x03, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b,
  0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99,
  0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62,
  0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73,
  0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x04, 0x23, 0x9a, 0x20, 0x18,
  0xd2, 0x06, 0x61, 0x20, 0x26, 0x08, 0xc6, 0xb4, 0x41, 0x30, 0x0c, 0x0a,
  0x63, 0x73, 0x13, 0x04, 0x83, 0xda, 0x30, 0x20, 0x09, 0x31, 0x41, 0x70,
  0x03, 0x34, 0x20, 0xc1, 0x54, 0xd7, 0x16, 0x36, 0x41, 0x30, 0xaa, 0x0d,
  0x82, 0xd1, 0x6c, 0x48, 0x8c, 0x85, 0x31, 0x8c, 0x81, 0x30, 0x9c, 0x09,
  0x02, 0x1c, 0xa4, 0x01, 0x93, 0xab, 0x37, 0xb9, 0xb5, 0xa8, 0xba, 0xb2,
  0xba, 0xb2, 0x09, 0x82, 0x61, 0x6d, 0x48, 0x06, 0x28, 0x32, 0x86, 0x41,
  0x32, 0x80, 0x09, 0xc2, 0x1c, 0xa8, 0x01, 0x95, 0xa1, 0x37, 0xb6, 0x37,
  0xb9, 0xa8, 0xba, 0xb2, 0xba, 0xb2, 0x09, 0x82, 0x71, 0x6d, 0x48, 0x08,
  0xaa, 0x32, 0x88, 0xc1, 0x32, 0x9c, 0x0d, 0xc3, 0x33, 0x5d, 0x13, 0x84,
  0x3a, 0x58, 0x03, 0x22, 0x44, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
  0x13, 0x04, 0x34, 0x30, 0x83, 0x09, 0x82, 0x81, 0x6d, 0x10, 0x0c, 0x6e,
  0xc3, 0x62, 0x64, 0x9a, 0x61, 0x0c, 0xc4, 0xb6, 0x6d, 0xdd, 0x86, 0xc0,
  0x9b, 0x20, 0xe4, 0x41, 0x1b, 0x70, 0x18, 0x12, 0x82, 0x99, 0x20, 0x18,
  0xd9, 0x06, 0xc4, 0x00, 0x83, 0x30, 0x30, 0x8c, 0x41, 0x0c, 0x80, 0x0d,
  0xc1, 0x18, 0x4c, 0x10, 0xf6, 0xc0, 0x0d, 0xd8, 0x30, 0xa5, 0xb9, 0x95,
  0x85, 0xc9, 0x4d, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0xc9, 0x6d, 0x40, 0x8c,
  0x32, 0x30, 0x03, 0xc3, 0x18, 0x0c, 0x60, 0x43, 0x70, 0x06, 0x1b, 0x08,
  0xec, 0x23, 0x03, 0x34, 0x98, 0x20, 0xe0, 0x01, 0x1b, 0xd0, 0x91, 0x1a,
  0x83, 0xa3, 0x2a, 0xc3, 0xa3, 0xab, 0x93, 0x2b, 0x9b, 0x4a, 0xd3, 0x2b,
  0x9b, 0x20, 0x18, 0xda, 0x04, 0xc1, 0xd8, 0x26, 0x08, 0x68, 0x70, 0x06,
  0x1b, 0x90, 0x64, 0x0d, 0xd8, 0xc0, 0x68, 0x83, 0xa6, 0x71, 0x03, 0x46,
  0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x73, 0x74, 0x54, 0x68, 0x72, 0x65,
  0x73, 0x68, 0x6f, 0x6c, 0x64, 0x13, 0x04, 0x83, 0xdb, 0x60, 0x24, 0x70,
  0xc0, 0x06, 0x71, 0xd0, 0x06, 0x0d, 0x9f, 0xa9, 0x3a, 0x31, 0xb8, 0x34,
  0xbc, 0x32, 0x36, 0xa9, 0xb2, 0xb6, 0x37, 0xbb, 0x30, 0xb6, 0x09, 0x82,
  0xd1, 0x6d, 0x30, 0x92, 0x39, 0x60, 0x03, 0x3a, 0x68, 0x83, 0x86, 0x0e,
  0x53, 0xd8, 0x1c, 0x5d, 0x54, 0x5d, 0x59, 0x5d, 0x59, 0x92, 0x1b, 0x59,
  0x19, 0xde, 0x04, 0xc1, 0xf0, 0x36, 0x18, 0x89, 0x1d, 0xb0, 0xc1, 0x1d,
  0xb4, 0x01, 0x47, 0x65, 0x8a, 0x2e, 0x4c, 0x8e, 0x0e, 0x2a, 0x0d, 0xaf,
  0x8c, 0x6d, 0x82, 0x60, 0x7c, 0x1b, 0x90, 0x24, 0x0f, 0xd8, 0x40, 0x0f,
  0xda, 0x80, 0x6b, 0xdc, 0x60, 0x83, 0x21, 0x06, 0x6f, 0x20, 0x07, 0x75,
  0x80, 0x07, 0x7b, 0xb0, 0x61, 0x30, 0xd4, 0x80, 0x0f, 0x26, 0x08, 0x45,
  0xb0, 0x01, 0xd8, 0x30, 0x18, 0x7f, 0xf0, 0x07, 0x1b, 0x02, 0x50, 0xd8,
  0x30, 0x0c, 0x7e, 0x10, 0x0a, 0x24, 0xda, 0xc2, 0xd2, 0xdc, 0x26, 0x08,
  0x7c, 0x00, 0x4d, 0x10, 0x0c, 0x30, 0x98, 0x20, 0x18, 0x61, 0xb0, 0x61,
  0x30, 0x85, 0x61, 0xd8, 0x40, 0x18, 0xa4, 0x50, 0x0a, 0xa7, 0xb0, 0xa1,
  0xf0, 0x83, 0x51, 0x00, 0xd2, 0x00, 0x15, 0x88, 0x88, 0xc9, 0x85, 0xb9,
  0x8d, 0xa1, 0x95, 0xcd, 0xd1, 0x30, 0x63, 0x7b, 0x0b, 0xa3, 0x9b, 0x9b,
  0x20, 0x18, 0x62, 0xc0, 0x22, 0xcd, 0x6d, 0x8e, 0x6e, 0x6e, 0x82, 0x60,
  0x8c, 0x01, 0x89, 0x34, 0x37, 0xba, 0xb9, 0x09, 0x82, 0x41, 0x06, 0x44,
  0xe8, 0xca, 0xf0, 0xbe, 0xd8, 0xde, 0xc2, 0xc8, 0x88, 0xd0, 0x95, 0xe1,
  0x7d, 0xb9, 0xbd, 0xc9, 0xb5, 0x31, 0xa1, 0x2b, 0xc3, 0xfb, 0x9a, 0xa3,
  0x7b, 0x93, 0x2b, 0x63, 0x51, 0x97, 0xe6, 0x46, 0x37, 0x37, 0x41, 0x30,
  0xca, 0x60, 0x03, 0xa4, 0x0a, 0xa5, 0xb0, 0x0a, 0xac, 0xd0, 0x0a, 0xae,
  0xf0, 0x0a, 0xb0, 0x10, 0x0b, 0x9c, 0x2c, 0x10, 0xb3, 0x30, 0xd0, 0x42,
  0x2d, 0x54, 0x61, 0x63, 0xb3, 0x6b, 0x73, 0x49, 0x23, 0x2b, 0x73, 0xa3,
  0x9b, 0x12, 0x04, 0x55, 0xc8, 0xf0, 0x5c, 0xec, 0xca, 0xe4, 0xe6, 0xd2,
  0xde, 0xdc, 0xa6, 0x04, 0x44, 0x13, 0x32, 0x3c, 0x17, 0xbb, 0x30, 0x36,
  0xbb, 0x32, 0xb9, 0x29, 0x81, 0x51, 0x87, 0x0c, 0xcf, 0x65, 0x0e, 0x2d,
  0x8c, 0xac, 0x4c, 0xae, 0xe9, 0x8d, 0xac, 0x8c, 0x6d, 0x4a, 0x90, 0x94,
  0x21, 0xc3, 0x73, 0x91, 0x2b, 0x9b, 0x7b, 0xab, 0x93, 0x1b, 0x2b, 0x9b,
  0x9b, 0x12, 0xa0, 0x41, 0x25, 0x32, 0x3c, 0x17, 0xba, 0x3c, 0xb8, 0xb2,
  0x20, 0x37, 0xb7, 0x37, 0xba, 0x30, 0xba, 0xb4, 0x37, 0xb7, 0xb9, 0x29,
  0x02, 0x1f, 0x84, 0x42, 0x1d, 0x32, 0x3c, 0x97, 0x32, 0x37, 0x3a, 0xb9,
  0x3c, 0xa8, 0xb7, 0x34, 0x37, 0xba, 0xb9, 0x29, 0x01, 0x2a, 0x74, 0x21,
  0xc3, 0x73, 0x19, 0x7b, 0xab, 0x73, 0xa3, 0x2b, 0x93, 0x9b, 0x9b, 0x12,
  0xd4, 0x02, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06,
  0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f,
  0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1,
  0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x86, 0x00, 0x0d, 0x97,
  0xef, 0x3c, 0x7e, 0x80, 0x34, 0x40, 0x84, 0xf9, 0xc5, 0x6d, 0x5b, 0x02,
  0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x01, 0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0,
  0xe0, 0x17, 0xb7, 0x6d, 0x0e, 0xdb, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x01,
  0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0, 0x50, 0x12, 0x06, 0x20, 0x60, 0x7e,
  0x71, 0xdb, 0xd6, 0xb0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x50, 0x45,
  0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02, 0xe6, 0x23, 0xb7,
  0x6d, 0x0f, 0xd2, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11, 0x01, 0x4c, 0x44,
  0x08, 0x34, 0xc3, 0x42, 0x18, 0x03, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x0b,
  0x61, 0x00, 0x02, 0xf6, 0xd5, 0x7a, 0xeb, 0x7c, 0xb7, 0x6d, 0x05, 0xd4,
  0x70, 0xf9, 0xce, 0xe3, 0x2f, 0x84, 0x01, 0x08, 0xd8, 0x77, 0xdb, 0xad,
  0xf3, 0xd5, 0xba, 0x0d, 0x5c, 0xc3, 0xe5, 0x3b, 0x8f, 0x1f, 0x01, 0xd6,
  0x46, 0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0xf8, 0xc8, 0x6d, 0xdb, 0x41,
  0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x12, 0xc0, 0x3c, 0x0b, 0x51, 0x12, 0x15,
  0xb1, 0xf8, 0xc5, 0x6d, 0x1b, 0x41, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x13,
  0x71, 0x4d, 0x54, 0x44, 0x94, 0x0e, 0x30, 0xf8, 0xc5, 0x6d, 0x9b, 0x42,
  0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x13, 0x71, 0x4d, 0x54, 0x44, 0x94, 0x0e,
  0x30, 0xf8, 0xc8, 0x6d, 0xdb, 0x82, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x13,
  0x71, 0x4d, 0x54, 0x44, 0xb0, 0x93, 0x13, 0x11, 0x3e, 0x72, 0xdb, 0x26,
  0x20, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x74, 0x44, 0x04, 0x30, 0x88, 0x83,
  0x8f, 0xdc, 0xb6, 0x19, 0x3c, 0xc3, 0xe5, 0x3b, 0x8f, 0x4f, 0x35, 0x40,
  0x84, 0xf9, 0xc5, 0x6d, 0x5b, 0x00, 0xc1, 0x00, 0x48, 0x63, 0x00, 0x91,
  0xf4, 0xb3, 0x00, 0xf3, 0x2c, 0x44, 0x87, 0x48, 0x13, 0xd0, 0x08, 0x84,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x2f, 0x06, 0x34,
  0xb9, 0x12, 0x0f, 0x37, 0xce, 0x66, 0x2c, 0xd6, 0xd0, 0xcc, 0xd7, 0x3c,
  0x44, 0x58, 0x49, 0x4c, 0x20, 0x0d, 0x00, 0x00, 0x62, 0x00, 0x05, 0x00,
  0x48, 0x03, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x02, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x08, 0x0d, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x3f, 0x03, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x86, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x01, 0xd5, 0x06, 0x62, 0xf8, 0xff, 0xff, 0xff,
  0xff, 0x01, 0x90, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0xfc, 0xc1, 0x0c, 0x40, 0x22, 0x00, 0x14, 0x8c, 0x00, 0x94, 0x60,
  0x20, 0x62, 0x8e, 0x00, 0x0c, 0xca, 0x60, 0x18, 0x06, 0x1d, 0x37, 0x0d,
  0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x2b, 0x21, 0xad, 0xc4, 0xe4, 0x23,
  0xb7, 0x8d, 0x0a, 0xc3, 0x30, 0x0c, 0x63, 0x8e, 0x00, 0x21, 0xe5, 0x9e,
  0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x3f, 0x04, 0x9a, 0x61, 0x21, 0x50,
  0xb0, 0x94, 0x23, 0x31, 0x18, 0xc3, 0x50, 0x0c, 0x6a, 0x6e, 0x1a, 0x2e,
  0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x57, 0x42, 0x5a, 0x89, 0xc9, 0x2f, 0x6e,
  0x1b, 0x15, 0x00, 0x00, 0x00, 0x46, 0x51, 0x1e, 0x83, 0x31, 0x0c, 0xc3,
  0x30, 0x0c, 0x83, 0xa0, 0x32, 0x18, 0x06, 0x40, 0x52, 0x19, 0x00, 0x03,
  0x20, 0xaa, 0x30, 0x8f, 0xc1, 0x30, 0x00, 0x00, 0x00, 0x86, 0x61, 0x00,
  0x64, 0x15, 0x02, 0x30, 0x00, 0x80, 0xb0, 0x52, 0x3c, 0x06, 0x63, 0x18,
  0xa4, 0x15, 0x25, 0x31, 0x18, 0xc3, 0x30, 0x0c, 0xc3, 0x30, 0x88, 0x2b,
  0xcb, 0x60, 0x30, 0x86, 0x61, 0x18, 0x86, 0x61, 0x28, 0xe4, 0x95, 0x01,
  0x30, 0x0c, 0x02, 0x8f, 0x1a, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0xb9,
  0x8d, 0x2a, 0x56, 0x62, 0xf2, 0x91, 0xdb, 0x46, 0x84, 0x61, 0x18, 0x46,
  0x21, 0x44, 0x83, 0x31, 0x68, 0x3c, 0x6a, 0xb8, 0xfc, 0x09, 0x7b, 0x08,
  0xc9, 0xe7, 0x36, 0xaa, 0x58, 0x89, 0xc9, 0x2f, 0x6e, 0x1b, 0x11, 0x00,
  0x00, 0x00, 0x85, 0x28, 0x0d, 0xc6, 0x20, 0x73, 0x8e, 0x20, 0x28, 0x06,
  0x63, 0x28, 0x86, 0x81, 0x52, 0x3a, 0x10, 0x30, 0x53, 0x18, 0x8c, 0x03,
  0x3b, 0x84, 0xc3, 0x3c, 0xcc, 0x83, 0x1b, 0xd0, 0x42, 0x39, 0xe0, 0x03,
  0x3d, 0xd4, 0x83, 0x3c, 0x94, 0x83, 0x1c, 0x90, 0x02, 0x1f, 0x98, 0x03,
  0x3b, 0xbc, 0x43, 0x38, 0xd0, 0x83, 0x1f, 0xe8, 0x81, 0x1e, 0xb4, 0x43,
  0x3a, 0xc0, 0xc3, 0x3c, 0xfc, 0x02, 0x3d, 0xe4, 0x03, 0x3c, 0x94, 0x03,
  0x0a, 0x8c, 0x99, 0xac, 0x71, 0x60, 0x87, 0x70, 0x98, 0x87, 0x79, 0x70,
  0x03, 0x5a, 0x28, 0x07, 0x7c, 0xa0, 0x87, 0x7a, 0x90, 0x87, 0x72, 0x90,
  0x03, 0x52, 0xe0, 0x03, 0x73, 0x60, 0x87, 0x77, 0x08, 0x07, 0x7a, 0xf0,
  0x03, 0x24, 0x00, 0x2c, 0xb5, 0x87, 0x49, 0x53, 0x44, 0x09, 0x93, 0xbf,
  0x61, 0x13, 0xa1, 0x0d, 0x43, 0x44, 0x48, 0xd2, 0x46, 0x15, 0x05, 0x11,
  0xa1, 0xc0, 0xa0, 0x77, 0x18, 0x61, 0x00, 0x66, 0xfa, 0xc6, 0x81, 0x1d,
  0xc2, 0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x44, 0xa1, 0x1e, 0xcc, 0xc1, 0x1c,
  0xca, 0x41, 0x1e, 0xf8, 0xc0, 0x1e, 0xca, 0x61, 0x1c, 0xe8, 0xe1, 0x1d,
  0xe4, 0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0x81, 0x0d,
  0xc0, 0x60, 0x0e, 0xfc, 0x00, 0x0c, 0xfc, 0x00, 0x05, 0x31, 0xc9, 0x33,
  0x7d, 0xe3, 0xc0, 0x0e, 0xe1, 0x30, 0x0f, 0xf3, 0xe0, 0x06, 0xb2, 0x70,
  0x0b, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f, 0xf5, 0x20, 0x0f, 0xe5, 0x20,
  0x07, 0xa4, 0xc0, 0x07, 0xf5, 0xe0, 0x0e, 0xf3, 0x90, 0x0e, 0xe7, 0xe0,
  0x0e, 0xe5, 0x40, 0x0e, 0x60, 0x90, 0x0e, 0xee, 0x40, 0x0f, 0x7e, 0x80,
  0x02, 0x83, 0xe8, 0x61, 0x04, 0x01, 0x18, 0x46, 0x10, 0x8c, 0x1b, 0xb8,
  0x8d, 0x46, 0x85, 0x0d, 0x00, 0xc6, 0x4d, 0xf8, 0x4d, 0xd2, 0x14, 0x51,
  0xc2, 0xe4, 0xb3, 0x00, 0xf3, 0x2c, 0x44, 0xc4, 0x4e, 0xc0, 0x44, 0xa0,
  0xc0, 0x20, 0x7d, 0x8e, 0x00, 0x14, 0xa6, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e,
  0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07,
  0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
  0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f, 0x24, 0x90, 0x21, 0x23,
  0x45, 0x44, 0x80, 0x1d, 0x4c, 0x30, 0x94, 0xc1, 0x30, 0x00, 0x00, 0x10,
  0x00, 0x00, 0x30, 0xe4, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xc8, 0x73, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xa7, 0x01, 0x02, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x0f, 0x04, 0x04, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x09, 0x08, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x14, 0x10,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x2c,
  0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2,
  0x60, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
  0xe4, 0xd1, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x60, 0xc8, 0xc3, 0x01, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xc0, 0x90, 0xc7, 0x03, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0x0f, 0x18, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x67, 0x0c, 0x80, 0x00, 0x10, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x06, 0x40, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x49, 0x03,
  0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x02,
  0x01, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0xe2,
  0x47, 0x00, 0xc8, 0x28, 0x81, 0x22, 0x28, 0x86, 0x11, 0x80, 0x92, 0x28,
  0x8b, 0xa2, 0x28, 0x85, 0xc2, 0x29, 0x84, 0x02, 0x0c, 0x20, 0x74, 0x04,
  0x80, 0xf8, 0x02, 0x21, 0x78, 0x06, 0x80, 0xe6, 0x19, 0x00, 0xaa, 0x67,
  0x00, 0x28, 0x9f, 0x01, 0xa0, 0x7d, 0x06, 0x80, 0xdc, 0x19, 0x00, 0x0a,
  0xc6, 0x42, 0x40, 0x10, 0x04, 0xf1, 0x0f, 0x04, 0x41, 0x50, 0x04, 0x03,
  0x10, 0x04, 0xc1, 0x14, 0x0c, 0x40, 0x10, 0x04, 0x5b, 0x30, 0x00, 0x41,
  0x10, 0x86, 0xc1, 0x00, 0x04, 0x41, 0x58, 0x06, 0x03, 0x10, 0x04, 0x61,
  0x1b, 0x0c, 0x40, 0x10, 0x44, 0x77, 0x30, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x67, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44,
  0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b,
  0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b,
  0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81,
  0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x04,
  0x23, 0x9a, 0x20, 0x18, 0xd2, 0x06, 0x61, 0x20, 0x26, 0x08, 0xc6, 0xb4,
  0x41, 0x18, 0x0c, 0x0a, 0x63, 0x73, 0x1b, 0x06, 0xc4, 0x20, 0x26, 0x08,
  0x06, 0x35, 0x41, 0x70, 0x83, 0x31, 0x20, 0x30, 0x41, 0x30, 0xaa, 0x0d,
  0x82, 0xd2, 0x6c, 0x48, 0x94, 0x85, 0x51, 0x94, 0x81, 0x50, 0x9c, 0x09,
  0x02, 0x1c, 0x78, 0x13, 0x04, 0xc3, 0xda, 0x90, 0x0c, 0x10, 0xa3, 0x0c,
  0x43, 0xa4, 0x00, 0x13, 0x84, 0x39, 0xf8, 0x26, 0x08, 0xc6, 0xb5, 0x21,
  0x21, 0x26, 0x46, 0x21, 0x06, 0x4a, 0x71, 0x36, 0x0c, 0x8f, 0x54, 0x4d,
  0x10, 0xea, 0x00, 0x0c, 0x26, 0x08, 0x68, 0xc0, 0x4d, 0x10, 0x0c, 0x6c,
  0x83, 0xa0, 0x64, 0x1b, 0x16, 0xe5, 0x62, 0x14, 0x65, 0x20, 0x30, 0x0c,
  0xd3, 0x36, 0x04, 0xdb, 0x04, 0x21, 0x0f, 0xc2, 0x60, 0x82, 0x60, 0x64,
  0x1b, 0x10, 0xa5, 0x63, 0x14, 0x65, 0xf0, 0x80, 0x0d, 0xc1, 0x37, 0x41,
  0xd8, 0x03, 0x31, 0xd8, 0x80, 0x28, 0x61, 0xc0, 0x28, 0xca, 0xa0, 0x00,
  0x1b, 0x02, 0x31, 0xd8, 0x40, 0x58, 0x1c, 0x18, 0x8c, 0xc1, 0x04, 0xa1,
  0x08, 0x48, 0xb4, 0x85, 0xa5, 0xb9, 0x4d, 0x10, 0xf8, 0xa0, 0x9b, 0x20,
  0x18, 0xda, 0x04, 0xc1, 0xd8, 0x36, 0x0c, 0x69, 0x30, 0x0c, 0x1b, 0x08,
  0xe5, 0x0c, 0xd0, 0x40, 0x0d, 0x36, 0x14, 0x65, 0x60, 0x06, 0x00, 0x19,
  0xac, 0x01, 0x0b, 0x33, 0xb6, 0xb7, 0x30, 0x3a, 0x3e, 0x6f, 0x6d, 0x6e,
  0x69, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x20, 0x63, 0x68, 0x61, 0x72,
  0x8c, 0xa6, 0xd2, 0xda, 0xe0, 0xd8, 0xca, 0x40, 0x86, 0x5e, 0x86, 0x56,
  0x56, 0x40, 0xa8, 0x84, 0x82, 0x82, 0x36, 0x04, 0x6f, 0x30, 0x41, 0xe0,
  0x03, 0x68, 0xc3, 0xe0, 0x06, 0x70, 0x10, 0x07, 0x1b, 0x86, 0x36, 0x90,
  0x83, 0x38, 0xd8, 0x30, 0xcc, 0xc1, 0x1c, 0xc4, 0x41, 0x15, 0x36, 0x36,
  0xbb, 0x36, 0x97, 0x34, 0xb2, 0x32, 0x37, 0xba, 0x29, 0x41, 0x50, 0x85,
  0x0c, 0xcf, 0xc5, 0xae, 0x4c, 0x6e, 0x2e, 0xed, 0xcd, 0x6d, 0x4a, 0x40,
  0x34, 0x21, 0xc3, 0x73, 0xb1, 0x0b, 0x63, 0xb3, 0x2b, 0x93, 0x9b, 0x12,
  0x18, 0x75, 0xc8, 0xf0, 0x5c, 0xe6, 0xd0, 0xc2, 0xc8, 0xca, 0xe4, 0x9a,
  0xde, 0xc8, 0xca, 0xd8, 0xa6, 0x04, 0x48, 0x19, 0x32, 0x3c, 0x17, 0xb9,
  0xb2, 0xb9, 0xb7, 0x3a, 0xb9, 0xb1, 0xb2, 0xb9, 0x29, 0xc1, 0x18, 0xd4,
  0x21, 0xc3, 0x73, 0x29, 0x73, 0xa3, 0x93, 0xcb, 0x83, 0x7a, 0x4b, 0x73,
  0xa3, 0x9b, 0x9b, 0x12, 0xac, 0x01, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc,
  0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4,
  0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,
  0x86, 0x00, 0x0d, 0x97, 0xef, 0x3c, 0x7e, 0x80, 0x34, 0x40, 0x84, 0xf9,
  0xc5, 0x6d, 0x5b, 0x02, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x01, 0x55, 0x14,
  0x44, 0x54, 0x3a, 0xc0, 0xe0, 0x17, 0xb7, 0x6d, 0x0e, 0xdb, 0x70, 0xf9,
  0xce, 0xe3, 0x0b, 0x01, 0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0, 0x50, 0x12,
  0x06, 0x20, 0x60, 0x7e, 0x71, 0xdb, 0xd6, 0xb0, 0x0d, 0x97, 0xef, 0x3c,
  0xbe, 0x10, 0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00,
  0x02, 0xe6, 0x23, 0xb7, 0x6d, 0x0f, 0xd2, 0x70, 0xf9, 0xce, 0xe3, 0x0b,
  0x11, 0x01, 0x4c, 0x44, 0x08, 0x34, 0xc3, 0x42, 0x18, 0x03, 0x35, 0x5c,
  0xbe, 0xf3, 0xf8, 0x0b, 0x61, 0x00, 0x02, 0xf6, 0xd5, 0x7a, 0xeb, 0x7c,
  0xb7, 0x6d, 0x05, 0xd4, 0x70, 0xf9, 0xce, 0xe3, 0x2f, 0x84, 0x01, 0x08,
  0xd8, 0x77, 0xdb, 0xad, 0xf3, 0xd5, 0xba, 0x0d, 0x5c, 0xc3, 0xe5, 0x3b,
  0x8f, 0x1f, 0x01, 0xd6, 0x46, 0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0xf8,
  0xc8, 0x6d, 0xdb, 0x41, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x12, 0xc0, 0x3c,
  0x0b, 0x51, 0x12, 0x15, 0xb1, 0xf8, 0xc5, 0x6d, 0x1b, 0x41, 0x35, 0x5c,
  0xbe, 0xf3, 0xf8, 0x13, 0x71, 0x4d, 0x54, 0x44, 0x94, 0x0e, 0x30, 0xf8,
  0xc5, 0x6d, 0x9b, 0x42, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x13, 0x71, 0x4d,
  0x54, 0x44, 0x94, 0x0e, 0x30, 0xf8, 0xc8, 0x6d, 0xdb, 0x82, 0x35, 0x5c,
  0xbe, 0xf3, 0xf8, 0x13, 0x71, 0x4d, 0x54, 0x44, 0xb0, 0x93, 0x13, 0x11,
  0x3e, 0x72, 0xdb, 0x26, 0x20, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x74, 0x44,
  0x04, 0x30, 0x88, 0x83, 0x8f, 0xdc, 0xb6, 0x19, 0x3c, 0xc3, 0xe5, 0x3b,
  0x8f, 0x4f, 0x35, 0x40, 0x84, 0xf9, 0xc5, 0x6d, 0x5b, 0x00, 0xc1, 0x00,
  0x48, 0x63, 0x00, 0x91, 0xf4, 0xb3, 0x00, 0xf3, 0x2c, 0x44, 0x87, 0x48,
  0x13, 0xd0, 0x08, 0x84, 0x04, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x1a, 0x01, 0x00, 0x00, 0x13, 0x04, 0x49, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x1f, 0x00, 0x00, 0x00, 0xa4, 0x94, 0x47, 0x11, 0x94, 0x41, 0x09, 0x8c,
  0x00, 0x90, 0x51, 0x86, 0x01, 0x15, 0x08, 0x08, 0x48, 0x50, 0x80, 0x80,
  0x80, 0x02, 0x33, 0x00, 0x25, 0x57, 0x48, 0x65, 0x57, 0x84, 0x01, 0xe5,
  0x50, 0x86, 0x02, 0x45, 0x28, 0x50, 0x10, 0xc5, 0x57, 0xe0, 0xff, 0x03,
  0x25, 0x52, 0xba, 0x01, 0x65, 0x29, 0x50, 0x28, 0xe5, 0xff, 0x53, 0xfc,
  0x03, 0x35, 0x50, 0x46, 0x85, 0x18, 0x50, 0xc0, 0xff, 0x03, 0xe5, 0xff,
  0x51, 0x80, 0x10, 0x05, 0x08, 0xfe, 0x3f, 0x40, 0xc0, 0x18, 0x81, 0x8a,
  0xd7, 0xa7, 0xe8, 0x8d, 0x11, 0x90, 0x30, 0x28, 0xc2, 0xdd, 0x18, 0x01,
  0x08, 0x82, 0x20, 0xfa, 0x8d, 0x11, 0x80, 0x20, 0x88, 0xee, 0x60, 0x30,
  0x46, 0x00, 0x82, 0x20, 0x7e, 0x8f, 0xc1, 0x18, 0x01, 0x08, 0x82, 0x20,
  0xfc, 0xcd, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x90, 0x06, 0x7e, 0xf0, 0x95, 0x41, 0x1e, 0xe4, 0x41, 0x1c,
  0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x41, 0x1a, 0xfc, 0x01, 0x18, 0x94,
  0x01, 0x1f, 0xf0, 0x81, 0x1c, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x41,
  0x1a, 0x80, 0x42, 0x18, 0x98, 0x81, 0x1f, 0xf8, 0xc1, 0x1c, 0x8c, 0x18,
  0x24, 0x00, 0x08, 0x82, 0x41, 0x1a, 0x84, 0x82, 0x18, 0x9c, 0x01, 0x1f,
  0xf0, 0x01, 0x1d, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x41, 0x1a, 0x88,
  0xc2, 0x18, 0xa8, 0x41, 0x1f, 0xf4, 0x41, 0x1d, 0x8c, 0x18, 0x24, 0x00,
  0x08, 0x82, 0x41, 0x1a, 0x8c, 0x02, 0x19, 0xb0, 0x81, 0x1f, 0xf8, 0x81,
  0x1d, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0x11, 0x0b, 0xda, 0x1f,
  0x54, 0x20, 0x0a, 0x37, 0x62, 0xa0, 0x00, 0x20, 0x08, 0x06, 0x8d, 0x2c,
  0x6c, 0x46, 0x80, 0x06, 0x6d, 0xb0, 0x07, 0xa3, 0x09, 0x01, 0x30, 0x62,
  0x70, 0x00, 0x20, 0x08, 0x06, 0x63, 0xa0, 0x0a, 0x67, 0x50, 0x98, 0xc2,
  0x68, 0x42, 0x10, 0x8c, 0x26, 0x08, 0x42, 0x11, 0x65, 0x80, 0x55, 0x80,
  0x01, 0x96, 0x00, 0x06, 0x5a, 0x41, 0x01, 0x55, 0x0c, 0x50, 0x89, 0x2b,
  0x68, 0x29, 0x63, 0xa0, 0x17, 0x00, 0x65, 0x43, 0x2c, 0xdc, 0xc0, 0x82,
  0x32, 0x00, 0x41, 0x05, 0x06, 0x8c, 0x18, 0x34, 0x00, 0x08, 0x82, 0x01,
  0x14, 0x0e, 0x74, 0x50, 0xc5, 0x02, 0x12, 0xe0, 0x01, 0x1e, 0xe0, 0x01,
  0x1e, 0x8c, 0x26, 0x04, 0xc0, 0x29, 0x40, 0x9d, 0x02, 0xd4, 0x29, 0x40,
  0xd9, 0x00, 0x06, 0xf0, 0xb1, 0x41, 0x80, 0xcf, 0x88, 0xc1, 0x01, 0x80,
  0x20, 0x18, 0x98, 0x81, 0x2f, 0xf0, 0x81, 0x86, 0x0b, 0xa3, 0x09, 0x01,
  0x30, 0x9a, 0x20, 0x04, 0x56, 0x08, 0xf2, 0x31, 0xa1, 0x90, 0xcf, 0x88,
  0x41, 0x03, 0x80, 0x20, 0x18, 0x40, 0xed, 0x00, 0x0a, 0x61, 0xd0, 0x0b,
  0xd4, 0x44, 0x0a, 0xa4, 0x40, 0x0a, 0xa4, 0x30, 0x9a, 0x10, 0x00, 0x16,
  0x34, 0xf0, 0xb1, 0x40, 0x0d, 0xe4, 0x63, 0xcf, 0x10, 0x9f, 0xe1, 0x88,
  0x40, 0x0d, 0x84, 0x6f, 0x38, 0x42, 0x58, 0x03, 0xe2, 0x3b, 0xc1, 0x88,
  0x13, 0x8c, 0x30, 0x21, 0x08, 0xc1, 0x05, 0x80, 0x8d, 0x18, 0x18, 0x00,
  0x08, 0x82, 0x01, 0x65, 0x0f, 0xe9, 0x70, 0x58, 0x60, 0x07, 0xf2, 0x99,
  0x25, 0x08, 0x06, 0x2a, 0x00, 0x76, 0x00, 0xee, 0xa0, 0x18, 0xa8, 0x00,
  0xdc, 0x01, 0xb8, 0x85, 0x62, 0xa0, 0xc2, 0xc0, 0x0d, 0xa0, 0x0e, 0x8a,
  0x81, 0x0a, 0x43, 0x37, 0x80, 0x5a, 0x28, 0x06, 0x2a, 0x0c, 0xde, 0x00,
  0x6a, 0xa1, 0xd8, 0xc1, 0x30, 0x12, 0xef, 0x10, 0x50, 0x00, 0x8c, 0x11,
  0x83, 0x03, 0x00, 0x41, 0x30, 0x30, 0x83, 0x7b, 0xa8, 0x85, 0x39, 0x88,
  0x87, 0xd1, 0x84, 0x00, 0xb0, 0x60, 0x90, 0x8f, 0x65, 0x41, 0x7c, 0x4c,
  0xd0, 0xe0, 0x33, 0x62, 0xf0, 0x00, 0x20, 0x08, 0x06, 0xd6, 0x48, 0xd0,
  0x82, 0x1e, 0xe4, 0x81, 0xa0, 0xfd, 0xc1, 0x1f, 0xd8, 0x83, 0x3d, 0xf4,
  0x82, 0x1f, 0x8c, 0x26, 0x04, 0x80, 0x05, 0x58, 0x7c, 0x46, 0x0c, 0x0c,
  0x00, 0x04, 0xc1, 0x80, 0x3a, 0x09, 0x7d, 0x08, 0x86, 0x23, 0x82, 0x68,
  0xf8, 0x86, 0x23, 0x96, 0x88, 0xf8, 0x2a, 0x10, 0x74, 0x96, 0x41, 0x18,
  0x82, 0xe1, 0x88, 0xa2, 0x14, 0x84, 0x6f, 0x38, 0xc2, 0x30, 0x05, 0xe2,
  0x3b, 0xc1, 0x88, 0x13, 0x8c, 0x30, 0x21, 0x08, 0xc1, 0x05, 0x80, 0x0d,
  0x47, 0x04, 0x5c, 0xf0, 0x5d, 0x60, 0xc4, 0x2c, 0xc1, 0x30, 0x50, 0x01,
  0xa8, 0x81, 0x60, 0x07, 0xc1, 0x40, 0x85, 0x41, 0x08, 0x74, 0x10, 0x8c,
  0x18, 0x3c, 0x00, 0x08, 0x82, 0x81, 0x45, 0x13, 0xe5, 0xb0, 0x0a, 0xaa,
  0x20, 0xad, 0x01, 0x2c, 0xc0, 0xc2, 0x49, 0x9c, 0x84, 0x3b, 0xbc, 0xc2,
  0x68, 0x42, 0x00, 0x58, 0x90, 0x06, 0xf1, 0x19, 0x31, 0x30, 0x00, 0x10,
  0x04, 0x03, 0x0a, 0x27, 0x56, 0x22, 0x18, 0x8e, 0x08, 0xc4, 0x60, 0xf8,
  0x86, 0x23, 0xb8, 0x30, 0x20, 0xbe, 0x0a, 0x04, 0x9d, 0x65, 0x20, 0x8a,
  0x60, 0x38, 0xa2, 0xb0, 0x05, 0xe1, 0x1b, 0x8e, 0x30, 0x6e, 0x81, 0xf8,
  0x4e, 0x30, 0xe2, 0x04, 0x23, 0x4c, 0x08, 0x42, 0x70, 0x01, 0x60, 0xc3,
  0x11, 0x41, 0x1b, 0x04, 0xdf, 0x05, 0x46, 0xcc, 0x12, 0x14, 0x03, 0x15,
  0x00, 0x2b, 0x10, 0xb6, 0x30, 0x0c, 0x54, 0x18, 0x04, 0x41, 0x0b, 0x83,
  0xa9, 0xc1, 0x4e, 0xc0, 0x60, 0xb8, 0x21, 0xd8, 0x07, 0x30, 0x98, 0x65,
  0x30, 0x82, 0xc0, 0x5a, 0x01, 0x1d, 0xe4, 0x33, 0x62, 0x70, 0x00, 0x20,
  0x08, 0x06, 0xd8, 0x59, 0x80, 0x84, 0x55, 0x98, 0x71, 0xc1, 0xc7, 0x84,
  0x80, 0x3e, 0x86, 0x0e, 0x41, 0x7c, 0x86, 0x23, 0xb4, 0x84, 0xf8, 0x86,
  0x1b, 0x34, 0xb0, 0x08, 0x83, 0xe1, 0x06, 0x25, 0x2c, 0xc2, 0x60, 0xba,
  0x41, 0x08, 0x86, 0xe9, 0x86, 0x62, 0x1d, 0x82, 0x11, 0x83, 0x03, 0x00,
  0x41, 0x30, 0xc0, 0xe0, 0x22, 0x1f, 0x94, 0x60, 0x38, 0x22, 0xa0, 0x07,
  0xe1, 0x9b, 0x65, 0x38, 0x90, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0xb4, 0xb8, 0xd0, 0x07, 0x76, 0x38, 0x87, 0x96, 0x18, 0x4d, 0x08, 0x80,
  0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0x11, 0x83, 0x06, 0x00, 0x41,
  0x30, 0xe0, 0xe8, 0xa2, 0x25, 0xe2, 0x21, 0x26, 0xc2, 0x01, 0x1c, 0x62,
  0x22, 0x26, 0x62, 0x22, 0x26, 0x46, 0x13, 0x02, 0xa0, 0x02, 0xb3, 0xb8,
  0x0a, 0x54, 0x42, 0x47, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x00, 0x0c, 0xec,
  0xe2, 0x25, 0x82, 0x22, 0x62, 0x02, 0x2b, 0x68, 0x09, 0x1d, 0x31, 0x30,
  0x00, 0x10, 0x04, 0x03, 0x30, 0xc8, 0x0b, 0x99, 0x08, 0xea, 0x70, 0x09,
  0xac, 0xc0, 0x24, 0x74, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xc0, 0x80,
  0x2f, 0x6a, 0x22, 0x30, 0xe7, 0x88, 0x8f, 0x39, 0x45, 0x7c, 0xcc, 0x19,
  0xe2, 0x63, 0x03, 0x25, 0x1f, 0x1b, 0x2a, 0xf9, 0xd8, 0x60, 0xc9, 0xc7,
  0x86, 0x06, 0x3e, 0x36, 0x2c, 0xf0, 0xb1, 0x21, 0x81, 0xcf, 0x88, 0xc1,
  0x01, 0x80, 0x20, 0x18, 0x60, 0xaa, 0x31, 0x16, 0x43, 0x4a, 0x8c, 0x18,
  0x1c, 0x00, 0x08, 0x82, 0x01, 0xb6, 0x1a, 0x64, 0x31, 0xa8, 0xc4, 0x88,
  0xc1, 0x01, 0x80, 0x20, 0x18, 0x60, 0xac, 0x51, 0x16, 0xc3, 0x4a, 0x8c,
  0x18, 0x18, 0x00, 0x08, 0x82, 0x81, 0x04, 0x1b, 0x61, 0x31, 0x54, 0x10,
  0x16, 0x50, 0x41, 0x5f, 0x60, 0x05, 0x36, 0xa1, 0x23, 0x06, 0x06, 0x00,
  0x82, 0x60, 0x20, 0xd1, 0x46, 0x59, 0x18, 0x15, 0xa0, 0xc5, 0x55, 0x80,
  0x13, 0x50, 0x01, 0x4e, 0xe8, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x48,
  0xb8, 0x91, 0x16, 0x49, 0x05, 0x66, 0x71, 0x15, 0xcc, 0x05, 0x54, 0x50,
  0x17, 0x5a, 0x45, 0xb2, 0x15, 0x08, 0x3b, 0x62, 0xe0, 0x00, 0x20, 0x08,
  0x06, 0x1e, 0x6e, 0xe4, 0x85, 0x4d, 0x98, 0x44, 0x49, 0xd8, 0x45, 0x10,
  0x04, 0x81, 0x5f, 0xcc, 0x12, 0x20, 0x18, 0x10, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x5b, 0x06, 0x3c, 0x08, 0xe6, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
