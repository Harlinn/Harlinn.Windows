#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader debug name: a2b2d657febfdbaa9587812044e2f876.pdb
; shader hash: a2b2d657febfdbaa9587812044e2f876
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; cbuffer CB0
; {
;
;   struct CB0
;   {
;
;       float2 RcpTextureSize;                        ; Offset:    0
;       float ContrastThreshold;                      ; Offset:    8
;       float SubpixelRemoval;                        ; Offset:   12
;       uint LastQueueIndex;                          ; Offset:   16
;       uint2 StartPixel;                             ; Offset:   20
;   
;   } CB0;                                            ; Offset:    0 Size:    28
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; CB0                               cbuffer      NA          NA     CB0            cb0     1
; Color                             texture     f32          2d      T0             t0     1
; WorkCount                             UAV    byte         r/w      U0             u0     1
; WorkQueue                             UAV    byte         r/w      U1             u1     1
; ColorQueue                            UAV     f32         buf      U2             u2     1
; Luma                                  UAV     f32          2d      U3             u3     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%"class.Texture2D<vector<float, 3> >" = type { <3 x float>, %"class.Texture2D<vector<float, 3> >::mips_type" }
%"class.Texture2D<vector<float, 3> >::mips_type" = type { i32 }
%struct.RWByteAddressBuffer = type { i32 }
%"class.RWBuffer<vector<float, 3> >" = type { <3 x float> }
%"class.RWTexture2D<float>" = type { float }
%CB0 = type { <2 x float>, float, float, i32, <2 x i32> }

@"\01?gs_LumaCache@@3PAMA" = external addrspace(3) global [100 x float], align 4
@dx.nothing.a = internal constant [1 x i32] zeroinitializer

define void @main() {
  %Luma_UAV_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 3, i32 3, i1 false), !dbg !121 ; line:68 col:41  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %ColorQueue_UAV_buf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 2, i32 2, i1 false), !dbg !121 ; line:68 col:41  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %WorkQueue_UAV_rawbuf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 1, i32 1, i1 false), !dbg !121 ; line:68 col:41  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %WorkCount_UAV_rawbuf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false), !dbg !121 ; line:68 col:41  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %Color_texture_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false), !dbg !121 ; line:68 col:41  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %CB0_cbuffer = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false), !dbg !121 ; line:68 col:41  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %1 = call i32 @dx.op.groupId.i32(i32 94, i32 0)  ; GroupId(component)
  %2 = call i32 @dx.op.groupId.i32(i32 94, i32 1)  ; GroupId(component)
  %3 = call i32 @dx.op.flattenedThreadIdInGroup.i32(i32 96)  ; FlattenedThreadIdInGroup()
  %4 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 0)  ; ThreadIdInGroup(component)
  %5 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 1)  ; ThreadIdInGroup(component)
  %6 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %7 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  %WorkIdx = alloca i32, align 4
  %WorkIdx1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !125, metadata !126), !dbg !127 ; var:"DTid" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !125, metadata !128), !dbg !127 ; var:"DTid" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !129, metadata !126), !dbg !130 ; var:"GTid" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !129, metadata !128), !dbg !130 ; var:"GTid" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !131, metadata !132), !dbg !133 ; var:"GI" !DIExpression() func:"main"
  call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !134, metadata !126), !dbg !135 ; var:"Gid" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !134, metadata !128), !dbg !135 ; var:"Gid" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  %8 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %CB0_cbuffer, i32 1), !dbg !136 ; line:100 col:34  ; CBufferLoadLegacy(handle,regIndex)
  %9 = extractvalue %dx.types.CBufRet.i32 %8, 1, !dbg !136 ; line:100 col:34
  %10 = extractvalue %dx.types.CBufRet.i32 %8, 2, !dbg !136 ; line:100 col:34
  %.i0 = add i32 %6, %9, !dbg !137 ; line:100 col:32
  %.i1 = add i32 %7, %10, !dbg !137 ; line:100 col:32
  %11 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !138 ; line:100 col:11
  call void @llvm.dbg.value(metadata i32 %.i0, i64 0, metadata !139, metadata !126), !dbg !138 ; var:"PixelCoord" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %.i1, i64 0, metadata !139, metadata !128), !dbg !138 ; var:"PixelCoord" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  %12 = icmp ult i32 %3, 50, !dbg !140 ; line:116 col:12
  %13 = icmp ne i1 %12, false, !dbg !140 ; line:116 col:12
  %14 = icmp ne i1 %13, false, !dbg !140 ; line:116 col:12
  br i1 %14, label %15, label %54, !dbg !142 ; line:116 col:9

; <label>:15                                      ; preds = %0
  %16 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !143 ; line:118 col:14
  call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !145, metadata !132), !dbg !143 ; var:"LdsCoord" !DIExpression() func:"main"
  %17 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %CB0_cbuffer, i32 1), !dbg !146 ; line:119 col:25  ; CBufferLoadLegacy(handle,regIndex)
  %18 = extractvalue %dx.types.CBufRet.i32 %17, 1, !dbg !146 ; line:119 col:25
  %19 = extractvalue %dx.types.CBufRet.i32 %17, 2, !dbg !146 ; line:119 col:25
  %20 = urem i32 %3, 10, !dbg !147 ; line:119 col:47
  %21 = udiv i32 %3, 10, !dbg !148 ; line:119 col:63
  %.i023 = add i32 %18, %20, !dbg !149 ; line:119 col:36
  %.i124 = add i32 %19, %21, !dbg !149 ; line:119 col:36
  %.i026 = mul i32 %1, 8, !dbg !150 ; line:119 col:85
  %.i128 = mul i32 %2, 8, !dbg !150 ; line:119 col:85
  %.i029 = add i32 %.i023, %.i026, !dbg !151 ; line:119 col:76
  %.i130 = add i32 %.i124, %.i128, !dbg !151 ; line:119 col:76
  %.i032 = sub i32 %.i029, 1, !dbg !152 ; line:119 col:89
  %.i134 = sub i32 %.i130, 1, !dbg !152 ; line:119 col:89
  %22 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !153 ; line:119 col:14
  call void @llvm.dbg.value(metadata i32 %.i032, i64 0, metadata !154, metadata !126), !dbg !153 ; var:"UavCoord" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %.i134, i64 0, metadata !154, metadata !128), !dbg !153 ; var:"UavCoord" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %.i032, i64 0, metadata !154, metadata !126), !dbg !153 ; var:"UavCoord" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %.i134, i64 0, metadata !154, metadata !128), !dbg !153 ; var:"UavCoord" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  %23 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !155 ; line:120 col:41
  call void @llvm.dbg.value(metadata i32 %.i032, i64 0, metadata !156, metadata !126), !dbg !157 ; var:"st" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FetchColor"
  call void @llvm.dbg.value(metadata i32 %.i134, i64 0, metadata !156, metadata !128), !dbg !157 ; var:"st" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FetchColor"
  call void @llvm.dbg.value(metadata i32 %.i032, i64 0, metadata !156, metadata !126), !dbg !157 ; var:"st" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FetchColor"
  call void @llvm.dbg.value(metadata i32 %.i134, i64 0, metadata !156, metadata !128), !dbg !157 ; var:"st" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FetchColor"
  %TextureLoad22 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %Color_texture_2d, i32 0, i32 %.i032, i32 %.i134, i32 undef, i32 undef, i32 undef, i32 undef), !dbg !159 ; line:68 col:41  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  call void @llvm.dbg.value(metadata %dx.types.ResRet.f32 %TextureLoad22, i64 0, metadata !160, metadata !132), !dbg !161 ; var:"LinearRGB" !DIExpression() func:"RGBToLogLuminance"
  %24 = extractvalue %dx.types.ResRet.f32 %TextureLoad22, 0, !dbg !159 ; line:68 col:41
  %25 = extractvalue %dx.types.ResRet.f32 %TextureLoad22, 1, !dbg !159 ; line:68 col:41
  %26 = extractvalue %dx.types.ResRet.f32 %TextureLoad22, 2, !dbg !159 ; line:68 col:41
  %27 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !163 ; line:68 col:34
  %28 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !164 ; line:120 col:23
  %29 = call float @dx.op.dot3.f32(i32 55, float %24, float %25, float %26, float 0x3FCB38CDA0000000, float 0x3FE6E29740000000, float 0x3FB279AAE0000000), !dbg !165 ; line:92 col:18  ; Dot3(ax,ay,az,bx,by,bz)
  %30 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !166 ; line:92 col:11
  call void @llvm.dbg.value(metadata float %29, i64 0, metadata !167, metadata !132), !dbg !166 ; var:"Luma" !DIExpression() func:"RGBToLogLuminance"
  %31 = fmul fast float %29, 1.500000e+01, !dbg !168 ; line:93 col:26
  %32 = fadd fast float 1.000000e+00, %31, !dbg !169 ; line:93 col:19
  %Log9 = call float @dx.op.unary.f32(i32 23, float %32), !dbg !170 ; line:93 col:12  ; Log(value)
  %33 = fdiv fast float %Log9, 4.000000e+00, !dbg !171 ; line:93 col:32
  %34 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !172 ; line:93 col:5
  %35 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !173 ; line:120 col:15
  call void @llvm.dbg.value(metadata float %33, i64 0, metadata !174, metadata !132), !dbg !173 ; var:"Luma1" !DIExpression() func:"main"
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %Luma_UAV_2d, i32 %.i032, i32 %.i134, i32 undef, float %33, float %33, float %33, float %33, i8 15), !dbg !175 ; line:121 col:24  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %36 = getelementptr [100 x float], [100 x float] addrspace(3)* @"\01?gs_LumaCache@@3PAMA", i32 0, i32 %3, !dbg !176 ; line:122 col:9
  store float %33, float addrspace(3)* %36, align 4, !dbg !177 ; line:122 col:32
  %37 = add i32 %3, 50, !dbg !178 ; line:124 col:18
  %38 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !178 ; line:124 col:18
  call void @llvm.dbg.value(metadata i32 %37, i64 0, metadata !145, metadata !132), !dbg !143 ; var:"LdsCoord" !DIExpression() func:"main"
  %.i036 = add i32 %.i032, 0, !dbg !179 ; line:125 col:18
  %.i138 = add i32 %.i134, 5, !dbg !179 ; line:125 col:18
  %39 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !179 ; line:125 col:18
  call void @llvm.dbg.value(metadata i32 %.i036, i64 0, metadata !154, metadata !126), !dbg !153 ; var:"UavCoord" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %.i138, i64 0, metadata !154, metadata !128), !dbg !153 ; var:"UavCoord" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %.i036, i64 0, metadata !154, metadata !126), !dbg !153 ; var:"UavCoord" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %.i138, i64 0, metadata !154, metadata !128), !dbg !153 ; var:"UavCoord" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  %40 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !180 ; line:126 col:41
  call void @llvm.dbg.value(metadata i32 %.i036, i64 0, metadata !156, metadata !126), !dbg !181 ; var:"st" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FetchColor"
  call void @llvm.dbg.value(metadata i32 %.i138, i64 0, metadata !156, metadata !128), !dbg !181 ; var:"st" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FetchColor"
  call void @llvm.dbg.value(metadata i32 %.i036, i64 0, metadata !156, metadata !126), !dbg !181 ; var:"st" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FetchColor"
  call void @llvm.dbg.value(metadata i32 %.i138, i64 0, metadata !156, metadata !128), !dbg !181 ; var:"st" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FetchColor"
  %TextureLoad21 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %Color_texture_2d, i32 0, i32 %.i036, i32 %.i138, i32 undef, i32 undef, i32 undef, i32 undef), !dbg !183 ; line:68 col:41  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  call void @llvm.dbg.value(metadata %dx.types.ResRet.f32 %TextureLoad21, i64 0, metadata !160, metadata !132), !dbg !184 ; var:"LinearRGB" !DIExpression() func:"RGBToLogLuminance"
  %41 = extractvalue %dx.types.ResRet.f32 %TextureLoad21, 0, !dbg !183 ; line:68 col:41
  %42 = extractvalue %dx.types.ResRet.f32 %TextureLoad21, 1, !dbg !183 ; line:68 col:41
  %43 = extractvalue %dx.types.ResRet.f32 %TextureLoad21, 2, !dbg !183 ; line:68 col:41
  %44 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !186 ; line:68 col:34
  %45 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !187 ; line:126 col:23
  %46 = call float @dx.op.dot3.f32(i32 55, float %41, float %42, float %43, float 0x3FCB38CDA0000000, float 0x3FE6E29740000000, float 0x3FB279AAE0000000), !dbg !188 ; line:92 col:18  ; Dot3(ax,ay,az,bx,by,bz)
  %47 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !189 ; line:92 col:11
  call void @llvm.dbg.value(metadata float %46, i64 0, metadata !167, metadata !132), !dbg !189 ; var:"Luma" !DIExpression() func:"RGBToLogLuminance"
  %48 = fmul fast float %46, 1.500000e+01, !dbg !190 ; line:93 col:26
  %49 = fadd fast float 1.000000e+00, %48, !dbg !191 ; line:93 col:19
  %Log = call float @dx.op.unary.f32(i32 23, float %49), !dbg !192 ; line:93 col:12  ; Log(value)
  %50 = fdiv fast float %Log, 4.000000e+00, !dbg !193 ; line:93 col:32
  %51 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !194 ; line:93 col:5
  %52 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !195 ; line:126 col:15
  call void @llvm.dbg.value(metadata float %50, i64 0, metadata !196, metadata !132), !dbg !195 ; var:"Luma2" !DIExpression() func:"main"
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %Luma_UAV_2d, i32 %.i036, i32 %.i138, i32 undef, float %50, float %50, float %50, float %50, i8 15), !dbg !197 ; line:127 col:24  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %53 = getelementptr [100 x float], [100 x float] addrspace(3)* @"\01?gs_LumaCache@@3PAMA", i32 0, i32 %37, !dbg !198 ; line:128 col:9
  store float %50, float addrspace(3)* %53, align 4, !dbg !199 ; line:128 col:32
  br label %54, !dbg !200 ; line:129 col:5

; <label>:54                                      ; preds = %15, %0
  call void @dx.op.barrier(i32 80, i32 9), !dbg !201 ; line:132 col:5  ; Barrier(barrierMode)
  %55 = add i32 %4, 1, !dbg !202 ; line:134 col:30
  %56 = add i32 %5, 1, !dbg !203 ; line:134 col:57
  %57 = mul i32 %56, 10, !dbg !204 ; line:134 col:74
  %58 = add i32 %55, %57, !dbg !205 ; line:134 col:47
  %59 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !206 ; line:134 col:10
  call void @llvm.dbg.value(metadata i32 %58, i64 0, metadata !207, metadata !132), !dbg !206 ; var:"CenterIdx" !DIExpression() func:"main"
  %60 = sub i32 %58, 10, !dbg !208 ; line:137 col:43
  %61 = getelementptr [100 x float], [100 x float] addrspace(3)* @"\01?gs_LumaCache@@3PAMA", i32 0, i32 %60, !dbg !209 ; line:137 col:20
  %62 = load float, float addrspace(3)* %61, align 4, !dbg !209 ; line:137 col:20
  %63 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !210 ; line:137 col:11
  call void @llvm.dbg.value(metadata float %62, i64 0, metadata !211, metadata !132), !dbg !210 ; var:"lumaN" !DIExpression() func:"main"
  %64 = sub i32 %58, 1, !dbg !212 ; line:138 col:43
  %65 = getelementptr [100 x float], [100 x float] addrspace(3)* @"\01?gs_LumaCache@@3PAMA", i32 0, i32 %64, !dbg !213 ; line:138 col:20
  %66 = load float, float addrspace(3)* %65, align 4, !dbg !213 ; line:138 col:20
  %67 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !214 ; line:138 col:11
  call void @llvm.dbg.value(metadata float %66, i64 0, metadata !215, metadata !132), !dbg !214 ; var:"lumaW" !DIExpression() func:"main"
  %68 = getelementptr [100 x float], [100 x float] addrspace(3)* @"\01?gs_LumaCache@@3PAMA", i32 0, i32 %58, !dbg !216 ; line:139 col:20
  %69 = load float, float addrspace(3)* %68, align 4, !dbg !216 ; line:139 col:20
  %70 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !217 ; line:139 col:11
  call void @llvm.dbg.value(metadata float %69, i64 0, metadata !218, metadata !132), !dbg !217 ; var:"lumaM" !DIExpression() func:"main"
  %71 = add i32 %58, 1, !dbg !219 ; line:140 col:43
  %72 = getelementptr [100 x float], [100 x float] addrspace(3)* @"\01?gs_LumaCache@@3PAMA", i32 0, i32 %71, !dbg !220 ; line:140 col:20
  %73 = load float, float addrspace(3)* %72, align 4, !dbg !220 ; line:140 col:20
  %74 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !221 ; line:140 col:11
  call void @llvm.dbg.value(metadata float %73, i64 0, metadata !222, metadata !132), !dbg !221 ; var:"lumaE" !DIExpression() func:"main"
  %75 = add i32 %58, 10, !dbg !223 ; line:141 col:43
  %76 = getelementptr [100 x float], [100 x float] addrspace(3)* @"\01?gs_LumaCache@@3PAMA", i32 0, i32 %75, !dbg !224 ; line:141 col:20
  %77 = load float, float addrspace(3)* %76, align 4, !dbg !224 ; line:141 col:20
  %78 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !225 ; line:141 col:11
  call void @llvm.dbg.value(metadata float %77, i64 0, metadata !226, metadata !132), !dbg !225 ; var:"lumaS" !DIExpression() func:"main"
  %FMax = call float @dx.op.binary.f32(i32 35, float %77, float %69), !dbg !227 ; line:144 col:56  ; FMax(a,b)
  %FMax6 = call float @dx.op.binary.f32(i32 35, float %73, float %FMax), !dbg !228 ; line:144 col:45  ; FMax(a,b)
  %FMax7 = call float @dx.op.binary.f32(i32 35, float %62, float %66), !dbg !229 ; line:144 col:26  ; FMax(a,b)
  %FMax8 = call float @dx.op.binary.f32(i32 35, float %FMax7, float %FMax6), !dbg !230 ; line:144 col:22  ; FMax(a,b)
  %79 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !231 ; line:144 col:11
  call void @llvm.dbg.value(metadata float %FMax8, i64 0, metadata !232, metadata !132), !dbg !231 ; var:"rangeMax" !DIExpression() func:"main"
  %FMin = call float @dx.op.binary.f32(i32 36, float %77, float %69), !dbg !233 ; line:145 col:56  ; FMin(a,b)
  %FMin3 = call float @dx.op.binary.f32(i32 36, float %73, float %FMin), !dbg !234 ; line:145 col:45  ; FMin(a,b)
  %FMin4 = call float @dx.op.binary.f32(i32 36, float %62, float %66), !dbg !235 ; line:145 col:26  ; FMin(a,b)
  %FMin5 = call float @dx.op.binary.f32(i32 36, float %FMin4, float %FMin3), !dbg !236 ; line:145 col:22  ; FMin(a,b)
  %80 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !237 ; line:145 col:11
  call void @llvm.dbg.value(metadata float %FMin5, i64 0, metadata !238, metadata !132), !dbg !237 ; var:"rangeMin" !DIExpression() func:"main"
  %81 = fsub fast float %FMax8, %FMin5, !dbg !239 ; line:146 col:28
  %82 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !240 ; line:146 col:11
  call void @llvm.dbg.value(metadata float %81, i64 0, metadata !241, metadata !132), !dbg !240 ; var:"range" !DIExpression() func:"main"
  %83 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %CB0_cbuffer, i32 0), !dbg !242 ; line:147 col:17  ; CBufferLoadLegacy(handle,regIndex)
  %84 = extractvalue %dx.types.CBufRet.f32 %83, 2, !dbg !242 ; line:147 col:17
  %85 = fcmp fast olt float %81, %84, !dbg !244 ; line:147 col:15
  %86 = icmp ne i1 %85, false, !dbg !244 ; line:147 col:15
  %87 = icmp ne i1 %86, false, !dbg !244 ; line:147 col:15
  br i1 %87, label %88, label %89, !dbg !245 ; line:147 col:9

; <label>:88                                      ; preds = %54
  br label %216, !dbg !246 ; line:148 col:9

; <label>:89                                      ; preds = %54
  %90 = sub i32 %58, 10, !dbg !247 ; line:151 col:43
  %91 = sub i32 %90, 1, !dbg !248 ; line:151 col:55
  %92 = getelementptr [100 x float], [100 x float] addrspace(3)* @"\01?gs_LumaCache@@3PAMA", i32 0, i32 %91, !dbg !249 ; line:151 col:20
  %93 = load float, float addrspace(3)* %92, align 4, !dbg !249 ; line:151 col:20
  %94 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !250 ; line:151 col:11
  call void @llvm.dbg.value(metadata float %93, i64 0, metadata !251, metadata !132), !dbg !250 ; var:"lumaNW" !DIExpression() func:"main"
  %95 = sub i32 %58, 10, !dbg !252 ; line:152 col:43
  %96 = add i32 %95, 1, !dbg !253 ; line:152 col:55
  %97 = getelementptr [100 x float], [100 x float] addrspace(3)* @"\01?gs_LumaCache@@3PAMA", i32 0, i32 %96, !dbg !254 ; line:152 col:20
  %98 = load float, float addrspace(3)* %97, align 4, !dbg !254 ; line:152 col:20
  %99 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !255 ; line:152 col:11
  call void @llvm.dbg.value(metadata float %98, i64 0, metadata !256, metadata !132), !dbg !255 ; var:"lumaNE" !DIExpression() func:"main"
  %100 = add i32 %58, 10, !dbg !257 ; line:153 col:43
  %101 = sub i32 %100, 1, !dbg !258 ; line:153 col:55
  %102 = getelementptr [100 x float], [100 x float] addrspace(3)* @"\01?gs_LumaCache@@3PAMA", i32 0, i32 %101, !dbg !259 ; line:153 col:20
  %103 = load float, float addrspace(3)* %102, align 4, !dbg !259 ; line:153 col:20
  %104 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !260 ; line:153 col:11
  call void @llvm.dbg.value(metadata float %103, i64 0, metadata !261, metadata !132), !dbg !260 ; var:"lumaSW" !DIExpression() func:"main"
  %105 = add i32 %58, 10, !dbg !262 ; line:154 col:43
  %106 = add i32 %105, 1, !dbg !263 ; line:154 col:55
  %107 = getelementptr [100 x float], [100 x float] addrspace(3)* @"\01?gs_LumaCache@@3PAMA", i32 0, i32 %106, !dbg !264 ; line:154 col:20
  %108 = load float, float addrspace(3)* %107, align 4, !dbg !264 ; line:154 col:20
  %109 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !265 ; line:154 col:11
  call void @llvm.dbg.value(metadata float %108, i64 0, metadata !266, metadata !132), !dbg !265 ; var:"lumaSE" !DIExpression() func:"main"
  %110 = fadd fast float %62, %77, !dbg !267 ; line:157 col:26
  %111 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !268 ; line:157 col:11
  call void @llvm.dbg.value(metadata float %110, i64 0, metadata !269, metadata !132), !dbg !268 ; var:"lumaNS" !DIExpression() func:"main"
  %112 = fadd fast float %66, %73, !dbg !270 ; line:158 col:26
  %113 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !271 ; line:158 col:11
  call void @llvm.dbg.value(metadata float %112, i64 0, metadata !272, metadata !132), !dbg !271 ; var:"lumaWE" !DIExpression() func:"main"
  %114 = fadd fast float %93, %103, !dbg !273 ; line:159 col:29
  %115 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !274 ; line:159 col:11
  call void @llvm.dbg.value(metadata float %114, i64 0, metadata !275, metadata !132), !dbg !274 ; var:"lumaNWSW" !DIExpression() func:"main"
  %116 = fadd fast float %98, %108, !dbg !276 ; line:160 col:29
  %117 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !277 ; line:160 col:11
  call void @llvm.dbg.value(metadata float %116, i64 0, metadata !278, metadata !132), !dbg !277 ; var:"lumaNESE" !DIExpression() func:"main"
  %118 = fadd fast float %103, %108, !dbg !279 ; line:161 col:29
  %119 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !280 ; line:161 col:11
  call void @llvm.dbg.value(metadata float %118, i64 0, metadata !281, metadata !132), !dbg !280 ; var:"lumaSWSE" !DIExpression() func:"main"
  %120 = fadd fast float %93, %98, !dbg !282 ; line:162 col:29
  %121 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !283 ; line:162 col:11
  call void @llvm.dbg.value(metadata float %120, i64 0, metadata !284, metadata !132), !dbg !283 ; var:"lumaNWNE" !DIExpression() func:"main"
  %122 = fmul fast float 2.000000e+00, %66, !dbg !285 ; line:165 col:41
  %123 = fsub fast float %114, %122, !dbg !286 ; line:165 col:35
  %FAbs = call float @dx.op.unary.f32(i32 6, float %123), !dbg !287 ; line:165 col:22  ; FAbs(value)
  %124 = fmul fast float 2.000000e+00, %69, !dbg !288 ; line:165 col:69
  %125 = fsub fast float %110, %124, !dbg !289 ; line:165 col:63
  %FAbs10 = call float @dx.op.unary.f32(i32 6, float %125), !dbg !290 ; line:165 col:52  ; FAbs(value)
  %126 = fmul fast float %FAbs10, 2.000000e+00, !dbg !291 ; line:165 col:78
  %127 = fadd fast float %FAbs, %126, !dbg !292 ; line:165 col:50
  %128 = fmul fast float 2.000000e+00, %73, !dbg !293 ; line:165 col:105
  %129 = fsub fast float %116, %128, !dbg !294 ; line:165 col:99
  %FAbs11 = call float @dx.op.unary.f32(i32 6, float %129), !dbg !295 ; line:165 col:86  ; FAbs(value)
  %130 = fadd fast float %127, %FAbs11, !dbg !296 ; line:165 col:84
  %131 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !297 ; line:165 col:11
  call void @llvm.dbg.value(metadata float %130, i64 0, metadata !298, metadata !132), !dbg !297 ; var:"edgeHorz" !DIExpression() func:"main"
  %132 = fmul fast float 2.000000e+00, %77, !dbg !299 ; line:166 col:41
  %133 = fsub fast float %118, %132, !dbg !300 ; line:166 col:35
  %FAbs12 = call float @dx.op.unary.f32(i32 6, float %133), !dbg !301 ; line:166 col:22  ; FAbs(value)
  %134 = fmul fast float 2.000000e+00, %69, !dbg !302 ; line:166 col:69
  %135 = fsub fast float %112, %134, !dbg !303 ; line:166 col:63
  %FAbs13 = call float @dx.op.unary.f32(i32 6, float %135), !dbg !304 ; line:166 col:52  ; FAbs(value)
  %136 = fmul fast float %FAbs13, 2.000000e+00, !dbg !305 ; line:166 col:78
  %137 = fadd fast float %FAbs12, %136, !dbg !306 ; line:166 col:50
  %138 = fmul fast float 2.000000e+00, %62, !dbg !307 ; line:166 col:105
  %139 = fsub fast float %120, %138, !dbg !308 ; line:166 col:99
  %FAbs14 = call float @dx.op.unary.f32(i32 6, float %139), !dbg !309 ; line:166 col:86  ; FAbs(value)
  %140 = fadd fast float %137, %FAbs14, !dbg !310 ; line:166 col:84
  %141 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !311 ; line:166 col:11
  call void @llvm.dbg.value(metadata float %140, i64 0, metadata !312, metadata !132), !dbg !311 ; var:"edgeVert" !DIExpression() func:"main"
  %142 = fadd fast float %110, %112, !dbg !313 ; line:169 col:38
  %143 = fmul fast float %142, 2.000000e+00, !dbg !314 ; line:169 col:48
  %144 = fadd fast float %143, %114, !dbg !315 ; line:169 col:54
  %145 = fadd fast float %144, %116, !dbg !316 ; line:169 col:65
  %146 = fdiv fast float %145, 1.200000e+01, !dbg !317 ; line:169 col:77
  %147 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !318 ; line:169 col:11
  call void @llvm.dbg.value(metadata float %146, i64 0, metadata !319, metadata !132), !dbg !318 ; var:"avgNeighborLuma" !DIExpression() func:"main"
  %148 = fsub fast float %146, %69, !dbg !320 ; line:170 col:77
  %FAbs15 = call float @dx.op.unary.f32(i32 6, float %148), !dbg !321 ; line:170 col:57  ; FAbs(value)
  %149 = fdiv fast float %FAbs15, %81, !dbg !322 ; line:170 col:86
  %150 = fsub fast float %149, 0.000000e+00, !dbg !323 ; line:170 col:40
  %151 = fdiv fast float %150, 1.000000e+00, !dbg !323 ; line:170 col:40
  %Saturate18 = call float @dx.op.unary.f32(i32 7, float %151), !dbg !323 ; line:170 col:40  ; Saturate(value)
  %152 = fmul fast float %Saturate18, 2.000000e+00, !dbg !323 ; line:170 col:40
  %153 = fsub fast float 3.000000e+00, %152, !dbg !323 ; line:170 col:40
  %154 = fmul fast float %Saturate18, %153, !dbg !323 ; line:170 col:40
  %155 = fmul fast float %Saturate18, %154, !dbg !323 ; line:170 col:40
  %156 = fmul fast float %155, %155, !dbg !324 ; line:170 col:36
  %157 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %CB0_cbuffer, i32 0), !dbg !325 ; line:170 col:101  ; CBufferLoadLegacy(handle,regIndex)
  %158 = extractvalue %dx.types.CBufRet.f32 %157, 3, !dbg !325 ; line:170 col:101
  %159 = fmul fast float %156, %158, !dbg !326 ; line:170 col:99
  %160 = fmul fast float %159, 2.000000e+00, !dbg !327 ; line:170 col:117
  %Saturate = call float @dx.op.unary.f32(i32 7, float %160), !dbg !328 ; line:170 col:27  ; Saturate(value)
  %161 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !329 ; line:170 col:11
  call void @llvm.dbg.value(metadata float %Saturate, i64 0, metadata !330, metadata !132), !dbg !329 ; var:"subpixelShift" !DIExpression() func:"main"
  %162 = fcmp fast oge float %130, %140, !dbg !331 ; line:172 col:31
  %163 = icmp ne i1 %162, false, !dbg !331 ; line:172 col:31
  %164 = select i1 %163, float %62, float %66, !dbg !332 ; line:172 col:22
  %165 = fsub fast float %164, %69, !dbg !333 ; line:172 col:60
  %166 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !334 ; line:172 col:11
  call void @llvm.dbg.value(metadata float %165, i64 0, metadata !335, metadata !132), !dbg !334 ; var:"NegGrad" !DIExpression() func:"main"
  %167 = fcmp fast oge float %130, %140, !dbg !336 ; line:173 col:31
  %168 = icmp ne i1 %167, false, !dbg !336 ; line:173 col:31
  %169 = select i1 %168, float %77, float %73, !dbg !337 ; line:173 col:22
  %170 = fsub fast float %169, %69, !dbg !338 ; line:173 col:60
  %171 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !339 ; line:173 col:11
  call void @llvm.dbg.value(metadata float %170, i64 0, metadata !340, metadata !132), !dbg !339 ; var:"PosGrad" !DIExpression() func:"main"
  %FAbs16 = call float @dx.op.unary.f32(i32 6, float %170), !dbg !341 ; line:174 col:24  ; FAbs(value)
  %FAbs17 = call float @dx.op.unary.f32(i32 6, float %165), !dbg !342 ; line:174 col:40  ; FAbs(value)
  %172 = fcmp fast oge float %FAbs16, %FAbs17, !dbg !343 ; line:174 col:37
  %173 = icmp ne i1 %172, false, !dbg !343 ; line:174 col:37
  %174 = select i1 %173, i32 1, i32 0, !dbg !341 ; line:174 col:24
  %175 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !344 ; line:174 col:10
  call void @llvm.dbg.value(metadata i32 %174, i64 0, metadata !345, metadata !132), !dbg !344 ; var:"GradientDir" !DIExpression() func:"main"
  %176 = fmul fast float %Saturate, 2.540000e+02, !dbg !346 ; line:175 col:38
  %177 = fptoui float %176 to i32, !dbg !347 ; line:175 col:24
  %178 = and i32 %177, 254, !dbg !348 ; line:175 col:47
  %179 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !349 ; line:175 col:10
  call void @llvm.dbg.value(metadata i32 %178, i64 0, metadata !350, metadata !132), !dbg !349 ; var:"Subpix" !DIExpression() func:"main"
  %180 = shl i32 %7, 20, !dbg !351 ; line:178 col:30
  %181 = shl i32 %6, 8, !dbg !352 ; line:178 col:45
  %182 = or i32 %180, %181, !dbg !353 ; line:178 col:36
  %183 = or i32 %182, %178, !dbg !354 ; line:178 col:50
  %184 = or i32 %183, %174, !dbg !355 ; line:178 col:59
  %185 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !356 ; line:178 col:10
  call void @llvm.dbg.value(metadata i32 %184, i64 0, metadata !357, metadata !132), !dbg !356 ; var:"WorkHeader" !DIExpression() func:"main"
  %186 = fcmp fast oge float %130, %140, !dbg !358 ; line:180 col:18
  %187 = icmp ne i1 %186, false, !dbg !358 ; line:180 col:18
  %188 = icmp ne i1 %187, false, !dbg !358 ; line:180 col:18
  br i1 %188, label %189, label %200, !dbg !359 ; line:180 col:9

; <label>:189                                     ; preds = %89
  call void @llvm.dbg.declare(metadata i32* %WorkIdx, metadata !360, metadata !132), !dbg !362 ; var:"WorkIdx" !DIExpression() func:"main"
  %AtomicAdd = call i32 @dx.op.atomicBinOp.i32(i32 78, %dx.types.Handle %WorkCount_UAV_rawbuf, i32 0, i32 0, i32 undef, i32 undef, i32 1), !dbg !363 ; line:183 col:9  ; AtomicBinOp(handle,atomicOp,offset0,offset1,offset2,newValue)
  store i32 %AtomicAdd, i32* %WorkIdx, !dbg !363 ; line:183 col:9
  %190 = load i32, i32* %WorkIdx, align 4, !dbg !364 ; line:184 col:25
  %191 = mul i32 %190, 4, !dbg !365 ; line:184 col:32
  call void @dx.op.rawBufferStore.i32(i32 140, %dx.types.Handle %WorkQueue_UAV_rawbuf, i32 %191, i32 undef, i32 %184, i32 undef, i32 undef, i32 undef, i8 1, i32 4), !dbg !366 ; line:184 col:9  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  %192 = mul i32 2, %174, !dbg !367 ; line:185 col:66
  %193 = sub i32 %192, 1, !dbg !368 ; line:185 col:80
  %.i040 = add i32 %.i0, 0, !dbg !369 ; line:185 col:53
  %.i141 = add i32 %.i1, %193, !dbg !369 ; line:185 col:53
  %194 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !370 ; line:185 col:31
  call void @llvm.dbg.value(metadata i32 %.i040, i64 0, metadata !156, metadata !126), !dbg !371 ; var:"st" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FetchColor"
  call void @llvm.dbg.value(metadata i32 %.i141, i64 0, metadata !156, metadata !128), !dbg !371 ; var:"st" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FetchColor"
  call void @llvm.dbg.value(metadata i32 %.i040, i64 0, metadata !156, metadata !126), !dbg !371 ; var:"st" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FetchColor"
  call void @llvm.dbg.value(metadata i32 %.i141, i64 0, metadata !156, metadata !128), !dbg !371 ; var:"st" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FetchColor"
  %TextureLoad20 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %Color_texture_2d, i32 0, i32 %.i040, i32 %.i141, i32 undef, i32 undef, i32 undef, i32 undef), !dbg !373 ; line:68 col:41  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %195 = extractvalue %dx.types.ResRet.f32 %TextureLoad20, 0, !dbg !373 ; line:68 col:41
  %196 = extractvalue %dx.types.ResRet.f32 %TextureLoad20, 1, !dbg !373 ; line:68 col:41
  %197 = extractvalue %dx.types.ResRet.f32 %TextureLoad20, 2, !dbg !373 ; line:68 col:41
  %198 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !374 ; line:68 col:34
  %199 = load i32, i32* %WorkIdx, align 4, !dbg !375 ; line:185 col:20
  call void @dx.op.bufferStore.f32(i32 69, %dx.types.Handle %ColorQueue_UAV_buf, i32 %199, i32 undef, float %195, float %196, float %197, float %195, i8 15), !dbg !376 ; line:185 col:29  ; BufferStore(uav,coord0,coord1,value0,value1,value2,value3,mask)
  br label %216, !dbg !377 ; line:186 col:5

; <label>:200                                     ; preds = %89
  call void @llvm.dbg.declare(metadata i32* %WorkIdx1, metadata !378, metadata !132), !dbg !379 ; var:"WorkIdx" !DIExpression() func:"main"
  %AtomicAdd19 = call i32 @dx.op.atomicBinOp.i32(i32 78, %dx.types.Handle %WorkCount_UAV_rawbuf, i32 0, i32 4, i32 undef, i32 undef, i32 1), !dbg !380 ; line:190 col:9  ; AtomicBinOp(handle,atomicOp,offset0,offset1,offset2,newValue)
  store i32 %AtomicAdd19, i32* %WorkIdx1, !dbg !380 ; line:190 col:9
  %201 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %CB0_cbuffer, i32 1), !dbg !381 ; line:191 col:19  ; CBufferLoadLegacy(handle,regIndex)
  %202 = extractvalue %dx.types.CBufRet.i32 %201, 0, !dbg !381 ; line:191 col:19
  %203 = load i32, i32* %WorkIdx1, align 4, !dbg !382 ; line:191 col:36
  %204 = sub i32 %202, %203, !dbg !383 ; line:191 col:34
  %205 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !384 ; line:191 col:17
  store i32 %204, i32* %WorkIdx1, align 4, !dbg !384 ; line:191 col:17
  %206 = load i32, i32* %WorkIdx1, align 4, !dbg !385 ; line:192 col:25
  %207 = mul i32 %206, 4, !dbg !386 ; line:192 col:32
  call void @dx.op.rawBufferStore.i32(i32 140, %dx.types.Handle %WorkQueue_UAV_rawbuf, i32 %207, i32 undef, i32 %184, i32 undef, i32 undef, i32 undef, i8 1, i32 4), !dbg !387 ; line:192 col:9  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  %208 = mul i32 2, %174, !dbg !388 ; line:193 col:63
  %209 = sub i32 %208, 1, !dbg !389 ; line:193 col:77
  %.i042 = add i32 %.i0, %209, !dbg !390 ; line:193 col:53
  %.i143 = add i32 %.i1, 0, !dbg !390 ; line:193 col:53
  %210 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !391 ; line:193 col:31
  call void @llvm.dbg.value(metadata i32 %.i042, i64 0, metadata !156, metadata !126), !dbg !392 ; var:"st" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FetchColor"
  call void @llvm.dbg.value(metadata i32 %.i143, i64 0, metadata !156, metadata !128), !dbg !392 ; var:"st" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FetchColor"
  call void @llvm.dbg.value(metadata i32 %.i042, i64 0, metadata !156, metadata !126), !dbg !392 ; var:"st" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FetchColor"
  call void @llvm.dbg.value(metadata i32 %.i143, i64 0, metadata !156, metadata !128), !dbg !392 ; var:"st" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FetchColor"
  %TextureLoad = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %Color_texture_2d, i32 0, i32 %.i042, i32 %.i143, i32 undef, i32 undef, i32 undef, i32 undef), !dbg !121 ; line:68 col:41  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %211 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 0, !dbg !121 ; line:68 col:41
  %212 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 1, !dbg !121 ; line:68 col:41
  %213 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 2, !dbg !121 ; line:68 col:41
  %214 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !393 ; line:68 col:34
  %215 = load i32, i32* %WorkIdx1, align 4, !dbg !394 ; line:193 col:20
  call void @dx.op.bufferStore.f32(i32 69, %dx.types.Handle %ColorQueue_UAV_buf, i32 %215, i32 undef, float %211, float %212, float %213, float %211, i8 15), !dbg !395 ; line:193 col:29  ; BufferStore(uav,coord0,coord1,value0,value1,value2,value3,mask)
  br label %216

; <label>:216                                     ; preds = %88, %200, %189
  %217 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !396 ; line:195 col:1
  ret void, !dbg !396 ; line:195 col:1
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.groupId.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.flattenedThreadIdInGroup.i32(i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadIdInGroup.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #1

; Function Attrs: noduplicate nounwind
declare void @dx.op.barrier(i32, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind
declare i32 @dx.op.atomicBinOp.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind
declare void @dx.op.rawBufferStore.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i8, i32) #1

; Function Attrs: nounwind
declare void @dx.op.bufferStore.f32(i32, %dx.types.Handle, i32, i32, float, float, float, float, i8) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #3

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #3

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #3

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #3

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { noduplicate nounwind }
attributes #3 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!85, !86}
!llvm.ident = !{!87}
!dx.source.contents = !{!88, !89, !90}
!dx.source.defines = !{!91}
!dx.source.mainFileName = !{!92}
!dx.source.args = !{!93}
!dx.version = !{!94}
!dx.valver = !{!95}
!dx.shaderModel = !{!96}
!dx.resources = !{!97}
!dx.typeAnnotations = !{!108, !115}
!dx.entryPoints = !{!118}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "clang version 3.7 (tags/RELEASE_370/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !32, globals: !50)
!1 = !DIFile(filename: "Shaders\5CFXAAPass1_RGB2_CS.hlsl", directory: "")
!2 = !{}
!3 = !{!4, !14, !21, !22}
!4 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint2", file: !1, line: 31, baseType: !5)
!5 = !DICompositeType(tag: DW_TAG_class_type, name: "vector<unsigned int, 2>", file: !1, line: 31, size: 64, align: 32, elements: !6, templateParams: !10)
!6 = !{!7, !9}
!7 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !5, file: !1, line: 31, baseType: !8, size: 32, align: 32, flags: DIFlagPublic)
!8 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!9 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !5, file: !1, line: 31, baseType: !8, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!10 = !{!11, !12}
!11 = !DITemplateTypeParameter(name: "element", type: !8)
!12 = !DITemplateValueParameter(name: "element_count", type: !13, value: i32 2)
!13 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "int2", file: !1, line: 119, baseType: !15)
!15 = !DICompositeType(tag: DW_TAG_class_type, name: "vector<int, 2>", file: !1, line: 119, size: 64, align: 32, elements: !16, templateParams: !19)
!16 = !{!17, !18}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !15, file: !1, line: 119, baseType: !13, size: 32, align: 32, flags: DIFlagPublic)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !15, file: !1, line: 119, baseType: !13, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!19 = !{!20, !12}
!20 = !DITemplateTypeParameter(name: "element", type: !13)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint", file: !1, line: 30, baseType: !8)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "float3", file: !1, line: 84, baseType: !23)
!23 = !DICompositeType(tag: DW_TAG_class_type, name: "vector<float, 3>", file: !1, line: 65, size: 96, align: 32, elements: !24, templateParams: !29)
!24 = !{!25, !27, !28}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !23, file: !1, line: 65, baseType: !26, size: 32, align: 32, flags: DIFlagPublic)
!26 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !23, file: !1, line: 65, baseType: !26, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !23, file: !1, line: 65, baseType: !26, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!29 = !{!30, !31}
!30 = !DITemplateTypeParameter(name: "element", type: !26)
!31 = !DITemplateValueParameter(name: "element_count", type: !13, value: i32 3)
!32 = !{!33, !44, !47}
!33 = !DISubprogram(name: "main", scope: !34, file: !34, line: 98, type: !35, isLocal: false, isDefinition: true, scopeLine: 99, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @main)
!34 = !DIFile(filename: "Shaders/FXAAPass1CS.hlsli", directory: "")
!35 = !DISubroutineType(types: !36)
!36 = !{null, !37, !21, !37, !37}
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint3", file: !1, line: 78, baseType: !38)
!38 = !DICompositeType(tag: DW_TAG_class_type, name: "vector<unsigned int, 3>", file: !1, line: 78, size: 96, align: 32, elements: !39, templateParams: !43)
!39 = !{!40, !41, !42}
!40 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !38, file: !1, line: 78, baseType: !8, size: 32, align: 32, flags: DIFlagPublic)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !38, file: !1, line: 78, baseType: !8, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !38, file: !1, line: 78, baseType: !8, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!43 = !{!11, !31}
!44 = !DISubprogram(name: "RGBToLogLuminance", linkageName: "\01?RGBToLogLuminance@@YAMV?$vector@M$02@@@Z", scope: !34, file: !34, line: 90, type: !45, isLocal: false, isDefinition: true, scopeLine: 91, flags: DIFlagPrototyped, isOptimized: false)
!45 = !DISubroutineType(types: !46)
!46 = !{!26, !22}
!47 = !DISubprogram(name: "FetchColor", linkageName: "\01?FetchColor@@YA?AV?$vector@M$02@@V?$vector@H$01@@@Z", scope: !34, file: !34, line: 68, type: !48, isLocal: false, isDefinition: true, scopeLine: 68, flags: DIFlagPrototyped, isOptimized: false)
!48 = !DISubroutineType(types: !49)
!49 = !{!22, !14}
!50 = !{!51, !60, !62, !63, !65, !67, !71, !73, !74, !78, !80, !82}
!51 = !DIGlobalVariable(name: "RcpTextureSize", linkageName: "\01?RcpTextureSize@CB0@@3V?$vector@M$01@@B", scope: !0, file: !52, line: 27, type: !53, isLocal: false, isDefinition: true)
!52 = !DIFile(filename: "Shaders/FXAARootSignature.hlsli", directory: "")
!53 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !54)
!54 = !DIDerivedType(tag: DW_TAG_typedef, name: "float2", file: !1, line: 27, baseType: !55)
!55 = !DICompositeType(tag: DW_TAG_class_type, name: "vector<float, 2>", file: !1, line: 27, size: 64, align: 32, elements: !56, templateParams: !59)
!56 = !{!57, !58}
!57 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !55, file: !1, line: 27, baseType: !26, size: 32, align: 32, flags: DIFlagPublic)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !55, file: !1, line: 27, baseType: !26, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!59 = !{!30, !12}
!60 = !DIGlobalVariable(name: "ContrastThreshold", linkageName: "\01?ContrastThreshold@CB0@@3MB", scope: !0, file: !52, line: 28, type: !61, isLocal: false, isDefinition: true)
!61 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !26)
!62 = !DIGlobalVariable(name: "SubpixelRemoval", linkageName: "\01?SubpixelRemoval@CB0@@3MB", scope: !0, file: !52, line: 29, type: !61, isLocal: false, isDefinition: true)
!63 = !DIGlobalVariable(name: "LastQueueIndex", linkageName: "\01?LastQueueIndex@CB0@@3IB", scope: !0, file: !52, line: 30, type: !64, isLocal: false, isDefinition: true)
!64 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !21)
!65 = !DIGlobalVariable(name: "StartPixel", linkageName: "\01?StartPixel@CB0@@3V?$vector@I$01@@B", scope: !0, file: !52, line: 31, type: !66, isLocal: false, isDefinition: true)
!66 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4)
!67 = !DIGlobalVariable(name: "gs_LumaCache", linkageName: "\01?gs_LumaCache@@3PAMA", scope: !0, file: !34, line: 78, type: !68, isLocal: false, isDefinition: true, variable: [100 x float] addrspace(3)* @"\01?gs_LumaCache@@3PAMA")
!68 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 3200, align: 32, elements: !69)
!69 = !{!70}
!70 = !DISubrange(count: 100)
!71 = !DIGlobalVariable(name: "WorkCount", linkageName: "\01?WorkCount@@3URWByteAddressBuffer@@A", scope: !0, file: !34, line: 63, type: !72, isLocal: false, isDefinition: true)
!72 = !DICompositeType(tag: DW_TAG_structure_type, name: "RWByteAddressBuffer", file: !1, line: 63, size: 32, align: 32, elements: !2)
!73 = !DIGlobalVariable(name: "WorkQueue", linkageName: "\01?WorkQueue@@3URWByteAddressBuffer@@A", scope: !0, file: !34, line: 64, type: !72, isLocal: false, isDefinition: true)
!74 = !DIGlobalVariable(name: "ColorQueue", linkageName: "\01?ColorQueue@@3V?$RWBuffer@V?$vector@M$02@@@@A", scope: !0, file: !34, line: 65, type: !75, isLocal: false, isDefinition: true)
!75 = !DICompositeType(tag: DW_TAG_class_type, name: "RWBuffer<vector<float, 3> >", file: !1, line: 65, size: 96, align: 32, elements: !2, templateParams: !76)
!76 = !{!77}
!77 = !DITemplateTypeParameter(name: "element", type: !23)
!78 = !DIGlobalVariable(name: "Color", linkageName: "\01?Color@@3V?$Texture2D@V?$vector@M$02@@@@A", scope: !0, file: !34, line: 67, type: !79, isLocal: false, isDefinition: true)
!79 = !DICompositeType(tag: DW_TAG_class_type, name: "Texture2D<vector<float, 3> >", file: !1, line: 67, size: 128, align: 32, elements: !2, templateParams: !76)
!80 = !DIGlobalVariable(name: "LinearSampler", linkageName: "\01?LinearSampler@@3USamplerState@@A", scope: !0, file: !34, line: 74, type: !81, isLocal: false, isDefinition: true)
!81 = !DICompositeType(tag: DW_TAG_structure_type, name: "SamplerState", file: !1, line: 74, size: 32, align: 32, elements: !2)
!82 = !DIGlobalVariable(name: "Luma", linkageName: "\01?Luma@@3V?$RWTexture2D@M@@A", scope: !0, file: !34, line: 84, type: !83, isLocal: false, isDefinition: true)
!83 = !DICompositeType(tag: DW_TAG_class_type, name: "RWTexture2D<float>", file: !1, line: 84, size: 32, align: 32, elements: !2, templateParams: !84)
!84 = !{!30}
!85 = !{i32 2, !"Dwarf Version", i32 4}
!86 = !{i32 2, !"Debug Info Version", i32 3}
!87 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!88 = !{!"Shaders\5CFXAAPass1_RGB2_CS.hlsl", !"//\0D\0A// Copyright (c) Microsoft. All rights reserved.\0D\0A// This code is licensed under the MIT License (MIT).\0D\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0D\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0D\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0D\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0D\0A//\0D\0A// Developed by Minigraph\0D\0A//\0D\0A// Author:  James Stanard \0D\0A\0D\0A#define SUPPORT_TYPED_UAV_LOADS 1\0D\0A#include \22FXAAPass1CS.hlsli\22\0D\0A"}
!89 = !{!"Shaders\5CFXAAPass1CS.hlsli", !"//\0A// Copyright (c) Microsoft. All rights reserved.\0A// This code is licensed under the MIT License (MIT).\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0A//\0A// Developed by Minigraph\0A//\0A// Author:  James Stanard \0A//\0A// Description:  A Compute-optimized implementation of FXAA 3.11 (PC Quality).  The\0A// improvements take advantage of work queues (RWStructuredBuffer with atomic counters)\0A// for these benefits:\0A// \0A// 1) Split horizontal and vertical edge searches into separate dispatches to reduce\0A// shader complexity and incoherent branching.\0A// 2) Delay writing new pixel colors until after the source buffer has been fully\0A// analyzed.  This avoids the write-after-scattered-read hazard.\0A// 3) Modify source buffer in-place rather than ping-ponging buffers, which reduces\0A// bandwidth and memory demands.\0A//\0A// In addition to the above-mentioned benefits of using UAVs, the first pass also\0A// takes advantage of groupshared memory for storing luma values, further reducing\0A// fetches and bandwidth.\0A//\0A// Another optimization is in the generation of perceived brightness (luma) of pixels.\0A// The original implementation used sRGB as a good approximation of log-luminance.  A\0A// more precise representation of log-luminance allows the algorithm to operate with a\0A// higher threshold value while still finding perceivable edges across the full range\0A// of brightness.  The approximation used here is (1 - 2^(-4L)) * 16/15, where L =\0A// dot( LinearRGB, float3(0.212671, 0.715160, 0.072169) ).  A threshold of 0.2 is\0A// recommended with log-luminance computed this way.\0A//\0A\0A// Original Boilerplate:\0A//\0A/*============================================================================\0A\0A\0A                    NVIDIA FXAA 3.11 by TIMOTHY LOTTES\0A\0A\0A------------------------------------------------------------------------------\0ACOPYRIGHT (C) 2010, 2011 NVIDIA CORPORATION. ALL RIGHTS RESERVED.\0A------------------------------------------------------------------------------\0ATO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THIS SOFTWARE IS PROVIDED\0A*AS IS* AND NVIDIA AND ITS SUPPLIERS DISCLAIM ALL WARRANTIES, EITHER EXPRESS\0AOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF\0AMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL NVIDIA\0AOR ITS SUPPLIERS BE LIABLE FOR ANY SPECIAL, INCIDENTAL, INDIRECT, OR\0ACONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR\0ALOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF BUSINESS INFORMATION,\0AOR ANY OTHER PECUNIARY LOSS) ARISING OUT OF THE USE OF OR INABILITY TO USE\0ATHIS SOFTWARE, EVEN IF NVIDIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\0ADAMAGES.\0A*/\0A\0A\0A#include \22FXAARootSignature.hlsli\22\0A\0ARWByteAddressBuffer WorkCount : register(u0);\0ARWByteAddressBuffer WorkQueue : register(u1);\0ARWBuffer<float3> ColorQueue : register(u2);\0A#if SUPPORT_TYPED_UAV_LOADS\0A  Texture2D<float3> Color : register(t0);\0A  float3 FetchColor( int2 st ) { return Color[st]; }\0A#else\0A  #include \22PixelPacking_R11G11B10.hlsli\22\0A  Texture2D<uint> Color : register(t0);\0A  float3 FetchColor( int2 st ) { return Unpack_R11G11B10_FLOAT(Color[st]); }\0A#endif\0ASamplerState LinearSampler : register(s0);\0A\0A#define BOUNDARY_SIZE 1\0A#define ROW_WIDTH (8 + BOUNDARY_SIZE * 2)\0Agroupshared float gs_LumaCache[ROW_WIDTH * ROW_WIDTH];\0A\0A// If pre-computed, source luminance as a texture, otherwise write it out for Pass2\0A#ifdef USE_LUMA_INPUT_BUFFER\0A    Texture2D<float> Luma : register(t1);\0A#else\0A    RWTexture2D<float> Luma : register(u3);\0A#endif\0A\0A//\0A// Helper functions\0A//\0Afloat RGBToLogLuminance( float3 LinearRGB )\0A{\0A    float Luma = dot( LinearRGB, float3(0.212671, 0.715160, 0.072169) );\0A    return log2(1 + Luma * 15) / 4;\0A}\0A\0A[RootSignature(FXAA_RootSig)]\0A[numthreads( 8, 8, 1 )]\0Avoid main( uint3 Gid : SV_GroupID, uint GI : SV_GroupIndex, uint3 GTid : SV_GroupThreadID, uint3 DTid : SV_DispatchThreadID )\0A{\0A    uint2 PixelCoord = DTid.xy + StartPixel;\0A\0A#ifdef USE_LUMA_INPUT_BUFFER\0A    // Load 4 lumas per thread into LDS (but only those needed to fill our pixel cache)\0A    if (max(GTid.x, GTid.y) < ROW_WIDTH / 2)\0A    {\0A        int2 ThreadUL = PixelCoord + GTid.xy - (BOUNDARY_SIZE - 1);\0A        float4 Luma4 = Luma.Gather(LinearSampler, ThreadUL * RcpTextureSize);\0A        uint LoadIndex = (GTid.x + GTid.y * ROW_WIDTH) * 2;\0A        gs_LumaCache[LoadIndex                ] = Luma4.w;\0A        gs_LumaCache[LoadIndex + 1            ] = Luma4.z;\0A        gs_LumaCache[LoadIndex + ROW_WIDTH    ] = Luma4.x;\0A        gs_LumaCache[LoadIndex + ROW_WIDTH + 1] = Luma4.y;\0A    }\0A#else\0A    // Because we can't use Gather() on RGB, we make each thread read two pixels (but only those needed).\0A    if (GI < ROW_WIDTH * ROW_WIDTH / 2)\0A    {\0A        uint LdsCoord = GI;\0A        int2 UavCoord = StartPixel + uint2(GI % ROW_WIDTH, GI / ROW_WIDTH) + Gid.xy * 8 - BOUNDARY_SIZE;\0A        float Luma1 = RGBToLogLuminance(FetchColor(UavCoord));\0A        Luma[UavCoord] = Luma1;\0A        gs_LumaCache[LdsCoord] = Luma1;\0A\0A        LdsCoord += ROW_WIDTH * ROW_WIDTH / 2;\0A        UavCoord += int2(0, ROW_WIDTH / 2);\0A        float Luma2 = RGBToLogLuminance(FetchColor(UavCoord));\0A        Luma[UavCoord] = Luma2;\0A        gs_LumaCache[LdsCoord] = Luma2;\0A    }\0A#endif\0A\0A    GroupMemoryBarrierWithGroupSync();\0A\0A    uint CenterIdx = (GTid.x + BOUNDARY_SIZE) + (GTid.y + BOUNDARY_SIZE) * ROW_WIDTH;\0A\0A    // Load the ordinal and center luminances\0A    float lumaN  = gs_LumaCache[CenterIdx - ROW_WIDTH];\0A    float lumaW  = gs_LumaCache[CenterIdx - 1];\0A    float lumaM  = gs_LumaCache[CenterIdx];\0A    float lumaE  = gs_LumaCache[CenterIdx + 1];\0A    float lumaS  = gs_LumaCache[CenterIdx + ROW_WIDTH];\0A\0A    // Contrast threshold test\0A    float rangeMax = max(max(lumaN, lumaW), max(lumaE, max(lumaS, lumaM)));\0A    float rangeMin = min(min(lumaN, lumaW), min(lumaE, min(lumaS, lumaM)));\0A    float range = rangeMax - rangeMin;\0A    if (range < ContrastThreshold)\0A        return;\0A\0A    // Load the corner luminances\0A    float lumaNW = gs_LumaCache[CenterIdx - ROW_WIDTH - 1];\0A    float lumaNE = gs_LumaCache[CenterIdx - ROW_WIDTH + 1];\0A    float lumaSW = gs_LumaCache[CenterIdx + ROW_WIDTH - 1];\0A    float lumaSE = gs_LumaCache[CenterIdx + ROW_WIDTH + 1];\0A\0A    // Pre-sum a few terms so the results can be reused\0A    float lumaNS = lumaN + lumaS;\0A    float lumaWE = lumaW + lumaE;\0A    float lumaNWSW = lumaNW + lumaSW;\0A    float lumaNESE = lumaNE + lumaSE;\0A    float lumaSWSE = lumaSW + lumaSE;\0A    float lumaNWNE = lumaNW + lumaNE;\0A\0A    // Compute horizontal and vertical contrast; see which is bigger\0A    float edgeHorz = abs(lumaNWSW - 2.0 * lumaW) + abs(lumaNS - 2.0 * lumaM) * 2.0 + abs(lumaNESE - 2.0 * lumaE);\0A    float edgeVert = abs(lumaSWSE - 2.0 * lumaS) + abs(lumaWE - 2.0 * lumaM) * 2.0 + abs(lumaNWNE - 2.0 * lumaN);\0A\0A    // Also compute local contrast in the 3x3 region.  This can identify standalone pixels that alias.\0A    float avgNeighborLuma = ((lumaNS + lumaWE) * 2.0 + lumaNWSW + lumaNESE) / 12.0;\0A    float subpixelShift = saturate(pow(smoothstep(0, 1, abs(avgNeighborLuma - lumaM) / range), 2) * SubpixelRemoval * 2);\0A\0A    float NegGrad = (edgeHorz >= edgeVert ? lumaN : lumaW) - lumaM;\0A    float PosGrad = (edgeHorz >= edgeVert ? lumaS : lumaE) - lumaM;\0A    uint GradientDir = abs(PosGrad) >= abs(NegGrad) ? 1 : 0;\0A    uint Subpix = uint(subpixelShift * 254.0) & 0xFE;\0A\0A    // Packet header: [ 12 bits Y | 12 bits X | 7 bit Subpix | 1 bit dir(Grad) ]\0A    uint WorkHeader = DTid.y << 20 | DTid.x << 8 | Subpix | GradientDir;\0A\0A    if (edgeHorz >= edgeVert)\0A    {\0A        uint WorkIdx;\0A        WorkCount.InterlockedAdd(0, 1, WorkIdx);\0A        WorkQueue.Store(WorkIdx*4, WorkHeader);\0A        ColorQueue[WorkIdx] = FetchColor(PixelCoord + uint2(0, 2 * GradientDir - 1));\0A    }\0A    else\0A    {\0A        uint WorkIdx;\0A        WorkCount.InterlockedAdd(4, 1, WorkIdx);\0A        WorkIdx = LastQueueIndex - WorkIdx;\0A        WorkQueue.Store(WorkIdx*4, WorkHeader);\0A        ColorQueue[WorkIdx] = FetchColor(PixelCoord + uint2(2 * GradientDir - 1, 0));\0A    }\0A}\0A"}
!90 = !{!"Shaders\5CFXAARootSignature.hlsli", !"//\0A// Copyright (c) Microsoft. All rights reserved.\0A// This code is licensed under the MIT License (MIT).\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0A//\0A// Developed by Minigraph\0A//\0A// Author:  James Stanard \0A//\0A\0A#define FXAA_RootSig \5C\0A    \22RootFlags(0), \22 \5C\0A    \22RootConstants(b0, num32BitConstants=7), \22 \5C\0A    \22DescriptorTable(UAV(u0, numDescriptors = 5)),\22 \5C\0A    \22DescriptorTable(SRV(t0, numDescriptors = 6)),\22 \5C\0A    \22StaticSampler(s0,\22 \5C\0A        \22addressU = TEXTURE_ADDRESS_CLAMP,\22 \5C\0A        \22addressV = TEXTURE_ADDRESS_CLAMP,\22 \5C\0A        \22addressW = TEXTURE_ADDRESS_CLAMP,\22 \5C\0A        \22filter = FILTER_MIN_MAG_MIP_LINEAR)\22\0A\0Acbuffer CB0 : register(b0)\0A{\0A    float2 RcpTextureSize;\0A    float ContrastThreshold;    // default = 0.2, lower is more expensive\0A    float SubpixelRemoval;        // default = 0.75, lower blurs less\0A    uint LastQueueIndex;\0A    uint2 StartPixel;\0A}\0A"}
!91 = !{!"_GAMING_DESKTOP=1", !"_GAMING_DESKTOP=1"}
!92 = !{!"Shaders\5CFXAAPass1_RGB2_CS.hlsl"}
!93 = !{!"-E", !"main", !"-T", !"cs_6_2", !"/D", !"_GAMING_DESKTOP=1", !"/Od", !"/Zi", !"-D", !"_GAMING_DESKTOP=1", !"-Qembed_debug"}
!94 = !{i32 1, i32 2}
!95 = !{i32 1, i32 6}
!96 = !{!"cs", i32 6, i32 2}
!97 = !{!98, !101, !106, null}
!98 = !{!99}
!99 = !{i32 0, %"class.Texture2D<vector<float, 3> >"* undef, !"Color", i32 0, i32 0, i32 1, i32 2, i32 0, !100}
!100 = !{i32 0, i32 9}
!101 = !{!102, !103, !104, !105}
!102 = !{i32 0, %struct.RWByteAddressBuffer* undef, !"WorkCount", i32 0, i32 0, i32 1, i32 11, i1 false, i1 false, i1 false, null}
!103 = !{i32 1, %struct.RWByteAddressBuffer* undef, !"WorkQueue", i32 0, i32 1, i32 1, i32 11, i1 false, i1 false, i1 false, null}
!104 = !{i32 2, %"class.RWBuffer<vector<float, 3> >"* undef, !"ColorQueue", i32 0, i32 2, i32 1, i32 10, i1 false, i1 false, i1 false, !100}
!105 = !{i32 3, %"class.RWTexture2D<float>"* undef, !"Luma", i32 0, i32 3, i32 1, i32 2, i1 false, i1 false, i1 false, !100}
!106 = !{!107}
!107 = !{i32 0, %CB0* undef, !"CB0", i32 0, i32 0, i32 1, i32 28, null}
!108 = !{i32 0, %CB0 undef, !109}
!109 = !{i32 28, !110, !111, !112, !113, !114}
!110 = !{i32 6, !"RcpTextureSize", i32 3, i32 0, i32 7, i32 9}
!111 = !{i32 6, !"ContrastThreshold", i32 3, i32 8, i32 7, i32 9}
!112 = !{i32 6, !"SubpixelRemoval", i32 3, i32 12, i32 7, i32 9}
!113 = !{i32 6, !"LastQueueIndex", i32 3, i32 16, i32 7, i32 5}
!114 = !{i32 6, !"StartPixel", i32 3, i32 20, i32 7, i32 5}
!115 = !{i32 1, void ()* @main, !116}
!116 = !{!117}
!117 = !{i32 0, !2, !2}
!118 = !{void ()* @main, !"main", null, !97, !119}
!119 = !{i32 0, i64 17, i32 4, !120}
!120 = !{i32 8, i32 8, i32 1}
!121 = !DILocation(line: 68, column: 41, scope: !47, inlinedAt: !122)
!122 = distinct !DILocation(line: 193, column: 31, scope: !123)
!123 = distinct !DILexicalBlock(scope: !124, file: !34, line: 188, column: 5)
!124 = distinct !DILexicalBlock(scope: !33, file: !34, line: 180, column: 9)
!125 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "DTid", arg: 4, scope: !33, file: !34, line: 98, type: !37)
!126 = !DIExpression(DW_OP_bit_piece, 0, 32)
!127 = !DILocation(line: 98, column: 98, scope: !33)
!128 = !DIExpression(DW_OP_bit_piece, 32, 32)
!129 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "GTid", arg: 3, scope: !33, file: !34, line: 98, type: !37)
!130 = !DILocation(line: 98, column: 67, scope: !33)
!131 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "GI", arg: 2, scope: !33, file: !34, line: 98, type: !21)
!132 = !DIExpression()
!133 = !DILocation(line: 98, column: 41, scope: !33)
!134 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "Gid", arg: 1, scope: !33, file: !34, line: 98, type: !37)
!135 = !DILocation(line: 98, column: 18, scope: !33)
!136 = !DILocation(line: 100, column: 34, scope: !33)
!137 = !DILocation(line: 100, column: 32, scope: !33)
!138 = !DILocation(line: 100, column: 11, scope: !33)
!139 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "PixelCoord", scope: !33, file: !34, line: 100, type: !4)
!140 = !DILocation(line: 116, column: 12, scope: !141)
!141 = distinct !DILexicalBlock(scope: !33, file: !34, line: 116, column: 9)
!142 = !DILocation(line: 116, column: 9, scope: !33)
!143 = !DILocation(line: 118, column: 14, scope: !144)
!144 = distinct !DILexicalBlock(scope: !141, file: !34, line: 117, column: 5)
!145 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "LdsCoord", scope: !144, file: !34, line: 118, type: !21)
!146 = !DILocation(line: 119, column: 25, scope: !144)
!147 = !DILocation(line: 119, column: 47, scope: !144)
!148 = !DILocation(line: 119, column: 63, scope: !144)
!149 = !DILocation(line: 119, column: 36, scope: !144)
!150 = !DILocation(line: 119, column: 85, scope: !144)
!151 = !DILocation(line: 119, column: 76, scope: !144)
!152 = !DILocation(line: 119, column: 89, scope: !144)
!153 = !DILocation(line: 119, column: 14, scope: !144)
!154 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "UavCoord", scope: !144, file: !34, line: 119, type: !14)
!155 = !DILocation(line: 120, column: 41, scope: !144)
!156 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "st", arg: 1, scope: !47, file: !34, line: 68, type: !14)
!157 = !DILocation(line: 68, column: 27, scope: !47, inlinedAt: !158)
!158 = distinct !DILocation(line: 120, column: 41, scope: !144)
!159 = !DILocation(line: 68, column: 41, scope: !47, inlinedAt: !158)
!160 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "LinearRGB", arg: 1, scope: !44, file: !34, line: 90, type: !22)
!161 = !DILocation(line: 90, column: 33, scope: !44, inlinedAt: !162)
!162 = distinct !DILocation(line: 120, column: 23, scope: !144)
!163 = !DILocation(line: 68, column: 34, scope: !47, inlinedAt: !158)
!164 = !DILocation(line: 120, column: 23, scope: !144)
!165 = !DILocation(line: 92, column: 18, scope: !44, inlinedAt: !162)
!166 = !DILocation(line: 92, column: 11, scope: !44, inlinedAt: !162)
!167 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Luma", scope: !44, file: !34, line: 92, type: !26)
!168 = !DILocation(line: 93, column: 26, scope: !44, inlinedAt: !162)
!169 = !DILocation(line: 93, column: 19, scope: !44, inlinedAt: !162)
!170 = !DILocation(line: 93, column: 12, scope: !44, inlinedAt: !162)
!171 = !DILocation(line: 93, column: 32, scope: !44, inlinedAt: !162)
!172 = !DILocation(line: 93, column: 5, scope: !44, inlinedAt: !162)
!173 = !DILocation(line: 120, column: 15, scope: !144)
!174 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Luma1", scope: !144, file: !34, line: 120, type: !26)
!175 = !DILocation(line: 121, column: 24, scope: !144)
!176 = !DILocation(line: 122, column: 9, scope: !144)
!177 = !DILocation(line: 122, column: 32, scope: !144)
!178 = !DILocation(line: 124, column: 18, scope: !144)
!179 = !DILocation(line: 125, column: 18, scope: !144)
!180 = !DILocation(line: 126, column: 41, scope: !144)
!181 = !DILocation(line: 68, column: 27, scope: !47, inlinedAt: !182)
!182 = distinct !DILocation(line: 126, column: 41, scope: !144)
!183 = !DILocation(line: 68, column: 41, scope: !47, inlinedAt: !182)
!184 = !DILocation(line: 90, column: 33, scope: !44, inlinedAt: !185)
!185 = distinct !DILocation(line: 126, column: 23, scope: !144)
!186 = !DILocation(line: 68, column: 34, scope: !47, inlinedAt: !182)
!187 = !DILocation(line: 126, column: 23, scope: !144)
!188 = !DILocation(line: 92, column: 18, scope: !44, inlinedAt: !185)
!189 = !DILocation(line: 92, column: 11, scope: !44, inlinedAt: !185)
!190 = !DILocation(line: 93, column: 26, scope: !44, inlinedAt: !185)
!191 = !DILocation(line: 93, column: 19, scope: !44, inlinedAt: !185)
!192 = !DILocation(line: 93, column: 12, scope: !44, inlinedAt: !185)
!193 = !DILocation(line: 93, column: 32, scope: !44, inlinedAt: !185)
!194 = !DILocation(line: 93, column: 5, scope: !44, inlinedAt: !185)
!195 = !DILocation(line: 126, column: 15, scope: !144)
!196 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Luma2", scope: !144, file: !34, line: 126, type: !26)
!197 = !DILocation(line: 127, column: 24, scope: !144)
!198 = !DILocation(line: 128, column: 9, scope: !144)
!199 = !DILocation(line: 128, column: 32, scope: !144)
!200 = !DILocation(line: 129, column: 5, scope: !144)
!201 = !DILocation(line: 132, column: 5, scope: !33)
!202 = !DILocation(line: 134, column: 30, scope: !33)
!203 = !DILocation(line: 134, column: 57, scope: !33)
!204 = !DILocation(line: 134, column: 74, scope: !33)
!205 = !DILocation(line: 134, column: 47, scope: !33)
!206 = !DILocation(line: 134, column: 10, scope: !33)
!207 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "CenterIdx", scope: !33, file: !34, line: 134, type: !21)
!208 = !DILocation(line: 137, column: 43, scope: !33)
!209 = !DILocation(line: 137, column: 20, scope: !33)
!210 = !DILocation(line: 137, column: 11, scope: !33)
!211 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lumaN", scope: !33, file: !34, line: 137, type: !26)
!212 = !DILocation(line: 138, column: 43, scope: !33)
!213 = !DILocation(line: 138, column: 20, scope: !33)
!214 = !DILocation(line: 138, column: 11, scope: !33)
!215 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lumaW", scope: !33, file: !34, line: 138, type: !26)
!216 = !DILocation(line: 139, column: 20, scope: !33)
!217 = !DILocation(line: 139, column: 11, scope: !33)
!218 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lumaM", scope: !33, file: !34, line: 139, type: !26)
!219 = !DILocation(line: 140, column: 43, scope: !33)
!220 = !DILocation(line: 140, column: 20, scope: !33)
!221 = !DILocation(line: 140, column: 11, scope: !33)
!222 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lumaE", scope: !33, file: !34, line: 140, type: !26)
!223 = !DILocation(line: 141, column: 43, scope: !33)
!224 = !DILocation(line: 141, column: 20, scope: !33)
!225 = !DILocation(line: 141, column: 11, scope: !33)
!226 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lumaS", scope: !33, file: !34, line: 141, type: !26)
!227 = !DILocation(line: 144, column: 56, scope: !33)
!228 = !DILocation(line: 144, column: 45, scope: !33)
!229 = !DILocation(line: 144, column: 26, scope: !33)
!230 = !DILocation(line: 144, column: 22, scope: !33)
!231 = !DILocation(line: 144, column: 11, scope: !33)
!232 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rangeMax", scope: !33, file: !34, line: 144, type: !26)
!233 = !DILocation(line: 145, column: 56, scope: !33)
!234 = !DILocation(line: 145, column: 45, scope: !33)
!235 = !DILocation(line: 145, column: 26, scope: !33)
!236 = !DILocation(line: 145, column: 22, scope: !33)
!237 = !DILocation(line: 145, column: 11, scope: !33)
!238 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rangeMin", scope: !33, file: !34, line: 145, type: !26)
!239 = !DILocation(line: 146, column: 28, scope: !33)
!240 = !DILocation(line: 146, column: 11, scope: !33)
!241 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "range", scope: !33, file: !34, line: 146, type: !26)
!242 = !DILocation(line: 147, column: 17, scope: !243)
!243 = distinct !DILexicalBlock(scope: !33, file: !34, line: 147, column: 9)
!244 = !DILocation(line: 147, column: 15, scope: !243)
!245 = !DILocation(line: 147, column: 9, scope: !33)
!246 = !DILocation(line: 148, column: 9, scope: !243)
!247 = !DILocation(line: 151, column: 43, scope: !33)
!248 = !DILocation(line: 151, column: 55, scope: !33)
!249 = !DILocation(line: 151, column: 20, scope: !33)
!250 = !DILocation(line: 151, column: 11, scope: !33)
!251 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lumaNW", scope: !33, file: !34, line: 151, type: !26)
!252 = !DILocation(line: 152, column: 43, scope: !33)
!253 = !DILocation(line: 152, column: 55, scope: !33)
!254 = !DILocation(line: 152, column: 20, scope: !33)
!255 = !DILocation(line: 152, column: 11, scope: !33)
!256 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lumaNE", scope: !33, file: !34, line: 152, type: !26)
!257 = !DILocation(line: 153, column: 43, scope: !33)
!258 = !DILocation(line: 153, column: 55, scope: !33)
!259 = !DILocation(line: 153, column: 20, scope: !33)
!260 = !DILocation(line: 153, column: 11, scope: !33)
!261 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lumaSW", scope: !33, file: !34, line: 153, type: !26)
!262 = !DILocation(line: 154, column: 43, scope: !33)
!263 = !DILocation(line: 154, column: 55, scope: !33)
!264 = !DILocation(line: 154, column: 20, scope: !33)
!265 = !DILocation(line: 154, column: 11, scope: !33)
!266 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lumaSE", scope: !33, file: !34, line: 154, type: !26)
!267 = !DILocation(line: 157, column: 26, scope: !33)
!268 = !DILocation(line: 157, column: 11, scope: !33)
!269 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lumaNS", scope: !33, file: !34, line: 157, type: !26)
!270 = !DILocation(line: 158, column: 26, scope: !33)
!271 = !DILocation(line: 158, column: 11, scope: !33)
!272 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lumaWE", scope: !33, file: !34, line: 158, type: !26)
!273 = !DILocation(line: 159, column: 29, scope: !33)
!274 = !DILocation(line: 159, column: 11, scope: !33)
!275 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lumaNWSW", scope: !33, file: !34, line: 159, type: !26)
!276 = !DILocation(line: 160, column: 29, scope: !33)
!277 = !DILocation(line: 160, column: 11, scope: !33)
!278 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lumaNESE", scope: !33, file: !34, line: 160, type: !26)
!279 = !DILocation(line: 161, column: 29, scope: !33)
!280 = !DILocation(line: 161, column: 11, scope: !33)
!281 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lumaSWSE", scope: !33, file: !34, line: 161, type: !26)
!282 = !DILocation(line: 162, column: 29, scope: !33)
!283 = !DILocation(line: 162, column: 11, scope: !33)
!284 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lumaNWNE", scope: !33, file: !34, line: 162, type: !26)
!285 = !DILocation(line: 165, column: 41, scope: !33)
!286 = !DILocation(line: 165, column: 35, scope: !33)
!287 = !DILocation(line: 165, column: 22, scope: !33)
!288 = !DILocation(line: 165, column: 69, scope: !33)
!289 = !DILocation(line: 165, column: 63, scope: !33)
!290 = !DILocation(line: 165, column: 52, scope: !33)
!291 = !DILocation(line: 165, column: 78, scope: !33)
!292 = !DILocation(line: 165, column: 50, scope: !33)
!293 = !DILocation(line: 165, column: 105, scope: !33)
!294 = !DILocation(line: 165, column: 99, scope: !33)
!295 = !DILocation(line: 165, column: 86, scope: !33)
!296 = !DILocation(line: 165, column: 84, scope: !33)
!297 = !DILocation(line: 165, column: 11, scope: !33)
!298 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "edgeHorz", scope: !33, file: !34, line: 165, type: !26)
!299 = !DILocation(line: 166, column: 41, scope: !33)
!300 = !DILocation(line: 166, column: 35, scope: !33)
!301 = !DILocation(line: 166, column: 22, scope: !33)
!302 = !DILocation(line: 166, column: 69, scope: !33)
!303 = !DILocation(line: 166, column: 63, scope: !33)
!304 = !DILocation(line: 166, column: 52, scope: !33)
!305 = !DILocation(line: 166, column: 78, scope: !33)
!306 = !DILocation(line: 166, column: 50, scope: !33)
!307 = !DILocation(line: 166, column: 105, scope: !33)
!308 = !DILocation(line: 166, column: 99, scope: !33)
!309 = !DILocation(line: 166, column: 86, scope: !33)
!310 = !DILocation(line: 166, column: 84, scope: !33)
!311 = !DILocation(line: 166, column: 11, scope: !33)
!312 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "edgeVert", scope: !33, file: !34, line: 166, type: !26)
!313 = !DILocation(line: 169, column: 38, scope: !33)
!314 = !DILocation(line: 169, column: 48, scope: !33)
!315 = !DILocation(line: 169, column: 54, scope: !33)
!316 = !DILocation(line: 169, column: 65, scope: !33)
!317 = !DILocation(line: 169, column: 77, scope: !33)
!318 = !DILocation(line: 169, column: 11, scope: !33)
!319 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "avgNeighborLuma", scope: !33, file: !34, line: 169, type: !26)
!320 = !DILocation(line: 170, column: 77, scope: !33)
!321 = !DILocation(line: 170, column: 57, scope: !33)
!322 = !DILocation(line: 170, column: 86, scope: !33)
!323 = !DILocation(line: 170, column: 40, scope: !33)
!324 = !DILocation(line: 170, column: 36, scope: !33)
!325 = !DILocation(line: 170, column: 101, scope: !33)
!326 = !DILocation(line: 170, column: 99, scope: !33)
!327 = !DILocation(line: 170, column: 117, scope: !33)
!328 = !DILocation(line: 170, column: 27, scope: !33)
!329 = !DILocation(line: 170, column: 11, scope: !33)
!330 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "subpixelShift", scope: !33, file: !34, line: 170, type: !26)
!331 = !DILocation(line: 172, column: 31, scope: !33)
!332 = !DILocation(line: 172, column: 22, scope: !33)
!333 = !DILocation(line: 172, column: 60, scope: !33)
!334 = !DILocation(line: 172, column: 11, scope: !33)
!335 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "NegGrad", scope: !33, file: !34, line: 172, type: !26)
!336 = !DILocation(line: 173, column: 31, scope: !33)
!337 = !DILocation(line: 173, column: 22, scope: !33)
!338 = !DILocation(line: 173, column: 60, scope: !33)
!339 = !DILocation(line: 173, column: 11, scope: !33)
!340 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "PosGrad", scope: !33, file: !34, line: 173, type: !26)
!341 = !DILocation(line: 174, column: 24, scope: !33)
!342 = !DILocation(line: 174, column: 40, scope: !33)
!343 = !DILocation(line: 174, column: 37, scope: !33)
!344 = !DILocation(line: 174, column: 10, scope: !33)
!345 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "GradientDir", scope: !33, file: !34, line: 174, type: !21)
!346 = !DILocation(line: 175, column: 38, scope: !33)
!347 = !DILocation(line: 175, column: 24, scope: !33)
!348 = !DILocation(line: 175, column: 47, scope: !33)
!349 = !DILocation(line: 175, column: 10, scope: !33)
!350 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Subpix", scope: !33, file: !34, line: 175, type: !21)
!351 = !DILocation(line: 178, column: 30, scope: !33)
!352 = !DILocation(line: 178, column: 45, scope: !33)
!353 = !DILocation(line: 178, column: 36, scope: !33)
!354 = !DILocation(line: 178, column: 50, scope: !33)
!355 = !DILocation(line: 178, column: 59, scope: !33)
!356 = !DILocation(line: 178, column: 10, scope: !33)
!357 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "WorkHeader", scope: !33, file: !34, line: 178, type: !21)
!358 = !DILocation(line: 180, column: 18, scope: !124)
!359 = !DILocation(line: 180, column: 9, scope: !33)
!360 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "WorkIdx", scope: !361, file: !34, line: 182, type: !21)
!361 = distinct !DILexicalBlock(scope: !124, file: !34, line: 181, column: 5)
!362 = !DILocation(line: 182, column: 14, scope: !361)
!363 = !DILocation(line: 183, column: 9, scope: !361)
!364 = !DILocation(line: 184, column: 25, scope: !361)
!365 = !DILocation(line: 184, column: 32, scope: !361)
!366 = !DILocation(line: 184, column: 9, scope: !361)
!367 = !DILocation(line: 185, column: 66, scope: !361)
!368 = !DILocation(line: 185, column: 80, scope: !361)
!369 = !DILocation(line: 185, column: 53, scope: !361)
!370 = !DILocation(line: 185, column: 31, scope: !361)
!371 = !DILocation(line: 68, column: 27, scope: !47, inlinedAt: !372)
!372 = distinct !DILocation(line: 185, column: 31, scope: !361)
!373 = !DILocation(line: 68, column: 41, scope: !47, inlinedAt: !372)
!374 = !DILocation(line: 68, column: 34, scope: !47, inlinedAt: !372)
!375 = !DILocation(line: 185, column: 20, scope: !361)
!376 = !DILocation(line: 185, column: 29, scope: !361)
!377 = !DILocation(line: 186, column: 5, scope: !361)
!378 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "WorkIdx", scope: !123, file: !34, line: 189, type: !21)
!379 = !DILocation(line: 189, column: 14, scope: !123)
!380 = !DILocation(line: 190, column: 9, scope: !123)
!381 = !DILocation(line: 191, column: 19, scope: !123)
!382 = !DILocation(line: 191, column: 36, scope: !123)
!383 = !DILocation(line: 191, column: 34, scope: !123)
!384 = !DILocation(line: 191, column: 17, scope: !123)
!385 = !DILocation(line: 192, column: 25, scope: !123)
!386 = !DILocation(line: 192, column: 32, scope: !123)
!387 = !DILocation(line: 192, column: 9, scope: !123)
!388 = !DILocation(line: 193, column: 63, scope: !123)
!389 = !DILocation(line: 193, column: 77, scope: !123)
!390 = !DILocation(line: 193, column: 53, scope: !123)
!391 = !DILocation(line: 193, column: 31, scope: !123)
!392 = !DILocation(line: 68, column: 27, scope: !47, inlinedAt: !122)
!393 = !DILocation(line: 68, column: 34, scope: !47, inlinedAt: !122)
!394 = !DILocation(line: 193, column: 20, scope: !123)
!395 = !DILocation(line: 193, column: 29, scope: !123)
!396 = !DILocation(line: 195, column: 1, scope: !33)

#endif

const unsigned char g_pFXAAPass1_RGB2_CS[] = {
  0x44, 0x58, 0x42, 0x43, 0x92, 0x83, 0x0f, 0x72, 0x01, 0xda, 0x79, 0x8b,
  0x62, 0x38, 0x8a, 0x13, 0x31, 0xa3, 0xc8, 0x16, 0x01, 0x00, 0x00, 0x00,
  0xf8, 0x73, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00,
  0x58, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00,
  0x58, 0x01, 0x00, 0x00, 0x1c, 0x02, 0x00, 0x00, 0xac, 0x59, 0x00, 0x00,
  0x04, 0x64, 0x00, 0x00, 0x38, 0x64, 0x00, 0x00, 0x54, 0x64, 0x00, 0x00,
  0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0xd8, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x54, 0x53, 0x30,
  0xbc, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x15, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x7f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x4c, 0x44, 0x42, 0x88, 0x57, 0x00, 0x00, 0x62, 0x00, 0x05, 0x00,
  0xe2, 0x15, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x02, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x70, 0x57, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0xd9, 0x15, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x1c, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xe4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x72, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x91, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x39, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x06, 0x90, 0x36, 0x18, 0xc4, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x80,
  0x04, 0x54, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x86, 0x09, 0x01, 0x01, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, 0x32, 0x22, 0xc8, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x93, 0x23, 0xa4, 0x84, 0x04, 0x93, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8e, 0x8c, 0x0b, 0x84, 0xe4, 0x4c,
  0x10, 0x8c, 0xc2, 0x0c, 0x40, 0x92, 0x01, 0x06, 0x11, 0x82, 0x61, 0x8e,
  0x00, 0x0c, 0x32, 0x60, 0x40, 0x84, 0x11, 0x80, 0x12, 0x18, 0xe8, 0x30,
  0x10, 0x50, 0x08, 0x43, 0x22, 0x91, 0x20, 0xc5, 0x1c, 0x01, 0x28, 0x94,
  0xc2, 0x90, 0x60, 0x24, 0x12, 0xd4, 0x28, 0xc3, 0x60, 0x30, 0xa0, 0x47,
  0x11, 0x06, 0x03, 0x8a, 0xcc, 0x11, 0x20, 0x34, 0xb9, 0x67, 0xb8, 0xfc,
  0x09, 0x7b, 0x08, 0xc9, 0x0f, 0x81, 0x66, 0x58, 0x08, 0x14, 0x50, 0xca,
  0x62, 0x18, 0x54, 0x06, 0x83, 0x01, 0x00, 0x00, 0x00, 0x4c, 0xc8, 0x52,
  0x06, 0xc3, 0x60, 0x40, 0x98, 0x42, 0x00, 0x06, 0x00, 0x00, 0x69, 0xca,
  0x00, 0x18, 0x00, 0x88, 0x53, 0x90, 0xc1, 0xa0, 0x32, 0x18, 0x0c, 0x06,
  0x03, 0xf2, 0x94, 0xc5, 0x30, 0xa8, 0x0c, 0x06, 0x83, 0xc1, 0x60, 0x30,
  0x19, 0x10, 0xa8, 0x28, 0x86, 0x41, 0x65, 0x30, 0x00, 0x00, 0x00, 0x80,
  0x09, 0x89, 0x0a, 0x02, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xa4,
  0x9b, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0xfc, 0x95, 0x90, 0x56, 0x62,
  0xf2, 0x8b, 0xdb, 0x46, 0x05, 0x00, 0x00, 0x00, 0x0c, 0x8a, 0x62, 0x1a,
  0x54, 0x06, 0x83, 0xc1, 0x60, 0x30, 0x18, 0xd0, 0xe9, 0xa8, 0xe1, 0xf2,
  0x27, 0xec, 0x21, 0x24, 0x9f, 0xdb, 0xa8, 0x62, 0x25, 0x26, 0x1f, 0xb9,
  0x6d, 0x44, 0x0c, 0x06, 0x83, 0x41, 0x21, 0x52, 0x83, 0xca, 0x80, 0x54,
  0x47, 0x0d, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0xdc, 0x46, 0x15, 0x2b,
  0x31, 0xf9, 0xc5, 0x6d, 0x23, 0x02, 0x00, 0x00, 0x00, 0x0a, 0xc1, 0x1a,
  0x54, 0x06, 0xd4, 0x9a, 0x23, 0x08, 0x8a, 0x51, 0x19, 0x4c, 0x06, 0x83,
  0x17, 0xc1, 0x86, 0x11, 0x06, 0x60, 0xa6, 0x36, 0x18, 0x07, 0x76, 0x08,
  0x87, 0x79, 0x98, 0x07, 0x37, 0xa0, 0x85, 0x72, 0xc0, 0x07, 0x7a, 0xa8,
  0x07, 0x79, 0x28, 0x07, 0x39, 0x20, 0x05, 0x3e, 0xb0, 0x87, 0x72, 0x18,
  0x07, 0x7a, 0x78, 0x07, 0x79, 0xe0, 0x03, 0x73, 0x60, 0x87, 0x77, 0x08,
  0x07, 0x7a, 0x60, 0x03, 0x30, 0x98, 0x03, 0x3f, 0x00, 0x03, 0x3f, 0xd0,
  0x03, 0x3d, 0x68, 0x87, 0x74, 0x80, 0x87, 0x79, 0xf8, 0x05, 0x7a, 0xc8,
  0x07, 0x78, 0x28, 0x07, 0x14, 0x0c, 0x66, 0x12, 0x83, 0x71, 0x60, 0x87,
  0x70, 0x98, 0x87, 0x79, 0x70, 0x03, 0x5a, 0x28, 0x07, 0x7c, 0xa0, 0x87,
  0x7a, 0x90, 0x87, 0x72, 0x90, 0x03, 0x52, 0xe0, 0x03, 0x7b, 0x28, 0x87,
  0x71, 0xa0, 0x87, 0x77, 0x90, 0x07, 0x3e, 0x30, 0x07, 0x76, 0x78, 0x87,
  0x70, 0xa0, 0x07, 0x36, 0x00, 0x83, 0x39, 0xf0, 0x03, 0x30, 0xf0, 0x03,
  0x24, 0xc8, 0x66, 0x44, 0x3b, 0x4d, 0x9a, 0x22, 0x4a, 0x98, 0xfc, 0x15,
  0xde, 0xb0, 0x89, 0xd0, 0x86, 0x21, 0x22, 0x24, 0x69, 0xa3, 0x8a, 0x82,
  0x88, 0x50, 0x30, 0x20, 0xdb, 0x4c, 0x61, 0x30, 0x0e, 0xec, 0x10, 0x0e,
  0xf3, 0x30, 0x0f, 0x6e, 0x20, 0x0b, 0xb7, 0x20, 0x0a, 0xf5, 0x60, 0x0e,
  0xe6, 0x50, 0x0e, 0xf2, 0xc0, 0x07, 0xf6, 0x50, 0x0e, 0xe3, 0x40, 0x0f,
  0xef, 0x20, 0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e, 0xe1, 0x40, 0x0f,
  0x6c, 0x00, 0x06, 0x73, 0xe0, 0x07, 0x60, 0xe0, 0x07, 0x28, 0x90, 0x11,
  0x6e, 0x26, 0x6c, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e, 0xdc, 0x40,
  0x16, 0x6e, 0x81, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1,
  0x1c, 0xe4, 0x80, 0x14, 0xf8, 0xc0, 0x1c, 0xd8, 0xe1, 0x1d, 0xc2, 0x81,
  0x1e, 0xfc, 0x00, 0x05, 0x00, 0xd2, 0x0d, 0x23, 0x08, 0xc0, 0x30, 0x82,
  0x30, 0xdc, 0xc0, 0x6d, 0x34, 0x2a, 0x78, 0x00, 0xc0, 0xa0, 0x47, 0x3e,
  0x1a, 0x4c, 0x01, 0x0c, 0x22, 0x00, 0x03, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0x64, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0xc6,
  0x01, 0xc0, 0xe4, 0x60, 0x0d, 0x86, 0x3c, 0x07, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x14, 0x20, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x34, 0x40, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x79, 0x80,
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x13,
  0x01, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90,
  0xe7, 0x01, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x21, 0xcf, 0x03, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x43, 0x1e, 0x0b, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x86, 0x3c, 0x18, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0c, 0x79, 0x34, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x70, 0x40, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xf1, 0x80, 0x00, 0x10, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x03, 0x06, 0x40, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x11, 0x03,
  0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2,
  0x90, 0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0xce, 0x00, 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x86, 0x3c, 0x6a, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x36, 0x00, 0x02, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x0f, 0x1c, 0x00, 0x01, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x16, 0x08, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x8c, 0x00, 0xd0, 0xa0,
  0x08, 0xca, 0xa0, 0x10, 0x4a, 0xa0, 0x18, 0x46, 0x00, 0xa8, 0x36, 0x03,
  0x40, 0x83, 0x92, 0xa0, 0xdb, 0x0c, 0x00, 0x0d, 0xca, 0x82, 0x5e, 0x23,
  0x00, 0x94, 0x9b, 0x01, 0xa0, 0x41, 0x51, 0xd0, 0x6e, 0x06, 0x80, 0x7e,
  0x33, 0x00, 0x34, 0x28, 0x1c, 0xf2, 0xcd, 0x00, 0xd0, 0xa0, 0x1c, 0x0a,
  0xa2, 0x30, 0x0a, 0xa4, 0x14, 0x0a, 0x85, 0x18, 0x25, 0x02, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x2d, 0x0d, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0xcc, 0x03, 0x09, 0x64, 0x08, 0x91, 0x21, 0xa3, 0x91, 0xc0, 0x04, 0xd1,
  0x9b, 0x42, 0x0b, 0x23, 0x2b, 0x93, 0x9b, 0xe3, 0x32, 0xc2, 0x0a, 0x0a,
  0x82, 0x0a, 0x9b, 0x9b, 0x8b, 0xf9, 0x92, 0x3a, 0x12, 0x92, 0xf9, 0x1a,
  0x9a, 0x72, 0x41, 0x63, 0x9b, 0x63, 0x1b, 0x34, 0x00, 0x01, 0x40, 0x35,
  0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b,
  0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b, 0x7b,
  0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81, 0x79,
  0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9, 0x00, 0xb0, 0xa8, 0x4b, 0x73,
  0xa3, 0x93, 0xe1, 0x65, 0x57, 0x36, 0x46, 0xf7, 0x26, 0xc7, 0x53, 0xe7,
  0x36, 0x97, 0x76, 0xe6, 0x56, 0x46, 0x06, 0x92, 0xe6, 0x46, 0xc7, 0x02,
  0x22, 0xe3, 0xc3, 0x00, 0x8f, 0x4c, 0x9d, 0xdb, 0x5c, 0xda, 0x99, 0x5b,
  0x19, 0x19, 0x48, 0x9a, 0x1b, 0xdd, 0x1e, 0x03, 0x20, 0x03, 0x04, 0x0c,
  0xc0, 0xe0, 0x58, 0xc4, 0x00, 0xcd, 0x21, 0x7c, 0x56, 0x02, 0x06, 0x60,
  0x00, 0x0c, 0x00, 0x83, 0xbc, 0x45, 0x0c, 0xd0, 0x2c, 0xc2, 0x67, 0x25,
  0x60, 0x00, 0x06, 0x60, 0x30, 0x00, 0x1b, 0x04, 0x85, 0xe1, 0x51, 0xc6,
  0x56, 0xd6, 0x56, 0xe6, 0x46, 0xb7, 0x6c, 0x00, 0x9c, 0x84, 0x4d, 0x19,
  0x5b, 0x59, 0x5b, 0x99, 0x1b, 0xdd, 0xd7, 0xd8, 0x5b, 0x9d, 0x1b, 0x1d,
  0x87, 0x34, 0x37, 0xba, 0x3d, 0x06, 0x40, 0x06, 0x11, 0x18, 0x80, 0x41,
  0x31, 0x41, 0x18, 0xac, 0x69, 0x05, 0x00, 0x07, 0x90, 0x34, 0x6d, 0x10,
  0x1e, 0x6a, 0x12, 0x04, 0x08, 0x86, 0xf0, 0x01, 0x00, 0x28, 0x80, 0x01,
  0x00, 0x34, 0x00, 0x50, 0x01, 0x8b, 0x18, 0xc0, 0x2a, 0x84, 0x0f, 0xb0,
  0x00, 0x00, 0x00, 0x00, 0x12, 0x69, 0x6e, 0x74, 0x32, 0x74, 0xec, 0xca,
  0xc6, 0xe8, 0xde, 0xe4, 0x78, 0xd2, 0xdc, 0xe8, 0x58, 0x40, 0x64, 0x7c,
  0x16, 0x31, 0x40, 0x73, 0x08, 0xf7, 0xf0, 0x49, 0x60, 0x00, 0x06, 0xc0,
  0x00, 0x2c, 0x62, 0x80, 0x66, 0x11, 0xee, 0xe1, 0x93, 0xc0, 0x00, 0x0c,
  0xc0, 0x60, 0x00, 0x36, 0x08, 0xda, 0xb6, 0x6c, 0x00, 0x1c, 0x69, 0x83,
  0xd0, 0x51, 0x93, 0x20, 0x40, 0xc8, 0x84, 0x7b, 0x00, 0x00, 0x50, 0x00,
  0x03, 0x00, 0xe0, 0x00, 0xc0, 0x03, 0x16, 0x31, 0x80, 0x85, 0x09, 0xf7,
  0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x89, 0xba, 0x34, 0x37, 0xba, 0x45,
  0x0c, 0x60, 0x85, 0x81, 0xe0, 0x01, 0x09, 0x00, 0x00, 0x00, 0x40, 0xc3,
  0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x86, 0x90, 0x5d, 0xd9, 0x18, 0xdd, 0x9b,
  0x1c, 0x8f, 0x19, 0xdb, 0x5b, 0x18, 0x1d, 0x0b, 0xc8, 0x8c, 0x0f, 0x0b,
  0x33, 0xb6, 0xb7, 0x30, 0xba, 0x3d, 0x06, 0x40, 0x06, 0x65, 0x00, 0x06,
  0x60, 0x40, 0x2c, 0x62, 0x80, 0xe6, 0x10, 0x42, 0x01, 0x0e, 0xcc, 0x00,
  0x0c, 0xc0, 0x00, 0x18, 0x80, 0x45, 0x0c, 0xd0, 0x2c, 0x42, 0x28, 0xc0,
  0x81, 0x19, 0x80, 0x01, 0x18, 0x80, 0xc1, 0x00, 0x30, 0xd0, 0x5b, 0xc4,
  0x00, 0x4d, 0x1a, 0x08, 0xa1, 0x00, 0x07, 0x66, 0x00, 0x06, 0x60, 0x00,
  0x0a, 0x03, 0xb0, 0x61, 0x38, 0x03, 0x34, 0x50, 0x83, 0x65, 0x03, 0xe0,
  0x98, 0xc1, 0x04, 0x61, 0xb8, 0xa6, 0x15, 0x00, 0x1c, 0x40, 0x52, 0x1b,
  0x6c, 0x10, 0xd8, 0xc0, 0x0d, 0x26, 0x41, 0x80, 0x40, 0x06, 0x42, 0x28,
  0x00, 0x00, 0x38, 0x80, 0x01, 0x00, 0xac, 0x01, 0x00, 0xbc, 0x01, 0xb0,
  0x88, 0x01, 0xac, 0x31, 0x10, 0x68, 0x01, 0x80, 0x03, 0x00, 0x00, 0x00,
  0x60, 0x03, 0x71, 0x81, 0x81, 0x18, 0xc4, 0x01, 0xb3, 0x29, 0xb4, 0x30,
  0xb2, 0x32, 0xb9, 0xb9, 0x17, 0x23, 0xac, 0xa0, 0x20, 0xa8, 0xb0, 0xb9,
  0xb9, 0x98, 0xa1, 0x29, 0x17, 0x34, 0xb6, 0x39, 0xb6, 0xb4, 0x41, 0x03,
  0x30, 0x07, 0x00, 0x89, 0xb6, 0xb0, 0x34, 0x37, 0x16, 0x75, 0x69, 0x6e,
  0x74, 0x33, 0xbc, 0xec, 0xca, 0xc6, 0xe8, 0xde, 0xe4, 0x78, 0xea, 0xdc,
  0xe6, 0xd2, 0xce, 0xdc, 0xca, 0xc8, 0x40, 0xd2, 0xdc, 0xe8, 0x58, 0x40,
  0x66, 0x7c, 0x16, 0x31, 0x40, 0x73, 0x08, 0xae, 0xd0, 0x07, 0x09, 0x18,
  0x80, 0x01, 0x30, 0x00, 0x8b, 0x18, 0xa0, 0x59, 0x04, 0x57, 0xe8, 0x83,
  0x04, 0x0c, 0xc0, 0x00, 0x0c, 0x06, 0x60, 0x11, 0x03, 0x34, 0x69, 0x20,
  0xb8, 0x42, 0x1f, 0x24, 0x60, 0x00, 0x06, 0xa0, 0x30, 0x00, 0x1b, 0x06,
  0x3c, 0xc8, 0x03, 0x3d, 0xd8, 0x20, 0x3c, 0x6e, 0x30, 0x09, 0x02, 0x84,
  0x3b, 0x10, 0x5c, 0x01, 0x00, 0xc0, 0x01, 0x0c, 0x00, 0x60, 0x0f, 0x00,
  0x80, 0x0f, 0x80, 0x45, 0x0c, 0x60, 0xd9, 0x81, 0xe0, 0x0a, 0x40, 0x1f,
  0x00, 0x00, 0x00, 0x00, 0x1b, 0x0a, 0xc0, 0x0f, 0xc4, 0xc0, 0x0f, 0xfc,
  0x60, 0xd3, 0x00, 0x00, 0x7f, 0x30, 0x41, 0x40, 0x84, 0x55, 0x13, 0x40,
  0x07, 0x75, 0x00, 0xd0, 0x81, 0x38, 0x80, 0x02, 0x10, 0x8c, 0x03, 0x00,
  0x00, 0x20, 0x02, 0x84, 0x02, 0x00, 0x00, 0x8c, 0xa4, 0x8e, 0x84, 0xa8,
  0xde, 0x98, 0xde, 0xce, 0x98, 0xea, 0xda, 0xd2, 0xdc, 0xc2, 0xdc, 0xc6,
  0xca, 0xa8, 0x06, 0x01, 0x3f, 0x52, 0x47, 0x42, 0x54, 0x6f, 0x4c, 0x6f,
  0x67, 0x4c, 0x75, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x40, 0x40,
  0x59, 0x41, 0x4d, 0x56, 0x3f, 0x24, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72,
  0x40, 0x4d, 0x24, 0x30, 0x32, 0x40, 0x40, 0x40, 0x5a, 0x1b, 0x04, 0x33,
  0x88, 0x83, 0x4d, 0x03, 0x00, 0x94, 0xc2, 0xaa, 0x09, 0xa0, 0x83, 0x51,
  0x20, 0x05, 0x3a, 0xd0, 0x05, 0x53, 0x00, 0x82, 0x5d, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43,
  0x6f, 0x6c, 0x6f, 0x72, 0xa4, 0x83, 0x80, 0x1f, 0xa3, 0x32, 0xba, 0x31,
  0xb4, 0xa1, 0x37, 0xb6, 0x37, 0x39, 0x20, 0xa0, 0xac, 0xa0, 0x9f, 0x20,
  0xab, 0x1f, 0x12, 0xbb, 0xb2, 0x31, 0xba, 0x37, 0x39, 0xa0, 0x26, 0x12,
  0x18, 0x19, 0x20, 0x20, 0xab, 0x1f, 0x12, 0xbb, 0xb2, 0x31, 0xba, 0x37,
  0x39, 0x20, 0x24, 0x12, 0x98, 0x18, 0x20, 0x20, 0x20, 0xad, 0x0d, 0x42,
  0x1c, 0x80, 0xc1, 0xa6, 0x01, 0x00, 0x54, 0x61, 0xd5, 0x04, 0xd0, 0x01,
  0x2a, 0xa4, 0x02, 0x1d, 0x90, 0xc2, 0x2a, 0x00, 0x01, 0x29, 0x00, 0x00,
  0x00, 0x22, 0x00, 0x00, 0x00, 0xc0, 0x86, 0x41, 0x14, 0x4e, 0x81, 0x15,
  0xe8, 0x48, 0x8d, 0xc1, 0x51, 0x95, 0xe1, 0xd1, 0xd5, 0xc9, 0x95, 0x4d,
  0xa5, 0xe9, 0x95, 0xf1, 0x9b, 0x42, 0x0b, 0x23, 0x2b, 0x93, 0x9b, 0x7b,
  0x31, 0xc2, 0x0a, 0x0a, 0x92, 0x7a, 0x7b, 0xa3, 0x9b, 0x4a, 0x3b, 0x73,
  0x0b, 0xa3, 0xab, 0x93, 0x2b, 0x73, 0x41, 0x63, 0x9b, 0x63, 0x4b, 0x1b,
  0x34, 0x00, 0xaf, 0x00, 0xd0, 0x30, 0x63, 0x7b, 0x0b, 0xa3, 0x93, 0x21,
  0x64, 0x57, 0x36, 0x46, 0xf7, 0x26, 0xc7, 0x63, 0xc6, 0xf6, 0x16, 0x46,
  0xc7, 0x02, 0x22, 0xe3, 0xb3, 0x88, 0x01, 0x9a, 0x43, 0xd8, 0x6e, 0xc1,
  0x0c, 0xc0, 0x00, 0x0c, 0x80, 0x01, 0x58, 0xc4, 0x00, 0xcd, 0x22, 0x6c,
  0xb7, 0x60, 0x06, 0x60, 0x00, 0x06, 0x60, 0x30, 0x00, 0x1b, 0x84, 0x59,
  0xa0, 0x85, 0x0d, 0x02, 0x1b, 0x50, 0x93, 0x20, 0x40, 0x90, 0x05, 0x61,
  0x03, 0x00, 0x50, 0x00, 0x03, 0x00, 0xa8, 0x05, 0x00, 0xb0, 0x05, 0x60,
  0x11, 0x03, 0x58, 0xb1, 0x20, 0x6c, 0xc0, 0x2d, 0x00, 0x00, 0x00, 0x00,
  0x8b, 0x18, 0xc0, 0x0c, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00, 0x00,
  0x20, 0x1a, 0x04, 0xfc, 0x48, 0x8d, 0xc1, 0x51, 0x95, 0xe1, 0xd1, 0xd5,
  0xc9, 0x95, 0x4d, 0xa5, 0xe9, 0x95, 0x01, 0x0d, 0x09, 0xc1, 0x00, 0x01,
  0xcd, 0x58, 0xfd, 0x90, 0xd8, 0x95, 0x8d, 0xd1, 0xbd, 0xc9, 0x01, 0x35,
  0x91, 0xc0, 0xc4, 0x00, 0x01, 0x09, 0x6d, 0x5b, 0x00, 0x99, 0x70, 0x05,
  0x5d, 0x80, 0x85, 0x2d, 0x17, 0x80, 0x00, 0x00, 0x18, 0x0d, 0xbd, 0xb9,
  0xd1, 0xc9, 0x85, 0xcd, 0xd1, 0x51, 0xa1, 0xc9, 0x95, 0xcd, 0xa1, 0xbd,
  0xb1, 0x91, 0x2d, 0x62, 0x00, 0x33, 0x00, 0x00, 0x00, 0x30, 0x03, 0x00,
  0x00, 0x00, 0x80, 0x5c, 0xc0, 0xcf, 0xd0, 0x9b, 0x1b, 0x9d, 0x5c, 0xd8,
  0x1c, 0x1d, 0x15, 0x9a, 0x5c, 0xd9, 0x1c, 0xda, 0x1b, 0x1b, 0x19, 0xd0,
  0x90, 0x10, 0x0c, 0x10, 0xd0, 0x4c, 0x93, 0xd0, 0xb6, 0x05, 0x90, 0x09,
  0x5e, 0xf0, 0x05, 0x58, 0xe0, 0x7a, 0x01, 0x08, 0x00, 0x80, 0xcf, 0x54,
  0x9d, 0x18, 0x5c, 0x1a, 0x5e, 0x19, 0x9b, 0x54, 0x59, 0xdb, 0x9b, 0x5d,
  0x18, 0x1b, 0xb5, 0x80, 0x9f, 0xa9, 0x3a, 0x31, 0xb8, 0x34, 0xbc, 0x32,
  0x36, 0xa9, 0xb2, 0xb6, 0x37, 0xbb, 0x30, 0x36, 0xa0, 0x21, 0x21, 0x18,
  0x20, 0xa0, 0x99, 0x26, 0xa1, 0x6d, 0x0b, 0x20, 0x13, 0xe0, 0x10, 0x0e,
  0xb0, 0xd0, 0xf5, 0x02, 0x10, 0x00, 0x00, 0x1d, 0xa6, 0xb0, 0x39, 0xba,
  0xa8, 0xba, 0xb2, 0xba, 0xb2, 0x24, 0x37, 0xb2, 0x32, 0xbc, 0x45, 0x0c,
  0x60, 0x06, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x00, 0x30, 0x0b,
  0xf8, 0x61, 0x0a, 0x9b, 0xa3, 0x8b, 0xaa, 0x2b, 0xab, 0x2b, 0x4b, 0x72,
  0x23, 0x2b, 0xc3, 0x03, 0x1a, 0x12, 0x82, 0x01, 0x02, 0x9a, 0x49, 0x12,
  0xda, 0xb6, 0x00, 0x32, 0x31, 0x0e, 0xe5, 0x00, 0x0b, 0x1e, 0x39, 0x00,
  0x01, 0x00, 0x50, 0x99, 0xa2, 0x0b, 0x93, 0xa3, 0x83, 0x4a, 0xc3, 0x2b,
  0x63, 0x5b, 0xc4, 0x00, 0x66, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00,
  0x00, 0x24, 0x83, 0x80, 0x9f, 0x29, 0xba, 0x30, 0x39, 0x3a, 0xa8, 0x34,
  0xbc, 0x32, 0x36, 0xa0, 0x21, 0x21, 0x18, 0x20, 0xa0, 0x19, 0xab, 0x1f,
  0x12, 0xbb, 0xb2, 0x31, 0xba, 0x37, 0x39, 0xa0, 0x24, 0x12, 0x98, 0x18,
  0x20, 0x20, 0xa1, 0x6d, 0x0b, 0x20, 0x13, 0xe7, 0x90, 0x0e, 0xb0, 0xf0,
  0xa1, 0x03, 0x10, 0x00, 0x00, 0x99, 0xb3, 0xb9, 0x2f, 0xa6, 0xba, 0xb6,
  0xb0, 0xa1, 0xb0, 0x31, 0xb4, 0xb2, 0x35, 0x03, 0x40, 0x0e, 0xc0, 0x86,
  0x80, 0x1d, 0x26, 0x41, 0x40, 0x00, 0x00, 0x00, 0x60, 0x06, 0x20, 0x39,
  0x80, 0x01, 0x00, 0xb4, 0x03, 0x00, 0x00, 0x00, 0xab, 0x80, 0x9f, 0xb3,
  0xb9, 0x2f, 0xa6, 0xba, 0xb6, 0xb0, 0xa1, 0xb0, 0x31, 0xb4, 0x32, 0x20,
  0xa0, 0x19, 0xa8, 0xa0, 0xa6, 0xa0, 0x09, 0x82, 0x00, 0x6c, 0x5b, 0x00,
  0x99, 0x58, 0x87, 0x77, 0xa0, 0x03, 0x57, 0x70, 0x07, 0x20, 0x80, 0x07,
  0x80, 0xc9, 0xd5, 0x9b, 0xdc, 0xda, 0xd0, 0x5b, 0x9d, 0x1b, 0x1d, 0x27,
  0xa9, 0x2b, 0xa1, 0x3c, 0xba, 0xb2, 0x20, 0x32, 0x32, 0xb9, 0xb2, 0xb9,
  0x39, 0xa1, 0x3a, 0x33, 0xb3, 0x32, 0xb9, 0x49, 0x10, 0x30, 0xcd, 0x83,
  0xf0, 0x07, 0x00, 0x00, 0x06, 0x60, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0xcb, 0x20, 0xe0, 0xe7, 0xea, 0x4d, 0x6e, 0x6d, 0xe8, 0xad, 0xce, 0x8d,
  0x0e, 0x08, 0x68, 0xa6, 0x4a, 0xea, 0x4a, 0x28, 0x8f, 0xae, 0x2c, 0x88,
  0x8c, 0x4c, 0xae, 0x6c, 0x6e, 0x4e, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0x0e,
  0x08, 0x28, 0x68, 0xdb, 0x02, 0xc8, 0x84, 0x3c, 0xd4, 0x03, 0x1d, 0xfc,
  0x01, 0x3d, 0x00, 0x01, 0x00, 0x30, 0xb9, 0x7a, 0x93, 0x5b, 0x8b, 0xaa,
  0x2b, 0xab, 0x2b, 0x63, 0x19, 0x04, 0xfc, 0x5c, 0xbd, 0xc9, 0xad, 0x45,
  0xd5, 0x95, 0xd5, 0x95, 0x01, 0x01, 0xcd, 0x54, 0x49, 0x5d, 0x09, 0xe5,
  0xd1, 0x95, 0x05, 0x91, 0x91, 0xc9, 0x95, 0xcd, 0xcd, 0x09, 0xd5, 0x99,
  0x99, 0x95, 0xc9, 0x01, 0x01, 0x05, 0x6d, 0x5b, 0x00, 0x99, 0xb8, 0x07,
  0x7c, 0xa0, 0x03, 0x50, 0xa0, 0x07, 0x20, 0x00, 0x00, 0x2a, 0x43, 0x6f,
  0x6c, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0xdc, 0xa4, 0xae, 0x84,
  0xea, 0xcc, 0xcc, 0xca, 0xe4, 0x78, 0xec, 0xca, 0xc6, 0xe8, 0xde, 0xe4,
  0x78, 0xcc, 0xd8, 0xde, 0xc2, 0xe8, 0x58, 0x40, 0x66, 0x7c, 0x40, 0x7c,
  0x96, 0x0d, 0x80, 0x03, 0x07, 0x1b, 0x02, 0x7e, 0x98, 0x04, 0x01, 0xc2,
  0x3e, 0x08, 0xa1, 0x00, 0x00, 0xe0, 0x00, 0x06, 0x00, 0x40, 0x00, 0x40,
  0x3f, 0x00, 0x74, 0x83, 0x80, 0x9f, 0xa1, 0x37, 0xb6, 0x37, 0xb9, 0xa8,
  0xba, 0xb2, 0xba, 0x32, 0x20, 0xa0, 0x19, 0xab, 0x1f, 0x12, 0xa9, 0x2b,
  0xa1, 0x3a, 0x33, 0xb3, 0x32, 0x39, 0x20, 0xab, 0x1f, 0x12, 0xbb, 0xb2,
  0x31, 0xba, 0x37, 0x39, 0xa0, 0x26, 0x12, 0x18, 0x19, 0x20, 0x20, 0x20,
  0xa0, 0xa0, 0x6d, 0x0b, 0x20, 0x13, 0xfa, 0xf0, 0x0f, 0x74, 0x10, 0x0a,
  0xfe, 0x00, 0x04, 0x00, 0xc0, 0x62, 0xe8, 0x8d, 0xed, 0x4d, 0x8e, 0x1c,
  0x55, 0x19, 0x1e, 0x5d, 0x9d, 0x5c, 0x99, 0x0c, 0x11, 0x8f, 0x5d, 0xd9,
  0x18, 0xdd, 0x9b, 0x1c, 0x8f, 0x19, 0xdb, 0x5b, 0x18, 0x1d, 0x0b, 0xc8,
  0x8c, 0x0f, 0x88, 0xcf, 0x24, 0x08, 0x10, 0x44, 0x42, 0x18, 0x05, 0x00,
  0x00, 0x09, 0x30, 0x00, 0x00, 0x02, 0x00, 0xfa, 0x01, 0xa0, 0x1a, 0x04,
  0xfc, 0x0c, 0xbd, 0xb1, 0xbd, 0xc9, 0x01, 0x01, 0xcd, 0x58, 0xfd, 0x90,
  0x50, 0x95, 0xe1, 0xd1, 0xd5, 0xc9, 0x95, 0xc9, 0x10, 0x01, 0x59, 0xfd,
  0x90, 0xd8, 0x95, 0x8d, 0xd1, 0xbd, 0xc9, 0x01, 0x35, 0x91, 0xc0, 0xc8,
  0x00, 0x01, 0x01, 0x01, 0x05, 0x6d, 0x5b, 0x00, 0x99, 0x08, 0x09, 0x92,
  0xa0, 0x83, 0x51, 0x18, 0x09, 0x20, 0x00, 0x00, 0x36, 0x4c, 0x69, 0x6e,
  0x65, 0x61, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x64, 0xa6,
  0xc2, 0xda, 0xe0, 0xd8, 0xca, 0xe4, 0xa6, 0xe8, 0xc2, 0xe8, 0xca, 0x26,
  0x41, 0xc0, 0x74, 0x12, 0x82, 0x2a, 0x00, 0x00, 0x18, 0x80, 0x01, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x14, 0x83, 0x80, 0x1f, 0xa6, 0x34, 0xb7, 0xb2,
  0x30, 0xb9, 0xa9, 0xb0, 0x36, 0x38, 0xb6, 0x32, 0x39, 0x20, 0xa0, 0x99,
  0xaa, 0xa9, 0xb0, 0x36, 0x38, 0xb6, 0x32, 0xb9, 0x29, 0xba, 0x30, 0xba,
  0x32, 0x20, 0xa0, 0xa0, 0x6d, 0x0b, 0x20, 0x13, 0x26, 0x91, 0x12, 0x74,
  0xa0, 0x0a, 0x28, 0x01, 0x04, 0x00, 0x40, 0x82, 0xa9, 0xae, 0x2d, 0x8c,
  0x92, 0xd4, 0x15, 0x55, 0x19, 0x1e, 0x5d, 0x9d, 0x5c, 0x99, 0x0c, 0x11,
  0x8f, 0x19, 0xdb, 0x5b, 0x18, 0x9d, 0xcf, 0x86, 0x80, 0x0d, 0x26, 0x41,
  0x80, 0xc0, 0x12, 0x02, 0x2d, 0x00, 0x00, 0x18, 0x80, 0x01, 0x00, 0x10,
  0x00, 0xd0, 0x12, 0x00, 0xb9, 0x80, 0x1f, 0xa6, 0xba, 0xb6, 0x30, 0x20,
  0xa0, 0x19, 0xab, 0x1f, 0x12, 0xa9, 0x2b, 0xaa, 0x32, 0x3c, 0xba, 0x3a,
  0xb9, 0x32, 0x19, 0x22, 0xa0, 0x26, 0x20, 0xa0, 0xa0, 0x6d, 0x0b, 0x20,
  0x13, 0x2b, 0xf1, 0x12, 0x74, 0x40, 0x0b, 0x2e, 0x01, 0x04, 0x00, 0xb0,
  0x81, 0xd9, 0x85, 0x5f, 0x10, 0x07, 0x73, 0x50, 0x87, 0x78, 0xb0, 0x87,
  0x7c, 0x00, 0x89, 0x92, 0x50, 0x09, 0x98, 0x18, 0xf5, 0x04, 0x84, 0x30,
  0x00, 0x00, 0x00, 0x04, 0x84, 0x1c, 0xb4, 0x42, 0x4c, 0x00, 0x00, 0x1b,
  0xa2, 0xbb, 0x30, 0x39, 0x33, 0x10, 0xab, 0x32, 0xb9, 0xb9, 0xb4, 0x37,
  0xb7, 0x09, 0xc2, 0x80, 0x6d, 0x18, 0xa6, 0x99, 0xa0, 0x09, 0x4a, 0x44,
  0x65, 0x62, 0x75, 0x67, 0x20, 0x49, 0x6e, 0x66, 0x6f, 0x20, 0x56, 0x65,
  0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1b, 0x86, 0xc9, 0x26, 0xda, 0x60, 0x43,
  0x30, 0x50, 0x74, 0x5e, 0x5e, 0x1a, 0x14, 0x5e, 0x5e, 0x40, 0x86, 0xde,
  0xe0, 0xf2, 0xe4, 0xd2, 0xce, 0xd0, 0xe8, 0x40, 0x50, 0xc6, 0x52, 0x40,
  0x9a, 0xd2, 0xc6, 0xe4, 0xde, 0xe6, 0xde, 0xcc, 0xe8, 0x5c, 0x40, 0x82,
  0xd8, 0xd8, 0x40, 0xe4, 0xd2, 0xce, 0xd0, 0xe8, 0xe6, 0x40, 0xe4, 0xca,
  0xe6, 0xca, 0xe4, 0xec, 0xca, 0xc8, 0x5c, 0x1a, 0x14, 0x5e, 0x5e, 0x40,
  0xa8, 0xd0, 0xd2, 0xe6, 0x40, 0xc6, 0xde, 0xc8, 0xca, 0x40, 0xd2, 0xe6,
  0x40, 0xd8, 0xd2, 0xc6, 0xca, 0xdc, 0xe6, 0xca, 0xc8, 0x40, 0xea, 0xdc,
  0xc8, 0xca, 0xe4, 0x40, 0xe8, 0xd0, 0xca, 0x40, 0x9a, 0x92, 0xa8, 0x40,
  0x98, 0xd2, 0xc6, 0xca, 0xdc, 0xe6, 0xca, 0x40, 0x50, 0x9a, 0x92, 0xa8,
  0x52, 0x5c, 0x1a, 0x14, 0x5e, 0x5e, 0x40, 0xa8, 0x90, 0x92, 0xa6, 0x40,
  0x86, 0x9e, 0x88, 0x8a, 0x40, 0x92, 0xa6, 0x40, 0xa0, 0xa4, 0x9e, 0xac,
  0x92, 0x88, 0x8a, 0x88, 0x40, 0x54, 0x82, 0xa6, 0x40, 0x92, 0xa6, 0x54,
  0x40, 0xae, 0x92, 0xa8, 0x90, 0x9e, 0xaa, 0xa8, 0x40, 0xae, 0x82, 0xa4,
  0xa4, 0x82, 0x9c, 0xa8, 0xb2, 0x40, 0x9e, 0x8c, 0x1a, 0x14, 0x5e, 0x5e,
  0x40, 0x82, 0x9c, 0xb2, 0x40, 0x96, 0x92, 0x9c, 0x88, 0x58, 0x40, 0x8a,
  0x92, 0xa8, 0x90, 0x8a, 0xa4, 0x40, 0x8a, 0xb0, 0xa0, 0xa4, 0x8a, 0xa6,
  0xa6, 0x40, 0x9e, 0xa4, 0x40, 0x92, 0x9a, 0xa0, 0x98, 0x92, 0x8a, 0x88,
  0x58, 0x40, 0x92, 0x9c, 0x86, 0x98, 0xaa, 0x88, 0x92, 0x9c, 0x8e, 0x40,
  0x82, 0x9c, 0xb2, 0x1a, 0x14, 0x5e, 0x5e, 0x40, 0x92, 0x9a, 0xa0, 0x98,
  0x92, 0x8a, 0x88, 0x40, 0xae, 0x82, 0xa4, 0xa4, 0x82, 0x9c, 0xa8, 0x92,
  0x8a, 0xa6, 0x40, 0x9e, 0x8c, 0x40, 0x8c, 0x92, 0xa8, 0x9c, 0x8a, 0xa6,
  0xa6, 0x40, 0x8c, 0x9e, 0xa4, 0x40, 0x82, 0x40, 0xa0, 0x82, 0xa4, 0xa8,
  0x92, 0x86, 0xaa, 0x98, 0x82, 0xa4, 0x1a, 0x14, 0x5e, 0x5e, 0x40, 0xa0,
  0xaa, 0xa4, 0xa0, 0x9e, 0xa6, 0x8a, 0x58, 0x40, 0x9a, 0x8a, 0xa4, 0x86,
  0x90, 0x82, 0x9c, 0xa8, 0x82, 0x84, 0x92, 0x98, 0x92, 0xa8, 0xb2, 0x58,
  0x40, 0x9e, 0xa4, 0x40, 0x9c, 0x9e, 0x9c, 0x5a, 0x92, 0x9c, 0x8c, 0xa4,
  0x92, 0x9c, 0x8e, 0x8a, 0x9a, 0x8a, 0x9c, 0xa8, 0x5c, 0x1a, 0x14, 0x5e,
  0x5e, 0x1a, 0x14, 0x5e, 0x5e, 0x40, 0x88, 0xca, 0xec, 0xca, 0xd8, 0xde,
  0xe0, 0xca, 0xc8, 0x40, 0xc4, 0xf2, 0x40, 0x9a, 0xd2, 0xdc, 0xd2, 0xce,
  0xe4, 0xc2, 0xe0, 0xd0, 0x1a, 0x14, 0x5e, 0x5e, 0x1a, 0x14, 0x5e, 0x5e,
  0x40, 0x82, 0xea, 0xe8, 0xd0, 0xde, 0xe4, 0x74, 0x40, 0x40, 0x94, 0xc2,
  0xda, 0xca, 0xe6, 0x40, 0xa6, 0xe8, 0xc2, 0xdc, 0xc2, 0xe4, 0xc8, 0x40,
  0x1a, 0x14, 0x1a, 0x14, 0x46, 0xc8, 0xca, 0xcc, 0xd2, 0xdc, 0xca, 0x40,
  0xa6, 0xaa, 0xa0, 0xa0, 0x9e, 0xa4, 0xa8, 0xbe, 0xa8, 0xb2, 0xa0, 0x8a,
  0x88, 0xbe, 0xaa, 0x82, 0xac, 0xbe, 0x98, 0x9e, 0x82, 0x88, 0xa6, 0x40,
  0x62, 0x1a, 0x14, 0x46, 0xd2, 0xdc, 0xc6, 0xd8, 0xea, 0xc8, 0xca, 0x40,
  0x44, 0x8c, 0xb0, 0x82, 0x82, 0xa0, 0xc2, 0xe6, 0xe6, 0x62, 0x86, 0xa6,
  0x5c, 0xd0, 0xd8, 0xe6, 0xd8, 0xd2, 0x44, 0x1a, 0x14, 0x36, 0x08, 0x41,
  0x4e, 0x30, 0x9b, 0x42, 0x0b, 0x23, 0x2b, 0x93, 0x9b, 0xe3, 0x32, 0xc2,
  0x0a, 0x0a, 0x82, 0x0a, 0x9b, 0x9b, 0x8b, 0x19, 0x9a, 0x72, 0x41, 0x63,
  0x9b, 0x63, 0x4b, 0xa3, 0xea, 0x1f, 0x2f, 0x2f, 0x0a, 0x2f, 0x2f, 0x20,
  0x43, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x20, 0x28, 0x63,
  0x29, 0x20, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x2e,
  0x20, 0x41, 0x6c, 0x6c, 0x20, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x20,
  0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x2e, 0x0a, 0x2f, 0x2f,
  0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x69,
  0x73, 0x20, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x64, 0x20, 0x75,
  0x6e, 0x64, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4d, 0x49, 0x54,
  0x20, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x28, 0x4d, 0x49,
  0x54, 0x29, 0x2e, 0x0a, 0x2f, 0x2f, 0x20, 0x54, 0x48, 0x49, 0x53, 0x20,
  0x43, 0x4f, 0x44, 0x45, 0x20, 0x49, 0x53, 0x20, 0x50, 0x52, 0x4f, 0x56,
  0x49, 0x44, 0x45, 0x44, 0x20, 0x2a, 0x41, 0x53, 0x20, 0x49, 0x53, 0x2a,
  0x20, 0x57, 0x49, 0x54, 0x48, 0x4f, 0x55, 0x54, 0x20, 0x57, 0x41, 0x52,
  0x52, 0x41, 0x4e, 0x54, 0x59, 0x20, 0x4f, 0x46, 0x0a, 0x2f, 0x2f, 0x20,
  0x41, 0x4e, 0x59, 0x20, 0x4b, 0x49, 0x4e, 0x44, 0x2c, 0x20, 0x45, 0x49,
  0x54, 0x48, 0x45, 0x52, 0x20, 0x45, 0x58, 0x50, 0x52, 0x45, 0x53, 0x53,
  0x20, 0x4f, 0x52, 0x20, 0x49, 0x4d, 0x50, 0x4c, 0x49, 0x45, 0x44, 0x2c,
  0x20, 0x49, 0x4e, 0x43, 0x4c, 0x55, 0x44, 0x49, 0x4e, 0x47, 0x20, 0x41,
  0x4e, 0x59, 0x0a, 0x2f, 0x2f, 0x20, 0x49, 0x4d, 0x50, 0x4c, 0x49, 0x45,
  0x44, 0x20, 0x57, 0x41, 0x52, 0x52, 0x41, 0x4e, 0x54, 0x49, 0x45, 0x53,
  0x20, 0x4f, 0x46, 0x20, 0x46, 0x49, 0x54, 0x4e, 0x45, 0x53, 0x53, 0x20,
  0x46, 0x4f, 0x52, 0x20, 0x41, 0x20, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43,
  0x55, 0x4c, 0x41, 0x52, 0x0a, 0x2f, 0x2f, 0x20, 0x50, 0x55, 0x52, 0x50,
  0x4f, 0x53, 0x45, 0x2c, 0x20, 0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e,
  0x54, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x2c, 0x20, 0x4f, 0x52,
  0x20, 0x4e, 0x4f, 0x4e, 0x2d, 0x49, 0x4e, 0x46, 0x52, 0x49, 0x4e, 0x47,
  0x45, 0x4d, 0x45, 0x4e, 0x54, 0x2e, 0x0a, 0x2f, 0x2f, 0x0a, 0x2f, 0x2f,
  0x20, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x64, 0x20, 0x62,
  0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x67, 0x72, 0x61, 0x70, 0x68, 0x0a,
  0x2f, 0x2f, 0x0a, 0x2f, 0x2f, 0x20, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
  0x3a, 0x20, 0x20, 0x4a, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x53, 0x74, 0x61,
  0x6e, 0x61, 0x72, 0x64, 0x20, 0x0a, 0x2f, 0x2f, 0x0a, 0x2f, 0x2f, 0x20,
  0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x3a,
  0x20, 0x20, 0x41, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2d,
  0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x20, 0x69, 0x6d,
  0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
  0x20, 0x6f, 0x66, 0x20, 0x46, 0x58, 0x41, 0x41, 0x20, 0x33, 0x2e, 0x31,
  0x31, 0x20, 0x28, 0x50, 0x43, 0x20, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74,
  0x79, 0x29, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x65, 0x0a, 0x2f, 0x2f, 0x20,
  0x69, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
  0x20, 0x74, 0x61, 0x6b, 0x65, 0x20, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x74,
  0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x20,
  0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x20, 0x28, 0x52, 0x57, 0x53, 0x74,
  0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x42, 0x75, 0x66, 0x66,
  0x65, 0x72, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x74, 0x6f, 0x6d,
  0x69, 0x63, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x29,
  0x0a, 0x2f, 0x2f, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x73,
  0x65, 0x20, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x3a, 0x0a,
  0x2f, 0x2f, 0x20, 0x0a, 0x2f, 0x2f, 0x20, 0x31, 0x29, 0x20, 0x53, 0x70,
  0x6c, 0x69, 0x74, 0x20, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74,
  0x61, 0x6c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x76, 0x65, 0x72, 0x74, 0x69,
  0x63, 0x61, 0x6c, 0x20, 0x65, 0x64, 0x67, 0x65, 0x20, 0x73, 0x65, 0x61,
  0x72, 0x63, 0x68, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 0x73,
  0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x20, 0x64, 0x69, 0x73, 0x70,
  0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x72, 0x65,
  0x64, 0x75, 0x63, 0x65, 0x0a, 0x2f, 0x2f, 0x20, 0x73, 0x68, 0x61, 0x64,
  0x65, 0x72, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74,
  0x79, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x69, 0x6e, 0x63, 0x6f, 0x68, 0x65,
  0x72, 0x65, 0x6e, 0x74, 0x20, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
  0x6e, 0x67, 0x2e, 0x0a, 0x2f, 0x2f, 0x20, 0x32, 0x29, 0x20, 0x44, 0x65,
  0x6c, 0x61, 0x79, 0x20, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x20,
  0x6e, 0x65, 0x77, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x63, 0x6f,
  0x6c, 0x6f, 0x72, 0x73, 0x20, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x20, 0x61,
  0x66, 0x74, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x6f, 0x75,
  0x72, 0x63, 0x65, 0x20, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x20, 0x68,
  0x61, 0x73, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 0x66, 0x75, 0x6c, 0x6c,
  0x79, 0x0a, 0x2f, 0x2f, 0x20, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65,
  0x64, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x61, 0x76, 0x6f,
  0x69, 0x64, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x72, 0x69, 0x74,
  0x65, 0x2d, 0x61, 0x66, 0x74, 0x65, 0x72, 0x2d, 0x73, 0x63, 0x61, 0x74,
  0x74, 0x65, 0x72, 0x65, 0x64, 0x2d, 0x72, 0x65, 0x61, 0x64, 0x20, 0x68,
  0x61, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x0a, 0x2f, 0x2f, 0x20, 0x33, 0x29,
  0x20, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x20, 0x73, 0x6f, 0x75, 0x72,
  0x63, 0x65, 0x20, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x20, 0x69, 0x6e,
  0x2d, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x20, 0x72, 0x61, 0x74, 0x68, 0x65,
  0x72, 0x20, 0x74, 0x68, 0x61, 0x6e, 0x20, 0x70, 0x69, 0x6e, 0x67, 0x2d,
  0x70, 0x6f, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x20, 0x62, 0x75, 0x66, 0x66,
  0x65, 0x72, 0x73, 0x2c, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x72,
  0x65, 0x64, 0x75, 0x63, 0x65, 0x73, 0x0a, 0x2f, 0x2f, 0x20, 0x62, 0x61,
  0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x20, 0x61, 0x6e, 0x64, 0x20,
  0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x64, 0x65, 0x6d, 0x61, 0x6e,
  0x64, 0x73, 0x2e, 0x0a, 0x2f, 0x2f, 0x0a, 0x2f, 0x2f, 0x20, 0x49, 0x6e,
  0x20, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f,
  0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x62, 0x6f, 0x76, 0x65, 0x2d, 0x6d,
  0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x20, 0x62, 0x65, 0x6e,
  0x65, 0x66, 0x69, 0x74, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x75, 0x73, 0x69,
  0x6e, 0x67, 0x20, 0x55, 0x41, 0x56, 0x73, 0x2c, 0x20, 0x74, 0x68, 0x65,
  0x20, 0x66, 0x69, 0x72, 0x73, 0x74, 0x20, 0x70, 0x61, 0x73, 0x73, 0x20,
  0x61, 0x6c, 0x73, 0x6f, 0x0a, 0x2f, 0x2f, 0x20, 0x74, 0x61, 0x6b, 0x65,
  0x73, 0x20, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20,
  0x6f, 0x66, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x68, 0x61, 0x72,
  0x65, 0x64, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x66, 0x6f,
  0x72, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x6c, 0x75,
  0x6d, 0x61, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2c, 0x20, 0x66,
  0x75, 0x72, 0x74, 0x68, 0x65, 0x72, 0x20, 0x72, 0x65, 0x64, 0x75, 0x63,
  0x69, 0x6e, 0x67, 0x0a, 0x2f, 0x2f, 0x20, 0x66, 0x65, 0x74, 0x63, 0x68,
  0x65, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x62, 0x61, 0x6e, 0x64, 0x77,
  0x69, 0x64, 0x74, 0x68, 0x2e, 0x0a, 0x2f, 0x2f, 0x0a, 0x2f, 0x2f, 0x20,
  0x41, 0x6e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x6f, 0x70, 0x74, 0x69,
  0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x73, 0x20,
  0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x67, 0x65, 0x6e, 0x65, 0x72,
  0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x70, 0x65, 0x72,
  0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x20, 0x62, 0x72, 0x69, 0x67, 0x68,
  0x74, 0x6e, 0x65, 0x73, 0x73, 0x20, 0x28, 0x6c, 0x75, 0x6d, 0x61, 0x29,
  0x20, 0x6f, 0x66, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x2e, 0x0a,
  0x2f, 0x2f, 0x20, 0x54, 0x68, 0x65, 0x20, 0x6f, 0x72, 0x69, 0x67, 0x69,
  0x6e, 0x61, 0x6c, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
  0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20,
  0x73, 0x52, 0x47, 0x42, 0x20, 0x61, 0x73, 0x20, 0x61, 0x20, 0x67, 0x6f,
  0x6f, 0x64, 0x20, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x61,
  0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x6c, 0x6f, 0x67, 0x2d,
  0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x20, 0x20,
  0x41, 0x0a, 0x2f, 0x2f, 0x20, 0x6d, 0x6f, 0x72, 0x65, 0x20, 0x70, 0x72,
  0x65, 0x63, 0x69, 0x73, 0x65, 0x20, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73,
  0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20,
  0x6c, 0x6f, 0x67, 0x2d, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x63,
  0x65, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x20, 0x74, 0x68, 0x65,
  0x20, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x20, 0x74,
  0x6f, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x20, 0x77, 0x69,
  0x74, 0x68, 0x20, 0x61, 0x0a, 0x2f, 0x2f, 0x20, 0x68, 0x69, 0x67, 0x68,
  0x65, 0x72, 0x20, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
  0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65,
  0x20, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x20, 0x66, 0x69, 0x6e, 0x64, 0x69,
  0x6e, 0x67, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62,
  0x6c, 0x65, 0x20, 0x65, 0x64, 0x67, 0x65, 0x73, 0x20, 0x61, 0x63, 0x72,
  0x6f, 0x73, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x75, 0x6c, 0x6c,
  0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x0a, 0x2f, 0x2f, 0x20, 0x6f, 0x66,
  0x20, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x2e,
  0x20, 0x20, 0x54, 0x68, 0x65, 0x20, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78,
  0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x75, 0x73, 0x65, 0x64,
  0x20, 0x68, 0x65, 0x72, 0x65, 0x20, 0x69, 0x73, 0x20, 0x28, 0x31, 0x20,
  0x2d, 0x20, 0x32, 0x5e, 0x28, 0x2d, 0x34, 0x4c, 0x29, 0x29, 0x20, 0x2a,
  0x20, 0x31, 0x36, 0x2f, 0x31, 0x35, 0x2c, 0x20, 0x77, 0x68, 0x65, 0x72,
  0x65, 0x20, 0x4c, 0x20, 0x3d, 0x0a, 0x2f, 0x2f, 0x20, 0x64, 0x6f, 0x74,
  0x28, 0x20, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x52, 0x47, 0x42, 0x2c,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x31,
  0x32, 0x36, 0x37, 0x31, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x35, 0x31,
  0x36, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x32, 0x31, 0x36, 0x39,
  0x29, 0x20, 0x29, 0x2e, 0x20, 0x20, 0x41, 0x20, 0x74, 0x68, 0x72, 0x65,
  0x73, 0x68, 0x6f, 0x6c, 0x64, 0x20, 0x6f, 0x66, 0x20, 0x30, 0x2e, 0x32,
  0x20, 0x69, 0x73, 0x0a, 0x2f, 0x2f, 0x20, 0x72, 0x65, 0x63, 0x6f, 0x6d,
  0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20,
  0x6c, 0x6f, 0x67, 0x2d, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x63,
  0x65, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x20, 0x74,
  0x68, 0x69, 0x73, 0x20, 0x77, 0x61, 0x79, 0x2e, 0x0a, 0x2f, 0x2f, 0x0a,
  0x0a, 0x2f, 0x2f, 0x20, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
  0x20, 0x42, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65,
  0x3a, 0x0a, 0x2f, 0x2f, 0x0a, 0x2f, 0x2a, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d,
  0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d,
  0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d,
  0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d,
  0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d,
  0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d,
  0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x0a,
  0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4e, 0x56,
  0x49, 0x44, 0x49, 0x41, 0x20, 0x46, 0x58, 0x41, 0x41, 0x20, 0x33, 0x2e,
  0x31, 0x31, 0x20, 0x62, 0x79, 0x20, 0x54, 0x49, 0x4d, 0x4f, 0x54, 0x48,
  0x59, 0x20, 0x4c, 0x4f, 0x54, 0x54, 0x45, 0x53, 0x0a, 0x0a, 0x0a, 0x2d,
  0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d,
  0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d,
  0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d,
  0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d,
  0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d,
  0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d,
  0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x0a, 0x43, 0x4f, 0x50, 0x59, 0x52, 0x49,
  0x47, 0x48, 0x54, 0x20, 0x28, 0x43, 0x29, 0x20, 0x32, 0x30, 0x31, 0x30,
  0x2c, 0x20, 0x32, 0x30, 0x31, 0x31, 0x20, 0x4e, 0x56, 0x49, 0x44, 0x49,
  0x41, 0x20, 0x43, 0x4f, 0x52, 0x50, 0x4f, 0x52, 0x41, 0x54, 0x49, 0x4f,
  0x4e, 0x2e, 0x20, 0x41, 0x4c, 0x4c, 0x20, 0x52, 0x49, 0x47, 0x48, 0x54,
  0x53, 0x20, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x44, 0x2e, 0x0a,
  0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d,
  0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d,
  0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d,
  0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d,
  0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d,
  0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d,
  0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x0a, 0x54, 0x4f, 0x20, 0x54, 0x48,
  0x45, 0x20, 0x4d, 0x41, 0x58, 0x49, 0x4d, 0x55, 0x4d, 0x20, 0x45, 0x58,
  0x54, 0x45, 0x4e, 0x54, 0x20, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x54,
  0x45, 0x44, 0x20, 0x42, 0x59, 0x20, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43,
  0x41, 0x42, 0x4c, 0x45, 0x20, 0x4c, 0x41, 0x57, 0x2c, 0x20, 0x54, 0x48,
  0x49, 0x53, 0x20, 0x53, 0x4f, 0x46, 0x54, 0x57, 0x41, 0x52, 0x45, 0x20,
  0x49, 0x53, 0x20, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x44, 0x0a,
  0x2a, 0x41, 0x53, 0x20, 0x49, 0x53, 0x2a, 0x20, 0x41, 0x4e, 0x44, 0x20,
  0x4e, 0x56, 0x49, 0x44, 0x49, 0x41, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x49,
  0x54, 0x53, 0x20, 0x53, 0x55, 0x50, 0x50, 0x4c, 0x49, 0x45, 0x52, 0x53,
  0x20, 0x44, 0x49, 0x53, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x20, 0x41, 0x4c,
  0x4c, 0x20, 0x57, 0x41, 0x52, 0x52, 0x41, 0x4e, 0x54, 0x49, 0x45, 0x53,
  0x2c, 0x20, 0x45, 0x49, 0x54, 0x48, 0x45, 0x52, 0x20, 0x45, 0x58, 0x50,
  0x52, 0x45, 0x53, 0x53, 0x0a, 0x4f, 0x52, 0x20, 0x49, 0x4d, 0x50, 0x4c,
  0x49, 0x45, 0x44, 0x2c, 0x20, 0x49, 0x4e, 0x43, 0x4c, 0x55, 0x44, 0x49,
  0x4e, 0x47, 0x2c, 0x20, 0x42, 0x55, 0x54, 0x20, 0x4e, 0x4f, 0x54, 0x20,
  0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x44, 0x20, 0x54, 0x4f, 0x2c, 0x20,
  0x49, 0x4d, 0x50, 0x4c, 0x49, 0x45, 0x44, 0x20, 0x57, 0x41, 0x52, 0x52,
  0x41, 0x4e, 0x54, 0x49, 0x45, 0x53, 0x20, 0x4f, 0x46, 0x0a, 0x4d, 0x45,
  0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54,
  0x59, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x46, 0x49, 0x54, 0x4e, 0x45, 0x53,
  0x53, 0x20, 0x46, 0x4f, 0x52, 0x20, 0x41, 0x20, 0x50, 0x41, 0x52, 0x54,
  0x49, 0x43, 0x55, 0x4c, 0x41, 0x52, 0x20, 0x50, 0x55, 0x52, 0x50, 0x4f,
  0x53, 0x45, 0x2e, 0x20, 0x49, 0x4e, 0x20, 0x4e, 0x4f, 0x20, 0x45, 0x56,
  0x45, 0x4e, 0x54, 0x20, 0x53, 0x48, 0x41, 0x4c, 0x4c, 0x20, 0x4e, 0x56,
  0x49, 0x44, 0x49, 0x41, 0x0a, 0x4f, 0x52, 0x20, 0x49, 0x54, 0x53, 0x20,
  0x53, 0x55, 0x50, 0x50, 0x4c, 0x49, 0x45, 0x52, 0x53, 0x20, 0x42, 0x45,
  0x20, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x20, 0x46, 0x4f, 0x52, 0x20,
  0x41, 0x4e, 0x59, 0x20, 0x53, 0x50, 0x45, 0x43, 0x49, 0x41, 0x4c, 0x2c,
  0x20, 0x49, 0x4e, 0x43, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x41, 0x4c, 0x2c,
  0x20, 0x49, 0x4e, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x2c, 0x20, 0x4f,
  0x52, 0x0a, 0x43, 0x4f, 0x4e, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x54,
  0x49, 0x41, 0x4c, 0x20, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45, 0x53, 0x20,
  0x57, 0x48, 0x41, 0x54, 0x53, 0x4f, 0x45, 0x56, 0x45, 0x52, 0x20, 0x28,
  0x49, 0x4e, 0x43, 0x4c, 0x55, 0x44, 0x49, 0x4e, 0x47, 0x2c, 0x20, 0x57,
  0x49, 0x54, 0x48, 0x4f, 0x55, 0x54, 0x20, 0x4c, 0x49, 0x4d, 0x49, 0x54,
  0x41, 0x54, 0x49, 0x4f, 0x4e, 0x2c, 0x20, 0x44, 0x41, 0x4d, 0x41, 0x47,
  0x45, 0x53, 0x20, 0x46, 0x4f, 0x52, 0x0a, 0x4c, 0x4f, 0x53, 0x53, 0x20,
  0x4f, 0x46, 0x20, 0x42, 0x55, 0x53, 0x49, 0x4e, 0x45, 0x53, 0x53, 0x20,
  0x50, 0x52, 0x4f, 0x46, 0x49, 0x54, 0x53, 0x2c, 0x20, 0x42, 0x55, 0x53,
  0x49, 0x4e, 0x45, 0x53, 0x53, 0x20, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x52,
  0x55, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x2c, 0x20, 0x4c, 0x4f, 0x53, 0x53,
  0x20, 0x4f, 0x46, 0x20, 0x42, 0x55, 0x53, 0x49, 0x4e, 0x45, 0x53, 0x53,
  0x20, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e,
  0x2c, 0x0a, 0x4f, 0x52, 0x20, 0x41, 0x4e, 0x59, 0x20, 0x4f, 0x54, 0x48,
  0x45, 0x52, 0x20, 0x50, 0x45, 0x43, 0x55, 0x4e, 0x49, 0x41, 0x52, 0x59,
  0x20, 0x4c, 0x4f, 0x53, 0x53, 0x29, 0x20, 0x41, 0x52, 0x49, 0x53, 0x49,
  0x4e, 0x47, 0x20, 0x4f, 0x55, 0x54, 0x20, 0x4f, 0x46, 0x20, 0x54, 0x48,
  0x45, 0x20, 0x55, 0x53, 0x45, 0x20, 0x4f, 0x46, 0x20, 0x4f, 0x52, 0x20,
  0x49, 0x4e, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x20, 0x54, 0x4f,
  0x20, 0x55, 0x53, 0x45, 0x0a, 0x54, 0x48, 0x49, 0x53, 0x20, 0x53, 0x4f,
  0x46, 0x54, 0x57, 0x41, 0x52, 0x45, 0x2c, 0x20, 0x45, 0x56, 0x45, 0x4e,
  0x20, 0x49, 0x46, 0x20, 0x4e, 0x56, 0x49, 0x44, 0x49, 0x41, 0x20, 0x48,
  0x41, 0x53, 0x20, 0x42, 0x45, 0x45, 0x4e, 0x20, 0x41, 0x44, 0x56, 0x49,
  0x53, 0x45, 0x44, 0x20, 0x4f, 0x46, 0x20, 0x54, 0x48, 0x45, 0x20, 0x50,
  0x4f, 0x53, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x20, 0x4f,
  0x46, 0x20, 0x53, 0x55, 0x43, 0x48, 0x0a, 0x44, 0x41, 0x4d, 0x41, 0x47,
  0x45, 0x53, 0x2e, 0x0a, 0x2a, 0x2f, 0x0a, 0x0a, 0x0a, 0x23, 0x69, 0x6e,
  0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x22, 0x46, 0x58, 0x41, 0x41, 0x52,
  0x6f, 0x6f, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
  0x2e, 0x68, 0x6c, 0x73, 0x6c, 0x69, 0x22, 0x0a, 0x0a, 0x52, 0x57, 0x42,
  0x79, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x75,
  0x66, 0x66, 0x65, 0x72, 0x20, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x75,
  0x6e, 0x74, 0x20, 0x3a, 0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
  0x72, 0x28, 0x75, 0x30, 0x29, 0x3b, 0x0a, 0x52, 0x57, 0x42, 0x79, 0x74,
  0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x75, 0x66, 0x66,
  0x65, 0x72, 0x20, 0x57, 0x6f, 0x72, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65,
  0x20, 0x3a, 0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x28,
  0x75, 0x31, 0x29, 0x3b, 0x0a, 0x52, 0x57, 0x42, 0x75, 0x66, 0x66, 0x65,
  0x72, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x3e, 0x20, 0x43, 0x6f,
  0x6c, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x20, 0x3a, 0x20, 0x72,
  0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x28, 0x75, 0x32, 0x29, 0x3b,
  0x0a, 0x23, 0x69, 0x66, 0x20, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54,
  0x5f, 0x54, 0x59, 0x50, 0x45, 0x44, 0x5f, 0x55, 0x41, 0x56, 0x5f, 0x4c,
  0x4f, 0x41, 0x44, 0x53, 0x0a, 0x20, 0x20, 0x54, 0x65, 0x78, 0x74, 0x75,
  0x72, 0x65, 0x32, 0x44, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x3e,
  0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x65, 0x67,
  0x69, 0x73, 0x74, 0x65, 0x72, 0x28, 0x74, 0x30, 0x29, 0x3b, 0x0a, 0x20,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x46, 0x65, 0x74, 0x63,
  0x68, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x20, 0x69, 0x6e, 0x74, 0x32,
  0x20, 0x73, 0x74, 0x20, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75,
  0x72, 0x6e, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5b, 0x73, 0x74, 0x5d,
  0x3b, 0x20, 0x7d, 0x0a, 0x23, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20,
  0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x22, 0x50, 0x69,
  0x78, 0x65, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x52,
  0x31, 0x31, 0x47, 0x31, 0x31, 0x42, 0x31, 0x30, 0x2e, 0x68, 0x6c, 0x73,
  0x6c, 0x69, 0x22, 0x0a, 0x20, 0x20, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72,
  0x65, 0x32, 0x44, 0x3c, 0x75, 0x69, 0x6e, 0x74, 0x3e, 0x20, 0x43, 0x6f,
  0x6c, 0x6f, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
  0x65, 0x72, 0x28, 0x74, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x33, 0x20, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f,
  0x6c, 0x6f, 0x72, 0x28, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x73, 0x74,
  0x20, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20,
  0x55, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x52, 0x31, 0x31, 0x47, 0x31,
  0x31, 0x42, 0x31, 0x30, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x28, 0x43,
  0x6f, 0x6c, 0x6f, 0x72, 0x5b, 0x73, 0x74, 0x5d, 0x29, 0x3b, 0x20, 0x7d,
  0x0a, 0x23, 0x65, 0x6e, 0x64, 0x69, 0x66, 0x0a, 0x53, 0x61, 0x6d, 0x70,
  0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x4c, 0x69, 0x6e,
  0x65, 0x61, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x3a,
  0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x28, 0x73, 0x30,
  0x29, 0x3b, 0x0a, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20,
  0x42, 0x4f, 0x55, 0x4e, 0x44, 0x41, 0x52, 0x59, 0x5f, 0x53, 0x49, 0x5a,
  0x45, 0x20, 0x31, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20,
  0x52, 0x4f, 0x57, 0x5f, 0x57, 0x49, 0x44, 0x54, 0x48, 0x20, 0x28, 0x38,
  0x20, 0x2b, 0x20, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x41, 0x52, 0x59, 0x5f,
  0x53, 0x49, 0x5a, 0x45, 0x20, 0x2a, 0x20, 0x32, 0x29, 0x0a, 0x67, 0x72,
  0x6f, 0x75, 0x70, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x20, 0x67, 0x73, 0x5f, 0x4c, 0x75, 0x6d, 0x61, 0x43,
  0x61, 0x63, 0x68, 0x65, 0x5b, 0x52, 0x4f, 0x57, 0x5f, 0x57, 0x49, 0x44,
  0x54, 0x48, 0x20, 0x2a, 0x20, 0x52, 0x4f, 0x57, 0x5f, 0x57, 0x49, 0x44,
  0x54, 0x48, 0x5d, 0x3b, 0x0a, 0x0a, 0x2f, 0x2f, 0x20, 0x49, 0x66, 0x20,
  0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64,
  0x2c, 0x20, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x6c, 0x75, 0x6d,
  0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x61, 0x73, 0x20, 0x61, 0x20,
  0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2c, 0x20, 0x6f, 0x74, 0x68,
  0x65, 0x72, 0x77, 0x69, 0x73, 0x65, 0x20, 0x77, 0x72, 0x69, 0x74, 0x65,
  0x20, 0x69, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20,
  0x50, 0x61, 0x73, 0x73, 0x32, 0x0a, 0x23, 0x69, 0x66, 0x64, 0x65, 0x66,
  0x20, 0x55, 0x53, 0x45, 0x5f, 0x4c, 0x55, 0x4d, 0x41, 0x5f, 0x49, 0x4e,
  0x50, 0x55, 0x54, 0x5f, 0x42, 0x55, 0x46, 0x46, 0x45, 0x52, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44,
  0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x4c, 0x75, 0x6d, 0x61,
  0x20, 0x3a, 0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x28,
  0x74, 0x31, 0x29, 0x3b, 0x0a, 0x23, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x52, 0x57, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
  0x32, 0x44, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x4c, 0x75,
  0x6d, 0x61, 0x20, 0x3a, 0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
  0x72, 0x28, 0x75, 0x33, 0x29, 0x3b, 0x0a, 0x23, 0x65, 0x6e, 0x64, 0x69,
  0x66, 0x0a, 0x0a, 0x2f, 0x2f, 0x0a, 0x2f, 0x2f, 0x20, 0x48, 0x65, 0x6c,
  0x70, 0x65, 0x72, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
  0x73, 0x0a, 0x2f, 0x2f, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52,
  0x47, 0x42, 0x54, 0x6f, 0x4c, 0x6f, 0x67, 0x4c, 0x75, 0x6d, 0x69, 0x6e,
  0x61, 0x6e, 0x63, 0x65, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33,
  0x20, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x52, 0x47, 0x42, 0x20, 0x29,
  0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x4c, 0x75, 0x6d, 0x61, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28,
  0x20, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x52, 0x47, 0x42, 0x2c, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x32,
  0x36, 0x37, 0x31, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x35, 0x31, 0x36,
  0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x32, 0x31, 0x36, 0x39, 0x29,
  0x20, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75,
  0x72, 0x6e, 0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x31, 0x20, 0x2b, 0x20,
  0x4c, 0x75, 0x6d, 0x61, 0x20, 0x2a, 0x20, 0x31, 0x35, 0x29, 0x20, 0x2f,
  0x20, 0x34, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x5b, 0x52, 0x6f, 0x6f, 0x74,
  0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x28, 0x46, 0x58,
  0x41, 0x41, 0x5f, 0x52, 0x6f, 0x6f, 0x74, 0x53, 0x69, 0x67, 0x29, 0x5d,
  0x0a, 0x5b, 0x6e, 0x75, 0x6d, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73,
  0x28, 0x20, 0x38, 0x2c, 0x20, 0x38, 0x2c, 0x20, 0x31, 0x20, 0x29, 0x5d,
  0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x20,
  0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x47, 0x69, 0x64, 0x20, 0x3a, 0x20,
  0x53, 0x56, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x2c, 0x20,
  0x75, 0x69, 0x6e, 0x74, 0x20, 0x47, 0x49, 0x20, 0x3a, 0x20, 0x53, 0x56,
  0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2c,
  0x20, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x47, 0x54, 0x69, 0x64, 0x20,
  0x3a, 0x20, 0x53, 0x56, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68,
  0x72, 0x65, 0x61, 0x64, 0x49, 0x44, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74,
  0x33, 0x20, 0x44, 0x54, 0x69, 0x64, 0x20, 0x3a, 0x20, 0x53, 0x56, 0x5f,
  0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x54, 0x68, 0x72, 0x65,
  0x61, 0x64, 0x49, 0x44, 0x20, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x50, 0x69, 0x78, 0x65, 0x6c,
  0x43, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x44, 0x54, 0x69, 0x64,
  0x2e, 0x78, 0x79, 0x20, 0x2b, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50,
  0x69, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x0a, 0x23, 0x69, 0x66, 0x64, 0x65,
  0x66, 0x20, 0x55, 0x53, 0x45, 0x5f, 0x4c, 0x55, 0x4d, 0x41, 0x5f, 0x49,
  0x4e, 0x50, 0x55, 0x54, 0x5f, 0x42, 0x55, 0x46, 0x46, 0x45, 0x52, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x4c, 0x6f, 0x61, 0x64, 0x20,
  0x34, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x73, 0x20, 0x70, 0x65, 0x72, 0x20,
  0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20,
  0x4c, 0x44, 0x53, 0x20, 0x28, 0x62, 0x75, 0x74, 0x20, 0x6f, 0x6e, 0x6c,
  0x79, 0x20, 0x74, 0x68, 0x6f, 0x73, 0x65, 0x20, 0x6e, 0x65, 0x65, 0x64,
  0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x66, 0x69, 0x6c, 0x6c, 0x20, 0x6f,
  0x75, 0x72, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x63, 0x61, 0x63,
  0x68, 0x65, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28,
  0x6d, 0x61, 0x78, 0x28, 0x47, 0x54, 0x69, 0x64, 0x2e, 0x78, 0x2c, 0x20,
  0x47, 0x54, 0x69, 0x64, 0x2e, 0x79, 0x29, 0x20, 0x3c, 0x20, 0x52, 0x4f,
  0x57, 0x5f, 0x57, 0x49, 0x44, 0x54, 0x48, 0x20, 0x2f, 0x20, 0x32, 0x29,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x54, 0x68, 0x72, 0x65,
  0x61, 0x64, 0x55, 0x4c, 0x20, 0x3d, 0x20, 0x50, 0x69, 0x78, 0x65, 0x6c,
  0x43, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x2b, 0x20, 0x47, 0x54, 0x69, 0x64,
  0x2e, 0x78, 0x79, 0x20, 0x2d, 0x20, 0x28, 0x42, 0x4f, 0x55, 0x4e, 0x44,
  0x41, 0x52, 0x59, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x20, 0x2d, 0x20, 0x31,
  0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x4c, 0x75, 0x6d, 0x61, 0x34, 0x20,
  0x3d, 0x20, 0x4c, 0x75, 0x6d, 0x61, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65,
  0x72, 0x28, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x53, 0x61, 0x6d, 0x70,
  0x6c, 0x65, 0x72, 0x2c, 0x20, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x55,
  0x4c, 0x20, 0x2a, 0x20, 0x52, 0x63, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75,
  0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x4c, 0x6f,
  0x61, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x3d, 0x20, 0x28, 0x47,
  0x54, 0x69, 0x64, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x47, 0x54, 0x69, 0x64,
  0x2e, 0x79, 0x20, 0x2a, 0x20, 0x52, 0x4f, 0x57, 0x5f, 0x57, 0x49, 0x44,
  0x54, 0x48, 0x29, 0x20, 0x2a, 0x20, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x67, 0x73, 0x5f, 0x4c, 0x75, 0x6d, 0x61,
  0x43, 0x61, 0x63, 0x68, 0x65, 0x5b, 0x4c, 0x6f, 0x61, 0x64, 0x49, 0x6e,
  0x64, 0x65, 0x78, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5d, 0x20, 0x3d, 0x20, 0x4c,
  0x75, 0x6d, 0x61, 0x34, 0x2e, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x67, 0x73, 0x5f, 0x4c, 0x75, 0x6d, 0x61, 0x43,
  0x61, 0x63, 0x68, 0x65, 0x5b, 0x4c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x64,
  0x65, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5d, 0x20, 0x3d, 0x20, 0x4c, 0x75,
  0x6d, 0x61, 0x34, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x67, 0x73, 0x5f, 0x4c, 0x75, 0x6d, 0x61, 0x43, 0x61,
  0x63, 0x68, 0x65, 0x5b, 0x4c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x64, 0x65,
  0x78, 0x20, 0x2b, 0x20, 0x52, 0x4f, 0x57, 0x5f, 0x57, 0x49, 0x44, 0x54,
  0x48, 0x20, 0x20, 0x20, 0x20, 0x5d, 0x20, 0x3d, 0x20, 0x4c, 0x75, 0x6d,
  0x61, 0x34, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x67, 0x73, 0x5f, 0x4c, 0x75, 0x6d, 0x61, 0x43, 0x61, 0x63,
  0x68, 0x65, 0x5b, 0x4c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78,
  0x20, 0x2b, 0x20, 0x52, 0x4f, 0x57, 0x5f, 0x57, 0x49, 0x44, 0x54, 0x48,
  0x20, 0x2b, 0x20, 0x31, 0x5d, 0x20, 0x3d, 0x20, 0x4c, 0x75, 0x6d, 0x61,
  0x34, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x23,
  0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20,
  0x42, 0x65, 0x63, 0x61, 0x75, 0x73, 0x65, 0x20, 0x77, 0x65, 0x20, 0x63,
  0x61, 0x6e, 0x27, 0x74, 0x20, 0x75, 0x73, 0x65, 0x20, 0x47, 0x61, 0x74,
  0x68, 0x65, 0x72, 0x28, 0x29, 0x20, 0x6f, 0x6e, 0x20, 0x52, 0x47, 0x42,
  0x2c, 0x20, 0x77, 0x65, 0x20, 0x6d, 0x61, 0x6b, 0x65, 0x20, 0x65, 0x61,
  0x63, 0x68, 0x20, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x20, 0x72, 0x65,
  0x61, 0x64, 0x20, 0x74, 0x77, 0x6f, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c,
  0x73, 0x20, 0x28, 0x62, 0x75, 0x74, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20,
  0x74, 0x68, 0x6f, 0x73, 0x65, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64,
  0x29, 0x2e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x47,
  0x49, 0x20, 0x3c, 0x20, 0x52, 0x4f, 0x57, 0x5f, 0x57, 0x49, 0x44, 0x54,
  0x48, 0x20, 0x2a, 0x20, 0x52, 0x4f, 0x57, 0x5f, 0x57, 0x49, 0x44, 0x54,
  0x48, 0x20, 0x2f, 0x20, 0x32, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e,
  0x74, 0x20, 0x4c, 0x64, 0x73, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x3d,
  0x20, 0x47, 0x49, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x55, 0x61, 0x76, 0x43, 0x6f, 0x6f,
  0x72, 0x64, 0x20, 0x3d, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x69,
  0x78, 0x65, 0x6c, 0x20, 0x2b, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x28,
  0x47, 0x49, 0x20, 0x25, 0x20, 0x52, 0x4f, 0x57, 0x5f, 0x57, 0x49, 0x44,
  0x54, 0x48, 0x2c, 0x20, 0x47, 0x49, 0x20, 0x2f, 0x20, 0x52, 0x4f, 0x57,
  0x5f, 0x57, 0x49, 0x44, 0x54, 0x48, 0x29, 0x20, 0x2b, 0x20, 0x47, 0x69,
  0x64, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x38, 0x20, 0x2d, 0x20, 0x42,
  0x4f, 0x55, 0x4e, 0x44, 0x41, 0x52, 0x59, 0x5f, 0x53, 0x49, 0x5a, 0x45,
  0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x20, 0x4c, 0x75, 0x6d, 0x61, 0x31, 0x20, 0x3d, 0x20,
  0x52, 0x47, 0x42, 0x54, 0x6f, 0x4c, 0x6f, 0x67, 0x4c, 0x75, 0x6d, 0x69,
  0x6e, 0x61, 0x6e, 0x63, 0x65, 0x28, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43,
  0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x55, 0x61, 0x76, 0x43, 0x6f, 0x6f, 0x72,
  0x64, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x4c, 0x75, 0x6d, 0x61, 0x5b, 0x55, 0x61, 0x76, 0x43, 0x6f, 0x6f,
  0x72, 0x64, 0x5d, 0x20, 0x3d, 0x20, 0x4c, 0x75, 0x6d, 0x61, 0x31, 0x3b,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x67, 0x73, 0x5f,
  0x4c, 0x75, 0x6d, 0x61, 0x43, 0x61, 0x63, 0x68, 0x65, 0x5b, 0x4c, 0x64,
  0x73, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x5d, 0x20, 0x3d, 0x20, 0x4c, 0x75,
  0x6d, 0x61, 0x31, 0x3b, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x4c, 0x64, 0x73, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x2b,
  0x3d, 0x20, 0x52, 0x4f, 0x57, 0x5f, 0x57, 0x49, 0x44, 0x54, 0x48, 0x20,
  0x2a, 0x20, 0x52, 0x4f, 0x57, 0x5f, 0x57, 0x49, 0x44, 0x54, 0x48, 0x20,
  0x2f, 0x20, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x55, 0x61, 0x76, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x2b, 0x3d,
  0x20, 0x69, 0x6e, 0x74, 0x32, 0x28, 0x30, 0x2c, 0x20, 0x52, 0x4f, 0x57,
  0x5f, 0x57, 0x49, 0x44, 0x54, 0x48, 0x20, 0x2f, 0x20, 0x32, 0x29, 0x3b,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x20, 0x4c, 0x75, 0x6d, 0x61, 0x32, 0x20, 0x3d, 0x20, 0x52,
  0x47, 0x42, 0x54, 0x6f, 0x4c, 0x6f, 0x67, 0x4c, 0x75, 0x6d, 0x69, 0x6e,
  0x61, 0x6e, 0x63, 0x65, 0x28, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f,
  0x6c, 0x6f, 0x72, 0x28, 0x55, 0x61, 0x76, 0x43, 0x6f, 0x6f, 0x72, 0x64,
  0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x4c, 0x75, 0x6d, 0x61, 0x5b, 0x55, 0x61, 0x76, 0x43, 0x6f, 0x6f, 0x72,
  0x64, 0x5d, 0x20, 0x3d, 0x20, 0x4c, 0x75, 0x6d, 0x61, 0x32, 0x3b, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x67, 0x73, 0x5f, 0x4c,
  0x75, 0x6d, 0x61, 0x43, 0x61, 0x63, 0x68, 0x65, 0x5b, 0x4c, 0x64, 0x73,
  0x43, 0x6f, 0x6f, 0x72, 0x64, 0x5d, 0x20, 0x3d, 0x20, 0x4c, 0x75, 0x6d,
  0x61, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x23, 0x65,
  0x6e, 0x64, 0x69, 0x66, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x47, 0x72,
  0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x42, 0x61, 0x72,
  0x72, 0x69, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x47, 0x72, 0x6f, 0x75,
  0x70, 0x53, 0x79, 0x6e, 0x63, 0x28, 0x29, 0x3b, 0x0a, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x43, 0x65, 0x6e, 0x74, 0x65,
  0x72, 0x49, 0x64, 0x78, 0x20, 0x3d, 0x20, 0x28, 0x47, 0x54, 0x69, 0x64,
  0x2e, 0x78, 0x20, 0x2b, 0x20, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x41, 0x52,
  0x59, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x47,
  0x54, 0x69, 0x64, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x42, 0x4f, 0x55, 0x4e,
  0x44, 0x41, 0x52, 0x59, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x29, 0x20, 0x2a,
  0x20, 0x52, 0x4f, 0x57, 0x5f, 0x57, 0x49, 0x44, 0x54, 0x48, 0x3b, 0x0a,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x4c, 0x6f, 0x61, 0x64,
  0x20, 0x74, 0x68, 0x65, 0x20, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c,
  0x20, 0x61, 0x6e, 0x64, 0x20, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x20,
  0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x75, 0x6d,
  0x61, 0x4e, 0x20, 0x20, 0x3d, 0x20, 0x67, 0x73, 0x5f, 0x4c, 0x75, 0x6d,
  0x61, 0x43, 0x61, 0x63, 0x68, 0x65, 0x5b, 0x43, 0x65, 0x6e, 0x74, 0x65,
  0x72, 0x49, 0x64, 0x78, 0x20, 0x2d, 0x20, 0x52, 0x4f, 0x57, 0x5f, 0x57,
  0x49, 0x44, 0x54, 0x48, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x57, 0x20, 0x20,
  0x3d, 0x20, 0x67, 0x73, 0x5f, 0x4c, 0x75, 0x6d, 0x61, 0x43, 0x61, 0x63,
  0x68, 0x65, 0x5b, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x78,
  0x20, 0x2d, 0x20, 0x31, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x4d, 0x20, 0x20,
  0x3d, 0x20, 0x67, 0x73, 0x5f, 0x4c, 0x75, 0x6d, 0x61, 0x43, 0x61, 0x63,
  0x68, 0x65, 0x5b, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x78,
  0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x6c, 0x75, 0x6d, 0x61, 0x45, 0x20, 0x20, 0x3d, 0x20, 0x67, 0x73,
  0x5f, 0x4c, 0x75, 0x6d, 0x61, 0x43, 0x61, 0x63, 0x68, 0x65, 0x5b, 0x43,
  0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x78, 0x20, 0x2b, 0x20, 0x31,
  0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x6c, 0x75, 0x6d, 0x61, 0x53, 0x20, 0x20, 0x3d, 0x20, 0x67, 0x73,
  0x5f, 0x4c, 0x75, 0x6d, 0x61, 0x43, 0x61, 0x63, 0x68, 0x65, 0x5b, 0x43,
  0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x78, 0x20, 0x2b, 0x20, 0x52,
  0x4f, 0x57, 0x5f, 0x57, 0x49, 0x44, 0x54, 0x48, 0x5d, 0x3b, 0x0a, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72,
  0x61, 0x73, 0x74, 0x20, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
  0x64, 0x20, 0x74, 0x65, 0x73, 0x74, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61,
  0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28,
  0x6c, 0x75, 0x6d, 0x61, 0x4e, 0x2c, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x57,
  0x29, 0x2c, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6c, 0x75, 0x6d, 0x61, 0x45,
  0x2c, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6c, 0x75, 0x6d, 0x61, 0x53, 0x2c,
  0x20, 0x6c, 0x75, 0x6d, 0x61, 0x4d, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x61, 0x6e,
  0x67, 0x65, 0x4d, 0x69, 0x6e, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28,
  0x6d, 0x69, 0x6e, 0x28, 0x6c, 0x75, 0x6d, 0x61, 0x4e, 0x2c, 0x20, 0x6c,
  0x75, 0x6d, 0x61, 0x57, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x6c,
  0x75, 0x6d, 0x61, 0x45, 0x2c, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x6c, 0x75,
  0x6d, 0x61, 0x53, 0x2c, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x4d, 0x29, 0x29,
  0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x3d, 0x20, 0x72, 0x61, 0x6e,
  0x67, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2d, 0x20, 0x72, 0x61, 0x6e, 0x67,
  0x65, 0x4d, 0x69, 0x6e, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66,
  0x20, 0x28, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x3c, 0x20, 0x43, 0x6f,
  0x6e, 0x74, 0x72, 0x61, 0x73, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
  0x6f, 0x6c, 0x64, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x3b, 0x0a, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x2f, 0x2f, 0x20, 0x4c, 0x6f, 0x61, 0x64, 0x20, 0x74, 0x68,
  0x65, 0x20, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x20, 0x6c, 0x75, 0x6d,
  0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x4e, 0x57,
  0x20, 0x3d, 0x20, 0x67, 0x73, 0x5f, 0x4c, 0x75, 0x6d, 0x61, 0x43, 0x61,
  0x63, 0x68, 0x65, 0x5b, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64,
  0x78, 0x20, 0x2d, 0x20, 0x52, 0x4f, 0x57, 0x5f, 0x57, 0x49, 0x44, 0x54,
  0x48, 0x20, 0x2d, 0x20, 0x31, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x4e, 0x45,
  0x20, 0x3d, 0x20, 0x67, 0x73, 0x5f, 0x4c, 0x75, 0x6d, 0x61, 0x43, 0x61,
  0x63, 0x68, 0x65, 0x5b, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64,
  0x78, 0x20, 0x2d, 0x20, 0x52, 0x4f, 0x57, 0x5f, 0x57, 0x49, 0x44, 0x54,
  0x48, 0x20, 0x2b, 0x20, 0x31, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x53, 0x57,
  0x20, 0x3d, 0x20, 0x67, 0x73, 0x5f, 0x4c, 0x75, 0x6d, 0x61, 0x43, 0x61,
  0x63, 0x68, 0x65, 0x5b, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64,
  0x78, 0x20, 0x2b, 0x20, 0x52, 0x4f, 0x57, 0x5f, 0x57, 0x49, 0x44, 0x54,
  0x48, 0x20, 0x2d, 0x20, 0x31, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x53, 0x45,
  0x20, 0x3d, 0x20, 0x67, 0x73, 0x5f, 0x4c, 0x75, 0x6d, 0x61, 0x43, 0x61,
  0x63, 0x68, 0x65, 0x5b, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64,
  0x78, 0x20, 0x2b, 0x20, 0x52, 0x4f, 0x57, 0x5f, 0x57, 0x49, 0x44, 0x54,
  0x48, 0x20, 0x2b, 0x20, 0x31, 0x5d, 0x3b, 0x0a, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x2f, 0x2f, 0x20, 0x50, 0x72, 0x65, 0x2d, 0x73, 0x75, 0x6d, 0x20,
  0x61, 0x20, 0x66, 0x65, 0x77, 0x20, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x20,
  0x73, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c,
  0x74, 0x73, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x72, 0x65,
  0x75, 0x73, 0x65, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x4e, 0x53, 0x20, 0x3d, 0x20,
  0x6c, 0x75, 0x6d, 0x61, 0x4e, 0x20, 0x2b, 0x20, 0x6c, 0x75, 0x6d, 0x61,
  0x53, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x6c, 0x75, 0x6d, 0x61, 0x57, 0x45, 0x20, 0x3d, 0x20, 0x6c, 0x75,
  0x6d, 0x61, 0x57, 0x20, 0x2b, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x45, 0x3b,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c,
  0x75, 0x6d, 0x61, 0x4e, 0x57, 0x53, 0x57, 0x20, 0x3d, 0x20, 0x6c, 0x75,
  0x6d, 0x61, 0x4e, 0x57, 0x20, 0x2b, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x53,
  0x57, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x6c, 0x75, 0x6d, 0x61, 0x4e, 0x45, 0x53, 0x45, 0x20, 0x3d, 0x20,
  0x6c, 0x75, 0x6d, 0x61, 0x4e, 0x45, 0x20, 0x2b, 0x20, 0x6c, 0x75, 0x6d,
  0x61, 0x53, 0x45, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x53, 0x57, 0x53, 0x45, 0x20,
  0x3d, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x53, 0x57, 0x20, 0x2b, 0x20, 0x6c,
  0x75, 0x6d, 0x61, 0x53, 0x45, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x4e, 0x57, 0x4e,
  0x45, 0x20, 0x3d, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x4e, 0x57, 0x20, 0x2b,
  0x20, 0x6c, 0x75, 0x6d, 0x61, 0x4e, 0x45, 0x3b, 0x0a, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x2f, 0x2f, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
  0x20, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x20,
  0x61, 0x6e, 0x64, 0x20, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
  0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x73, 0x74, 0x3b, 0x20, 0x73,
  0x65, 0x65, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x69, 0x73, 0x20,
  0x62, 0x69, 0x67, 0x67, 0x65, 0x72, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x64, 0x67, 0x65, 0x48, 0x6f, 0x72,
  0x7a, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x6c, 0x75, 0x6d, 0x61,
  0x4e, 0x57, 0x53, 0x57, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2a,
  0x20, 0x6c, 0x75, 0x6d, 0x61, 0x57, 0x29, 0x20, 0x2b, 0x20, 0x61, 0x62,
  0x73, 0x28, 0x6c, 0x75, 0x6d, 0x61, 0x4e, 0x53, 0x20, 0x2d, 0x20, 0x32,
  0x2e, 0x30, 0x20, 0x2a, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x4d, 0x29, 0x20,
  0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x28,
  0x6c, 0x75, 0x6d, 0x61, 0x4e, 0x45, 0x53, 0x45, 0x20, 0x2d, 0x20, 0x32,
  0x2e, 0x30, 0x20, 0x2a, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x45, 0x29, 0x3b,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65,
  0x64, 0x67, 0x65, 0x56, 0x65, 0x72, 0x74, 0x20, 0x3d, 0x20, 0x61, 0x62,
  0x73, 0x28, 0x6c, 0x75, 0x6d, 0x61, 0x53, 0x57, 0x53, 0x45, 0x20, 0x2d,
  0x20, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x53,
  0x29, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x28, 0x6c, 0x75, 0x6d, 0x61,
  0x57, 0x45, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x6c,
  0x75, 0x6d, 0x61, 0x4d, 0x29, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20,
  0x2b, 0x20, 0x61, 0x62, 0x73, 0x28, 0x6c, 0x75, 0x6d, 0x61, 0x4e, 0x57,
  0x4e, 0x45, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x6c,
  0x75, 0x6d, 0x61, 0x4e, 0x29, 0x3b, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x2f, 0x2f, 0x20, 0x41, 0x6c, 0x73, 0x6f, 0x20, 0x63, 0x6f, 0x6d, 0x70,
  0x75, 0x74, 0x65, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x63, 0x6f,
  0x6e, 0x74, 0x72, 0x61, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68,
  0x65, 0x20, 0x33, 0x78, 0x33, 0x20, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
  0x2e, 0x20, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x63, 0x61, 0x6e, 0x20,
  0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x20, 0x73, 0x74, 0x61,
  0x6e, 0x64, 0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x20, 0x70, 0x69, 0x78, 0x65,
  0x6c, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x61, 0x6c, 0x69, 0x61,
  0x73, 0x2e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x61, 0x76, 0x67, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
  0x4c, 0x75, 0x6d, 0x61, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x6c, 0x75, 0x6d,
  0x61, 0x4e, 0x53, 0x20, 0x2b, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x57, 0x45,
  0x29, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x6c, 0x75,
  0x6d, 0x61, 0x4e, 0x57, 0x53, 0x57, 0x20, 0x2b, 0x20, 0x6c, 0x75, 0x6d,
  0x61, 0x4e, 0x45, 0x53, 0x45, 0x29, 0x20, 0x2f, 0x20, 0x31, 0x32, 0x2e,
  0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x73, 0x75, 0x62, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x53, 0x68, 0x69,
  0x66, 0x74, 0x20, 0x3d, 0x20, 0x73, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74,
  0x65, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68,
  0x73, 0x74, 0x65, 0x70, 0x28, 0x30, 0x2c, 0x20, 0x31, 0x2c, 0x20, 0x61,
  0x62, 0x73, 0x28, 0x61, 0x76, 0x67, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62,
  0x6f, 0x72, 0x4c, 0x75, 0x6d, 0x61, 0x20, 0x2d, 0x20, 0x6c, 0x75, 0x6d,
  0x61, 0x4d, 0x29, 0x20, 0x2f, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x29,
  0x2c, 0x20, 0x32, 0x29, 0x20, 0x2a, 0x20, 0x53, 0x75, 0x62, 0x70, 0x69,
  0x78, 0x65, 0x6c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x20, 0x2a,
  0x20, 0x32, 0x29, 0x3b, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x20, 0x4e, 0x65, 0x67, 0x47, 0x72, 0x61, 0x64, 0x20,
  0x3d, 0x20, 0x28, 0x65, 0x64, 0x67, 0x65, 0x48, 0x6f, 0x72, 0x7a, 0x20,
  0x3e, 0x3d, 0x20, 0x65, 0x64, 0x67, 0x65, 0x56, 0x65, 0x72, 0x74, 0x20,
  0x3f, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x4e, 0x20, 0x3a, 0x20, 0x6c, 0x75,
  0x6d, 0x61, 0x57, 0x29, 0x20, 0x2d, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x4d,
  0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20,
  0x50, 0x6f, 0x73, 0x47, 0x72, 0x61, 0x64, 0x20, 0x3d, 0x20, 0x28, 0x65,
  0x64, 0x67, 0x65, 0x48, 0x6f, 0x72, 0x7a, 0x20, 0x3e, 0x3d, 0x20, 0x65,
  0x64, 0x67, 0x65, 0x56, 0x65, 0x72, 0x74, 0x20, 0x3f, 0x20, 0x6c, 0x75,
  0x6d, 0x61, 0x53, 0x20, 0x3a, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x45, 0x29,
  0x20, 0x2d, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x4d, 0x3b, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x47, 0x72, 0x61, 0x64, 0x69,
  0x65, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73,
  0x28, 0x50, 0x6f, 0x73, 0x47, 0x72, 0x61, 0x64, 0x29, 0x20, 0x3e, 0x3d,
  0x20, 0x61, 0x62, 0x73, 0x28, 0x4e, 0x65, 0x67, 0x47, 0x72, 0x61, 0x64,
  0x29, 0x20, 0x3f, 0x20, 0x31, 0x20, 0x3a, 0x20, 0x30, 0x3b, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x53, 0x75, 0x62, 0x70,
  0x69, 0x78, 0x20, 0x3d, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x73, 0x75,
  0x62, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x53, 0x68, 0x69, 0x66, 0x74, 0x20,
  0x2a, 0x20, 0x32, 0x35, 0x34, 0x2e, 0x30, 0x29, 0x20, 0x26, 0x20, 0x30,
  0x78, 0x46, 0x45, 0x3b, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f,
  0x20, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x68, 0x65, 0x61, 0x64,
  0x65, 0x72, 0x3a, 0x20, 0x5b, 0x20, 0x31, 0x32, 0x20, 0x62, 0x69, 0x74,
  0x73, 0x20, 0x59, 0x20, 0x7c, 0x20, 0x31, 0x32, 0x20, 0x62, 0x69, 0x74,
  0x73, 0x20, 0x58, 0x20, 0x7c, 0x20, 0x37, 0x20, 0x62, 0x69, 0x74, 0x20,
  0x53, 0x75, 0x62, 0x70, 0x69, 0x78, 0x20, 0x7c, 0x20, 0x31, 0x20, 0x62,
  0x69, 0x74, 0x20, 0x64, 0x69, 0x72, 0x28, 0x47, 0x72, 0x61, 0x64, 0x29,
  0x20, 0x5d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20,
  0x57, 0x6f, 0x72, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x20, 0x3d,
  0x20, 0x44, 0x54, 0x69, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x3c, 0x20, 0x32,
  0x30, 0x20, 0x7c, 0x20, 0x44, 0x54, 0x69, 0x64, 0x2e, 0x78, 0x20, 0x3c,
  0x3c, 0x20, 0x38, 0x20, 0x7c, 0x20, 0x53, 0x75, 0x62, 0x70, 0x69, 0x78,
  0x20, 0x7c, 0x20, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x44,
  0x69, 0x72, 0x3b, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20,
  0x28, 0x65, 0x64, 0x67, 0x65, 0x48, 0x6f, 0x72, 0x7a, 0x20, 0x3e, 0x3d,
  0x20, 0x65, 0x64, 0x67, 0x65, 0x56, 0x65, 0x72, 0x74, 0x29, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x64,
  0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x57,
  0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x74,
  0x65, 0x72, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x64, 0x64, 0x28,
  0x30, 0x2c, 0x20, 0x31, 0x2c, 0x20, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x64,
  0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x57, 0x6f, 0x72, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x53, 0x74,
  0x6f, 0x72, 0x65, 0x28, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x78, 0x2a,
  0x34, 0x2c, 0x20, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65,
  0x72, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x5b, 0x57,
  0x6f, 0x72, 0x6b, 0x49, 0x64, 0x78, 0x5d, 0x20, 0x3d, 0x20, 0x46, 0x65,
  0x74, 0x63, 0x68, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x50, 0x69, 0x78,
  0x65, 0x6c, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x2b, 0x20, 0x75, 0x69,
  0x6e, 0x74, 0x32, 0x28, 0x30, 0x2c, 0x20, 0x32, 0x20, 0x2a, 0x20, 0x47,
  0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x20, 0x2d,
  0x20, 0x31, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75,
  0x69, 0x6e, 0x74, 0x20, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x78, 0x3b,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x57, 0x6f, 0x72,
  0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
  0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x64, 0x64, 0x28, 0x34, 0x2c,
  0x20, 0x31, 0x2c, 0x20, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x78, 0x29,
  0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x57, 0x6f,
  0x72, 0x6b, 0x49, 0x64, 0x78, 0x20, 0x3d, 0x20, 0x4c, 0x61, 0x73, 0x74,
  0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x2d,
  0x20, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x78, 0x3b, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x57, 0x6f, 0x72, 0x6b, 0x51, 0x75,
  0x65, 0x75, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x28, 0x57, 0x6f,
  0x72, 0x6b, 0x49, 0x64, 0x78, 0x2a, 0x34, 0x2c, 0x20, 0x57, 0x6f, 0x72,
  0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x29, 0x3b, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x51,
  0x75, 0x65, 0x75, 0x65, 0x5b, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x78,
  0x5d, 0x20, 0x3d, 0x20, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6c,
  0x6f, 0x72, 0x28, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x43, 0x6f, 0x6f, 0x72,
  0x64, 0x20, 0x2b, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x28, 0x32, 0x20,
  0x2a, 0x20, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69,
  0x72, 0x20, 0x2d, 0x20, 0x31, 0x2c, 0x20, 0x30, 0x29, 0x29, 0x3b, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x7d, 0x0a, 0x1b, 0x84, 0x9d, 0xe0,
  0x09, 0x7e, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x46, 0x58,
  0x41, 0x41, 0x52, 0x6f, 0x6f, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
  0x75, 0x72, 0x65, 0x2e, 0x68, 0x6c, 0x73, 0x6c, 0x69, 0x7c, 0xc1, 0xe0,
  0xe5, 0x45, 0xe1, 0xe5, 0x05, 0x64, 0xe8, 0x0d, 0x2e, 0x4f, 0x2e, 0xed,
  0x0c, 0x8d, 0x0e, 0x04, 0x65, 0x2c, 0x05, 0xa4, 0x29, 0x6d, 0x4c, 0xee,
  0x6d, 0xee, 0xcd, 0x8c, 0xce, 0x05, 0x24, 0x88, 0x8d, 0x0d, 0x44, 0x2e,
  0xed, 0x0c, 0x8d, 0x6e, 0x0e, 0x44, 0xae, 0x6c, 0xae, 0x4c, 0xce, 0xae,
  0x8c, 0xcc, 0x45, 0xe1, 0xe5, 0x05, 0x84, 0x0a, 0x2d, 0x6d, 0x0e, 0x64,
  0xec, 0x8d, 0xac, 0x0c, 0x24, 0x6d, 0x0e, 0x84, 0x2d, 0x6d, 0xac, 0xcc,
  0x6d, 0xae, 0x8c, 0x0c, 0xa4, 0xce, 0x8d, 0xac, 0x4c, 0x0e, 0x84, 0x0e,
  0xad, 0x0c, 0xa4, 0x29, 0x89, 0x0a, 0x84, 0x29, 0x6d, 0xac, 0xcc, 0x6d,
  0xae, 0x0c, 0x04, 0xa5, 0x29, 0x89, 0x2a, 0xc5, 0x45, 0xe1, 0xe5, 0x05,
  0x84, 0x0a, 0x29, 0x69, 0x0a, 0x64, 0xe8, 0x89, 0xa8, 0x08, 0x24, 0x69,
  0x0a, 0x04, 0x4a, 0xea, 0xc9, 0x2a, 0x89, 0xa8, 0x88, 0x08, 0x44, 0x25,
  0x68, 0x0a, 0x24, 0x69, 0x4a, 0x05, 0xe4, 0x2a, 0x89, 0x0a, 0xe9, 0xa9,
  0x8a, 0x0a, 0xe4, 0x2a, 0x48, 0x4a, 0x2a, 0xc8, 0x89, 0x2a, 0x0b, 0xe4,
  0xc9, 0x48, 0xe1, 0xe5, 0x05, 0x24, 0xc8, 0x29, 0x0b, 0x64, 0x29, 0xc9,
  0x89, 0x88, 0x05, 0xa4, 0x28, 0x89, 0x0a, 0xa9, 0x48, 0x0a, 0xa4, 0x08,
  0x0b, 0x4a, 0xaa, 0x68, 0x6a, 0x0a, 0xe4, 0x49, 0x0a, 0x24, 0xa9, 0x09,
  0x8a, 0x29, 0xa9, 0x88, 0x88, 0x05, 0x24, 0xc9, 0x69, 0x88, 0xa9, 0x8a,
  0x28, 0xc9, 0xe9, 0x08, 0x24, 0xc8, 0x29, 0x4b, 0xe1, 0xe5, 0x05, 0x24,
  0xa9, 0x09, 0x8a, 0x29, 0xa9, 0x88, 0x08, 0xe4, 0x2a, 0x48, 0x4a, 0x2a,
  0xc8, 0x89, 0x2a, 0xa9, 0x68, 0x0a, 0xe4, 0xc9, 0x08, 0xc4, 0x28, 0x89,
  0xca, 0xa9, 0x68, 0x6a, 0x0a, 0xc4, 0xe8, 0x49, 0x0a, 0x24, 0x08, 0x04,
  0x2a, 0x48, 0x8a, 0x2a, 0x69, 0xa8, 0x8a, 0x29, 0x48, 0x4a, 0xe1, 0xe5,
  0x05, 0x04, 0xaa, 0x4a, 0x0a, 0xea, 0x69, 0xaa, 0x88, 0x05, 0xa4, 0xa9,
  0x48, 0x6a, 0x08, 0x29, 0xc8, 0x89, 0x2a, 0x48, 0x28, 0x89, 0x29, 0x89,
  0x2a, 0x8b, 0x05, 0xe4, 0x49, 0x0a, 0xc4, 0xe9, 0xc9, 0xa9, 0x25, 0xc9,
  0xc9, 0x48, 0x2a, 0xc9, 0xe9, 0xa8, 0xa8, 0xa9, 0xc8, 0x89, 0xca, 0x45,
  0xe1, 0xe5, 0x45, 0xe1, 0xe5, 0x05, 0x84, 0xa8, 0xcc, 0xae, 0x8c, 0xed,
  0x0d, 0xae, 0x8c, 0x0c, 0x44, 0x2c, 0x0f, 0xa4, 0x29, 0xcd, 0x2d, 0xed,
  0x4c, 0x2e, 0x0c, 0x0e, 0x4d, 0xe1, 0xe5, 0x45, 0xe1, 0xe5, 0x05, 0x24,
  0xa8, 0x8e, 0x0e, 0xed, 0x4d, 0x4e, 0x07, 0x04, 0x44, 0x29, 0xac, 0xad,
  0x6c, 0x0e, 0x64, 0x8a, 0x2e, 0xcc, 0x2d, 0x4c, 0x8e, 0x0c, 0x44, 0xe1,
  0xe5, 0x45, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0xc4,
  0x08, 0x2b, 0x28, 0xe8, 0x4b, 0xea, 0xed, 0x8d, 0x6e, 0x2a, 0xed, 0x0c,
  0x84, 0x4b, 0x01, 0x04, 0x04, 0x04, 0x44, 0x44, 0xea, 0xed, 0x8d, 0xce,
  0x88, 0x2d, 0xec, 0x6c, 0x0e, 0x05, 0x26, 0x85, 0x05, 0x44, 0x04, 0x84,
  0x4b, 0x01, 0x04, 0x04, 0x04, 0x44, 0x44, 0xea, 0xed, 0x8d, 0x6e, 0xe8,
  0xcd, 0x6d, 0x8e, 0x2e, 0xcc, 0x8d, 0x6e, 0x0e, 0x45, 0x0c, 0x86, 0x05,
  0xc4, 0xad, 0xae, 0x6d, 0x46, 0x46, 0x28, 0x8d, 0x6e, 0xe8, 0xcd, 0x6d,
  0x8e, 0x2e, 0xcc, 0x8d, 0x6e, 0xae, 0xe7, 0x26, 0x85, 0x05, 0x44, 0x04,
  0x84, 0x4b, 0x01, 0x04, 0x04, 0x04, 0x44, 0x84, 0xa8, 0x6c, 0x6e, 0x4c,
  0x2e, 0x0d, 0x8e, 0xee, 0x4d, 0x8e, 0x2a, 0x4c, 0x8c, 0xad, 0x0c, 0xa5,
  0x2a, 0xc8, 0x0a, 0xa5, 0x0e, 0x86, 0x05, 0xc4, 0xad, 0xae, 0x8d, 0xa8,
  0x6c, 0x6e, 0x4c, 0x2e, 0x0d, 0x8e, 0xee, 0x4d, 0x6e, 0x0e, 0xa4, 0x07,
  0xa4, 0x26, 0x25, 0x85, 0x45, 0x04, 0x84, 0x4b, 0x01, 0x04, 0x04, 0x04,
  0x44, 0x84, 0xa8, 0x6c, 0x6e, 0x4c, 0x2e, 0x0d, 0x8e, 0xee, 0x4d, 0x8e,
  0x2a, 0x4c, 0x8c, 0xad, 0x0c, 0x65, 0x4a, 0xca, 0x0a, 0x85, 0x0e, 0x86,
  0x05, 0xc4, 0xad, 0xae, 0x8d, 0xa8, 0x6c, 0x6e, 0x4c, 0x2e, 0x0d, 0x8e,
  0xee, 0x4d, 0x6e, 0x0e, 0xa4, 0x07, 0xc4, 0x26, 0x25, 0x85, 0x45, 0x04,
  0x84, 0x4b, 0x01, 0x04, 0x04, 0x04, 0x44, 0x64, 0x8a, 0x2e, 0x8c, 0x2e,
  0x6d, 0x6c, 0x2a, 0xac, 0x0d, 0x8e, 0xad, 0x4c, 0x0e, 0x65, 0x0e, 0x86,
  0x45, 0x04, 0x84, 0x4b, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x44, 0x24, 0x8c, 0x8c, 0x4c, 0xae, 0x6c, 0x6e, 0xae, 0x0a, 0xa4, 0x07,
  0x84, 0xaa, 0x08, 0x8b, 0xaa, 0x4a, 0xaa, 0xe8, 0x2b, 0x88, 0x88, 0x48,
  0xaa, 0x68, 0x6a, 0xea, 0x6b, 0x88, 0x29, 0xa8, 0x09, 0x8a, 0x45, 0x04,
  0x84, 0x4b, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x44, 0x24,
  0x8c, 0x8c, 0x4c, 0xae, 0x6c, 0x6e, 0xce, 0x0a, 0xa4, 0x07, 0x84, 0xaa,
  0x08, 0x8b, 0xaa, 0x4a, 0xaa, 0xe8, 0x2b, 0x88, 0x88, 0x48, 0xaa, 0x68,
  0x6a, 0xea, 0x6b, 0x88, 0x29, 0xa8, 0x09, 0x8a, 0x45, 0x04, 0x84, 0x4b,
  0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x44, 0x24, 0x8c, 0x8c,
  0x4c, 0xae, 0x6c, 0x6e, 0xee, 0x0a, 0xa4, 0x07, 0x84, 0xaa, 0x08, 0x8b,
  0xaa, 0x4a, 0xaa, 0xe8, 0x2b, 0x88, 0x88, 0x48, 0xaa, 0x68, 0x6a, 0xea,
  0x6b, 0x88, 0x29, 0xa8, 0x09, 0x8a, 0x45, 0x04, 0x84, 0x4b, 0x01, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x44, 0xc4, 0x2c, 0x8d, 0x8d, 0xae,
  0x4c, 0x0e, 0xa4, 0x07, 0xc4, 0x28, 0x89, 0x89, 0xaa, 0x48, 0xea, 0xab,
  0x29, 0xc9, 0xe9, 0xab, 0x29, 0xe8, 0xe8, 0xab, 0x29, 0x09, 0xea, 0x8b,
  0x29, 0xc9, 0xa9, 0x28, 0x48, 0x2a, 0x45, 0x44, 0x41, 0x61, 0x4c, 0xac,
  0xce, 0xcc, 0xac, 0x4c, 0x0e, 0x64, 0x48, 0x08, 0x06, 0x44, 0x07, 0x44,
  0xae, 0xec, 0x2c, 0x6d, 0x8e, 0xae, 0x4c, 0x0e, 0x45, 0x0c, 0x26, 0x45,
  0x61, 0x4f, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e,
  0x06, 0x44, 0x6a, 0x0c, 0x8e, 0xaa, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x6c,
  0x2a, 0x4d, 0xaf, 0x6c, 0x47, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x0e, 0x64, 0xe8, 0xcd, 0x8d, 0x4e, 0x2e, 0x6c, 0x8e, 0x8e,
  0x0a, 0x4d, 0xae, 0x6c, 0x0e, 0xed, 0x8d, 0x8d, 0x6c, 0x07, 0x04, 0x04,
  0x04, 0xe4, 0xe5, 0x05, 0x84, 0xac, 0xcc, 0x2c, 0xac, 0x8e, 0x8d, 0x0e,
  0xa4, 0x07, 0x04, 0xc6, 0x45, 0x86, 0x05, 0x84, 0xed, 0xed, 0xae, 0x4c,
  0x0e, 0x24, 0x6d, 0x0e, 0xa4, 0xed, 0x4d, 0xae, 0x0c, 0xa4, 0x0c, 0x0f,
  0xae, 0xcc, 0x6d, 0x2e, 0xcd, 0xae, 0x4c, 0x01, 0x04, 0x04, 0x04, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x64, 0xaa, 0x4e, 0x0c, 0x2e, 0x0d, 0xaf,
  0x8c, 0x4d, 0xaa, 0xac, 0xed, 0xcd, 0x2e, 0x8c, 0x6d, 0x07, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x84, 0xac, 0xcc, 0x2c,
  0xac, 0x8e, 0x8d, 0x0e, 0xa4, 0x07, 0x04, 0xc6, 0xe5, 0xa6, 0x86, 0x05,
  0x84, 0xed, 0xed, 0xae, 0x4c, 0x0e, 0x44, 0x8c, 0xad, 0x4e, 0x6e, 0x0e,
  0x84, 0xad, 0x6c, 0x6e, 0x4e, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2e, 0xcd,
  0x8d, 0x0e, 0x84, 0x29, 0x6c, 0x8e, 0x2e, 0xaa, 0xae, 0xac, 0xae, 0x2c,
  0xc9, 0x8d, 0xac, 0x0c, 0x6f, 0x47, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2e,
  0xcd, 0x8d, 0x4e, 0x06, 0x64, 0x8a, 0x2e, 0x4c, 0x8e, 0x0e, 0x2a, 0x0d,
  0xaf, 0x8c, 0x6d, 0x47, 0xa1, 0x4f, 0x61, 0x83, 0xe0, 0x13, 0x3f, 0xc1,
  0xe8, 0xeb, 0x28, 0xa8, 0x29, 0xc9, 0xe9, 0xe8, 0x8b, 0xa8, 0x68, 0x6a,
  0x89, 0xea, 0x09, 0xaa, 0x27, 0x66, 0x83, 0x10, 0x16, 0x61, 0xb1, 0x21,
  0x08, 0x28, 0xb4, 0x14, 0x51, 0x68, 0xa1, 0xa2, 0x31, 0x36, 0xf7, 0x65,
  0xf3, 0x25, 0x43, 0xe1, 0x85, 0x88, 0xc3, 0xcb, 0x13, 0x19, 0x87, 0x17,
  0xad, 0x34, 0x0a, 0x2d, 0x44, 0x6c, 0x5a, 0xa2, 0xca, 0xda, 0xc4, 0xca,
  0xc8, 0xbe, 0xc8, 0xca, 0xc4, 0xea, 0xce, 0x36, 0x2c, 0x64, 0x51, 0x07,
  0x65, 0x61, 0x16, 0x67, 0x11, 0x16, 0x68, 0x91, 0x16, 0x6a, 0x11, 0x16,
  0x6b, 0x31, 0x41, 0x18, 0xb2, 0x0d, 0x42, 0x5b, 0x4c, 0x13, 0x84, 0x41,
  0xdb, 0x20, 0xb4, 0xc5, 0x5b, 0x50, 0x18, 0x9b, 0xdb, 0x30, 0xc4, 0xc5,
  0x5b, 0x4c, 0x13, 0x84, 0x61, 0x9b, 0x20, 0xd4, 0x01, 0x37, 0x41, 0x18,
  0xba, 0x0d, 0xc2, 0x5c, 0xd4, 0xc5, 0x86, 0x64, 0x2e, 0xe8, 0x22, 0x24,
  0xe6, 0x62, 0x2e, 0xda, 0x62, 0x9a, 0x0b, 0xbb, 0xd8, 0x10, 0xdc, 0xc5,
  0x04, 0xe1, 0x0e, 0xbc, 0x09, 0xc2, 0xf0, 0x4d, 0x10, 0xde, 0x00, 0x0c,
  0x36, 0x2c, 0x73, 0x91, 0x17, 0xf2, 0x30, 0x17, 0x73, 0xd1, 0x16, 0x7a,
  0xb1, 0x17, 0x7b, 0xb1, 0x17, 0xc0, 0x86, 0xa5, 0x2d, 0xf2, 0xe2, 0x1e,
  0xe6, 0xa2, 0x2d, 0xda, 0x42, 0x2f, 0xf6, 0x62, 0x2f, 0xf6, 0x02, 0x98,
  0x20, 0xe4, 0x41, 0x18, 0x4c, 0x10, 0x06, 0x31, 0xd8, 0xb0, 0x4c, 0x7e,
  0xa1, 0x0f, 0x73, 0x31, 0xb5, 0xc5, 0x5f, 0xec, 0xc5, 0x5e, 0xec, 0x85,
  0x5d, 0x4c, 0x10, 0xf6, 0x60, 0x0c, 0x36, 0x2c, 0x6d, 0x10, 0x1a, 0x2b,
  0x31, 0x17, 0x6d, 0xd0, 0x16, 0xd3, 0x5e, 0xec, 0xc5, 0x5e, 0xd8, 0xc5,
  0x06, 0x82, 0x2f, 0xfa, 0x02, 0x34, 0x44, 0x63, 0x82, 0xf0, 0x07, 0x64,
  0xc0, 0x61, 0x48, 0x08, 0x66, 0x82, 0x30, 0x94, 0xc1, 0x06, 0x64, 0x2e,
  0x48, 0xa3, 0x34, 0xe6, 0x62, 0x2e, 0xda, 0xc2, 0x34, 0x80, 0x0d, 0xc1,
  0x69, 0x6c, 0x20, 0xf0, 0x62, 0x34, 0x50, 0x03, 0x98, 0x20, 0xf8, 0x81,
  0x19, 0x4c, 0x10, 0x86, 0x33, 0xd8, 0x60, 0xbc, 0x85, 0x2b, 0xb4, 0xc1,
  0x5c, 0xac, 0x46, 0x5d, 0x4c, 0x10, 0x06, 0x34, 0xd8, 0x60, 0xbc, 0x05,
  0x2f, 0xb4, 0x41, 0x6b, 0xac, 0x46, 0x5d, 0x4c, 0x10, 0x86, 0x34, 0xd8,
  0x60, 0xbc, 0x05, 0x38, 0xb4, 0xc1, 0x6b, 0xac, 0x46, 0x5d, 0x4c, 0x10,
  0x06, 0x35, 0x98, 0x20, 0x0c, 0x6b, 0xb0, 0xc1, 0x78, 0x8b, 0x71, 0x68,
  0x83, 0xd8, 0x58, 0x0d, 0xd9, 0x98, 0x20, 0x0c, 0x6c, 0xb0, 0xc1, 0x78,
  0x8b, 0x73, 0x68, 0x03, 0xda, 0x58, 0x0d, 0xd9, 0xd8, 0x60, 0x98, 0x06,
  0x6b, 0xb8, 0x06, 0x6c, 0xcc, 0x46, 0x6d, 0x6c, 0x18, 0xe6, 0x42, 0x35,
  0x6c, 0x63, 0xc3, 0x30, 0x17, 0x04, 0xb1, 0x21, 0xc0, 0x8d, 0x0d, 0x43,
  0x5b, 0x84, 0x42, 0x6e, 0x4c, 0x10, 0x98, 0x36, 0xd8, 0x30, 0xb4, 0x46,
  0x6b, 0xb4, 0xc5, 0x06, 0x62, 0x2e, 0x76, 0x83, 0x26, 0x78, 0x63, 0x43,
  0x11, 0x0a, 0x75, 0x00, 0xa4, 0x46, 0x6f, 0xcc, 0x2a, 0x02, 0x51, 0xa0,
  0x03, 0xba, 0x48, 0x66, 0x15, 0xc1, 0x6f, 0xd0, 0x01, 0x5f, 0x14, 0x1d,
  0x1a, 0x1f, 0xbf, 0x01, 0x90, 0x20, 0xa2, 0x4a, 0x23, 0x1b, 0x97, 0x00,
  0x21, 0x22, 0x0a, 0xe2, 0x41, 0x07, 0xe2, 0xe0, 0x07, 0x04, 0xb0, 0x8e,
  0x00, 0x7a, 0x02, 0x00, 0x83, 0x75, 0x04, 0xd0, 0x13, 0x60, 0x00, 0x06,
  0x24, 0x8e, 0xa8, 0xd2, 0xc8, 0xc6, 0x25, 0x40, 0x88, 0x88, 0x82, 0x79,
  0xd0, 0x81, 0x38, 0xf8, 0xc1, 0x00, 0x50, 0x38, 0x4a, 0x1a, 0x97, 0x00,
  0x21, 0x22, 0x0a, 0xe8, 0x41, 0x07, 0xe2, 0x20, 0x06, 0x02, 0xb0, 0x2e,
  0x00, 0x38, 0x1c, 0xa5, 0x91, 0x8d, 0x4b, 0x80, 0x10, 0x11, 0x85, 0xf5,
  0xa0, 0x03, 0x71, 0xf0, 0x83, 0x00, 0xa0, 0x02, 0x95, 0x86, 0x57, 0xc6,
  0x36, 0xf4, 0xf6, 0x26, 0x47, 0x36, 0x2e, 0x01, 0x40, 0x44, 0x14, 0xda,
  0x83, 0x0e, 0xc8, 0xe1, 0x02, 0x80, 0x59, 0x45, 0x20, 0x0a, 0x74, 0x40,
  0x0f, 0xc9, 0xac, 0x22, 0x78, 0x0f, 0x3a, 0xa8, 0x87, 0x82, 0x08, 0x13,
  0xd9, 0xdc, 0xd0, 0xdb, 0x9b, 0x1c, 0xd9, 0xb8, 0x04, 0x00, 0x11, 0xf8,
  0x88, 0x0f, 0x3a, 0xb0, 0x07, 0x31, 0x00, 0x00, 0x22, 0x55, 0x61, 0x76,
  0x43, 0x6f, 0x6f, 0x72, 0x64, 0xe3, 0x12, 0x00, 0x44, 0xe0, 0x63, 0x3e,
  0xe8, 0xe0, 0x1e, 0xc0, 0x00, 0x00, 0x28, 0xcc, 0xd1, 0x8d, 0x4b, 0x80,
  0x10, 0x61, 0x85, 0xfa, 0xa0, 0x03, 0x52, 0x00, 0x83, 0x00, 0x68, 0x7c,
  0x48, 0x79, 0x0f, 0x80, 0x09, 0x53, 0x9a, 0x5b, 0x59, 0x98, 0x9c, 0xd4,
  0x91, 0xd0, 0xb8, 0x04, 0x08, 0x91, 0x53, 0xc0, 0x0f, 0x3a, 0xd0, 0x85,
  0x38, 0x08, 0x80, 0xc6, 0x87, 0x8b, 0xf7, 0x00, 0xc6, 0x25, 0x00, 0x88,
  0x9c, 0xc2, 0x4a, 0xd0, 0x01, 0x2f, 0x98, 0x01, 0x00, 0xb0, 0x60, 0xaa,
  0x6b, 0x0b, 0x8b, 0x19, 0x97, 0x00, 0x20, 0x02, 0x1f, 0xfc, 0x41, 0x07,
  0xf8, 0x60, 0x06, 0x00, 0xd0, 0xfe, 0x90, 0xf2, 0x1e, 0x40, 0xfb, 0xc3,
  0xc5, 0x7b, 0x00, 0x2c, 0x98, 0xea, 0xda, 0xc2, 0x64, 0xc6, 0x25, 0x00,
  0x88, 0xc0, 0x07, 0x88, 0xd0, 0x81, 0x3f, 0x98, 0x01, 0x00, 0x30, 0x19,
  0x2a, 0x73, 0xa3, 0x2b, 0x93, 0x4b, 0x22, 0xc3, 0x1b, 0x97, 0x00, 0x20,
  0x22, 0x0a, 0x22, 0x42, 0x07, 0x26, 0x21, 0x06, 0x00, 0xc0, 0x82, 0xad,
  0xae, 0x2d, 0xcc, 0x69, 0x5c, 0x02, 0x80, 0x88, 0x28, 0x90, 0x08, 0x1d,
  0xa4, 0x84, 0x19, 0x00, 0x00, 0x0b, 0xb6, 0xba, 0xb6, 0xb0, 0xab, 0x71,
  0x09, 0x00, 0x22, 0xa2, 0x60, 0x22, 0x74, 0xa0, 0x12, 0x66, 0x00, 0x00,
  0x2c, 0xd8, 0xea, 0xda, 0xc2, 0x9a, 0xc6, 0x25, 0x00, 0x88, 0x88, 0x02,
  0x8a, 0xd0, 0xc1, 0x4a, 0x98, 0x01, 0x00, 0xb0, 0x60, 0xab, 0x6b, 0x0b,
  0x2b, 0x1a, 0x97, 0x00, 0x20, 0x22, 0x0a, 0x2a, 0x42, 0x07, 0x2c, 0x61,
  0x06, 0x00, 0xc0, 0x82, 0xad, 0xae, 0x2d, 0x6c, 0x6a, 0x5c, 0x02, 0x80,
  0x88, 0x28, 0xb0, 0x08, 0x1d, 0xb4, 0x84, 0x19, 0x00, 0x00, 0x11, 0xb9,
  0x30, 0xb7, 0xb3, 0xb2, 0xa6, 0x30, 0xbc, 0x71, 0x09, 0x00, 0x22, 0xa2,
  0xe0, 0x22, 0x74, 0x00, 0x13, 0x66, 0x00, 0x00, 0x44, 0xe4, 0xc2, 0xdc,
  0xce, 0xca, 0x9a, 0xd2, 0xdc, 0xc6, 0x25, 0x00, 0x88, 0x88, 0x02, 0x8c,
  0xd0, 0x41, 0x4c, 0x98, 0x01, 0x00, 0xb0, 0x90, 0x0b, 0x73, 0x3b, 0x2b,
  0x1b, 0x97, 0x00, 0x20, 0x22, 0x0a, 0x32, 0x42, 0x07, 0x32, 0x61, 0x06,
  0x00, 0x30, 0xab, 0x08, 0x44, 0x81, 0x0e, 0x66, 0x22, 0xa1, 0xc1, 0x56,
  0xd7, 0x16, 0xe6, 0x74, 0x35, 0x2e, 0x01, 0x40, 0x44, 0x14, 0x6a, 0x84,
  0x0e, 0x6e, 0xc2, 0x0c, 0x00, 0x80, 0x06, 0x5b, 0x5d, 0x5b, 0x98, 0x53,
  0xd1, 0xb8, 0x04, 0x00, 0x11, 0x51, 0xb8, 0x11, 0x3a, 0xc0, 0x09, 0x33,
  0x00, 0x00, 0x1a, 0x6c, 0x75, 0x6d, 0x61, 0x53, 0x57, 0xe3, 0x12, 0x00,
  0x44, 0x44, 0x21, 0x47, 0xe8, 0x20, 0x27, 0xcc, 0x00, 0x00, 0x68, 0xb0,
  0xd5, 0xb5, 0x85, 0x4d, 0x15, 0x8d, 0x4b, 0x00, 0x10, 0x11, 0x85, 0x1d,
  0xa1, 0x03, 0x9d, 0x30, 0x03, 0x00, 0xa0, 0xc1, 0x56, 0xd7, 0x16, 0xe6,
  0x34, 0x35, 0x2e, 0x01, 0x40, 0x44, 0x14, 0x7a, 0x84, 0x0e, 0x7a, 0xc2,
  0x0c, 0x00, 0x80, 0x06, 0x5b, 0x5d, 0x5b, 0xd8, 0x55, 0xd1, 0xb8, 0x04,
  0x00, 0x11, 0x51, 0xf8, 0x11, 0x3a, 0xf0, 0x09, 0x33, 0x00, 0x00, 0x22,
  0x6c, 0x75, 0x6d, 0x61, 0x4e, 0x57, 0x53, 0x57, 0xe3, 0x12, 0x00, 0x44,
  0x44, 0x21, 0x4c, 0xe8, 0xe0, 0x27, 0xcc, 0x00, 0x00, 0x88, 0xb0, 0xd5,
  0xb5, 0x85, 0x39, 0x15, 0x4d, 0x15, 0x8d, 0x4b, 0x00, 0x10, 0x11, 0x85,
  0x31, 0xa1, 0x03, 0xb0, 0x30, 0x03, 0x00, 0x20, 0xc2, 0x56, 0xd7, 0x16,
  0x36, 0x75, 0x35, 0x55, 0x34, 0x2e, 0x01, 0x40, 0x44, 0x14, 0xca, 0x84,
  0x0e, 0xc2, 0xc2, 0x0c, 0x00, 0x80, 0x08, 0x5b, 0x5d, 0x5b, 0x98, 0xd3,
  0x95, 0x53, 0xd1, 0xb8, 0x04, 0x00, 0x11, 0x51, 0x38, 0x13, 0x3a, 0x10,
  0x0b, 0x33, 0x00, 0x00, 0x22, 0x65, 0x64, 0x67, 0x65, 0x48, 0x6f, 0x72,
  0x7a, 0xe3, 0x12, 0x00, 0x44, 0x44, 0x21, 0x4d, 0xe8, 0xa0, 0x2c, 0xcc,
  0x00, 0x00, 0x88, 0x94, 0x91, 0x9d, 0x95, 0x59, 0x95, 0xc9, 0xd1, 0x8d,
  0x4b, 0x00, 0x10, 0x11, 0x85, 0x35, 0xa1, 0x03, 0xb3, 0x30, 0x03, 0x00,
  0xe0, 0x13, 0x66, 0x77, 0xe6, 0x54, 0x96, 0x76, 0x86, 0x26, 0xf6, 0x26,
  0xc7, 0x54, 0xd7, 0x16, 0x36, 0x2e, 0x01, 0x40, 0x44, 0x14, 0xda, 0x84,
  0x0e, 0xd2, 0xc2, 0x0c, 0x00, 0x80, 0xcd, 0x5c, 0x9d, 0x18, 0x5c, 0x1a,
  0x5e, 0x19, 0xdb, 0x14, 0x5a, 0x9a, 0x19, 0xdd, 0xb8, 0x04, 0x00, 0x11,
  0x51, 0x78, 0x13, 0x3a, 0x50, 0x0b, 0x33, 0x00, 0x00, 0x1e, 0x4e, 0x65,
  0x67, 0x47, 0x72, 0x61, 0x64, 0xe3, 0x12, 0x00, 0x44, 0x44, 0x21, 0x4e,
  0xe8, 0x80, 0x2d, 0xcc, 0x00, 0x00, 0x78, 0x40, 0xbd, 0xcd, 0x1d, 0xc9,
  0x85, 0x91, 0x8d, 0x4b, 0x00, 0x10, 0x11, 0x85, 0x39, 0xa1, 0x83, 0xb6,
  0x30, 0x03, 0x00, 0xe0, 0x72, 0x24, 0x17, 0x46, 0x96, 0x56, 0xe6, 0x46,
  0x47, 0x94, 0x26, 0x37, 0x2e, 0x01, 0x40, 0x44, 0x14, 0xea, 0x84, 0x0e,
  0xdc, 0x42, 0x0c, 0x00, 0x80, 0xc6, 0x54, 0x9d, 0x18, 0x5c, 0x1a, 0xde,
  0xb8, 0x04, 0x00, 0x11, 0x51, 0xb8, 0x13, 0x3a, 0x78, 0x0b, 0x31, 0x00,
  0x00, 0x2a, 0x57, 0x6f, 0x72, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
  0xe3, 0x12, 0x00, 0x44, 0x44, 0x21, 0x4f, 0xe8, 0x40, 0x2e, 0xc4, 0x00,
  0x00, 0x66, 0x15, 0xc1, 0x6f, 0xd0, 0x41, 0x5d, 0x14, 0x3c, 0xae, 0xde,
  0xe4, 0xd6, 0x92, 0xc8, 0xf0, 0xc6, 0x25, 0x00, 0x88, 0xec, 0x09, 0x9f,
  0xd0, 0x81, 0x5d, 0x88, 0x01, 0x00, 0x74, 0x5e, 0x7c, 0xe8, 0x09, 0x30,
  0x2e, 0x01, 0x40, 0x04, 0x3c, 0xf8, 0x84, 0x0e, 0xfa, 0x42, 0x0c, 0x00,
  0xc0, 0x0b, 0x1b, 0x9b, 0x5d, 0x9b, 0x0b, 0x99, 0xd8, 0x99, 0xcb, 0x58,
  0xdd, 0x94, 0x20, 0x26, 0x1c, 0xb1, 0xb1, 0xd9, 0xb5, 0xb9, 0xb4, 0xbd,
  0x91, 0xd5, 0xb1, 0x95, 0xb9, 0x98, 0xb1, 0x85, 0x9d, 0xcd, 0x4d, 0x11,
  0x68, 0xc2, 0x26, 0xac, 0xb0, 0xb1, 0xd9, 0xb5, 0xb9, 0xa4, 0x91, 0x95,
  0xb9, 0xd1, 0x4d, 0x09, 0x6e, 0xc2, 0x12, 0x19, 0x9e, 0xcb, 0xdc, 0x5b,
  0x9d, 0xdc, 0x58, 0x99, 0xcb, 0xd8, 0x9b, 0x1b, 0x5d, 0x99, 0x1b, 0xdd,
  0xdc, 0x94, 0x21, 0x27, 0x78, 0xe2, 0x27, 0x1c, 0x91, 0xe1, 0xb9, 0xcc,
  0xbd, 0xd5, 0xc9, 0x8d, 0x95, 0xb9, 0x90, 0x95, 0x99, 0xa5, 0xb9, 0x95,
  0xcd, 0x4d, 0x09, 0xc2, 0xc2, 0x16, 0x19, 0x9e, 0xcb, 0xdc, 0x5b, 0x9d,
  0xdc, 0x58, 0x99, 0x4b, 0x5b, 0x58, 0x9a, 0x9b, 0x51, 0x1a, 0x5b, 0x99,
  0x53, 0x58, 0x5b, 0xd9, 0x94, 0x40, 0x2c, 0xec, 0x90, 0xe1, 0xb9, 0xcc,
  0xbd, 0xd5, 0xc9, 0x8d, 0x95, 0xb9, 0x84, 0xc9, 0x9d, 0xcd, 0x4d, 0x09,
  0xd6, 0xc2, 0x0a, 0x19, 0x9e, 0x8b, 0x5d, 0x99, 0xdc, 0x5c, 0xda, 0x9b,
  0xdb, 0x94, 0xa0, 0x2d, 0x9c, 0x90, 0xe1, 0xb9, 0xd8, 0x85, 0xb1, 0xd9,
  0x95, 0xc9, 0x4d, 0x09, 0xde, 0xc2, 0x0e, 0x19, 0x9e, 0xcb, 0x1c, 0x5a,
  0x18, 0x59, 0x99, 0x5c, 0xd3, 0x1b, 0x59, 0x19, 0xdb, 0x94, 0x20, 0x2e,
  0xcc, 0x90, 0xe1, 0xb9, 0xc8, 0x95, 0xcd, 0xbd, 0xd5, 0xc9, 0x8d, 0x95,
  0xcd, 0x4d, 0x09, 0x50, 0xc3, 0x12, 0x19, 0x9e, 0x0b, 0x5d, 0x1e, 0x5c,
  0x59, 0x90, 0x9b, 0xdb, 0x1b, 0x5d, 0x18, 0x5d, 0xda, 0x9b, 0xdb, 0xdc,
  0x14, 0xc1, 0x36, 0x72, 0xc3, 0x0e, 0x19, 0x9e, 0x4b, 0x99, 0x1b, 0x9d,
  0x5c, 0x1e, 0xd4, 0x5b, 0x9a, 0x1b, 0xdd, 0xdc, 0x94, 0xa0, 0x37, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81,
  0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d,
  0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x58, 0x00, 0x00, 0x00, 0x05, 0x50, 0x05, 0x7e, 0xe7, 0xf9, 0x97, 0x59,
  0x6f, 0x87, 0x87, 0xe1, 0x31, 0xba, 0x0c, 0x04, 0xce, 0xa0, 0xc1, 0x66,
  0xd0, 0x02, 0x98, 0xe1, 0xf2, 0x1b, 0x67, 0x3a, 0x90, 0xc6, 0xf0, 0x01,
  0x6b, 0xa8, 0x86, 0xcb, 0x77, 0x1e, 0x1f, 0x98, 0x1c, 0x06, 0x11, 0x36,
  0xa4, 0x41, 0x1f, 0x1f, 0xb9, 0x6d, 0x53, 0x68, 0x86, 0xcb, 0x77, 0x1e,
  0x3f, 0x00, 0xa2, 0x08, 0x21, 0x22, 0x5b, 0x80, 0x86, 0xcb, 0x77, 0x1e,
  0x3f, 0x40, 0x1a, 0x20, 0xc2, 0xfc, 0xe2, 0xb6, 0xed, 0xa1, 0x1a, 0x2e,
  0xdf, 0x79, 0xfc, 0x80, 0x2a, 0x0a, 0x22, 0x62, 0x27, 0x27, 0x22, 0xfc,
  0xe2, 0xb6, 0x6d, 0x62, 0x1b, 0x2e, 0xdf, 0x79, 0x7c, 0x21, 0xa0, 0x8a,
  0x82, 0x88, 0x4a, 0x07, 0x18, 0x4a, 0xc2, 0x00, 0x04, 0xcc, 0x2f, 0x6e,
  0xdb, 0x24, 0xb6, 0xe1, 0xf2, 0x9d, 0xc7, 0x17, 0x02, 0xaa, 0x28, 0x88,
  0xa8, 0x74, 0x80, 0xa1, 0x24, 0x0c, 0x40, 0xc0, 0x7c, 0xe4, 0xb6, 0x8d,
  0x42, 0x1a, 0x2e, 0xdf, 0x79, 0x7c, 0x21, 0x22, 0x80, 0x89, 0x08, 0x81,
  0x66, 0x58, 0x08, 0x83, 0x70, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x70, 0xa6,
  0xdb, 0x2f, 0x6e, 0xdb, 0x0c, 0xc4, 0x60, 0xb8, 0x7c, 0xe7, 0xf1, 0x8b,
  0x05, 0x98, 0x26, 0xa2, 0x21, 0x86, 0xf6, 0x88, 0x08, 0x60, 0x10, 0x07,
  0xb1, 0x01, 0x23, 0x87, 0x7a, 0x7c, 0xe4, 0xb6, 0xad, 0x20, 0x1a, 0x2e,
  0xdf, 0x79, 0x7c, 0x23, 0x72, 0xa8, 0x47, 0x1c, 0x7c, 0xe4, 0xb6, 0xcd,
  0x01, 0x1b, 0x2e, 0xdf, 0x79, 0xfc, 0x08, 0xb0, 0x36, 0xaa, 0x28, 0x88,
  0x88, 0x9d, 0x9c, 0x88, 0xf0, 0x91, 0xdb, 0xb6, 0x88, 0x6a, 0xb8, 0x7c,
  0xe7, 0xf1, 0x27, 0xe2, 0x9a, 0xa8, 0x88, 0x28, 0x1d, 0x60, 0xf0, 0x8b,
  0xdb, 0xb6, 0x04, 0x6b, 0xb8, 0x7c, 0xe7, 0xf1, 0x27, 0xe2, 0x9a, 0xa8,
  0x88, 0x60, 0x27, 0x27, 0x22, 0xfc, 0xe2, 0xb6, 0x0d, 0x41, 0x1a, 0x2e,
  0xdf, 0x79, 0xfc, 0xe9, 0x88, 0x08, 0x60, 0x10, 0x07, 0x1f, 0xb9, 0x6d,
  0x3b, 0xc8, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x3a, 0x22, 0x02, 0x18, 0xc4,
  0x41, 0x6c, 0xc0, 0xc8, 0xa1, 0x1e, 0x1f, 0xb9, 0x6d, 0x63, 0x78, 0x86,
  0xcb, 0x77, 0x1e, 0x9f, 0x6a, 0x80, 0x08, 0xf3, 0x8b, 0xdb, 0xb6, 0x01,
  0x68, 0x59, 0x2a, 0xc6, 0x1f, 0x02, 0xc3, 0x1f, 0x08, 0x61, 0x01, 0x22,
  0xc2, 0x08, 0x9c, 0x65, 0xa9, 0x18, 0x7f, 0x08, 0x0c, 0xbf, 0x02, 0x16,
  0x8a, 0x30, 0x01, 0x82, 0x01, 0x90, 0x06, 0x00, 0x61, 0x20, 0x00, 0x00,
  0xca, 0x06, 0x00, 0x00, 0x13, 0x04, 0x48, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x26, 0x00, 0x00, 0x00, 0x34, 0x28, 0x39, 0x9a, 0x94, 0xc0, 0x08, 0x40,
  0x11, 0xd0, 0xa0, 0x78, 0x03, 0x0a, 0x38, 0xa0, 0x7c, 0x03, 0x4a, 0x37,
  0x80, 0x18, 0x23, 0x00, 0x34, 0x28, 0x3b, 0x02, 0x0e, 0x75, 0x10, 0x45,
  0x30, 0x6c, 0xc3, 0x46, 0x83, 0x22, 0x2b, 0xc2, 0x80, 0x19, 0x80, 0x72,
  0x23, 0xc0, 0x18, 0x41, 0x3b, 0xc7, 0x73, 0xf9, 0x8d, 0x11, 0xe8, 0x65,
  0xe9, 0xce, 0xdf, 0x18, 0xc1, 0xad, 0xce, 0x67, 0xee, 0x8d, 0x11, 0x80,
  0x20, 0x08, 0xde, 0x60, 0x30, 0x46, 0x00, 0x82, 0x20, 0x88, 0x7f, 0x34,
  0x28, 0x17, 0x02, 0x8c, 0x11, 0x80, 0x20, 0x08, 0xa2, 0x60, 0x40, 0x83,
  0x32, 0x0c, 0xa0, 0x49, 0x79, 0xd0, 0xa0, 0x40, 0x03, 0xca, 0xa8, 0x90,
  0x08, 0x30, 0x46, 0x00, 0x82, 0x20, 0x08, 0x82, 0xc1, 0x18, 0x01, 0x08,
  0x82, 0x20, 0x0d, 0x06, 0x23, 0x00, 0x63, 0x04, 0x20, 0x08, 0x82, 0x24,
  0x18, 0x8c, 0x11, 0x80, 0x20, 0xc8, 0xdf, 0x61, 0x40, 0x83, 0xe2, 0x1f,
  0x28, 0xce, 0x80, 0xc2, 0x14, 0x28, 0xc5, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf1, 0x30, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x13, 0x84, 0xa1, 0x17,
  0x26, 0x08, 0x83, 0x2f, 0x4c, 0x10, 0x86, 0x5d, 0x98, 0x20, 0x0c, 0xbc,
  0x30, 0x41, 0x18, 0x74, 0x61, 0x82, 0x30, 0xe0, 0xc2, 0x04, 0x61, 0xc8,
  0x85, 0x09, 0xc2, 0x40, 0x0e, 0x13, 0x84, 0xa1, 0x1c, 0x26, 0x08, 0x83,
  0x3d, 0x4c, 0x10, 0x86, 0x7b, 0x98, 0x20, 0x98, 0x81, 0x3e, 0x4c, 0x10,
  0x00, 0x90, 0x98, 0x20, 0x00, 0x25, 0x31, 0x41, 0x18, 0x52, 0x62, 0x82,
  0x30, 0xac, 0xc4, 0x04, 0x61, 0x60, 0x89, 0x09, 0x82, 0x19, 0xbc, 0xc4,
  0x04, 0x01, 0xa8, 0x89, 0x09, 0x02, 0xa0, 0x13, 0x13, 0x84, 0x21, 0x2c,
  0x26, 0x08, 0x40, 0x59, 0x4c, 0x10, 0x80, 0xb4, 0x98, 0x20, 0x00, 0x6c,
  0x31, 0x41, 0x00, 0xe0, 0x62, 0x82, 0x00, 0xd0, 0xc5, 0x04, 0x01, 0xc8,
  0x8b, 0x09, 0x02, 0xe0, 0x17, 0x13, 0x04, 0x00, 0x34, 0x26, 0x08, 0x80,
  0x6a, 0x4c, 0x10, 0x80, 0xd7, 0x98, 0x20, 0x00, 0xb4, 0x31, 0x41, 0x00,
  0x72, 0x63, 0x82, 0x00, 0xec, 0xc6, 0x04, 0x01, 0xe8, 0x8d, 0x09, 0x02,
  0xf0, 0x1b, 0x13, 0x04, 0x20, 0x3c, 0x26, 0x08, 0xc0, 0x78, 0x4c, 0x10,
  0x80, 0xf2, 0x98, 0x20, 0x00, 0xf2, 0x31, 0x41, 0x00, 0xfe, 0x63, 0x82,
  0x00, 0x94, 0xc8, 0x04, 0x01, 0xb0, 0x91, 0x09, 0x02, 0xb0, 0x23, 0x13,
  0x04, 0x00, 0x4c, 0x26, 0x08, 0x83, 0x99, 0x4c, 0x10, 0x06, 0x35, 0x99,
  0x20, 0x0c, 0x70, 0x32, 0x41, 0x00, 0x85, 0x5f, 0x98, 0x20, 0x0c, 0x7a,
  0x32, 0x41, 0x18, 0xf6, 0x64, 0x82, 0x00, 0x0a, 0xe0, 0x30, 0x41, 0x18,
  0x5a, 0x65, 0x82, 0x30, 0xb8, 0x0a, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x00, 0x07, 0x7e, 0x40, 0x06, 0x63, 0xb0, 0x07, 0x7b, 0x20,
  0x07, 0x33, 0x06, 0x04, 0x29, 0xa4, 0x01, 0x2b, 0x84, 0xc7, 0x88, 0x41,
  0x02, 0x80, 0x20, 0x18, 0xc0, 0xc1, 0x1f, 0x94, 0x01, 0x19, 0xf4, 0x41,
  0x1f, 0xcc, 0xc1, 0x84, 0x01, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06,
  0x70, 0x00, 0x0a, 0x66, 0x50, 0x06, 0x7b, 0xb0, 0x07, 0x74, 0x30, 0x61,
  0x00, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x1c, 0x84, 0xc2, 0x19,
  0x98, 0x81, 0x1e, 0xe8, 0x41, 0x1d, 0x4c, 0x18, 0x00, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0x00, 0x07, 0xa2, 0x80, 0x06, 0x66, 0xb0, 0x07, 0x7b,
  0x60, 0x07, 0x13, 0x06, 0xc0, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0xc0,
  0xc1, 0x28, 0xa4, 0x81, 0x19, 0xf0, 0x01, 0x1f, 0xdc, 0xc1, 0x84, 0x01,
  0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0xcf, 0x2c, 0x98, 0x41, 0x1f,
  0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0x43, 0x0b, 0x67, 0x00, 0x0a,
  0x23, 0x06, 0x05, 0x00, 0x82, 0x60, 0x10, 0xd1, 0xc2, 0x19, 0x8c, 0x18,
  0x18, 0x00, 0x08, 0x82, 0xc1, 0x43, 0x0b, 0x67, 0x00, 0x0a, 0x23, 0x06,
  0x06, 0x00, 0x82, 0x60, 0xf0, 0xd4, 0x02, 0x1a, 0x8c, 0xc2, 0x88, 0x81,
  0x01, 0x80, 0x20, 0x18, 0x3c, 0xb5, 0x80, 0x06, 0xa2, 0x30, 0x62, 0x60,
  0x00, 0x20, 0x08, 0x06, 0x8f, 0x2d, 0xa4, 0x41, 0x29, 0xcc, 0x44, 0x0c,
  0x43, 0x36, 0x0a, 0x33, 0x11, 0xc3, 0x90, 0x8d, 0xc2, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x34, 0xbd, 0x20, 0xe6, 0xff, 0xff, 0xff, 0xc3, 0x1a,
  0xfc, 0xfb, 0xff, 0xff, 0xff, 0xe0, 0xef, 0xff, 0xff, 0xff, 0xc3, 0x8c,
  0x01, 0x21, 0x0e, 0xe2, 0x20, 0x0a, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x34, 0xbd, 0x10, 0xe6, 0xff, 0xff, 0xff, 0xc3, 0x1a, 0xfc, 0xfb,
  0xff, 0xff, 0xff, 0xd0, 0xef, 0xff, 0xff, 0xff, 0xc3, 0x84, 0x01, 0x30,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x4d, 0x2f, 0x80, 0xf9, 0xff, 0xff,
  0xff, 0xb0, 0x06, 0xfb, 0xfe, 0xff, 0xff, 0x3f, 0xf8, 0xfb, 0xff, 0xff,
  0xff, 0x30, 0x63, 0x40, 0x88, 0xc3, 0x28, 0x88, 0x02, 0x30, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0x4d, 0x2f, 0xfc, 0xf8, 0xff, 0xff, 0xff, 0xb0,
  0x06, 0xfb, 0xfe, 0xff, 0xff, 0x3f, 0xf4, 0xfb, 0xff, 0xff, 0xff, 0x30,
  0x61, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0xd3, 0x0b, 0x3e,
  0xfe, 0xff, 0xff, 0x3f, 0xac, 0x41, 0xbe, 0xff, 0xff, 0xff, 0x0f, 0xf8,
  0xfe, 0xff, 0xff, 0x3f, 0xcc, 0x18, 0x10, 0xe2, 0x90, 0x06, 0xa2, 0x00,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0xd3, 0x0b, 0x3d, 0xfe, 0xff,
  0xff, 0x3f, 0xac, 0x81, 0xbd, 0xff, 0xff, 0xff, 0x0f, 0xfe, 0xfe, 0xff,
  0xff, 0x3f, 0xcc, 0x18, 0x10, 0xe2, 0x20, 0x89, 0x02, 0x30, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0x4d, 0x2f, 0xf0, 0xf8, 0xff, 0xff, 0xff, 0xb0,
  0x06, 0xf6, 0xfe, 0xff, 0xff, 0x3f, 0xf4, 0xfb, 0xff, 0xff, 0xff, 0x30,
  0x61, 0x00, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x81, 0x1a, 0xbc, 0x82,
  0x1a, 0x28, 0xa8, 0x30, 0x63, 0x40, 0x90, 0x83, 0x18, 0x88, 0x02, 0x30,
  0x9a, 0x10, 0x04, 0x13, 0x06, 0xc0, 0x68, 0x82, 0x20, 0x4c, 0x18, 0x00,
  0x75, 0x08, 0x30, 0x63, 0x40, 0x90, 0x03, 0x18, 0x88, 0x02, 0x50, 0x87,
  0x00, 0x13, 0x06, 0x00, 0xb9, 0xc1, 0x00, 0xcc, 0x18, 0x10, 0xe4, 0xb0,
  0x88, 0x02, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xcd, 0x38, 0x84,
  0xf9, 0xff, 0xff, 0xff, 0x10, 0x07, 0xfa, 0xfe, 0xff, 0xff, 0x3f, 0x90,
  0xfc, 0xff, 0xff, 0xff, 0x30, 0x61, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x41, 0x33, 0x0e, 0x60, 0xfe, 0xff, 0xff, 0x3f, 0xc4, 0x81, 0xbe,
  0xff, 0xff, 0xff, 0x0f, 0x23, 0xff, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00,
  0xc3, 0x0d, 0x8d, 0x1b, 0x90, 0xc1, 0x8c, 0x01, 0x41, 0x0f, 0xcc, 0x7b,
  0x00, 0xc3, 0x0d, 0x01, 0x2a, 0x84, 0xc1, 0x84, 0x01, 0x30, 0xdc, 0x10,
  0xa4, 0x42, 0x18, 0x4c, 0x18, 0x00, 0xb3, 0x0c, 0x81, 0x10, 0xcc, 0x18,
  0x10, 0xf4, 0x90, 0x88, 0x02, 0x40, 0x72, 0x30, 0x00, 0x33, 0x06, 0x84,
  0x3d, 0x38, 0xf0, 0x01, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0x73,
  0x0e, 0x68, 0xfe, 0xff, 0xff, 0x3f, 0xd4, 0x81, 0xbe, 0xff, 0xff, 0xff,
  0x0f, 0x22, 0xff, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0xa0, 0x06, 0xb9, 0x40, 0x07, 0x94, 0x2c, 0xcc, 0x18,
  0x10, 0xf7, 0x90, 0xc1, 0x07, 0x30, 0x9a, 0x10, 0x04, 0x13, 0x06, 0xc0,
  0x68, 0x82, 0x20, 0x4c, 0x18, 0x00, 0x45, 0xb1, 0x42, 0xcd, 0x18, 0x10,
  0xf7, 0xf0, 0x06, 0xf0, 0x01, 0x54, 0xd5, 0x0a, 0x33, 0x63, 0x40, 0xdc,
  0xc3, 0x1f, 0xc0, 0x07, 0x50, 0x84, 0x00, 0x33, 0x06, 0xc4, 0x3d, 0x90,
  0x01, 0x7c, 0x00, 0x45, 0x08, 0x30, 0x61, 0x00, 0x94, 0xa6, 0x0a, 0x32,
  0x63, 0x40, 0xdc, 0x43, 0x2d, 0xc0, 0x07, 0x50, 0xda, 0x2a, 0xc8, 0x84,
  0x01, 0x50, 0x84, 0x00, 0x33, 0x06, 0xc4, 0x3d, 0xb0, 0x02, 0x7c, 0x00,
  0x45, 0x08, 0x30, 0x61, 0x00, 0x94, 0xd0, 0x0b, 0x31, 0x63, 0x40, 0xdc,
  0x43, 0x2e, 0xc0, 0x07, 0x50, 0x82, 0x2f, 0xc4, 0x84, 0x01, 0x40, 0xa0,
  0x30, 0x00, 0x33, 0x06, 0xc4, 0x3d, 0x38, 0xf0, 0x01, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0x41, 0x53, 0x0f, 0x71, 0xfe, 0xff, 0xff, 0x3f, 0x8c,
  0x82, 0xc9, 0xff, 0xff, 0xff, 0x0f, 0x36, 0xff, 0xff, 0xff, 0x3f, 0x4c,
  0x18, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xd0, 0xd4, 0x03, 0x9c,
  0xff, 0xff, 0xff, 0x0f, 0xa3, 0x60, 0xf2, 0xff, 0xff, 0xff, 0x43, 0xcd,
  0xff, 0xff, 0xff, 0x0f, 0x13, 0x06, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x34, 0xf5, 0x10, 0xe7, 0xff, 0xff, 0xff, 0xc3, 0x28, 0x98, 0xfc,
  0xff, 0xff, 0xff, 0x60, 0xf3, 0xff, 0xff, 0xff, 0xc3, 0x84, 0x01, 0x30,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x4d, 0x3d, 0xc0, 0xf9, 0xff, 0xff,
  0xff, 0x30, 0x0a, 0x26, 0xff, 0xff, 0xff, 0x3f, 0xd4, 0xfc, 0xff, 0xff,
  0xff, 0x30, 0x61, 0x00, 0x50, 0x28, 0x0c, 0xc0, 0x8c, 0x01, 0x81, 0x0f,
  0x69, 0x00, 0x1f, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x34, 0xf6,
  0x20, 0xe7, 0xff, 0xff, 0xff, 0x03, 0x29, 0x94, 0xfc, 0xff, 0xff, 0xff,
  0x70, 0xf3, 0xff, 0xff, 0xff, 0xc3, 0x8c, 0x01, 0x41, 0x0a, 0x1b, 0x2b,
  0xdc, 0xc7, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x34, 0xf6, 0x10, 0xe7,
  0xff, 0xff, 0xff, 0x03, 0x29, 0x94, 0xfc, 0xff, 0xff, 0xff, 0x60, 0xf3,
  0xff, 0xff, 0xff, 0xc3, 0x84, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0x8d, 0x3d, 0xc8, 0xf9, 0xff, 0xff, 0xff, 0x40, 0x0a, 0x25, 0xff,
  0xff, 0xff, 0x3f, 0xdc, 0xfc, 0xff, 0xff, 0xff, 0x30, 0x61, 0x00, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0x63, 0x0f, 0x71, 0xfe, 0xff, 0xff,
  0x3f, 0x90, 0x42, 0xc9, 0xff, 0xff, 0xff, 0x0f, 0x36, 0xff, 0xff, 0xff,
  0x3f, 0x4c, 0x18, 0x00, 0x23, 0x06, 0x0d, 0x00, 0x82, 0x60, 0x70, 0x06,
  0xe9, 0x00, 0x0a, 0x64, 0xf0, 0x0b, 0xc4, 0xf0, 0x07, 0x7f, 0xf0, 0x07,
  0x7f, 0x30, 0x63, 0x40, 0x90, 0x42, 0x1a, 0xb0, 0xc2, 0x7d, 0x8c, 0x18,
  0x20, 0x00, 0x08, 0x82, 0x41, 0x73, 0x0f, 0x71, 0xfe, 0xff, 0xff, 0x3f,
  0x94, 0xc2, 0xc8, 0xff, 0xff, 0xff, 0x0f, 0x32, 0xff, 0xff, 0xff, 0x3f,
  0xcc, 0x18, 0x10, 0xba, 0x10, 0x06, 0xa7, 0xa0, 0x1f, 0xa3, 0x09, 0x01,
  0x30, 0x63, 0x40, 0x90, 0x42, 0x1a, 0xb0, 0xc2, 0x7d, 0x8c, 0x26, 0x08,
  0xc1, 0x84, 0x01, 0x30, 0x9a, 0x30, 0x08, 0x13, 0x06, 0x00, 0x99, 0xc2,
  0x00, 0xcc, 0x18, 0x10, 0xa4, 0x20, 0x06, 0xac, 0x70, 0x1f, 0x74, 0x0a,
  0x03, 0x30, 0x63, 0x40, 0xe0, 0xc3, 0x05, 0x1f, 0xc0, 0x88, 0xc1, 0x02,
  0x80, 0x20, 0x18, 0x90, 0x01, 0x3c, 0x90, 0x42, 0x41, 0x0c, 0xa3, 0x20,
  0x0a, 0xa1, 0x30, 0x63, 0x40, 0xf0, 0x82, 0x74, 0x0a, 0xfa, 0x41, 0xa9,
  0x30, 0x00, 0x33, 0x06, 0x04, 0x2f, 0x2c, 0xa7, 0xa0, 0x1f, 0x23, 0x06,
  0x08, 0x00, 0x82, 0x60, 0xd0, 0xf8, 0xc3, 0x9d, 0xff, 0xff, 0xff, 0x0f,
  0xac, 0x80, 0xf2, 0xff, 0xff, 0xff, 0x43, 0xce, 0xff, 0xff, 0xff, 0x0f,
  0x13, 0x06, 0x80, 0x09, 0xa2, 0x20, 0x9f, 0x19, 0x03, 0xa2, 0x17, 0xb4,
  0x53, 0xd0, 0x0f, 0x13, 0x85, 0x00, 0x3e, 0x33, 0x06, 0x44, 0x2f, 0x4c,
  0xa7, 0xa0, 0x1f, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xc0, 0xe1, 0x83,
  0x28, 0x04, 0x33, 0x06, 0x44, 0x2f, 0x30, 0xa7, 0xa0, 0x1f, 0x16, 0x88,
  0x02, 0x7d, 0x66, 0x0c, 0x88, 0x5e, 0x00, 0x83, 0x53, 0xd0, 0x0f, 0x72,
  0x85, 0x01, 0x98, 0x31, 0x20, 0x7a, 0xa1, 0x38, 0x05, 0xfd, 0xa0, 0x57,
  0x18, 0x80, 0x19, 0x03, 0x02, 0x1f, 0x1e, 0xf8, 0x00, 0x46, 0x0c, 0x10,
  0x00, 0x04, 0xc1, 0xa0, 0x21, 0x09, 0x3e, 0xff, 0xff, 0xff, 0x1f, 0x64,
  0x81, 0xe5, 0xff, 0xff, 0xff, 0x87, 0x9f, 0xff, 0xff, 0xff, 0x1f, 0x26,
  0x0c, 0x80, 0x11, 0x03, 0x07, 0x00, 0x41, 0x30, 0xb0, 0xfe, 0x81, 0x14,
  0xec, 0x40, 0x8a, 0x5a, 0x61, 0x18, 0x86, 0x61, 0x14, 0x66, 0x0c, 0x88,
  0x7c, 0xc0, 0xe0, 0x03, 0x58, 0x81, 0x01, 0x25, 0xda, 0xc1, 0x0d, 0x66,
  0x0c, 0x08, 0x7d, 0x48, 0xe0, 0x03, 0x18, 0x36, 0x20, 0x02, 0x62, 0x00,
  0x66, 0x0c, 0x08, 0x7d, 0x00, 0x03, 0xf8, 0x00, 0xea, 0x0d, 0x60, 0x01,
  0x66, 0x0c, 0x08, 0x7e, 0x90, 0xe0, 0x03, 0x20, 0x59, 0x18, 0x80, 0x09,
  0x03, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x9a, 0x93, 0xf0, 0xf3,
  0xff, 0xff, 0xff, 0xa1, 0x16, 0x74, 0xfe, 0xff, 0xff, 0x7f, 0x10, 0xfb,
  0xff, 0xff, 0xff, 0x61, 0xc6, 0x80, 0xb0, 0x07, 0x07, 0x3e, 0x80, 0xaa,
  0xe0, 0x01, 0x66, 0x0c, 0x88, 0x7e, 0x90, 0xe0, 0x03, 0xa8, 0x2a, 0x1c,
  0x60, 0xc2, 0x00, 0xa0, 0x5a, 0x18, 0x80, 0x09, 0x03, 0x60, 0xc4, 0x00,
  0x01, 0x40, 0x10, 0x0c, 0x1a, 0x95, 0x00, 0xf5, 0xff, 0xff, 0xff, 0x01,
  0x17, 0x76, 0xfe, 0xff, 0xff, 0x7f, 0x58, 0xfb, 0xff, 0xff, 0xff, 0x61,
  0xc6, 0x80, 0xb8, 0x07, 0x07, 0x3e, 0x80, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0x68, 0x54, 0xe2, 0xcf, 0xff, 0xff, 0xff, 0x07, 0x5c, 0xd8, 0xf9,
  0xff, 0xff, 0xff, 0x41, 0xed, 0xff, 0xff, 0xff, 0x87, 0x09, 0x03, 0x60,
  0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x1a, 0x95, 0x00, 0xf5, 0xff, 0xff,
  0xff, 0x01, 0x17, 0x76, 0xfe, 0xff, 0xff, 0x7f, 0x58, 0xfb, 0xff, 0xff,
  0xff, 0x61, 0xc2, 0x00, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x46,
  0x25, 0xfe, 0xfc, 0xff, 0xff, 0x7f, 0xc0, 0x85, 0x9d, 0xff, 0xff, 0xff,
  0x1f, 0xd4, 0xfe, 0xff, 0xff, 0x7f, 0x98, 0x30, 0x00, 0xc8, 0x16, 0x06,
  0x60, 0xc6, 0x80, 0xf0, 0x87, 0x34, 0x80, 0x0f, 0x60, 0xc4, 0x00, 0x01,
  0x40, 0x10, 0x0c, 0x9a, 0x95, 0x08, 0xf5, 0xff, 0xff, 0xff, 0x21, 0x17,
  0x74, 0xfe, 0xff, 0xff, 0x7f, 0x60, 0xfb, 0xff, 0xff, 0xff, 0x61, 0xc6,
  0x80, 0x20, 0x85, 0x8d, 0x15, 0xfc, 0x63, 0xc4, 0x00, 0x01, 0x40, 0x10,
  0x0c, 0x9a, 0x95, 0x00, 0xf5, 0xff, 0xff, 0xff, 0x21, 0x17, 0x74, 0xfe,
  0xff, 0xff, 0x7f, 0x58, 0xfb, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00, 0x18,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x66, 0x25, 0x42, 0xfd, 0xff, 0xff,
  0x7f, 0xc8, 0x05, 0x9d, 0xff, 0xff, 0xff, 0x1f, 0xd8, 0xfe, 0xff, 0xff,
  0x7f, 0x98, 0x30, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0x59,
  0x09, 0x50, 0xff, 0xff, 0xff, 0x1f, 0x72, 0x41, 0xe7, 0xff, 0xff, 0xff,
  0x87, 0xb5, 0xff, 0xff, 0xff, 0x1f, 0x26, 0x0c, 0x80, 0x11, 0x83, 0x06,
  0x00, 0x41, 0x30, 0x38, 0x03, 0x7f, 0xa8, 0x85, 0x3c, 0xa0, 0x07, 0x62,
  0xa0, 0x05, 0x5a, 0xa0, 0x05, 0x5a, 0x98, 0x31, 0x20, 0x48, 0x21, 0x0d,
  0x58, 0xc1, 0x3f, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0x61, 0x09,
  0x50, 0xff, 0xff, 0xff, 0x1f, 0x74, 0x01, 0xe7, 0xff, 0xff, 0xff, 0x87,
  0xb3, 0xff, 0xff, 0xff, 0x1f, 0x66, 0x0c, 0x08, 0x5d, 0x08, 0x83, 0x53,
  0xf8, 0x8f, 0xd1, 0x84, 0x00, 0x98, 0x31, 0x20, 0x48, 0x21, 0x0d, 0x58,
  0xc1, 0x3f, 0x46, 0x13, 0x84, 0x60, 0xc2, 0x00, 0x18, 0x4d, 0x18, 0x84,
  0x09, 0x03, 0x80, 0x76, 0x61, 0x00, 0x66, 0x0c, 0x08, 0x52, 0x10, 0x03,
  0x56, 0xf0, 0x0f, 0xe2, 0x85, 0x01, 0x98, 0x31, 0x20, 0xfc, 0xe1, 0x82,
  0x0f, 0x60, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0xc8, 0xa0, 0x24, 0x72,
  0xa1, 0x20, 0x06, 0x5c, 0xb8, 0x05, 0x5b, 0x98, 0x31, 0x20, 0x78, 0x41,
  0x3a, 0x85, 0xff, 0x20, 0x5f, 0x18, 0x80, 0x19, 0x03, 0x82, 0x17, 0x96,
  0x53, 0xf8, 0x8f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x68, 0x66, 0xc2,
  0xd4, 0xff, 0xff, 0xff, 0x87, 0x70, 0xe8, 0xf9, 0xff, 0xff, 0xff, 0xc1,
  0xed, 0xff, 0xff, 0xff, 0x87, 0x09, 0x03, 0xc0, 0x84, 0x5b, 0x90, 0xcf,
  0x8c, 0x01, 0xd1, 0x0b, 0xda, 0x29, 0xfc, 0x87, 0xdd, 0x42, 0x00, 0x9f,
  0x19, 0x03, 0xa2, 0x17, 0xa6, 0x53, 0xf8, 0x8f, 0x11, 0x03, 0x03, 0x00,
  0x41, 0x30, 0xe0, 0x5a, 0xe2, 0x16, 0x82, 0x19, 0x03, 0xa2, 0x17, 0x98,
  0x53, 0xf8, 0x0f, 0x0b, 0x6e, 0x81, 0x3e, 0x33, 0x06, 0x44, 0x2f, 0x80,
  0xc1, 0x29, 0xfc, 0x07, 0x8d, 0xc3, 0x00, 0xcc, 0x18, 0x10, 0xbd, 0x50,
  0x9c, 0xc2, 0x7f, 0x10, 0x39, 0x0c, 0xc0, 0x8c, 0x01, 0xe1, 0x0f, 0x0f,
  0x7c, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xd0, 0xe4, 0xc4, 0xaa,
  0xff, 0xff, 0xff, 0x0f, 0xe7, 0xd0, 0xf3, 0xff, 0xff, 0xff, 0x03, 0xdd,
  0xff, 0xff, 0xff, 0x0f, 0x13, 0x06, 0xc0, 0x88, 0x81, 0x03, 0x80, 0x20,
  0x18, 0x58, 0x34, 0x91, 0x0b, 0xab, 0x20, 0x45, 0xe2, 0x30, 0x0c, 0xc3,
  0x80, 0x0b, 0x33, 0x06, 0xc4, 0x3f, 0x60, 0xf0, 0x01, 0xac, 0xc0, 0xd0,
  0x13, 0x22, 0x41, 0xcd, 0x18, 0x10, 0x20, 0x91, 0xc0, 0x07, 0x30, 0x6c,
  0x40, 0x04, 0xc4, 0x00, 0xcc, 0x18, 0x10, 0x20, 0x01, 0x06, 0xf0, 0x01,
  0xcc, 0x12, 0x08, 0x33, 0x06, 0x44, 0x48, 0x14, 0xf0, 0x01, 0x8c, 0x18,
  0x18, 0x00, 0x08, 0x82, 0x01, 0x46, 0x13, 0xb8, 0x10, 0x12, 0x33, 0x06,
  0x04, 0x49, 0x14, 0xa2, 0x00, 0xd4, 0x28, 0x94, 0x04, 0xcc, 0x18, 0x10,
  0x26, 0xe1, 0x89, 0x02, 0x50, 0xa3, 0x60, 0x12, 0x30, 0x63, 0x40, 0x98,
  0x44, 0x1e, 0x88, 0x02, 0x50, 0x81, 0x3f, 0xc8, 0x8c, 0x01, 0x61, 0x12,
  0xaa, 0x20, 0x0a, 0x40, 0x0d, 0x01, 0xcc, 0x18, 0x10, 0x26, 0xf1, 0x06,
  0xa2, 0x00, 0x90, 0x3a, 0x0c, 0xc0, 0x8c, 0x01, 0x61, 0x12, 0x8a, 0x28,
  0x00, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xd0, 0xfc, 0x04, 0xac, 0xff,
  0xff, 0xff, 0x0f, 0xed, 0x10, 0xf6, 0xff, 0xff, 0xff, 0x83, 0xde, 0xff,
  0xff, 0xff, 0x0f, 0x13, 0x06, 0x40, 0x09, 0x21, 0x11, 0x33, 0x06, 0x44,
  0x4a, 0xac, 0x81, 0x28, 0x00, 0x2b, 0x30, 0x90, 0x45, 0x4a, 0x04, 0x33,
  0x06, 0x44, 0x4a, 0x50, 0xa2, 0x00, 0x50, 0x00, 0x18, 0x13, 0x06, 0x00,
  0xb9, 0xc3, 0x00, 0xcc, 0x18, 0x10, 0x29, 0xb1, 0x88, 0x02, 0x30, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0xcd, 0x58, 0xcc, 0xfa, 0xff, 0xff, 0xff,
  0x10, 0x0f, 0x63, 0xff, 0xff, 0xff, 0x3f, 0xf8, 0xfd, 0xff, 0xff, 0xff,
  0x30, 0x61, 0x00, 0x94, 0xe1, 0x12, 0x31, 0x63, 0x40, 0xa8, 0xc4, 0x1a,
  0x88, 0x02, 0xb0, 0x02, 0x03, 0x5a, 0xb4, 0x44, 0x30, 0x63, 0x40, 0xa8,
  0x04, 0x25, 0x0a, 0x00, 0x05, 0x80, 0x31, 0x61, 0x00, 0x90, 0x3c, 0x0c,
  0xc0, 0x8c, 0x01, 0xa1, 0x12, 0x8b, 0x28, 0x00, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0xd0, 0x9c, 0x85, 0xad, 0xff, 0xff, 0xff, 0x0f, 0xf5, 0x50,
  0xf6, 0xff, 0xff, 0xff, 0x83, 0xe8, 0xff, 0xff, 0xff, 0x0f, 0x13, 0x06,
  0xc0, 0x0a, 0x0c, 0x6b, 0x01, 0x13, 0xca, 0x8c, 0x01, 0xb1, 0x12, 0x94,
  0x28, 0x00, 0x14, 0x00, 0xc6, 0x84, 0x01, 0x40, 0xf5, 0x30, 0x00, 0x33,
  0x06, 0xc4, 0x4a, 0x2c, 0xa2, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82,
  0x41, 0xa3, 0x16, 0xb8, 0xfe, 0xff, 0xff, 0x3f, 0xe0, 0x83, 0xd9, 0xff,
  0xff, 0xff, 0x0f, 0xa5, 0xff, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00, 0xd5,
  0xd4, 0x04, 0xcc, 0x18, 0x10, 0x2c, 0xb1, 0x06, 0xa2, 0x00, 0xac, 0xc0,
  0xf0, 0x16, 0x34, 0x11, 0xcc, 0x18, 0x10, 0x2c, 0x41, 0x89, 0x02, 0x40,
  0x01, 0x60, 0x4c, 0x18, 0x00, 0x94, 0x0f, 0x03, 0x30, 0x63, 0x40, 0xb0,
  0xc4, 0x22, 0x0a, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x34, 0x6e,
  0xb1, 0xeb, 0xff, 0xff, 0xff, 0x03, 0x3f, 0xa0, 0xfd, 0xff, 0xff, 0xff,
  0x90, 0xfa, 0xff, 0xff, 0xff, 0xc3, 0x84, 0x01, 0x50, 0x11, 0x4c, 0xc0,
  0x8c, 0x01, 0xd1, 0x12, 0x6b, 0x20, 0x0a, 0xc0, 0x0a, 0x0c, 0x73, 0x81,
  0x13, 0xc1, 0x8c, 0x01, 0xd1, 0x12, 0x94, 0x28, 0x00, 0x14, 0x00, 0xc6,
  0x84, 0x01, 0x40, 0xfd, 0x30, 0x00, 0x33, 0x06, 0x44, 0x4b, 0x2c, 0xa2,
  0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0x23, 0x17, 0xbe, 0xfe,
  0xff, 0xff, 0x3f, 0x80, 0x84, 0xda, 0xff, 0xff, 0xff, 0x0f, 0xad, 0xff,
  0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60,
  0xa0, 0xad, 0xc5, 0x3b, 0x08, 0xca, 0x8c, 0x01, 0x01, 0x13, 0x78, 0x20,
  0x0a, 0xc0, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x68, 0x6c, 0x01, 0x0f,
  0x47, 0x30, 0x63, 0x40, 0xc0, 0x44, 0x1b, 0x88, 0x02, 0x30, 0x62, 0x70,
  0x00, 0x20, 0x08, 0x06, 0x5a, 0x5b, 0xc4, 0xc3, 0xf4, 0xcc, 0x18, 0x10,
  0x30, 0xa1, 0x89, 0x02, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x9a,
  0x5b, 0xc8, 0x43, 0x20, 0xcc, 0x18, 0x10, 0x30, 0x61, 0x89, 0x02, 0x40,
  0x22, 0x31, 0x00, 0x33, 0x06, 0x04, 0x4c, 0x2c, 0xa2, 0x00, 0x8c, 0x18,
  0x20, 0x00, 0x08, 0x82, 0x41, 0x73, 0x17, 0xe2, 0xfe, 0xff, 0xff, 0x3f,
  0x94, 0x44, 0xdb, 0xff, 0xff, 0xff, 0x0f, 0xb2, 0xff, 0xff, 0xff, 0x3f,
  0x4c, 0x18, 0x00, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0xa0, 0xc1, 0xc5,
  0x3c, 0x1c, 0xcf, 0x8c, 0x01, 0x11, 0x13, 0x78, 0x20, 0x0a, 0xc0, 0x88,
  0xc1, 0x01, 0x80, 0x20, 0x18, 0x68, 0x71, 0x41, 0x0f, 0x4c, 0x30, 0x63,
  0x40, 0xc4, 0x44, 0x1b, 0x88, 0x02, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08,
  0x06, 0x9a, 0x5c, 0xd4, 0x03, 0x46, 0xcd, 0x18, 0x10, 0x31, 0xa1, 0x89,
  0x02, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0xda, 0x5c, 0xd8, 0x43,
  0x20, 0xcc, 0x18, 0x10, 0x31, 0x61, 0x89, 0x02, 0x40, 0x27, 0x31, 0x00,
  0x33, 0x06, 0x44, 0x4c, 0x2c, 0xa2, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x41, 0xc3, 0x17, 0xe6, 0xfe, 0xff, 0xff, 0x3f, 0xa8, 0x04, 0xdc,
  0xff, 0xff, 0xff, 0x0f, 0xb7, 0xff, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00,
  0x76, 0x08, 0xf1, 0x99, 0x31, 0x20, 0x64, 0x82, 0x13, 0x05, 0x80, 0x52,
  0x62, 0x00, 0x66, 0x0c, 0x08, 0x99, 0x58, 0x44, 0x01, 0x18, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x83, 0xc6, 0x2f, 0xce, 0xfd, 0xff, 0xff, 0x7f, 0x60,
  0x09, 0xb8, 0xff, 0xff, 0xff, 0x1f, 0x72, 0xff, 0xff, 0xff, 0x7f, 0x98,
  0x30, 0x00, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0x0d, 0xde, 0x62,
  0x25, 0xd6, 0xe1, 0x2c, 0x66, 0x0c, 0x88, 0x99, 0x88, 0x68, 0x04, 0x18,
  0x4d, 0x08, 0x84, 0x09, 0x03, 0x60, 0x38, 0x82, 0x08, 0x88, 0x6f, 0xc6,
  0x80, 0x98, 0x89, 0x87, 0x46, 0x80, 0xe1, 0x86, 0xa0, 0x2c, 0xc2, 0x60,
  0xc2, 0x00, 0x18, 0x6e, 0x08, 0xcc, 0x22, 0x0c, 0x26, 0x0c, 0x80, 0x59,
  0x86, 0x81, 0x08, 0x66, 0x0c, 0x88, 0x99, 0x48, 0x44, 0x01, 0x98, 0x25,
  0x38, 0x66, 0x0c, 0x08, 0x9a, 0x48, 0x68, 0x04, 0x28, 0x33, 0x28, 0x8b,
  0x98, 0x31, 0x20, 0x6e, 0x62, 0x0d, 0x44, 0x01, 0xa8, 0xe0, 0x2d, 0x62,
  0xc6, 0x80, 0xb8, 0x89, 0x3b, 0x10, 0x05, 0x60, 0x05, 0x86, 0xd4, 0x70,
  0x8b, 0x60, 0xc6, 0x80, 0xb8, 0x09, 0x4a, 0x14, 0x00, 0x0a, 0x00, 0x63,
  0xc2, 0x00, 0xa0, 0x99, 0x18, 0x80, 0x19, 0x03, 0xe2, 0x26, 0x16, 0x51,
  0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0x41, 0x0d, 0x78, 0xff,
  0xff, 0xff, 0x1f, 0x6c, 0xe2, 0xee, 0xff, 0xff, 0xff, 0x87, 0xf1, 0xff,
  0xff, 0xff, 0x1f, 0x26, 0x0c, 0x80, 0x5a, 0x03, 0xb5, 0x88, 0x19, 0x03,
  0x02, 0x27, 0xd6, 0x40, 0x14, 0x80, 0x0a, 0xe8, 0x02, 0x66, 0x0c, 0x08,
  0x9c, 0xb8, 0x03, 0x51, 0x00, 0x56, 0x60, 0x70, 0x8d, 0xb9, 0x08, 0x66,
  0x0c, 0x08, 0x9c, 0xa0, 0x44, 0x01, 0xa0, 0x00, 0x30, 0x26, 0x0c, 0x00,
  0xc2, 0x89, 0x01, 0x98, 0x31, 0x20, 0x70, 0x62, 0x11, 0x05, 0x60, 0xc4,
  0x00, 0x01, 0x40, 0x10, 0x0c, 0x9a, 0xd6, 0xa0, 0xf7, 0xff, 0xff, 0xff,
  0x61, 0x27, 0xf4, 0xfe, 0xff, 0xff, 0x7f, 0x40, 0xff, 0xff, 0xff, 0xff,
  0x61, 0xc2, 0x00, 0x28, 0x38, 0x78, 0x0b, 0x98, 0x31, 0x20, 0x72, 0x62,
  0x0d, 0x44, 0x01, 0xa8, 0x20, 0x2f, 0x62, 0xc6, 0x80, 0xc8, 0x89, 0x3b,
  0x10, 0x05, 0x60, 0x05, 0x86, 0xd9, 0xc0, 0x8b, 0x60, 0xc6, 0x80, 0xc8,
  0x09, 0x4a, 0x14, 0x00, 0x0a, 0x00, 0x63, 0xc2, 0x00, 0xa0, 0x9e, 0x18,
  0x80, 0x19, 0x03, 0x22, 0x27, 0x16, 0x51, 0x00, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0xa0, 0x91, 0x0d, 0x7c, 0xff, 0xff, 0xff, 0x1f, 0xc0, 0xa2,
  0xef, 0xff, 0xff, 0xff, 0x87, 0xf6, 0xff, 0xff, 0xff, 0x1f, 0x26, 0x0c,
  0x80, 0xaa, 0x03, 0xba, 0x80, 0x19, 0x03, 0x42, 0x27, 0xd6, 0x40, 0x14,
  0x80, 0x0a, 0xfc, 0x02, 0x66, 0x0c, 0x08, 0x9d, 0xb8, 0x03, 0x51, 0x00,
  0x56, 0x60, 0xc0, 0x8d, 0xbe, 0x08, 0x66, 0x0c, 0x08, 0x9d, 0xa0, 0x44,
  0x01, 0xa0, 0x00, 0x30, 0x26, 0x0c, 0x00, 0x12, 0x8b, 0x01, 0x98, 0x31,
  0x20, 0x74, 0x62, 0x11, 0x05, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0x9a, 0xdb, 0xe0, 0xf7, 0xff, 0xff, 0xff, 0xa1, 0x2c, 0x40, 0xff, 0xff,
  0xff, 0x7f, 0x90, 0xff, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00, 0x30, 0x3b,
  0x38, 0x03, 0xf8, 0xcc, 0x18, 0x10, 0x3d, 0xa1, 0x89, 0x02, 0x40, 0x64,
  0x31, 0x00, 0x33, 0x06, 0x44, 0x4f, 0x2c, 0xa2, 0x00, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0x41, 0x93, 0x1b, 0xfd, 0xfe, 0xff, 0xff, 0x3f, 0x9c,
  0x05, 0xe8, 0xff, 0xff, 0xff, 0x0f, 0xf4, 0xff, 0xff, 0xff, 0x3f, 0x4c,
  0x18, 0x00, 0x46, 0x07, 0x6d, 0x00, 0x9f, 0x19, 0x03, 0xc2, 0x27, 0x34,
  0x51, 0x00, 0xc8, 0x2c, 0x06, 0x60, 0xc6, 0x80, 0xf0, 0x89, 0x45, 0x14,
  0x80, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x68, 0x76, 0xc3, 0xdf, 0xff,
  0xff, 0xff, 0x87, 0xb4, 0x00, 0xfd, 0xff, 0xff, 0xff, 0xc1, 0xfe, 0xff,
  0xff, 0xff, 0x87, 0x09, 0x03, 0xc0, 0xaa, 0x05, 0x3e, 0x33, 0x06, 0xc4,
  0x4f, 0x74, 0xa2, 0x00, 0x10, 0x5a, 0x0c, 0xc0, 0x8c, 0x01, 0xf1, 0x13,
  0x8b, 0x28, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xd0, 0xf4, 0xc6,
  0xbf, 0xff, 0xff, 0xff, 0x0f, 0x6b, 0x01, 0xfa, 0xff, 0xff, 0xff, 0x03,
  0xfe, 0xff, 0xff, 0xff, 0x0f, 0x13, 0x06, 0x80, 0x49, 0x08, 0x7c, 0x66,
  0x0c, 0x08, 0xb0, 0xe8, 0x44, 0x01, 0x20, 0xb5, 0x18, 0x80, 0x19, 0x03,
  0x02, 0x2c, 0x16, 0x51, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0,
  0xf9, 0x0d, 0x90, 0xff, 0xff, 0xff, 0x1f, 0xda, 0x02, 0xf4, 0xff, 0xff,
  0xff, 0x07, 0xfd, 0xff, 0xff, 0xff, 0x1f, 0x26, 0x0c, 0x00, 0x7b, 0x14,
  0xf8, 0xcc, 0x18, 0x10, 0x61, 0xd1, 0x89, 0x02, 0x40, 0x6c, 0x31, 0x00,
  0x33, 0x06, 0x44, 0x58, 0x2c, 0xa2, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x41, 0x13, 0x1e, 0x21, 0xff, 0xff, 0xff, 0x3f, 0xbc, 0x05, 0xe8,
  0xff, 0xff, 0xff, 0x0f, 0xfc, 0xff, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00,
  0xb6, 0x59, 0xf0, 0x99, 0x31, 0x20, 0xc4, 0xa2, 0x13, 0x05, 0x80, 0xdc,
  0x62, 0x00, 0x66, 0x0c, 0x08, 0xb1, 0x58, 0x44, 0x01, 0x18, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x83, 0x66, 0x3c, 0x44, 0xfe, 0xff, 0xff, 0x7f, 0x88,
  0x0b, 0xd0, 0xff, 0xff, 0xff, 0x1f, 0xfc, 0xff, 0xff, 0xff, 0x7f, 0x98,
  0x30, 0x00, 0xcc, 0x27, 0xfc, 0x40, 0x3e, 0x33, 0x06, 0x44, 0x59, 0xa4,
  0x81, 0x28, 0x00, 0x96, 0x04, 0xf1, 0x99, 0x31, 0x20, 0xca, 0x62, 0x0c,
  0x44, 0x01, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0xae, 0x37, 0x5e,
  0x23, 0x98, 0x31, 0x20, 0xca, 0xc2, 0x12, 0x05, 0xc0, 0xc2, 0xc2, 0x0f,
  0xe4, 0x33, 0x63, 0x40, 0x94, 0x45, 0x29, 0x88, 0x02, 0x60, 0x50, 0x10,
  0x9f, 0x19, 0x03, 0xa2, 0x2c, 0xfe, 0x40, 0x14, 0x80, 0x11, 0x03, 0x03,
  0x00, 0x41, 0x30, 0xe0, 0xc0, 0x43, 0x36, 0x82, 0x19, 0x03, 0xa2, 0x2c,
  0xe8, 0x40, 0x14, 0x00, 0x0b, 0xc8, 0x42, 0x3e, 0x33, 0x06, 0x44, 0x59,
  0xb8, 0x82, 0x28, 0x00, 0x56, 0x04, 0xf0, 0x99, 0x31, 0x20, 0xca, 0x42,
  0x0e, 0x44, 0x01, 0x30, 0xb3, 0xf8, 0x03, 0xf9, 0xcc, 0x18, 0x10, 0x65,
  0x91, 0x0e, 0xa2, 0x00, 0xd8, 0x13, 0xc4, 0x67, 0xc6, 0x80, 0x28, 0x8b,
  0x71, 0x10, 0x05, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xb8, 0xf2,
  0xb8, 0x8d, 0x60, 0xc6, 0x80, 0x28, 0x0b, 0x5b, 0x10, 0x05, 0xc0, 0x88,
  0x00, 0x3e, 0x33, 0x06, 0x44, 0x59, 0xd0, 0x82, 0x28, 0x00, 0xb4, 0x17,
  0x03, 0x30, 0x63, 0x40, 0x94, 0xc5, 0x22, 0x0a, 0xc0, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x34, 0xf0, 0xe1, 0xf2, 0xff, 0xff, 0xff, 0x83, 0x5f,
  0xac, 0xfe, 0xff, 0xff, 0xff, 0xb0, 0x4c, 0x18, 0x00, 0xb6, 0x16, 0xa0,
  0x20, 0x9f, 0x19, 0x03, 0xc2, 0x2c, 0xd2, 0x40, 0x14, 0x00, 0x93, 0x82,
  0xf8, 0xcc, 0x18, 0x10, 0x66, 0x31, 0x06, 0xa2, 0x00, 0x8c, 0x18, 0x18,
  0x00, 0x08, 0x82, 0x01, 0xa7, 0x1e, 0xbc, 0x11, 0xcc, 0x18, 0x10, 0x66,
  0x61, 0x89, 0x02, 0x60, 0x6e, 0xb1, 0x0a, 0xf2, 0x99, 0x31, 0x20, 0xcc,
  0xa2, 0x14, 0x44, 0x01, 0xb0, 0x2d, 0x88, 0xcf, 0x8c, 0x01, 0x61, 0x16,
  0x7f, 0x20, 0x0a, 0xc0, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x70, 0xed,
  0xf1, 0x1b, 0xc1, 0x8c, 0x01, 0x61, 0x16, 0x74, 0x20, 0x0a, 0x80, 0x05,
  0x71, 0x21, 0x9f, 0x19, 0x03, 0xc2, 0x2c, 0x5c, 0x41, 0x14, 0x00, 0x2b,
  0x02, 0xf8, 0xcc, 0x18, 0x10, 0x66, 0x21, 0x07, 0xa2, 0x00, 0xd8, 0x5c,
  0xdc, 0x82, 0x7c, 0x66, 0x0c, 0x08, 0xb3, 0x48, 0x07, 0x51, 0x00, 0x0c,
  0x0b, 0xe2, 0x33, 0x63, 0x40, 0x98, 0xc5, 0x38, 0x88, 0x02, 0x30, 0x62,
  0x60, 0x00, 0x20, 0x08, 0x06, 0x9c, 0x7c, 0x90, 0x47, 0x30, 0x63, 0x40,
  0x98, 0x85, 0x2d, 0x88, 0x02, 0x60, 0x44, 0x00, 0x9f, 0x19, 0x03, 0xc2,
  0x2c, 0x68, 0x41, 0x14, 0x00, 0x42, 0x8d, 0x01, 0x98, 0x31, 0x20, 0xcc,
  0x62, 0x11, 0x05, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x9a, 0xfe,
  0xd0, 0xf9, 0xff, 0xff, 0xff, 0x61, 0x35, 0x6c, 0xff, 0xff, 0xff, 0x7f,
  0xc0, 0x26, 0x0c, 0x00, 0x33, 0x03, 0x32, 0x80, 0xcf, 0x8c, 0x01, 0x91,
  0x16, 0x66, 0x20, 0x0a, 0x80, 0x05, 0x79, 0x21, 0x9f, 0x19, 0x03, 0x22,
  0x2d, 0xe0, 0x40, 0x14, 0x00, 0x0b, 0xc8, 0x00, 0x3e, 0x33, 0x06, 0x44,
  0x5a, 0xd8, 0x81, 0x28, 0x00, 0x16, 0x8c, 0x01, 0x7c, 0x66, 0x0c, 0x88,
  0xb4, 0x08, 0x05, 0x51, 0x00, 0x2c, 0xd8, 0x0b, 0xfa, 0xcc, 0x18, 0x10,
  0x69, 0xd1, 0x0a, 0xa2, 0x00, 0x90, 0x6b, 0x0c, 0xc0, 0x8c, 0x01, 0x91,
  0x16, 0x8b, 0x28, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xd0, 0x8c,
  0xc8, 0xcf, 0xff, 0xff, 0xff, 0x0f, 0xb1, 0xa1, 0xfb, 0xff, 0xff, 0xff,
  0x83, 0x37, 0x61, 0x00, 0x98, 0xb0, 0x0b, 0xf1, 0x99, 0x31, 0x20, 0xd4,
  0xa2, 0x15, 0x44, 0x01, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x8e,
  0x3f, 0xdc, 0x23, 0x98, 0x31, 0x20, 0xd4, 0x22, 0x0f, 0x44, 0x01, 0xb0,
  0x20, 0x15, 0xe8, 0x33, 0x63, 0x40, 0xa8, 0x85, 0x2d, 0x88, 0x02, 0x60,
  0xc1, 0x5f, 0xc4, 0x67, 0xc6, 0x80, 0x50, 0x0b, 0x34, 0x10, 0x05, 0xc0,
  0x02, 0xd5, 0xa0, 0xcf, 0x84, 0x01, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08,
  0x06, 0x1c, 0x88, 0x94, 0x47, 0x30, 0x61, 0x00, 0x58, 0x40, 0x1a, 0xf2,
  0x99, 0x30, 0x00, 0x4c, 0x34, 0x82, 0xf8, 0x4c, 0x18, 0x00, 0x36, 0x04,
  0xf2, 0x99, 0x30, 0x00, 0x8c, 0x08, 0xe4, 0x33, 0x61, 0x00, 0x58, 0x10,
  0xc8, 0x67, 0xc6, 0x80, 0x50, 0x0b, 0x32, 0x10, 0x05, 0x60, 0xc4, 0xe0,
  0x00, 0x40, 0x10, 0x0c, 0xda, 0xe0, 0x3f, 0x76, 0x63, 0x2f, 0xee, 0x63,
  0xc6, 0x80, 0x50, 0x8b, 0x72, 0x10, 0x05, 0x60, 0x34, 0x21, 0x18, 0x26,
  0x0c, 0x00, 0x1b, 0x02, 0xf9, 0xcc, 0x18, 0x10, 0x6a, 0x31, 0x0e, 0xa2,
  0x00, 0x58, 0xc0, 0x1a, 0xf2, 0x99, 0x31, 0x20, 0xd4, 0xa2, 0x1e, 0x44,
  0x01, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x4e, 0x45, 0xde, 0x23,
  0x98, 0x31, 0x20, 0xd4, 0x62, 0x13, 0x05, 0x80, 0x7e, 0x63, 0x00, 0x66,
  0x0c, 0x08, 0xb5, 0x58, 0x44, 0x01, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04,
  0x83, 0x86, 0x46, 0xde, 0xfe, 0xff, 0xff, 0x7f, 0x10, 0x8f, 0xf4, 0xff,
  0xff, 0xff, 0x1f, 0xde, 0x60, 0xc2, 0x00, 0x18, 0x8e, 0x30, 0x83, 0x6c,
  0xf8, 0x66, 0x0c, 0x08, 0xb6, 0xf8, 0x44, 0x01, 0x18, 0x6e, 0x08, 0xf2,
  0x23, 0x0c, 0x26, 0x0c, 0x80, 0xe9, 0x86, 0x7a, 0x88, 0x87, 0x60, 0xc6,
  0x80, 0x60, 0x0b, 0x4b, 0x14, 0x00, 0x0b, 0xde, 0x21, 0x3e, 0x33, 0x06,
  0x04, 0x5b, 0xf0, 0x81, 0x28, 0x00, 0x44, 0x1e, 0x03, 0x30, 0x63, 0x40,
  0xb0, 0xc5, 0x22, 0x0a, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x34,
  0x39, 0x32, 0xf7, 0xff, 0xff, 0xff, 0xc3, 0x79, 0xb0, 0xff, 0xff, 0xff,
  0xff, 0x40, 0x07, 0x13, 0x06, 0xc0, 0x70, 0xc4, 0x1a, 0x78, 0xc3, 0x37,
  0x63, 0x40, 0xb4, 0xc5, 0x27, 0x0a, 0xc0, 0x70, 0x43, 0xe0, 0x1f, 0x61,
  0x30, 0x61, 0x00, 0x4c, 0x37, 0xac, 0xc3, 0x3b, 0x04, 0x33, 0x06, 0x44,
  0x5b, 0x58, 0xa2, 0x00, 0x58, 0x40, 0x0f, 0xf1, 0x99, 0x31, 0x20, 0xda,
  0x82, 0x0f, 0x44, 0x01, 0xa0, 0xf4, 0x18, 0x80, 0x19, 0x03, 0xa2, 0x2d,
  0x16, 0x51, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0xf1, 0x91,
  0xbb, 0xff, 0xff, 0xff, 0x1f, 0xd8, 0xe3, 0xfd, 0xff, 0xff, 0xff, 0x87,
  0x3c, 0x98, 0x30, 0x00, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x80, 0xb3,
  0x11, 0x14, 0x11, 0x66, 0x0c, 0x08, 0xb7, 0xc0, 0x44, 0x01, 0x18, 0x31,
  0x30, 0x00, 0x10, 0x04, 0x03, 0xee, 0x46, 0x52, 0x04, 0x99, 0x31, 0x20,
  0xdc, 0x02, 0x0d, 0x44, 0x01, 0x18, 0x8e, 0x10, 0x82, 0xe1, 0x9b, 0x31,
  0x20, 0xdc, 0xa2, 0x0c, 0x44, 0x01, 0x18, 0x6e, 0x08, 0x4a, 0x24, 0x0c,
  0x26, 0x0c, 0x80, 0xe9, 0x86, 0x16, 0x59, 0x91, 0x60, 0xc6, 0x80, 0x70,
  0x0b, 0x4c, 0x14, 0x00, 0x7a, 0x8f, 0x01, 0x98, 0x31, 0x20, 0xdc, 0x42,
  0x11, 0x05, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x1a, 0x32, 0xe1,
  0xfb, 0xff, 0xff, 0xff, 0x41, 0x3e, 0xe6, 0xff, 0xff, 0xff, 0x7f, 0xf8,
  0x83, 0x09, 0x03, 0xc0, 0xa4, 0xdd, 0x90, 0xcf, 0x8c, 0x01, 0xf1, 0x16,
  0x66, 0x20, 0x0a, 0xc0, 0x05, 0x83, 0x99, 0x31, 0x20, 0xde, 0x02, 0x13,
  0x05, 0xa0, 0x02, 0xde, 0xd0, 0x19, 0x03, 0xe2, 0x2d, 0xde, 0x40, 0x14,
  0x00, 0x9a, 0x8f, 0x01, 0x98, 0x31, 0x20, 0xde, 0x42, 0x11, 0x05, 0x60,
  0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x1a, 0x34, 0xf9, 0xfb, 0xff, 0xff,
  0xff, 0xc1, 0x3e, 0xea, 0xff, 0xff, 0xff, 0x7f, 0x18, 0x85, 0x09, 0x03,
  0xa0, 0x5c, 0x03, 0x44, 0x6e, 0xc6, 0x80, 0x90, 0x0b, 0x4f, 0x14, 0x80,
  0x82, 0x8d, 0x12, 0xb9, 0x19, 0x03, 0x42, 0x2e, 0xda, 0x40, 0x14, 0x80,
  0x12, 0x82, 0x9d, 0x31, 0x20, 0xe4, 0x82, 0x0c, 0x44, 0x01, 0xa8, 0xa0,
  0xd8, 0x19, 0x03, 0x42, 0x2e, 0xe4, 0x40, 0x14, 0x80, 0x0a, 0x94, 0x9d,
  0x31, 0x20, 0xe4, 0x62, 0x0f, 0x44, 0x01, 0xa0, 0xfc, 0x18, 0x80, 0x19,
  0x03, 0x42, 0x2e, 0x14, 0x51, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1,
  0xa0, 0x71, 0x13, 0xd2, 0xff, 0xff, 0xff, 0x1f, 0xf8, 0x23, 0xff, 0xff,
  0xff, 0xff, 0x87, 0x54, 0x98, 0x30, 0x00, 0x86, 0x23, 0x40, 0x61, 0x0e,
  0x86, 0x6f, 0xc6, 0x80, 0xa0, 0x0b, 0xe9, 0x37, 0x80, 0xe1, 0x86, 0x60,
  0x46, 0xc2, 0x60, 0xc2, 0x00, 0x18, 0x6e, 0x08, 0x68, 0x24, 0x0c, 0x26,
  0x0c, 0x80, 0x59, 0x86, 0xc2, 0x08, 0x66, 0x0c, 0x08, 0xba, 0x48, 0x44,
  0x01, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x45, 0x4e, 0x4c, 0xff,
  0xff, 0xff, 0x7f, 0xc8, 0xff, 0xff, 0xff, 0xff, 0x81, 0x15, 0x66, 0x0c,
  0x08, 0xbb, 0x70, 0xf6, 0x04, 0x18, 0x31, 0x58, 0x00, 0x10, 0x04, 0x03,
  0x0f, 0x4d, 0xcc, 0x03, 0x3c, 0x74, 0x44, 0x47, 0xf4, 0x43, 0x3f, 0x78,
  0x64, 0xc6, 0x80, 0xb8, 0x8b, 0x64, 0x4f, 0x80, 0x61, 0x03, 0xe2, 0x36,
  0x02, 0x00, 0x98, 0x30, 0x00, 0xe8, 0x36, 0x06, 0x63, 0xc6, 0x80, 0xc0,
  0x8b, 0x6c, 0x4f, 0x80, 0x0a, 0x7e, 0x44, 0x66, 0x0c, 0x08, 0xbc, 0x00,
  0x83, 0x3d, 0x01, 0x46, 0x0c, 0x1c, 0x00, 0x04, 0xc1, 0x00, 0x0c, 0xd4,
  0x04, 0x3d, 0xc8, 0x23, 0xe8, 0x0f, 0xa4, 0x3f, 0xfa, 0xa3, 0x3f, 0x52,
  0x04, 0x4c, 0x66, 0x0c, 0x08, 0xbc, 0x48, 0xf6, 0x04, 0x28, 0x31, 0x91,
  0x64, 0xc6, 0x80, 0xc8, 0x0b, 0x51, 0xd8, 0x13, 0xa0, 0x02, 0x30, 0x89,
  0x19, 0x03, 0x22, 0x2f, 0x60, 0x61, 0x4f, 0x80, 0xb2, 0x8d, 0x1f, 0x81,
  0x19, 0x03, 0x22, 0x2f, 0xea, 0x60, 0x4f, 0x80, 0xb2, 0x0d, 0x01, 0x26,
  0x0c, 0x00, 0x22, 0x91, 0x01, 0x98, 0x31, 0x20, 0xf2, 0xe2, 0xdb, 0x13,
  0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x9a, 0x3c, 0x69, 0xfd, 0xff,
  0xff, 0xff, 0xe1, 0x44, 0x50, 0x41, 0x17, 0x66, 0x0c, 0x08, 0x52, 0xd8,
  0x58, 0xc1, 0x4f, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0xc9, 0x13,
  0xd6, 0xff, 0xff, 0xff, 0x1f, 0x4e, 0x04, 0x15, 0x72, 0x61, 0xc2, 0x00,
  0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x26, 0x4f, 0x5a, 0xff, 0xff,
  0xff, 0x7f, 0x38, 0x11, 0x54, 0xd0, 0x85, 0x09, 0x03, 0x60, 0xc4, 0x00,
  0x01, 0x40, 0x10, 0x0c, 0x9a, 0x3c, 0x61, 0xfd, 0xff, 0xff, 0xff, 0xe1,
  0x44, 0x50, 0x21, 0x17, 0x26, 0x0c, 0x80, 0x11, 0x83, 0x06, 0x00, 0x41,
  0x30, 0x38, 0x03, 0x36, 0x19, 0x91, 0xf3, 0x10, 0x93, 0x41, 0x10, 0x11,
  0x11, 0x11, 0x11, 0x11, 0x99, 0x31, 0x20, 0x48, 0x21, 0x0d, 0x58, 0xc1,
  0x4f, 0x46, 0x13, 0x02, 0x60, 0xc2, 0x00, 0x18, 0x4d, 0x10, 0x82, 0x09,
  0x03, 0x60, 0x34, 0x61, 0x10, 0x26, 0x0c, 0x00, 0x4a, 0x91, 0x01, 0x98,
  0x31, 0x20, 0x48, 0x41, 0x0c, 0x58, 0xc1, 0x4f, 0x68, 0x3c, 0x06, 0x63,
  0xc6, 0x80, 0xc8, 0x0b, 0x6a, 0x4f, 0x80, 0x11, 0x83, 0x06, 0x00, 0x41,
  0x30, 0x10, 0x03, 0x3a, 0x91, 0x0f, 0xf8, 0x08, 0x50, 0xa4, 0x20, 0x86,
  0xc2, 0x3f, 0x66, 0x0c, 0x88, 0xbc, 0xe8, 0xf6, 0x04, 0x98, 0x25, 0x38,
  0x66, 0x0c, 0x08, 0xbd, 0x28, 0xf6, 0x04, 0x18, 0x31, 0x38, 0x00, 0x10,
  0x04, 0x03, 0x05, 0x54, 0x62, 0xff, 0xff, 0xff, 0x7f, 0x28, 0x74, 0x61,
  0xc6, 0x80, 0xe8, 0x0b, 0x07, 0x3c, 0x80, 0x11, 0x83, 0x05, 0x00, 0x41,
  0x30, 0xf0, 0xec, 0x84, 0x3e, 0xdc, 0x03, 0x4d, 0xd6, 0x04, 0x45, 0x50,
  0x44, 0x4d, 0x66, 0x0c, 0x08, 0xbf, 0x48, 0xc0, 0x03, 0x18, 0x36, 0x20,
  0xc8, 0x23, 0x00, 0x80, 0x09, 0x03, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10,
  0x0c, 0xd4, 0x40, 0x4e, 0x5a, 0xa4, 0x3d, 0xd6, 0x64, 0xc6, 0x80, 0xf8,
  0x8b, 0x09, 0x3c, 0x80, 0xd1, 0x84, 0x00, 0x98, 0x30, 0x00, 0xc8, 0x3c,
  0x06, 0x63, 0xc6, 0x80, 0xf8, 0x0b, 0x32, 0x00, 0x0f, 0xa0, 0x84, 0x20,
  0x66, 0x0c, 0x88, 0xbf, 0x10, 0x03, 0xf0, 0x00, 0x08, 0x46, 0x06, 0x60,
  0xc6, 0x80, 0xf8, 0x8b, 0x08, 0x3c, 0x80, 0x61, 0x03, 0x22, 0x3d, 0x84,
  0x01, 0x98, 0x30, 0x00, 0x28, 0x3d, 0x06, 0x63, 0xc6, 0x80, 0x00, 0x8d,
  0x0c, 0x3c, 0x80, 0x0a, 0xe4, 0x44, 0x66, 0x0c, 0x08, 0xd0, 0x00, 0x03,
  0xf0, 0x00, 0x46, 0x0c, 0x1c, 0x00, 0x04, 0xc1, 0x00, 0x0c, 0xfa, 0x64,
  0x3f, 0xee, 0x23, 0x80, 0x91, 0x0d, 0x46, 0x60, 0x04, 0x46, 0x78, 0x64,
  0x4e, 0x66, 0x0c, 0x08, 0xd0, 0x48, 0xc0, 0x03, 0xa8, 0x3a, 0x29, 0x03,
  0x99, 0x31, 0x20, 0x42, 0xe3, 0x0f, 0xc0, 0x03, 0xa8, 0x60, 0x4e, 0x62,
  0xc6, 0x80, 0x08, 0x8d, 0x56, 0x00, 0x0f, 0xa0, 0xd2, 0x23, 0x80, 0x19,
  0x03, 0x22, 0x34, 0xea, 0x00, 0x3c, 0x80, 0x4a, 0x8f, 0x39, 0x81, 0x09,
  0x03, 0x80, 0x6e, 0x64, 0x00, 0x66, 0x0c, 0x88, 0xd0, 0xf8, 0xc0, 0x03,
  0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x86, 0x55, 0x7a, 0xff, 0xff,
  0xff, 0x7f, 0xd0, 0x91, 0x5d, 0x68, 0x87, 0x19, 0x03, 0x82, 0x14, 0x36,
  0x56, 0x08, 0x8f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x68, 0x58, 0x85,
  0xf7, 0xff, 0xff, 0xff, 0x07, 0x1d, 0xd9, 0x05, 0x76, 0x98, 0x30, 0x00,
  0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0x61, 0x95, 0xde, 0xff, 0xff,
  0xff, 0x1f, 0x74, 0x64, 0x17, 0xda, 0x61, 0xc2, 0x00, 0x18, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x83, 0x86, 0x55, 0x78, 0xff, 0xff, 0xff, 0x7f, 0xd0,
  0x91, 0x5d, 0x60, 0x87, 0x09, 0x03, 0x60, 0xc4, 0xa0, 0x01, 0x40, 0x10,
  0x0c, 0xce, 0xe0, 0x4f, 0x6c, 0x44, 0x3f, 0xea, 0x64, 0x10, 0x6a, 0xa4,
  0x46, 0x6a, 0xa4, 0x46, 0x66, 0x0c, 0x08, 0x52, 0x48, 0x03, 0x56, 0x08,
  0x8f, 0xd1, 0x84, 0x00, 0x98, 0x30, 0x00, 0x46, 0x13, 0x84, 0x60, 0xc2,
  0x00, 0x18, 0x4d, 0x18, 0x84, 0x09, 0x03, 0x80, 0x78, 0x64, 0x00, 0x66,
  0x0c, 0x08, 0x52, 0x10, 0x03, 0x56, 0x08, 0x0f, 0xaa, 0x8f, 0xc1, 0x98,
  0x31, 0x20, 0x42, 0x83, 0x02, 0x0f, 0x60, 0xc4, 0xa0, 0x01, 0x40, 0x10,
  0x0c, 0xc4, 0xe0, 0x54, 0x4a, 0x64, 0x44, 0x82, 0x1d, 0x29, 0x88, 0xa1,
  0x88, 0x91, 0x19, 0x03, 0x22, 0x34, 0x3a, 0xf0, 0x00, 0x66, 0x09, 0x0e,
  0xf2, 0x91, 0x01, 0x98, 0x31, 0x20, 0x46, 0x23, 0x10, 0x05, 0x00, 0x27,
  0x0c, 0x80, 0x70, 0x20, 0x6b, 0x00, 0x00, 0x00, 0x46, 0x36, 0xf8, 0x08,
  0x6d, 0x70, 0x85, 0x8f, 0xd0, 0xf6, 0x6d, 0x72, 0x85, 0x8f, 0xd0, 0xb6,
  0x6e, 0x74, 0x85, 0x8f, 0xd0, 0x76, 0x6f, 0x76, 0x85, 0x8f, 0xd0, 0xb7,
  0x6d, 0x8b, 0x01, 0x85, 0x8f, 0xd0, 0xb7, 0x6e, 0xba, 0x02, 0x85, 0x8f,
  0xd0, 0x38, 0x6d, 0xcd, 0x02, 0x85, 0x8f, 0xd0, 0xb8, 0x6d, 0x65, 0x83,
  0x8f, 0xd4, 0x16, 0x57, 0xf8, 0x48, 0x6d, 0xe3, 0x36, 0x57, 0xf8, 0x48,
  0x6d, 0xf3, 0x56, 0x57, 0xf8, 0x48, 0x7d, 0xd3, 0x76, 0x57, 0xf8, 0x48,
  0x7d, 0xe3, 0xc6, 0x18, 0x50, 0xf8, 0x48, 0x7d, 0xf3, 0xb6, 0x2b, 0x50,
  0xf8, 0x48, 0x8d, 0xd7, 0xe6, 0x2c, 0x50, 0xf8, 0x48, 0x8d, 0xdf, 0x56,
  0x2b, 0x90, 0x68, 0x93, 0xc3, 0x20, 0x82, 0x36, 0x0c, 0x36, 0x2c, 0xb0,
  0x68, 0x93, 0xc3, 0x20, 0x82, 0x36, 0x0c, 0x75, 0x6f, 0x57, 0x0b, 0xb7,
  0xd1, 0xbf, 0x10, 0x50, 0x45, 0x41, 0x44, 0x36, 0x25, 0x71, 0xce, 0xe2,
  0x44, 0x2a, 0x45, 0x50, 0xc4, 0xef, 0x6a, 0xef, 0x1f, 0x50, 0x85, 0x59,
  0x41, 0x9c, 0xb3, 0x38, 0xd1, 0x3f, 0x11, 0xd7, 0x44, 0x45, 0xc4, 0x6f,
  0x0f, 0x96, 0x1e, 0x40, 0x7c, 0x5a, 0x20, 0x19, 0x7b, 0x80, 0xf1, 0x69,
  0x81, 0x54, 0xd3, 0x16, 0x1f, 0x60, 0x7c, 0x5a, 0x20, 0xd5, 0xb5, 0xd9,
  0x07, 0x18, 0x9f, 0x16, 0x48, 0xb5, 0x6d, 0xf9, 0x01, 0xc6, 0xa7, 0x05,
  0x52, 0x7d, 0x9b, 0x7f, 0x80, 0xf1, 0x69, 0x81, 0x54, 0xe3, 0x86, 0x28,
  0x60, 0x7c, 0x5a, 0x20, 0xd5, 0xb9, 0x89, 0x0a, 0x18, 0x9f, 0x16, 0x48,
  0xb5, 0x6e, 0xa3, 0x02, 0xc6, 0xa7, 0x05, 0x52, 0xbd, 0x9b, 0x6d, 0x00,
  0xf1, 0x99, 0xc0, 0x65, 0xb7, 0x01, 0xc5, 0x67, 0x02, 0x97, 0x6e, 0xb8,
  0x01, 0xc5, 0x67, 0x02, 0xd7, 0x6e, 0xb9, 0x01, 0xc5, 0x67, 0x02, 0x17,
  0x6f, 0xbb, 0x01, 0xc4, 0x67, 0x22, 0x8d, 0xf1, 0x06, 0x14, 0x9f, 0x89,
  0x34, 0xb7, 0xf5, 0x06, 0x14, 0x9f, 0x89, 0x34, 0xb8, 0xf9, 0x06, 0x14,
  0x9f, 0x89, 0x34, 0xb9, 0x65, 0x06, 0x0c, 0xa5, 0x63, 0x18, 0x61, 0x00,
  0x51, 0x3a, 0x46, 0x6f, 0x52, 0x4b, 0x49, 0x31, 0xc0, 0xef, 0x6a, 0xef,
  0x6f, 0x0f, 0x66, 0x29, 0x80, 0xb0, 0xc0, 0x44, 0x45, 0xc0, 0x44, 0x18,
  0xa3, 0x80, 0xc2, 0x02, 0x13, 0x15, 0x01, 0x13, 0x51, 0xf3, 0x06, 0x2d,
  0xb0, 0xb4, 0xc4, 0x35, 0x51, 0x11, 0x51, 0x3a, 0xc0, 0x60, 0xbd, 0x02,
  0x4d, 0x4b, 0x5c, 0x13, 0x15, 0x11, 0xa5, 0x03, 0x0c, 0x36, 0x6d, 0x8f,
  0x01, 0x4d, 0x4b, 0x5c, 0x13, 0x15, 0x11, 0xa5, 0x03, 0x0c, 0x76, 0x6d,
  0x7a, 0x4d, 0x4b, 0x5c, 0x13, 0x15, 0x11, 0xa5, 0x03, 0x0c, 0xb6, 0x6d,
  0x55, 0x14, 0xec, 0x44, 0x0a, 0xe7, 0x50, 0xcd, 0xf4, 0xbb, 0xda, 0xfb,
  0x47, 0x80, 0x15, 0x50, 0x85, 0x7d, 0x1d, 0xb0, 0x13, 0x29, 0xe2, 0x70,
  0x19, 0x18, 0x02, 0x3b, 0x91, 0x22, 0x0e, 0x57, 0x6d, 0x54, 0x14, 0xec,
  0x44, 0x8a, 0x4a, 0x11, 0x14, 0xf1, 0xbb, 0xda, 0xfb, 0x47, 0x80, 0x15,
  0x50, 0x05, 0x00, 0x00, 0x21, 0x31, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00,
  0x0b, 0x86, 0x00, 0x88, 0x95, 0x05, 0x43, 0x00, 0xf8, 0xc9, 0x02, 0x42,
  0x08, 0x00, 0x33, 0x59, 0x30, 0x04, 0x00, 0x8c, 0x2c, 0x20, 0x84, 0x00,
  0xf8, 0x8f, 0x05, 0x84, 0x10, 0x00, 0xf2, 0xb1, 0x60, 0x08, 0x80, 0xf0,
  0x58, 0x30, 0x04, 0xc0, 0x6f, 0x2c, 0x18, 0x02, 0xa0, 0x37, 0x16, 0x0c,
  0x01, 0xb0, 0x1b, 0x0b, 0x86, 0x00, 0xc8, 0x8d, 0x05, 0x43, 0x00, 0xd0,
  0xc6, 0x82, 0x21, 0x00, 0x5e, 0x63, 0xc1, 0x10, 0x00, 0xaa, 0xb1, 0x60,
  0x08, 0x00, 0xd0, 0x58, 0x60, 0x10, 0x83, 0x10, 0x00, 0x74, 0xb1, 0xc0,
  0x20, 0x06, 0x21, 0x00, 0xe0, 0x62, 0x01, 0x62, 0x14, 0xc4, 0x20, 0x04,
  0x00, 0x5b, 0x2c, 0x30, 0x88, 0x41, 0x08, 0x80, 0xb4, 0x58, 0x60, 0x10,
  0x83, 0x10, 0x00, 0x65, 0xb1, 0x40, 0x41, 0x0e, 0xa3, 0x20, 0x06, 0x21,
  0x00, 0xc2, 0x62, 0x81, 0x41, 0x00, 0x81, 0x30, 0xe8, 0xc4, 0x02, 0x83,
  0x00, 0x02, 0x61, 0x28, 0x89, 0x05, 0x84, 0x00, 0x04, 0xf7, 0xb0, 0x80,
  0x10, 0x80, 0xc0, 0x1e, 0x16, 0x18, 0x81, 0x30, 0x10, 0x00, 0x38, 0x2c,
  0x20, 0x02, 0x01, 0xf8, 0x85, 0x05, 0xc6, 0x20, 0x00, 0x01, 0xa1, 0x0b,
  0x0b, 0x0c, 0x21, 0x00, 0x06, 0xe2, 0x16, 0x16, 0x0c, 0x01, 0x50, 0x0b,
  0x0b, 0x86, 0x00, 0xa0, 0x85, 0x05, 0x43, 0x00, 0xcc, 0xc2, 0x82, 0x21,
  0x00, 0x64, 0x61, 0x81, 0x01, 0x0c, 0x42, 0x40, 0x60, 0x0b, 0x86, 0x00,
  0x38, 0x83, 0x05, 0x4c, 0x00, 0x08, 0x03, 0x51, 0x18, 0x07, 0x92, 0x28,
  0xa9, 0xb0, 0x60, 0x08, 0x80, 0x69, 0x41, 0x42, 0x14, 0xc6, 0x01, 0x04,
  0xc2, 0xb0, 0x2c, 0x70, 0x02, 0x41, 0x01, 0x06, 0xa2, 0x30, 0x0e, 0x24,
  0x61, 0x16, 0x66, 0xc1, 0x10, 0x00, 0xa2, 0xb0, 0x60, 0x08, 0x00, 0x68,
  0xc1, 0x10, 0x00, 0x7f, 0xb0, 0x60, 0x08, 0x00, 0x3f, 0x58, 0x30, 0x04,
  0x40, 0x1f, 0x2c, 0x18, 0x02, 0x80, 0x0f, 0x16, 0x14, 0x83, 0x10, 0x00,
  0xd1, 0x82, 0x30, 0x80, 0x98, 0xc6, 0x79, 0xa4, 0x89, 0xaa, 0xb4, 0x2d,
  0x42, 0x12, 0x65, 0xb1, 0x2e, 0x2c, 0xe3, 0x3a, 0x8f, 0x28, 0x8c, 0xe3,
  0x03, 0x02, 0x61, 0xd8, 0x83, 0x05, 0xc5, 0x20, 0x04, 0x80, 0x1e, 0x2c,
  0x20, 0x04, 0x20, 0x40, 0x83, 0x05, 0x74, 0x00, 0xc8, 0xc1, 0xa0, 0x06,
  0x71, 0x40, 0xa4, 0x01, 0x1a, 0x9c, 0x81, 0x19, 0x94, 0x01, 0x19, 0x8c,
  0x81, 0x18, 0x84, 0x01, 0x18, 0x7c, 0x5e, 0xc7, 0x6d, 0x5a, 0x86, 0x5d,
  0x56, 0x45, 0x4d, 0x52, 0x04, 0x3d, 0x4e, 0x03, 0x07, 0x6f, 0x10, 0xb8,
  0x41, 0xb1, 0x24, 0x4c, 0x1b, 0xb0, 0x81, 0xb0, 0x06, 0x86, 0x82, 0x1c,
  0x78, 0xb0, 0xc0, 0x10, 0x02, 0x60, 0x20, 0xee, 0x60, 0x81, 0x29, 0x00,
  0x81, 0x34, 0x09, 0x03, 0x55, 0x91, 0xc2, 0x28, 0x88, 0x42, 0x28, 0x80,
  0xc2, 0x1f, 0xf8, 0x41, 0x1f, 0xf0, 0xc1, 0x1e, 0xe8, 0x41, 0x1e, 0xe0,
  0xc1, 0x1d, 0xd8, 0x41, 0x1d, 0xd0, 0xc1, 0x1c, 0xc8, 0x41, 0x1c, 0xc0,
  0xc1, 0x1b, 0xb8, 0x41, 0x1b, 0xb0, 0xc1, 0x1a, 0xa8, 0x41, 0x1a, 0xa0,
  0x41, 0x18, 0x80, 0x81, 0x71, 0x60, 0x19, 0x51, 0x58, 0x97, 0x19, 0x9c,
  0xc1, 0x18, 0x88, 0x81, 0xb2, 0x70, 0x1d, 0x92, 0x68, 0x5b, 0x19, 0x78,
  0x1f, 0x14, 0x91, 0x81, 0xf3, 0x30, 0x0d, 0xb1, 0xc0, 0x14, 0x80, 0x40,
  0x9a, 0x84, 0x81, 0xaa, 0x48, 0x61, 0x14, 0x44, 0x21, 0x14, 0x40, 0xe1,
  0x0f, 0xfc, 0xa0, 0x0f, 0xf8, 0x60, 0x0f, 0xf4, 0x20, 0x0f, 0xf0, 0xe0,
  0x0e, 0xec, 0xa0, 0x0e, 0xe8, 0x60, 0x0e, 0xe4, 0x20, 0x0e, 0xe0, 0xe0,
  0x0d, 0xdc, 0xa0, 0x0d, 0xd8, 0x60, 0x0d, 0xd4, 0x20, 0x0d, 0xd0, 0x20,
  0x0c, 0xc0, 0xc0, 0x38, 0xb0, 0x8c, 0x28, 0xac, 0xcb, 0x0c, 0xce, 0x60,
  0x0c, 0xc4, 0x40, 0x59, 0xb8, 0x0e, 0x49, 0xb4, 0xad, 0x0c, 0xbc, 0x0f,
  0x8a, 0xc8, 0xc0, 0x79, 0x98, 0xc6, 0x0e, 0x16, 0x90, 0x01, 0xa4, 0x44,
  0x0f, 0x22, 0x4d, 0x17, 0x83, 0x65, 0xda, 0xb6, 0x70, 0x9d, 0xf7, 0x81,
  0x41, 0x18, 0x38, 0x89, 0x18, 0x34, 0x54, 0x65, 0x19, 0x07, 0x51, 0x08,
  0x03, 0x10, 0x6c, 0x0b, 0x34, 0x86, 0x38, 0x1c, 0x04, 0x8a, 0xa4, 0x89,
  0xaa, 0xac, 0x0b, 0x13, 0x86, 0xc2, 0x68, 0x9e, 0x44, 0x59, 0x80, 0x20,
  0x5b, 0x50, 0x08, 0x03, 0x10, 0x58, 0x0b, 0x8e, 0x82, 0x18, 0x84, 0x00,
  0xa0, 0x16, 0x40, 0xc6, 0x81, 0x24, 0xca, 0xc2, 0x34, 0x4e, 0x41, 0x0c,
  0x42, 0x00, 0x80, 0xc1, 0x82, 0x83, 0x28, 0x06, 0x21, 0x00, 0xde, 0x60,
  0xc1, 0x51, 0x10, 0x83, 0x10, 0x00, 0x6e, 0x30, 0x81, 0x08, 0x04, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x54, 0x41, 0x54, 0x50, 0x0a, 0x00, 0x00, 0x62, 0x00, 0x05, 0x00,
  0x94, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x02, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x38, 0x0a, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x8b, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x06, 0x90, 0x36, 0x18, 0xc4, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x80,
  0x04, 0x54, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x86, 0x09, 0x01, 0x01, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0xf0, 0xc1, 0x0c, 0x40, 0x92, 0x01, 0x83, 0x08, 0xc1, 0x30, 0x47,
  0x00, 0x06, 0x19, 0x30, 0x10, 0x31, 0x02, 0x50, 0x02, 0x83, 0x8e, 0x32,
  0x0c, 0xc3, 0x40, 0x49, 0x11, 0x86, 0x81, 0x96, 0x39, 0x02, 0x84, 0x9a,
  0x7b, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0xfc, 0x10, 0x68, 0x86, 0x85,
  0x40, 0x81, 0x53, 0x16, 0x63, 0x78, 0x86, 0x61, 0x00, 0x00, 0x00, 0x68,
  0x08, 0x2a, 0x83, 0x31, 0x0c, 0x24, 0x15, 0x02, 0x18, 0x00, 0x80, 0xa8,
  0x32, 0x00, 0x03, 0x40, 0x56, 0x41, 0x86, 0xe1, 0x19, 0x86, 0x61, 0x18,
  0x08, 0x2b, 0x8b, 0x31, 0x3c, 0xc3, 0x30, 0x0c, 0xc3, 0xd0, 0x0c, 0xa4,
  0x15, 0xc5, 0x18, 0x9e, 0x61, 0x00, 0x00, 0x00, 0x68, 0x88, 0x2b, 0x08,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x37, 0x0d, 0x97, 0x3f, 0x61,
  0x0f, 0x21, 0xf9, 0x2b, 0x21, 0xad, 0xc4, 0xe4, 0x17, 0xb7, 0x8d, 0x0a,
  0x00, 0x00, 0x80, 0xa1, 0x28, 0xe0, 0xf0, 0x0c, 0xc3, 0x30, 0x0c, 0xc3,
  0x40, 0xe1, 0x51, 0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48, 0x3e, 0xb7, 0x51,
  0xc5, 0x4a, 0x4c, 0x3e, 0x72, 0xdb, 0x88, 0x18, 0x86, 0x61, 0x28, 0xc4,
  0x38, 0x3c, 0x03, 0x91, 0x47, 0x0d, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9,
  0xdc, 0x46, 0x15, 0x2b, 0x31, 0xf9, 0xc5, 0x6d, 0x23, 0x02, 0x00, 0x00,
  0xa0, 0x10, 0xe6, 0xf0, 0x0c, 0x74, 0xce, 0x11, 0x04, 0xc5, 0x78, 0x86,
  0x66, 0x18, 0x52, 0x52, 0x07, 0x02, 0x86, 0x11, 0x06, 0x60, 0xa6, 0x36,
  0x18, 0x07, 0x76, 0x08, 0x87, 0x79, 0x98, 0x07, 0x37, 0xa0, 0x85, 0x72,
  0xc0, 0x07, 0x7a, 0xa8, 0x07, 0x79, 0x28, 0x07, 0x39, 0x20, 0x05, 0x3e,
  0xb0, 0x87, 0x72, 0x18, 0x07, 0x7a, 0x78, 0x07, 0x79, 0xe0, 0x03, 0x73,
  0x60, 0x87, 0x77, 0x08, 0x07, 0x7a, 0x60, 0x03, 0x30, 0x98, 0x03, 0x3f,
  0x00, 0x03, 0x3f, 0xd0, 0x03, 0x3d, 0x68, 0x87, 0x74, 0x80, 0x87, 0x79,
  0xf8, 0x05, 0x7a, 0xc8, 0x07, 0x78, 0x28, 0x07, 0x14, 0x0c, 0x33, 0x89,
  0xc1, 0x38, 0xb0, 0x43, 0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x01, 0x2d, 0x94,
  0x03, 0x3e, 0xd0, 0x43, 0x3d, 0xc8, 0x43, 0x39, 0xc8, 0x01, 0x29, 0xf0,
  0x81, 0x3d, 0x94, 0xc3, 0x38, 0xd0, 0xc3, 0x3b, 0xc8, 0x03, 0x1f, 0x98,
  0x03, 0x3b, 0xbc, 0x43, 0x38, 0xd0, 0x03, 0x1b, 0x80, 0xc1, 0x1c, 0xf8,
  0x01, 0x18, 0xf8, 0x01, 0x12, 0x5a, 0x97, 0xde, 0xd3, 0xa4, 0x29, 0xa2,
  0x84, 0xc9, 0x5f, 0xe1, 0x0d, 0x9b, 0x08, 0x6d, 0x18, 0x22, 0x42, 0x92,
  0x36, 0xaa, 0x28, 0x88, 0x08, 0x05, 0x03, 0xc5, 0x33, 0x85, 0xc1, 0x38,
  0xb0, 0x43, 0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x81, 0x2c, 0xdc, 0x82, 0x28,
  0xd4, 0x83, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x03, 0x1f, 0xd8, 0x43, 0x39,
  0x8c, 0x03, 0x3d, 0xbc, 0x83, 0x3c, 0xf0, 0x81, 0x39, 0xb0, 0xc3, 0x3b,
  0x84, 0x03, 0x3d, 0xb0, 0x01, 0x18, 0xcc, 0x81, 0x1f, 0x80, 0x81, 0x1f,
  0xa0, 0xa0, 0xa5, 0x79, 0x26, 0x6c, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61,
  0x1e, 0xdc, 0x40, 0x16, 0x6e, 0x81, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1,
  0x1e, 0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8, 0xc0, 0x1c, 0xd8, 0xe1,
  0x1d, 0xc2, 0x81, 0x1e, 0xfc, 0x00, 0x05, 0x00, 0xd5, 0xc3, 0x08, 0x02,
  0x30, 0x8c, 0x20, 0x0c, 0x37, 0x70, 0x1b, 0x8d, 0x8a, 0x1b, 0x00, 0x06,
  0x9c, 0xf2, 0x39, 0x02, 0x50, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0x64, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0xc6,
  0x01, 0xc0, 0xe4, 0x10, 0x07, 0x83, 0x21, 0xcf, 0x01, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x04, 0x08, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0b, 0x10,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x12,
  0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2,
  0x24, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
  0xe4, 0x81, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x60, 0xc8, 0x23, 0x01, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xc0, 0x90, 0x87, 0x02, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0x8f, 0x05, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x0c, 0x08, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x1a, 0x10, 0x00, 0x02, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x38, 0x20, 0x00, 0x04,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x78, 0x40, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x09, 0x03,
  0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2,
  0x90, 0x01, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0xce, 0x00, 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x86, 0x3c, 0x6a, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x59, 0x20, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x1a, 0x4a, 0xa0, 0x08, 0x46, 0x00, 0x8a, 0xa1, 0x24,
  0xca, 0xa2, 0x28, 0xca, 0xa0, 0x70, 0xca, 0xa1, 0x20, 0x0a, 0xa3, 0x40,
  0x4a, 0xa1, 0x50, 0x0a, 0xa1, 0x40, 0x0d, 0xca, 0x33, 0xa0, 0x64, 0x09,
  0x8a, 0x8c, 0xf6, 0x12, 0xa1, 0x74, 0x04, 0xa0, 0x06, 0x08, 0x9e, 0x01,
  0x20, 0x79, 0x06, 0x80, 0xe8, 0x19, 0x00, 0xb2, 0x67, 0x00, 0x28, 0x9f,
  0x01, 0x20, 0x7d, 0x06, 0x80, 0x88, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1,
  0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41,
  0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a,
  0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9,
  0x10, 0x04, 0x13, 0x84, 0x61, 0x9a, 0x20, 0x0c, 0xd4, 0x06, 0x61, 0x20,
  0x26, 0x08, 0x43, 0xb5, 0x41, 0x30, 0x0c, 0x0a, 0x63, 0x73, 0x13, 0x84,
  0xc1, 0xda, 0x30, 0x20, 0x09, 0x31, 0x41, 0x80, 0x03, 0x35, 0x60, 0x31,
  0xf4, 0xc6, 0xf6, 0x26, 0x37, 0x41, 0x18, 0xae, 0x0d, 0x82, 0xd1, 0x6c,
  0x48, 0x8c, 0x85, 0x31, 0x8c, 0x81, 0x30, 0x9c, 0x0d, 0xc1, 0x33, 0x41,
  0x90, 0x83, 0x35, 0x60, 0x72, 0xf5, 0x26, 0xb7, 0x36, 0xf4, 0x56, 0xe7,
  0x46, 0x37, 0x41, 0x18, 0xb0, 0x09, 0x42, 0x1a, 0xa0, 0xc1, 0x86, 0xc5,
  0x88, 0x24, 0xc3, 0x18, 0x26, 0x8a, 0xa2, 0x00, 0x26, 0x57, 0x6f, 0x72,
  0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x1b, 0x96, 0x21, 0xb2, 0x8c, 0x61,
  0x98, 0x28, 0x8a, 0x02, 0x26, 0x08, 0x74, 0xc0, 0x06, 0x54, 0x86, 0xde,
  0xd8, 0xde, 0xe4, 0xa2, 0xea, 0xca, 0xea, 0xca, 0x26, 0x08, 0x43, 0xb6,
  0x61, 0x21, 0xb0, 0xcc, 0x20, 0x06, 0x8d, 0xa2, 0x28, 0x67, 0x82, 0x30,
  0x68, 0x13, 0x04, 0x3b, 0x68, 0x03, 0x12, 0x4c, 0x75, 0x6d, 0x61, 0x1b,
  0x16, 0xae, 0xf3, 0x0c, 0x6e, 0x20, 0x28, 0x8a, 0x72, 0x36, 0x10, 0xd5,
  0xb5, 0x7d, 0x13, 0x04, 0x3d, 0x78, 0x03, 0x0e, 0x43, 0x42, 0x30, 0x13,
  0x84, 0x61, 0xdb, 0x80, 0x18, 0x61, 0x20, 0x06, 0x86, 0x31, 0x8c, 0x01,
  0xb0, 0x21, 0x20, 0x83, 0x0d, 0x04, 0x04, 0x06, 0x65, 0x00, 0x4c, 0x10,
  0xf2, 0xc0, 0x0d, 0xe8, 0x48, 0x8d, 0xc1, 0x51, 0x95, 0xe1, 0xd1, 0xd5,
  0xc9, 0x95, 0x4d, 0xa5, 0xe9, 0x95, 0x4d, 0x10, 0x06, 0x6e, 0x83, 0x91,
  0xa0, 0x01, 0x67, 0xa4, 0x41, 0xc3, 0x68, 0xe8, 0xcd, 0x8d, 0x4e, 0x2e,
  0x6c, 0x8e, 0x8e, 0x0a, 0x4d, 0xae, 0x6c, 0x0e, 0xed, 0x8d, 0x8d, 0x6c,
  0x82, 0x30, 0x74, 0x13, 0x84, 0x34, 0x48, 0x83, 0x0d, 0x48, 0xb2, 0x06,
  0x1c, 0x1b, 0xa4, 0x41, 0xd3, 0xb4, 0x01, 0x9f, 0xa9, 0x3a, 0x31, 0xb8,
  0x34, 0xbc, 0x32, 0x36, 0xa9, 0xb2, 0xb6, 0x37, 0xbb, 0x30, 0xb6, 0x09,
  0xc2, 0xe0, 0x6d, 0x40, 0x92, 0x37, 0xe0, 0xe0, 0x20, 0x0d, 0x9a, 0xa6,
  0x0d, 0xe8, 0x30, 0x85, 0xcd, 0xd1, 0x45, 0xd5, 0x95, 0xd5, 0x95, 0x25,
  0xb9, 0x91, 0x95, 0xe1, 0x4d, 0x10, 0x86, 0x6f, 0x82, 0x30, 0x80, 0xc1,
  0x06, 0x24, 0x91, 0x03, 0x6e, 0x0e, 0xd2, 0x80, 0x0e, 0x9a, 0x36, 0xa0,
  0x32, 0x45, 0x17, 0x26, 0x47, 0x07, 0x95, 0x86, 0x57, 0xc6, 0x36, 0x41,
  0x18, 0xc2, 0x60, 0x03, 0x92, 0xd8, 0x01, 0x77, 0x07, 0x69, 0x40, 0x07,
  0x4d, 0x1b, 0x6c, 0x30, 0xc6, 0x40, 0x0d, 0xdc, 0x20, 0x0e, 0xea, 0x00,
  0x0f, 0x36, 0x0c, 0xc6, 0x19, 0xe4, 0xc1, 0x04, 0x01, 0x11, 0x36, 0x00,
  0x1b, 0x06, 0x83, 0x0f, 0xf8, 0x60, 0x43, 0xd0, 0x07, 0x1b, 0x86, 0x61,
  0x0f, 0xfc, 0x80, 0x44, 0x5b, 0x58, 0x9a, 0xdb, 0x04, 0x61, 0x0f, 0xce,
  0x60, 0x82, 0x30, 0x88, 0xc1, 0x86, 0x81, 0x0d, 0xd8, 0x60, 0xd8, 0x40,
  0x18, 0xa1, 0x20, 0x0a, 0xa3, 0xb0, 0xa1, 0xd8, 0x03, 0x50, 0x00, 0xcc,
  0x80, 0x14, 0x08, 0x85, 0xc9, 0xc9, 0x85, 0xe5, 0x7d, 0xd1, 0x9d, 0xcd,
  0xb5, 0x7d, 0x89, 0xe5, 0xd1, 0x95, 0xcd, 0x4d, 0x10, 0x86, 0x31, 0xe0,
  0x13, 0x26, 0x27, 0x17, 0x96, 0xf7, 0x45, 0x77, 0x36, 0xd7, 0xf6, 0xc5,
  0x46, 0x36, 0x47, 0x47, 0x23, 0x8c, 0xee, 0xad, 0x2d, 0x6d, 0x8c, 0x87,
  0x58, 0x98, 0x9c, 0x5c, 0x5a, 0x99, 0x1c, 0x11, 0x31, 0xb9, 0x30, 0xb7,
  0x31, 0xb4, 0xb2, 0x39, 0x1a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x73, 0x13,
  0x84, 0x81, 0x0c, 0x58, 0xa4, 0xb9, 0xcd, 0xd1, 0xcd, 0x4d, 0x10, 0x86,
  0x32, 0x20, 0x91, 0xe6, 0x46, 0x37, 0x37, 0x41, 0x18, 0xcc, 0x80, 0x08,
  0x5d, 0x19, 0xde, 0x17, 0xdb, 0x5b, 0x18, 0x19, 0x13, 0xba, 0x32, 0xbc,
  0xaf, 0x39, 0xba, 0x37, 0xb9, 0x32, 0x16, 0x75, 0x69, 0x6e, 0x74, 0x73,
  0x1b, 0x2c, 0x53, 0x38, 0x05, 0x54, 0x98, 0x52, 0x81, 0x50, 0x85, 0x61,
  0x15, 0x38, 0x56, 0x68, 0x05, 0x57, 0x78, 0x05, 0x58, 0x88, 0x05, 0x59,
  0x10, 0x85, 0x59, 0x48, 0x68, 0x81, 0x0d, 0xaa, 0xb0, 0xb1, 0xd9, 0xb5,
  0xb9, 0xa4, 0x91, 0x95, 0xb9, 0xd1, 0x4d, 0x09, 0x82, 0x2a, 0x64, 0x78,
  0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x02, 0xa2, 0x09,
  0x19, 0x9e, 0x8b, 0x5d, 0x18, 0x9b, 0x5d, 0x99, 0xdc, 0x94, 0xc0, 0xa8,
  0x43, 0x86, 0xe7, 0x32, 0x87, 0x16, 0x46, 0x56, 0x26, 0xd7, 0xf4, 0x46,
  0x56, 0xc6, 0x36, 0x25, 0x48, 0xca, 0x90, 0xe1, 0xb9, 0xc8, 0x95, 0xcd,
  0xbd, 0xd5, 0xc9, 0x8d, 0x95, 0xcd, 0x4d, 0x09, 0xca, 0xa0, 0x12, 0x19,
  0x9e, 0x0b, 0x5d, 0x1e, 0x5c, 0x59, 0x90, 0x9b, 0xdb, 0x1b, 0x5d, 0x18,
  0x5d, 0xda, 0x9b, 0xdb, 0xdc, 0x14, 0x21, 0x0f, 0xfc, 0xa0, 0x0e, 0x19,
  0x9e, 0x4b, 0x99, 0x1b, 0x9d, 0x5c, 0x1e, 0xd4, 0x5b, 0x9a, 0x1b, 0xdd,
  0xdc, 0x94, 0x80, 0x14, 0xba, 0x90, 0xe1, 0xb9, 0x8c, 0xbd, 0xd5, 0xb9,
  0xd1, 0x95, 0xc9, 0xcd, 0x4d, 0x09, 0x68, 0x01, 0x79, 0x18, 0x00, 0x00,
  0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc,
  0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4,
  0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00,
  0x05, 0x50, 0x05, 0x7e, 0xe7, 0xf9, 0x97, 0x59, 0x6f, 0x87, 0x87, 0xe1,
  0x31, 0xba, 0x0c, 0x04, 0xce, 0xa0, 0xc1, 0x66, 0xd0, 0x02, 0x98, 0xe1,
  0xf2, 0x1b, 0x67, 0x3a, 0x90, 0xc6, 0xf0, 0x01, 0x5b, 0xa8, 0x86, 0xcb,
  0x77, 0x1e, 0x1f, 0x98, 0x1c, 0x06, 0x11, 0x36, 0xa4, 0x41, 0x1f, 0x1f,
  0xb9, 0x6d, 0x43, 0x68, 0x86, 0xcb, 0x77, 0x1e, 0x3f, 0x00, 0xa2, 0x08,
  0x21, 0x22, 0x4b, 0x80, 0x86, 0xcb, 0x77, 0x1e, 0x3f, 0x40, 0x1a, 0x20,
  0xc2, 0xfc, 0xe2, 0xb6, 0xad, 0xa1, 0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0x80,
  0x2a, 0x0a, 0x22, 0x62, 0x27, 0x27, 0x22, 0xfc, 0xe2, 0xb6, 0x2d, 0x62,
  0x1b, 0x2e, 0xdf, 0x79, 0x7c, 0x21, 0xa0, 0x8a, 0x82, 0x88, 0x4a, 0x07,
  0x18, 0x4a, 0xc2, 0x00, 0x04, 0xcc, 0x2f, 0x6e, 0xdb, 0x20, 0xb6, 0xe1,
  0xf2, 0x9d, 0xc7, 0x17, 0x02, 0xaa, 0x28, 0x88, 0xa8, 0x74, 0x80, 0xa1,
  0x24, 0x0c, 0x40, 0xc0, 0x7c, 0xe4, 0xb6, 0x4d, 0x42, 0x1a, 0x2e, 0xdf,
  0x79, 0x7c, 0x21, 0x22, 0x80, 0x89, 0x08, 0x81, 0x66, 0x58, 0x08, 0x73,
  0x70, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x70, 0xa6, 0xdb, 0x2f, 0x6e, 0xdb,
  0x08, 0xc4, 0x60, 0xb8, 0x7c, 0xe7, 0xf1, 0x8b, 0x05, 0x98, 0x26, 0xa2,
  0x21, 0x86, 0xf6, 0x88, 0x08, 0x60, 0x10, 0x07, 0xb1, 0x01, 0x23, 0x87,
  0x7a, 0x7c, 0xe4, 0xb6, 0x6d, 0x20, 0x1a, 0x2e, 0xdf, 0x79, 0x7c, 0x23,
  0x72, 0xa8, 0x47, 0x1c, 0x7c, 0xe4, 0xb6, 0x8d, 0x01, 0x1b, 0x2e, 0xdf,
  0x79, 0xfc, 0x08, 0xb0, 0x36, 0xaa, 0x28, 0x88, 0x88, 0x9d, 0x9c, 0x88,
  0xf0, 0x91, 0xdb, 0xb6, 0x87, 0x6a, 0xb8, 0x7c, 0xe7, 0xf1, 0x27, 0xe2,
  0x9a, 0xa8, 0x88, 0x28, 0x1d, 0x60, 0xf0, 0x8b, 0xdb, 0xb6, 0x03, 0x6b,
  0xb8, 0x7c, 0xe7, 0xf1, 0x27, 0xe2, 0x9a, 0xa8, 0x88, 0x60, 0x27, 0x27,
  0x22, 0xfc, 0xe2, 0xb6, 0xcd, 0x40, 0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0xe9,
  0x88, 0x08, 0x60, 0x10, 0x07, 0x1f, 0xb9, 0x6d, 0x2b, 0xc8, 0x86, 0xcb,
  0x77, 0x1e, 0x7f, 0x3a, 0x22, 0x02, 0x18, 0xc4, 0x41, 0x6c, 0xc0, 0xc8,
  0xa1, 0x1e, 0x1f, 0xb9, 0x6d, 0x53, 0x78, 0x86, 0xcb, 0x77, 0x1e, 0x9f,
  0x6a, 0x80, 0x08, 0xf3, 0x8b, 0xdb, 0x36, 0x01, 0x82, 0x01, 0x90, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x4c, 0x44, 0x4e,
  0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x61, 0x32, 0x62, 0x32,
  0x64, 0x36, 0x35, 0x37, 0x66, 0x65, 0x62, 0x66, 0x64, 0x62, 0x61, 0x61,
  0x39, 0x35, 0x38, 0x37, 0x38, 0x31, 0x32, 0x30, 0x34, 0x34, 0x65, 0x32,
  0x66, 0x38, 0x37, 0x36, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xa2, 0xb2, 0xd6, 0x57, 0xfe, 0xbf, 0xdb, 0xaa, 0x95, 0x87, 0x81, 0x20,
  0x44, 0xe2, 0xf8, 0x76, 0x44, 0x58, 0x49, 0x4c, 0x9c, 0x0f, 0x00, 0x00,
  0x62, 0x00, 0x05, 0x00, 0xe7, 0x03, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x02, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x84, 0x0f, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0xde, 0x03, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x06, 0x90, 0x36, 0x18, 0xc4, 0xff, 0xff,
  0xff, 0xff, 0x0f, 0x80, 0x04, 0x54, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x86,
  0x09, 0x01, 0x01, 0x00, 0x89, 0x20, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xfc, 0xc1, 0x0c, 0x40, 0x92, 0x01, 0x83,
  0x08, 0xc1, 0x30, 0x47, 0x00, 0x06, 0x19, 0x30, 0x10, 0x31, 0x02, 0x50,
  0x02, 0x83, 0x8e, 0x32, 0x0c, 0xc3, 0x40, 0x49, 0x11, 0x86, 0x81, 0x96,
  0x39, 0x02, 0x84, 0x9a, 0x7b, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0xfc,
  0x10, 0x68, 0x86, 0x85, 0x40, 0x81, 0x53, 0x16, 0x63, 0x78, 0x86, 0x61,
  0x00, 0x00, 0x00, 0x68, 0x08, 0x2a, 0x83, 0x31, 0x0c, 0x24, 0x15, 0x02,
  0x18, 0x00, 0x80, 0xa8, 0x32, 0x00, 0x03, 0x40, 0x56, 0x41, 0x86, 0xe1,
  0x19, 0x86, 0x61, 0x18, 0x08, 0x2b, 0x8b, 0x31, 0x3c, 0xc3, 0x30, 0x0c,
  0xc3, 0xd0, 0x0c, 0xa4, 0x15, 0xc5, 0x18, 0x9e, 0x61, 0x00, 0x00, 0x00,
  0x68, 0x88, 0x2b, 0x08, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x37,
  0x0d, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x2b, 0x21, 0xad, 0xc4, 0xe4,
  0x17, 0xb7, 0x8d, 0x0a, 0x00, 0x00, 0x80, 0xa1, 0x28, 0xe0, 0xf0, 0x0c,
  0xc3, 0x30, 0x0c, 0xc3, 0x40, 0xe1, 0x51, 0xc3, 0xe5, 0x4f, 0xd8, 0x43,
  0x48, 0x3e, 0xb7, 0x51, 0xc5, 0x4a, 0x4c, 0x3e, 0x72, 0xdb, 0x88, 0x18,
  0x86, 0x61, 0x28, 0xc4, 0x38, 0x3c, 0x03, 0x91, 0x47, 0x0d, 0x97, 0x3f,
  0x61, 0x0f, 0x21, 0xf9, 0xdc, 0x46, 0x15, 0x2b, 0x31, 0xf9, 0xc5, 0x6d,
  0x23, 0x02, 0x00, 0x00, 0xa0, 0x10, 0xe6, 0xf0, 0x0c, 0x74, 0xce, 0x11,
  0x04, 0xc5, 0x78, 0x86, 0x66, 0x18, 0x52, 0x52, 0x07, 0x02, 0x86, 0x11,
  0x06, 0x60, 0xa6, 0x36, 0x18, 0x07, 0x76, 0x08, 0x87, 0x79, 0x98, 0x07,
  0x37, 0xa0, 0x85, 0x72, 0xc0, 0x07, 0x7a, 0xa8, 0x07, 0x79, 0x28, 0x07,
  0x39, 0x20, 0x05, 0x3e, 0xb0, 0x87, 0x72, 0x18, 0x07, 0x7a, 0x78, 0x07,
  0x79, 0xe0, 0x03, 0x73, 0x60, 0x87, 0x77, 0x08, 0x07, 0x7a, 0x60, 0x03,
  0x30, 0x98, 0x03, 0x3f, 0x00, 0x03, 0x3f, 0xd0, 0x03, 0x3d, 0x68, 0x87,
  0x74, 0x80, 0x87, 0x79, 0xf8, 0x05, 0x7a, 0xc8, 0x07, 0x78, 0x28, 0x07,
  0x14, 0x0c, 0x33, 0x89, 0xc1, 0x38, 0xb0, 0x43, 0x38, 0xcc, 0xc3, 0x3c,
  0xb8, 0x01, 0x2d, 0x94, 0x03, 0x3e, 0xd0, 0x43, 0x3d, 0xc8, 0x43, 0x39,
  0xc8, 0x01, 0x29, 0xf0, 0x81, 0x3d, 0x94, 0xc3, 0x38, 0xd0, 0xc3, 0x3b,
  0xc8, 0x03, 0x1f, 0x98, 0x03, 0x3b, 0xbc, 0x43, 0x38, 0xd0, 0x03, 0x1b,
  0x80, 0xc1, 0x1c, 0xf8, 0x01, 0x18, 0xf8, 0x01, 0x12, 0x5a, 0x97, 0xde,
  0xd3, 0xa4, 0x29, 0xa2, 0x84, 0xc9, 0x5f, 0xe1, 0x0d, 0x9b, 0x08, 0x6d,
  0x18, 0x22, 0x42, 0x92, 0x36, 0xaa, 0x28, 0x88, 0x08, 0x05, 0x03, 0xc5,
  0x33, 0x85, 0xc1, 0x38, 0xb0, 0x43, 0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x81,
  0x2c, 0xdc, 0x82, 0x28, 0xd4, 0x83, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x03,
  0x1f, 0xd8, 0x43, 0x39, 0x8c, 0x03, 0x3d, 0xbc, 0x83, 0x3c, 0xf0, 0x81,
  0x39, 0xb0, 0xc3, 0x3b, 0x84, 0x03, 0x3d, 0xb0, 0x01, 0x18, 0xcc, 0x81,
  0x1f, 0x80, 0x81, 0x1f, 0xa0, 0xa0, 0xa5, 0x79, 0x26, 0x6c, 0x1c, 0xd8,
  0x21, 0x1c, 0xe6, 0x61, 0x1e, 0xdc, 0x40, 0x16, 0x6e, 0x81, 0x16, 0xca,
  0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8,
  0xc0, 0x1c, 0xd8, 0xe1, 0x1d, 0xc2, 0x81, 0x1e, 0xfc, 0x00, 0x05, 0x00,
  0xd5, 0xc3, 0x08, 0x02, 0x30, 0x8c, 0x20, 0x0c, 0x37, 0x70, 0x1b, 0x8d,
  0x8a, 0x1b, 0x00, 0x06, 0x9c, 0xf2, 0x39, 0x02, 0x50, 0xa0, 0x61, 0x0a,
  0x60, 0x10, 0x01, 0x18, 0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0x64, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0xc6,
  0x01, 0xc0, 0xe4, 0x60, 0x06, 0x83, 0x21, 0xcf, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x04, 0x08, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0b, 0x10,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x12,
  0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2,
  0x24, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
  0xe4, 0x81, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x60, 0xc8, 0x23, 0x01, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xc0, 0x90, 0x87, 0x02, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0x8f, 0x05, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x0c, 0x08, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x1a, 0x10, 0x00, 0x02, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x38, 0x20, 0x00, 0x04,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x78, 0x40, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x09, 0x03,
  0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2,
  0x90, 0x01, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0xce, 0x00, 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x86, 0x3c, 0x6a, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x59, 0x20, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x1a, 0x4a, 0xa0, 0x08, 0x8a, 0x61, 0x04, 0xa0, 0x24,
  0xca, 0xa2, 0x28, 0xca, 0xa0, 0x70, 0x0a, 0xa1, 0x20, 0x68, 0x2f, 0x11,
  0x4a, 0x47, 0x00, 0x08, 0x9e, 0x01, 0x20, 0x79, 0x06, 0x80, 0xe8, 0x19,
  0x00, 0xb2, 0x67, 0x00, 0x48, 0x9f, 0x01, 0x20, 0x62, 0x04, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1,
  0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41,
  0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a,
  0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9,
  0x10, 0x04, 0x13, 0x84, 0x61, 0x9a, 0x20, 0x0c, 0xd4, 0x06, 0x61, 0x20,
  0x26, 0x08, 0x43, 0xb5, 0x41, 0x18, 0x0c, 0x0a, 0x63, 0x73, 0x1b, 0x06,
  0xc4, 0x20, 0x26, 0x08, 0x83, 0x35, 0x41, 0x80, 0x03, 0x30, 0x20, 0x30,
  0x41, 0x18, 0xae, 0x0d, 0x82, 0xd2, 0x6c, 0x48, 0x94, 0x85, 0x51, 0x94,
  0x81, 0x50, 0x9c, 0x0d, 0xc1, 0x33, 0x41, 0x90, 0x83, 0x30, 0x98, 0x20,
  0x0c, 0xd8, 0x04, 0x21, 0x0d, 0xbe, 0x0d, 0x8b, 0x12, 0x31, 0x8a, 0x32,
  0x48, 0xd3, 0x34, 0x01, 0x1b, 0x96, 0x21, 0x62, 0x94, 0x61, 0x90, 0xa6,
  0x69, 0x02, 0x26, 0x08, 0x74, 0x20, 0x06, 0x13, 0x84, 0x21, 0xdb, 0xb0,
  0x10, 0x16, 0xa3, 0x10, 0xc3, 0x35, 0x4d, 0x93, 0x33, 0x41, 0x18, 0xb4,
  0x09, 0x82, 0x1d, 0x8c, 0xc1, 0x86, 0x25, 0xd3, 0x18, 0x25, 0x1b, 0x88,
  0x69, 0x9a, 0x9c, 0x0d, 0x04, 0x55, 0x61, 0xdb, 0x04, 0x41, 0x0f, 0xc8,
  0x60, 0x82, 0x30, 0x6c, 0x1b, 0x10, 0xa5, 0x63, 0x14, 0x65, 0xf0, 0x80,
  0x0d, 0xc1, 0xb7, 0x81, 0x80, 0x38, 0x30, 0x00, 0x26, 0x08, 0x88, 0x40,
  0xa2, 0x2d, 0x2c, 0xcd, 0x6d, 0x82, 0xb0, 0x07, 0xde, 0x04, 0x61, 0xe0,
  0x26, 0x08, 0x43, 0xb7, 0x61, 0x30, 0x03, 0x33, 0x18, 0x36, 0x10, 0x0a,
  0x19, 0x94, 0xc1, 0x19, 0x6c, 0x28, 0xc4, 0x60, 0x0c, 0x80, 0x30, 0x40,
  0x83, 0x2a, 0x6c, 0x6c, 0x76, 0x6d, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
  0x53, 0x82, 0xa0, 0x0a, 0x19, 0x9e, 0x8b, 0x5d, 0x99, 0xdc, 0x5c, 0xda,
  0x9b, 0xdb, 0x94, 0x80, 0x68, 0x42, 0x86, 0xe7, 0x62, 0x17, 0xc6, 0x66,
  0x57, 0x26, 0x37, 0x25, 0x30, 0xea, 0x90, 0xe1, 0xb9, 0xcc, 0xa1, 0x85,
  0x91, 0x95, 0xc9, 0x35, 0xbd, 0x91, 0x95, 0xb1, 0x4d, 0x09, 0x90, 0x32,
  0x64, 0x78, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
  0x53, 0x02, 0x30, 0xa8, 0x43, 0x86, 0xe7, 0x52, 0xe6, 0x46, 0x27, 0x97,
  0x07, 0xf5, 0x96, 0xe6, 0x46, 0x37, 0x37, 0x25, 0x40, 0x03, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81,
  0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d,
  0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x52, 0x00, 0x00, 0x00, 0x05, 0x50, 0x05, 0x7e, 0xe7, 0xf9, 0x97, 0x59,
  0x6f, 0x87, 0x87, 0xe1, 0x31, 0xba, 0x0c, 0x04, 0xce, 0xa0, 0xc1, 0x66,
  0xd0, 0x02, 0x98, 0xe1, 0xf2, 0x1b, 0x67, 0x3a, 0x90, 0xc6, 0xf0, 0x01,
  0x5b, 0xa8, 0x86, 0xcb, 0x77, 0x1e, 0x1f, 0x98, 0x1c, 0x06, 0x11, 0x36,
  0xa4, 0x41, 0x1f, 0x1f, 0xb9, 0x6d, 0x43, 0x68, 0x86, 0xcb, 0x77, 0x1e,
  0x3f, 0x00, 0xa2, 0x08, 0x21, 0x22, 0x4b, 0x80, 0x86, 0xcb, 0x77, 0x1e,
  0x3f, 0x40, 0x1a, 0x20, 0xc2, 0xfc, 0xe2, 0xb6, 0xad, 0xa1, 0x1a, 0x2e,
  0xdf, 0x79, 0xfc, 0x80, 0x2a, 0x0a, 0x22, 0x62, 0x27, 0x27, 0x22, 0xfc,
  0xe2, 0xb6, 0x2d, 0x62, 0x1b, 0x2e, 0xdf, 0x79, 0x7c, 0x21, 0xa0, 0x8a,
  0x82, 0x88, 0x4a, 0x07, 0x18, 0x4a, 0xc2, 0x00, 0x04, 0xcc, 0x2f, 0x6e,
  0xdb, 0x20, 0xb6, 0xe1, 0xf2, 0x9d, 0xc7, 0x17, 0x02, 0xaa, 0x28, 0x88,
  0xa8, 0x74, 0x80, 0xa1, 0x24, 0x0c, 0x40, 0xc0, 0x7c, 0xe4, 0xb6, 0x4d,
  0x42, 0x1a, 0x2e, 0xdf, 0x79, 0x7c, 0x21, 0x22, 0x80, 0x89, 0x08, 0x81,
  0x66, 0x58, 0x08, 0x73, 0x70, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x70, 0xa6,
  0xdb, 0x2f, 0x6e, 0xdb, 0x08, 0xc4, 0x60, 0xb8, 0x7c, 0xe7, 0xf1, 0x8b,
  0x05, 0x98, 0x26, 0xa2, 0x21, 0x86, 0xf6, 0x88, 0x08, 0x60, 0x10, 0x07,
  0xb1, 0x01, 0x23, 0x87, 0x7a, 0x7c, 0xe4, 0xb6, 0x6d, 0x20, 0x1a, 0x2e,
  0xdf, 0x79, 0x7c, 0x23, 0x72, 0xa8, 0x47, 0x1c, 0x7c, 0xe4, 0xb6, 0x8d,
  0x01, 0x1b, 0x2e, 0xdf, 0x79, 0xfc, 0x08, 0xb0, 0x36, 0xaa, 0x28, 0x88,
  0x88, 0x9d, 0x9c, 0x88, 0xf0, 0x91, 0xdb, 0xb6, 0x87, 0x6a, 0xb8, 0x7c,
  0xe7, 0xf1, 0x27, 0xe2, 0x9a, 0xa8, 0x88, 0x28, 0x1d, 0x60, 0xf0, 0x8b,
  0xdb, 0xb6, 0x03, 0x6b, 0xb8, 0x7c, 0xe7, 0xf1, 0x27, 0xe2, 0x9a, 0xa8,
  0x88, 0x60, 0x27, 0x27, 0x22, 0xfc, 0xe2, 0xb6, 0xcd, 0x40, 0x1a, 0x2e,
  0xdf, 0x79, 0xfc, 0xe9, 0x88, 0x08, 0x60, 0x10, 0x07, 0x1f, 0xb9, 0x6d,
  0x2b, 0xc8, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x3a, 0x22, 0x02, 0x18, 0xc4,
  0x41, 0x6c, 0xc0, 0xc8, 0xa1, 0x1e, 0x1f, 0xb9, 0x6d, 0x53, 0x78, 0x86,
  0xcb, 0x77, 0x1e, 0x9f, 0x6a, 0x80, 0x08, 0xf3, 0x8b, 0xdb, 0x36, 0x01,
  0x82, 0x01, 0x90, 0x06, 0x00, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0xc0, 0x01, 0x00, 0x00, 0x13, 0x04, 0x48, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x22, 0x00, 0x00, 0x00, 0xd4, 0x14, 0xc1, 0x08, 0x40, 0x79, 0x94, 0x00,
  0x0d, 0x85, 0x52, 0xfc, 0x03, 0x05, 0x1a, 0x50, 0x0a, 0x05, 0x1c, 0x50,
  0x8a, 0x01, 0x85, 0x29, 0x30, 0x03, 0x50, 0x72, 0x65, 0x57, 0x84, 0x01,
  0x65, 0x54, 0x48, 0xc5, 0x1b, 0x50, 0xbe, 0x01, 0xa5, 0x1b, 0x50, 0x64,
  0xe5, 0x56, 0x2e, 0x65, 0x18, 0x50, 0x0e, 0xc5, 0x19, 0x40, 0xc0, 0x18,
  0x01, 0x08, 0x82, 0xfc, 0x1d, 0x06, 0x63, 0x04, 0x20, 0x08, 0x82, 0x24,
  0x18, 0x8c, 0x00, 0x8c, 0x11, 0x80, 0x20, 0x08, 0xd2, 0x60, 0x30, 0x46,
  0x00, 0x82, 0x20, 0x88, 0x82, 0xc1, 0x18, 0x01, 0x08, 0x82, 0xe0, 0x0d,
  0x06, 0x63, 0x04, 0xb7, 0x3a, 0x9f, 0xb9, 0x37, 0x46, 0xa0, 0x97, 0xa5,
  0x3b, 0x7f, 0x63, 0x04, 0xed, 0x1c, 0xcf, 0xe5, 0x37, 0x46, 0x00, 0x82,
  0x20, 0x88, 0x7f, 0x63, 0x04, 0x20, 0x08, 0x82, 0x20, 0x18, 0x10, 0x3f,
  0xd4, 0x41, 0x14, 0xc1, 0x60, 0x0d, 0x16, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0xa0, 0x06, 0x7a, 0xa0, 0x8d, 0x81, 0x1c, 0xc8, 0x41, 0x1b,
  0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x1a, 0xec, 0xc1, 0x46, 0x06,
  0x79, 0x90, 0x07, 0x6e, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x6a,
  0xc0, 0x07, 0x5c, 0x19, 0xec, 0xc1, 0x1e, 0xbc, 0xc1, 0x88, 0x41, 0x02,
  0x80, 0x20, 0x18, 0xa8, 0x41, 0x1f, 0x74, 0x66, 0x90, 0x07, 0x79, 0x00,
  0x07, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xa0, 0x06, 0x7e, 0xe0, 0xa5,
  0x81, 0x1e, 0xe8, 0x41, 0x1c, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81,
  0x1a, 0xfc, 0xc1, 0xb7, 0x06, 0x7b, 0xb0, 0x07, 0x72, 0x30, 0x62, 0x60,
  0x00, 0x20, 0x08, 0x06, 0xc9, 0x2b, 0x6c, 0x7c, 0x30, 0x62, 0x60, 0x00,
  0x20, 0x08, 0x06, 0x09, 0x2c, 0x70, 0xa0, 0x30, 0x62, 0x50, 0x00, 0x20,
  0x08, 0x06, 0x0b, 0x2c, 0x98, 0xc1, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18,
  0x24, 0xb0, 0xd0, 0xfd, 0xc1, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x24,
  0xb1, 0xe0, 0x8d, 0xc2, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x24, 0xb1,
  0xe0, 0x85, 0xc2, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x24, 0xb2, 0xf0,
  0x95, 0xc2, 0x4c, 0xc4, 0x30, 0x4c, 0xa3, 0x30, 0x13, 0x31, 0x0c, 0xd3,
  0x28, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x01, 0x19, 0xac, 0x02, 0x1a,
  0x28, 0xa8, 0x30, 0x9a, 0x10, 0x04, 0xa3, 0x09, 0x82, 0x50, 0x87, 0x00,
  0x75, 0x08, 0x40, 0xd5, 0x00, 0x86, 0x1b, 0x9a, 0x33, 0x20, 0x83, 0xe1,
  0x86, 0x60, 0x14, 0xc2, 0x60, 0xb8, 0x21, 0x20, 0x85, 0x30, 0x98, 0x65,
  0x08, 0x84, 0x80, 0xb2, 0x01, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x01,
  0x19, 0xd4, 0x82, 0x1c, 0x50, 0xb2, 0x30, 0x9a, 0x10, 0x04, 0xa3, 0x09,
  0x82, 0x50, 0xd4, 0x2b, 0x54, 0x55, 0xb0, 0x30, 0x45, 0x08, 0x50, 0x84,
  0x00, 0xa5, 0xbd, 0x82, 0x94, 0x06, 0x0b, 0x52, 0x84, 0x00, 0x45, 0x08,
  0x50, 0x42, 0x2f, 0x44, 0x09, 0xbe, 0x10, 0x74, 0x06, 0x03, 0x20, 0x34,
  0x18, 0xc0, 0x88, 0x41, 0x03, 0x80, 0x20, 0x18, 0x84, 0x41, 0x39, 0x80,
  0x02, 0x19, 0xf8, 0x02, 0x31, 0x8c, 0xc2, 0x28, 0x8c, 0xc2, 0x28, 0x8c,
  0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0x02, 0xb5, 0xc1,
  0x00, 0xc8, 0x0d, 0x06, 0x30, 0x62, 0xb0, 0x00, 0x20, 0x08, 0x06, 0x1e,
  0x3b, 0xfc, 0x41, 0x41, 0x0c, 0x72, 0x30, 0x07, 0x74, 0x40, 0x70, 0x30,
  0x00, 0x13, 0xee, 0x40, 0x3e, 0x46, 0x07, 0x01, 0x7c, 0x46, 0x0c, 0x0c,
  0x00, 0x04, 0xc1, 0xc0, 0xa2, 0x07, 0x51, 0x08, 0x2c, 0xd8, 0x03, 0xfa,
  0x50, 0x1d, 0x0c, 0x80, 0xec, 0x60, 0x00, 0x23, 0x06, 0x0e, 0x00, 0x82,
  0x60, 0x00, 0xed, 0x43, 0x29, 0xd8, 0x81, 0x14, 0xc5, 0xc2, 0x30, 0x0c,
  0x83, 0x2e, 0xac, 0x60, 0x10, 0x09, 0x76, 0x70, 0x83, 0x61, 0x03, 0x22,
  0x20, 0x06, 0xa0, 0xde, 0x20, 0x15, 0x80, 0xf2, 0x60, 0x00, 0x55, 0xbd,
  0x03, 0x54, 0x95, 0x0b, 0x40, 0x7c, 0x30, 0x00, 0xea, 0x83, 0x01, 0x8c,
  0x18, 0x34, 0x00, 0x08, 0x82, 0x41, 0x18, 0xe8, 0x43, 0x2d, 0xe4, 0xc1,
  0x3c, 0x10, 0x03, 0x2e, 0xe0, 0x02, 0x2e, 0xe0, 0xc2, 0x68, 0x42, 0x00,
  0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x90, 0x28, 0x0c, 0x80, 0x46,
  0x61, 0x00, 0x23, 0x06, 0x0b, 0x00, 0x82, 0x60, 0xe0, 0x85, 0x04, 0x2d,
  0x14, 0xc4, 0x70, 0x0a, 0xa8, 0x90, 0x0a, 0x54, 0x0a, 0x03, 0x30, 0x81,
  0x15, 0xe4, 0x63, 0xa9, 0x10, 0xc0, 0x67, 0xc4, 0xc0, 0x00, 0x40, 0x10,
  0x0c, 0xac, 0x94, 0xb8, 0x85, 0xc0, 0x02, 0x58, 0xa0, 0x0f, 0xa9, 0xc2,
  0x00, 0x68, 0x15, 0x06, 0x30, 0x62, 0xe0, 0x00, 0x20, 0x08, 0x06, 0x10,
  0x4c, 0xe8, 0xc2, 0x2a, 0x48, 0x91, 0x39, 0x0c, 0xc3, 0x30, 0xbc, 0xc3,
  0x0a, 0x86, 0x9b, 0x08, 0x09, 0x6a, 0xd8, 0x80, 0x08, 0x88, 0x01, 0x98,
  0x25, 0x10, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x40, 0x82, 0x09, 0x76,
  0x08, 0x89, 0x1a, 0x85, 0x92, 0x80, 0x1a, 0x05, 0x93, 0x80, 0x0a, 0x42,
  0x42, 0x6a, 0x08, 0x80, 0x62, 0x61, 0x00, 0x25, 0x90, 0x44, 0xac, 0x60,
  0xf0, 0x09, 0x94, 0x08, 0x28, 0x00, 0x06, 0xd5, 0xc2, 0x00, 0xca, 0x70,
  0x89, 0x58, 0xc1, 0x20, 0x16, 0x2c, 0x11, 0x50, 0x00, 0x0c, 0xca, 0x85,
  0x01, 0xac, 0x60, 0x28, 0x8b, 0x97, 0x50, 0x28, 0x00, 0x06, 0xf1, 0xc2,
  0x00, 0xaa, 0xa9, 0x09, 0x58, 0xc1, 0x90, 0x16, 0x33, 0x11, 0x50, 0x00,
  0x0c, 0x02, 0x87, 0x01, 0x54, 0x34, 0x13, 0xb0, 0x82, 0xa1, 0x2d, 0x6e,
  0x22, 0xa0, 0x00, 0x18, 0x44, 0x0e, 0x03, 0x18, 0x31, 0x38, 0x00, 0x10,
  0x04, 0x03, 0xea, 0x2c, 0xf6, 0x41, 0x50, 0x46, 0x0c, 0x0e, 0x00, 0x04,
  0xc1, 0x80, 0x42, 0x0b, 0x7e, 0x38, 0x82, 0x11, 0x83, 0x03, 0x00, 0x41,
  0x30, 0xa0, 0xd2, 0xa2, 0x1f, 0xa6, 0x67, 0xc4, 0xe0, 0x00, 0x40, 0x10,
  0x0c, 0x28, 0xb5, 0xf0, 0x87, 0x40, 0xa0, 0x74, 0x18, 0xc0, 0x88, 0xc1,
  0x01, 0x80, 0x20, 0x18, 0x50, 0x6c, 0xf1, 0x0f, 0xc7, 0x33, 0x62, 0x70,
  0x00, 0x20, 0x08, 0x06, 0x54, 0x5b, 0x80, 0x04, 0x13, 0x8c, 0x18, 0x1c,
  0x00, 0x08, 0x82, 0x01, 0xe5, 0x16, 0x21, 0x81, 0x51, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0x40, 0xbd, 0x85, 0x48, 0x04, 0x02, 0xb9, 0xc3, 0x00,
  0xec, 0x10, 0xe2, 0x43, 0xf0, 0x30, 0x80, 0x11, 0x83, 0x03, 0x00, 0x41,
  0x30, 0x38, 0x83, 0xb5, 0x48, 0x89, 0x75, 0x30, 0x8b, 0xd1, 0x84, 0x40,
  0x18, 0x8e, 0x20, 0x02, 0xe2, 0x1b, 0x6e, 0x08, 0xc0, 0x22, 0x0c, 0x86,
  0x1b, 0x82, 0xb0, 0x08, 0x83, 0x59, 0x86, 0x81, 0x08, 0x66, 0x09, 0x8e,
  0x32, 0x03, 0xb4, 0x88, 0x0a, 0xde, 0x22, 0x56, 0x30, 0x8c, 0x46, 0x5b,
  0x04, 0x14, 0x00, 0x83, 0xf4, 0x61, 0x00, 0xb5, 0x06, 0x6d, 0x11, 0x15,
  0xd0, 0x05, 0xac, 0x60, 0x40, 0x0d, 0xb9, 0x08, 0x28, 0x00, 0x06, 0xfd,
  0xc3, 0x00, 0x0a, 0x0e, 0xe4, 0x02, 0x2a, 0xc8, 0x8b, 0x58, 0xc1, 0xd0,
  0x1a, 0x77, 0x11, 0x50, 0x00, 0x0c, 0x22, 0x89, 0x01, 0x54, 0x1d, 0xdc,
  0x05, 0x54, 0xe0, 0x17, 0xb0, 0x82, 0x41, 0x36, 0xf8, 0x22, 0xa0, 0x00,
  0x18, 0x94, 0x12, 0x03, 0x30, 0x3b, 0x38, 0x03, 0xf8, 0xd0, 0x4a, 0x0c,
  0xc0, 0xe8, 0xa0, 0x0d, 0xe0, 0x43, 0x2d, 0x31, 0x00, 0xab, 0x16, 0xf8,
  0xd0, 0x4b, 0x0c, 0xc0, 0x24, 0x04, 0x3e, 0x14, 0x13, 0x03, 0xb0, 0x47,
  0x81, 0x0f, 0xcd, 0xc4, 0x00, 0x6c, 0xb3, 0xe0, 0x43, 0x35, 0x31, 0x00,
  0xbb, 0x09, 0x3f, 0x90, 0x8f, 0x25, 0x41, 0x7c, 0x46, 0x0c, 0x0c, 0x00,
  0x04, 0xc1, 0xc0, 0xca, 0x0d, 0xd7, 0x08, 0x4c, 0x27, 0xfc, 0x40, 0x3e,
  0x06, 0x05, 0xf1, 0x19, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x8b, 0x37,
  0x62, 0x23, 0xb0, 0xa0, 0x27, 0xe4, 0x63, 0x45, 0x00, 0x1f, 0xfb, 0x89,
  0x3f, 0x90, 0x8f, 0x3d, 0x41, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1,
  0xc0, 0x0a, 0x0f, 0xdb, 0x08, 0x8c, 0x08, 0xe0, 0x43, 0x62, 0x31, 0x00,
  0x23, 0x0b, 0x50, 0x90, 0x8f, 0x49, 0x41, 0x7c, 0x46, 0x0c, 0x0c, 0x00,
  0x04, 0xc1, 0xc0, 0x32, 0x8f, 0xdd, 0x08, 0xec, 0x2c, 0x56, 0x41, 0x3e,
  0xb6, 0x05, 0xf1, 0x19, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x2b, 0x3d,
  0x7c, 0x23, 0xb0, 0x40, 0x2d, 0xe4, 0x63, 0x45, 0x00, 0x1f, 0x63, 0x8b,
  0x5b, 0x90, 0x8f, 0x61, 0x41, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1,
  0xc0, 0x72, 0x8f, 0xf1, 0x08, 0x8c, 0x08, 0xe0, 0x43, 0x6f, 0x31, 0x00,
  0x33, 0x03, 0x32, 0x80, 0x8f, 0x05, 0x72, 0x21, 0x1f, 0x0b, 0xc8, 0x00,
  0x3e, 0x16, 0x8c, 0x01, 0x7c, 0x2c, 0xe0, 0x0b, 0xfa, 0x50, 0x5d, 0x0c,
  0xc0, 0x84, 0x5d, 0x88, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x58,
  0xf8, 0xd1, 0x1e, 0x81, 0x05, 0xa9, 0x40, 0x1f, 0x0b, 0x44, 0x23, 0x3e,
  0x16, 0xf0, 0x05, 0x7d, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xc0, 0xe2,
  0x0f, 0xd4, 0x08, 0x2c, 0xe8, 0x0b, 0xf9, 0xd8, 0x69, 0x04, 0xf1, 0xb1,
  0x21, 0x90, 0x8f, 0x11, 0x81, 0x7c, 0x2c, 0x08, 0xe4, 0x33, 0x62, 0x70,
  0x00, 0x20, 0x08, 0x06, 0x67, 0xb0, 0x1f, 0xb9, 0xb1, 0x17, 0xf6, 0x31,
  0x9a, 0x10, 0x0c, 0x36, 0x04, 0xf2, 0xb1, 0xa0, 0x34, 0xe4, 0x33, 0x62,
  0x60, 0x00, 0x20, 0x08, 0x06, 0x96, 0x89, 0xc8, 0x46, 0x40, 0xa6, 0x31,
  0x80, 0xe1, 0x08, 0x33, 0xc8, 0x86, 0x6f, 0xb8, 0x21, 0xa0, 0x8f, 0x30,
  0x98, 0x6e, 0xa8, 0x87, 0x78, 0x08, 0x2c, 0x78, 0x87, 0xf8, 0xd0, 0x6a,
  0x0c, 0x60, 0x38, 0x62, 0x0d, 0xbc, 0xe1, 0x1b, 0x6e, 0x08, 0xf2, 0x23,
  0x0c, 0xa6, 0x1b, 0xd6, 0xe1, 0x1d, 0x02, 0x0b, 0xe8, 0x21, 0x3e, 0x04,
  0x1b, 0x03, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x4b, 0x46, 0x4e,
  0x44, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x6b, 0x46, 0x50, 0x04,
  0x19, 0x8e, 0x10, 0x82, 0xe1, 0x1b, 0x6e, 0x08, 0x40, 0x24, 0x0c, 0xa6,
  0x1b, 0x5a, 0x44, 0x45, 0x02, 0xb2, 0x8d, 0x01, 0x98, 0x24, 0x1e, 0xf2,
  0xb9, 0x60, 0x98, 0x0a, 0xf2, 0x43, 0x49, 0x37, 0x06, 0x50, 0xae, 0xc1,
  0x1f, 0x57, 0xb0, 0xa1, 0x22, 0x57, 0x42, 0xb0, 0x15, 0x14, 0x5b, 0x81,
  0xb2, 0x04, 0x1e, 0x03, 0x18, 0x8e, 0x00, 0x85, 0x39, 0x18, 0xbe, 0xe1,
  0x86, 0xc0, 0x45, 0xc2, 0x60, 0xb8, 0x21, 0x78, 0x91, 0x30, 0x98, 0x65,
  0x28, 0x8c, 0x60, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0x30, 0x32, 0x81,
  0x0f, 0xf0, 0xc8, 0x91, 0x1c, 0xf1, 0x0f, 0xff, 0xe0, 0x91, 0x61, 0x03,
  0xe2, 0x36, 0x02, 0x00, 0xa0, 0xdb, 0x18, 0x46, 0x05, 0x35, 0x22, 0x23,
  0x06, 0x0e, 0x00, 0x82, 0x60, 0xa0, 0x99, 0x89, 0x88, 0x90, 0x47, 0x10,
  0x22, 0x48, 0x88, 0x84, 0x48, 0x88, 0xa4, 0x88, 0x8d, 0x94, 0x8f, 0x48,
  0x52, 0x01, 0x98, 0x44, 0xd9, 0x86, 0x8f, 0x40, 0xd9, 0x86, 0x00, 0xb4,
  0x1e, 0x03, 0x18, 0x31, 0x68, 0x00, 0x10, 0x04, 0x83, 0x30, 0x40, 0x93,
  0x11, 0x39, 0x8f, 0x30, 0x19, 0x04, 0x13, 0x31, 0x11, 0x13, 0x31, 0x91,
  0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x20, 0xf8,
  0x18, 0x00, 0x8d, 0xc7, 0x30, 0x46, 0x0c, 0x1a, 0x00, 0x04, 0xc1, 0x80,
  0x83, 0x13, 0x17, 0x81, 0x8f, 0x80, 0x45, 0x0a, 0x62, 0x28, 0x6a, 0x64,
  0x96, 0xe0, 0x18, 0x31, 0x58, 0x00, 0x10, 0x04, 0x03, 0x4c, 0x4e, 0xfc,
  0xc3, 0x3d, 0xce, 0x24, 0x4c, 0x58, 0x84, 0x45, 0xd4, 0x64, 0xd8, 0x80,
  0x20, 0x8f, 0x00, 0x00, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x80, 0x0c,
  0xdc, 0x64, 0x45, 0xda, 0x63, 0x4d, 0x46, 0x13, 0x02, 0x80, 0xcc, 0x63,
  0x18, 0x25, 0x04, 0x41, 0xf7, 0x31, 0x80, 0x61, 0x03, 0x22, 0x3d, 0x84,
  0x01, 0xa0, 0xf4, 0x18, 0x46, 0x05, 0x68, 0x22, 0x23, 0x06, 0x0e, 0x00,
  0x82, 0x60, 0xa0, 0xe5, 0x49, 0x8d, 0xdc, 0x47, 0x40, 0x23, 0x1b, 0x8d,
  0xd0, 0x08, 0x8d, 0xf0, 0x48, 0x9a, 0x54, 0x9c, 0x94, 0x81, 0x54, 0x30,
  0x27, 0x51, 0xe9, 0x11, 0x40, 0xa5, 0x87, 0x9c, 0x00, 0xf9, 0xc7, 0x00,
  0x46, 0x0c, 0x1a, 0x00, 0x04, 0xc1, 0x20, 0x0c, 0xf6, 0xc4, 0x46, 0xf4,
  0x83, 0x4e, 0x06, 0x21, 0x47, 0x72, 0x24, 0x47, 0x72, 0x64, 0x34, 0x21,
  0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x68, 0x44, 0x06, 0x40,
  0xf5, 0x31, 0x8c, 0x11, 0x83, 0x06, 0x00, 0x41, 0x30, 0xe0, 0x46, 0x25,
  0x4c, 0x46, 0x24, 0xf8, 0x91, 0x82, 0x18, 0x0a, 0x34, 0x99, 0x25, 0x38,
  0xa8, 0x44, 0x06, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
