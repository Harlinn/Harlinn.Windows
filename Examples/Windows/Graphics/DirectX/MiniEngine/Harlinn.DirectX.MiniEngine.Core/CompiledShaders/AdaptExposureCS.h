#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader hash: 2e4991f31c11a13b0009f142fca9d663
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; cbuffer cb0
; {
;
;   struct cb0
;   {
;
;       float TargetLuminance;                        ; Offset:    0
;       float AdaptationRate;                         ; Offset:    4
;       float MinExposure;                            ; Offset:    8
;       float MaxExposure;                            ; Offset:   12
;       uint PixelCount;                              ; Offset:   16
;   
;   } cb0;                                            ; Offset:    0 Size:    20
;
; }
;
; Resource bind info for Exposure
; {
;
;   float $Element;                                   ; Offset:    0 Size:     4
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; cb0                               cbuffer      NA          NA     CB0            cb1     1
; Histogram                         texture    byte         r/o      T0             t0     1
; Exposure                              UAV  struct         r/w      U0             u0     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%struct.ByteAddressBuffer = type { i32 }
%"class.RWStructuredBuffer<float>" = type { float }
%cb0 = type { float, float, float, float, i32 }

@"\01?gs_Accum@@3PAMA" = external addrspace(3) global [256 x float], align 4

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call i32 @dx.op.flattenedThreadIdInGroup.i32(i32 96)  ; FlattenedThreadIdInGroup()
  %5 = uitofp i32 %4 to float
  %6 = shl i32 %4, 2
  %7 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %2, i32 %6, i32 undef, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %8 = extractvalue %dx.types.ResRet.i32 %7, 0
  %9 = uitofp i32 %8 to float
  %10 = fmul fast float %9, %5
  %11 = getelementptr [256 x float], [256 x float] addrspace(3)* @"\01?gs_Accum@@3PAMA", i32 0, i32 %4
  store float %10, float addrspace(3)* %11, align 4, !tbaa !15
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %12 = add i32 %4, 1
  %13 = and i32 %12, 255
  %14 = getelementptr [256 x float], [256 x float] addrspace(3)* @"\01?gs_Accum@@3PAMA", i32 0, i32 %13
  %15 = load float, float addrspace(3)* %14, align 4, !tbaa !15
  %16 = fadd fast float %10, %15
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  store float %16, float addrspace(3)* %11, align 4, !tbaa !15
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %17 = add i32 %4, 2
  %18 = and i32 %17, 255
  %19 = getelementptr [256 x float], [256 x float] addrspace(3)* @"\01?gs_Accum@@3PAMA", i32 0, i32 %18
  %20 = load float, float addrspace(3)* %19, align 4, !tbaa !15
  %21 = fadd fast float %20, %16
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  store float %21, float addrspace(3)* %11, align 4, !tbaa !15
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %22 = add i32 %4, 4
  %23 = and i32 %22, 255
  %24 = getelementptr [256 x float], [256 x float] addrspace(3)* @"\01?gs_Accum@@3PAMA", i32 0, i32 %23
  %25 = load float, float addrspace(3)* %24, align 4, !tbaa !15
  %26 = fadd fast float %25, %21
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  store float %26, float addrspace(3)* %11, align 4, !tbaa !15
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %27 = add i32 %4, 8
  %28 = and i32 %27, 255
  %29 = getelementptr [256 x float], [256 x float] addrspace(3)* @"\01?gs_Accum@@3PAMA", i32 0, i32 %28
  %30 = load float, float addrspace(3)* %29, align 4, !tbaa !15
  %31 = fadd fast float %30, %26
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  store float %31, float addrspace(3)* %11, align 4, !tbaa !15
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %32 = add i32 %4, 16
  %33 = and i32 %32, 255
  %34 = getelementptr [256 x float], [256 x float] addrspace(3)* @"\01?gs_Accum@@3PAMA", i32 0, i32 %33
  %35 = load float, float addrspace(3)* %34, align 4, !tbaa !15
  %36 = fadd fast float %35, %31
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  store float %36, float addrspace(3)* %11, align 4, !tbaa !15
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %37 = add i32 %4, 32
  %38 = and i32 %37, 255
  %39 = getelementptr [256 x float], [256 x float] addrspace(3)* @"\01?gs_Accum@@3PAMA", i32 0, i32 %38
  %40 = load float, float addrspace(3)* %39, align 4, !tbaa !15
  %41 = fadd fast float %40, %36
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  store float %41, float addrspace(3)* %11, align 4, !tbaa !15
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %42 = add i32 %4, 64
  %43 = and i32 %42, 255
  %44 = getelementptr [256 x float], [256 x float] addrspace(3)* @"\01?gs_Accum@@3PAMA", i32 0, i32 %43
  %45 = load float, float addrspace(3)* %44, align 4, !tbaa !15
  %46 = fadd fast float %45, %41
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  store float %46, float addrspace(3)* %11, align 4, !tbaa !15
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %47 = add i32 %4, 128
  %48 = and i32 %47, 255
  %49 = getelementptr [256 x float], [256 x float] addrspace(3)* @"\01?gs_Accum@@3PAMA", i32 0, i32 %48
  %50 = load float, float addrspace(3)* %49, align 4, !tbaa !15
  %51 = fadd fast float %50, %46
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %52 = fcmp fast oeq float %51, 0.000000e+00
  br i1 %52, label %104, label %53

; <label>:53                                      ; preds = %0
  %54 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1, i32 4, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %55 = extractvalue %dx.types.ResRet.f32 %54, 0
  %56 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1, i32 5, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %57 = extractvalue %dx.types.ResRet.f32 %56, 0
  %58 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1, i32 6, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %59 = extractvalue %dx.types.ResRet.f32 %58, 0
  %60 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1, i32 7, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %61 = extractvalue %dx.types.ResRet.f32 %60, 0
  %62 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %3, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %63 = extractvalue %dx.types.CBufRet.i32 %62, 0
  %64 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %2, i32 0, i32 undef, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %65 = extractvalue %dx.types.ResRet.i32 %64, 0
  %66 = sub i32 %63, %65
  %67 = call i32 @dx.op.binary.i32(i32 39, i32 1, i32 %66)  ; UMax(a,b)
  %68 = uitofp i32 %67 to float
  %69 = fdiv fast float %51, %68
  %70 = fadd fast float %69, -1.000000e+00
  %71 = fmul fast float %59, 0x3F70204080000000
  %72 = fmul fast float %71, %70
  %73 = fadd fast float %72, %55
  %74 = call float @dx.op.unary.f32(i32 21, float %73)  ; Exp(value)
  %75 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %76 = extractvalue %dx.types.CBufRet.f32 %75, 0
  %77 = fdiv fast float %76, %74
  %78 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1, i32 0, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %79 = extractvalue %dx.types.ResRet.f32 %78, 0
  %80 = extractvalue %dx.types.CBufRet.f32 %75, 1
  %81 = fsub fast float %77, %79
  %82 = fmul fast float %80, %81
  %83 = fadd fast float %82, %79
  %84 = extractvalue %dx.types.CBufRet.f32 %75, 3
  %85 = extractvalue %dx.types.CBufRet.f32 %75, 2
  %86 = call float @dx.op.binary.f32(i32 35, float %83, float %85)  ; FMax(a,b)
  %87 = call float @dx.op.binary.f32(i32 36, float %86, float %84)  ; FMin(a,b)
  %88 = icmp eq i32 %4, 0
  br i1 %88, label %89, label %104

; <label>:89                                      ; preds = %53
  call void @dx.op.rawBufferStore.f32(i32 140, %dx.types.Handle %1, i32 0, i32 0, float %87, float undef, float undef, float undef, i8 1, i32 4)  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  %90 = fdiv fast float 1.000000e+00, %87
  call void @dx.op.rawBufferStore.f32(i32 140, %dx.types.Handle %1, i32 1, i32 0, float %90, float undef, float undef, float undef, i8 1, i32 4)  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  call void @dx.op.rawBufferStore.f32(i32 140, %dx.types.Handle %1, i32 2, i32 0, float %87, float undef, float undef, float undef, i8 1, i32 4)  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  call void @dx.op.rawBufferStore.f32(i32 140, %dx.types.Handle %1, i32 3, i32 0, float %70, float undef, float undef, float undef, i8 1, i32 4)  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  %91 = call float @dx.op.unary.f32(i32 27, float %70)  ; Round_ni(value)
  %92 = fadd fast float %91, -1.280000e+02
  %93 = fmul fast float %92, 0x3F70101020000000
  %94 = call float @dx.op.unary.f32(i32 6, float %93)  ; FAbs(value)
  %95 = fcmp fast ogt float %94, 0x3FB99999A0000000
  br i1 %95, label %96, label %100

; <label>:96                                      ; preds = %89
  %97 = fmul fast float %93, %61
  %98 = fadd fast float %97, %55
  %99 = fadd fast float %97, %57
  br label %100

; <label>:100                                     ; preds = %96, %89
  %101 = phi float [ %99, %96 ], [ %57, %89 ]
  %102 = phi float [ %98, %96 ], [ %55, %89 ]
  call void @dx.op.rawBufferStore.f32(i32 140, %dx.types.Handle %1, i32 4, i32 0, float %102, float undef, float undef, float undef, i8 1, i32 4)  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  call void @dx.op.rawBufferStore.f32(i32 140, %dx.types.Handle %1, i32 5, i32 0, float %101, float undef, float undef, float undef, i8 1, i32 4)  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  call void @dx.op.rawBufferStore.f32(i32 140, %dx.types.Handle %1, i32 6, i32 0, float %59, float undef, float undef, float undef, i8 1, i32 4)  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  %103 = fdiv fast float 1.000000e+00, %59
  call void @dx.op.rawBufferStore.f32(i32 140, %dx.types.Handle %1, i32 7, i32 0, float %103, float undef, float undef, float undef, i8 1, i32 4)  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  br label %104

; <label>:104                                     ; preds = %100, %53, %0
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.flattenedThreadIdInGroup.i32(i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #1

; Function Attrs: noduplicate nounwind
declare void @dx.op.barrier(i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #1

; Function Attrs: nounwind
declare void @dx.op.rawBufferStore.f32(i32, %dx.types.Handle, i32, i32, float, float, float, float, i8, i32) #3

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #1

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { noduplicate nounwind }
attributes #3 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!12}

!0 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 2}
!2 = !{i32 1, i32 6}
!3 = !{!"cs", i32 6, i32 2}
!4 = !{!5, !7, !10, null}
!5 = !{!6}
!6 = !{i32 0, %struct.ByteAddressBuffer* undef, !"", i32 0, i32 0, i32 1, i32 11, i32 0, null}
!7 = !{!8}
!8 = !{i32 0, %"class.RWStructuredBuffer<float>"* undef, !"", i32 0, i32 0, i32 1, i32 12, i1 false, i1 false, i1 false, !9}
!9 = !{i32 1, i32 4}
!10 = !{!11}
!11 = !{i32 0, %cb0* undef, !"", i32 0, i32 1, i32 1, i32 20, null}
!12 = !{void ()* @main, !"main", null, !4, !13}
!13 = !{i32 0, i64 16, i32 4, !14}
!14 = !{i32 256, i32 1, i32 1}
!15 = !{!16, !16, i64 0}
!16 = !{!"float", !17, i64 0}
!17 = !{!"omnipotent char", !18, i64 0}
!18 = !{!"Simple C/C++ TBAA"}

#endif

const unsigned char g_pAdaptExposureCS[] = {
  0x44, 0x58, 0x42, 0x43, 0xd5, 0x39, 0x53, 0x84, 0x7e, 0x0e, 0x2f, 0xb3,
  0xe8, 0x5c, 0x66, 0xb3, 0xde, 0xd5, 0x64, 0xcc, 0x01, 0x00, 0x00, 0x00,
  0xf8, 0x16, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
  0x08, 0x01, 0x00, 0x00, 0x18, 0x02, 0x00, 0x00, 0xd4, 0x0a, 0x00, 0x00,
  0xf0, 0x0a, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0x90, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x08, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x5c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x15, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0x7f, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x7f, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x54, 0x41, 0x54,
  0xb4, 0x08, 0x00, 0x00, 0x62, 0x00, 0x05, 0x00, 0x2d, 0x02, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x02, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x9c, 0x08, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x24, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x86, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x01, 0xd5, 0x06, 0x63, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x60, 0x00,
  0x69, 0x03, 0x41, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x00, 0x48, 0x00, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x86, 0x09, 0x01, 0x01, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x4f, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xb4, 0xc1, 0x0c,
  0x40, 0x02, 0x0a, 0x00, 0x83, 0x08, 0xc1, 0x30, 0x02, 0x50, 0x82, 0x81,
  0x88, 0x39, 0x02, 0x30, 0x28, 0x82, 0x61, 0xd0, 0x71, 0xd3, 0x70, 0xf9,
  0x13, 0xf6, 0x10, 0x92, 0xbf, 0x12, 0xd2, 0x4a, 0x4c, 0x3e, 0x72, 0xdb,
  0xa8, 0x30, 0x0c, 0xc3, 0x30, 0xe6, 0x08, 0x10, 0x52, 0xee, 0x19, 0x2e,
  0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x43, 0xa0, 0x19, 0x16, 0x02, 0x05, 0x4b,
  0x39, 0x12, 0x83, 0x31, 0x0c, 0xc5, 0xa0, 0xa6, 0x0c, 0x83, 0x61, 0xd0,
  0x73, 0xd3, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xbf, 0x12, 0xd2, 0x4a,
  0x4c, 0x7e, 0x71, 0xdb, 0xa8, 0x00, 0x00, 0x00, 0x30, 0xca, 0x11, 0x19,
  0x8c, 0x61, 0x28, 0x06, 0x49, 0x65, 0x19, 0x0c, 0xc6, 0x30, 0x00, 0x00,
  0x00, 0x14, 0x83, 0xa8, 0x42, 0x18, 0x86, 0x61, 0x90, 0x55, 0x06, 0xc0,
  0x00, 0x08, 0x2b, 0x04, 0x60, 0x00, 0x00, 0x69, 0x47, 0x0d, 0x97, 0x3f,
  0x61, 0x0f, 0x21, 0xf9, 0xdc, 0x46, 0x15, 0x2b, 0x31, 0xf9, 0xc8, 0x6d,
  0x23, 0xc2, 0x30, 0x0c, 0xa3, 0x10, 0x9c, 0xc1, 0x18, 0xd4, 0x1d, 0x35,
  0x5c, 0xfe, 0x84, 0x3d, 0x84, 0xe4, 0x73, 0x1b, 0x55, 0xac, 0xc4, 0xe4,
  0x17, 0xb7, 0x8d, 0x08, 0x00, 0x00, 0x80, 0x42, 0x7c, 0x06, 0x63, 0x10,
  0x38, 0x47, 0x10, 0x14, 0x83, 0x31, 0x14, 0xc3, 0x10, 0x69, 0x1c, 0x08,
  0x38, 0x4c, 0x9a, 0x22, 0x4a, 0x98, 0xfc, 0x0d, 0x9b, 0x08, 0x6d, 0x18,
  0x22, 0x42, 0x92, 0x36, 0xaa, 0x28, 0x88, 0x08, 0x05, 0x06, 0x99, 0x33,
  0x7d, 0xe3, 0xc0, 0x0e, 0xe1, 0x30, 0x0f, 0xf3, 0xe0, 0x06, 0xb2, 0x70,
  0x0b, 0xb3, 0x40, 0x0f, 0xf2, 0x50, 0x0f, 0xe3, 0x40, 0x0f, 0xf5, 0x20,
  0x0f, 0xe5, 0x40, 0x0e, 0xa2, 0x50, 0x0f, 0xe6, 0x60, 0x0e, 0xe5, 0x20,
  0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e, 0xe1, 0x40, 0x0f, 0x7e, 0x80,
  0x02, 0x80, 0xd0, 0x1b, 0x84, 0x80, 0x46, 0x05, 0x00, 0x00, 0x80, 0x41,
  0xea, 0x1c, 0x01, 0x28, 0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0x24, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x76,
  0x00, 0xf0, 0x90, 0x87, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0xcf, 0x01, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x06, 0x08, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0f, 0x10, 0x00, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x24, 0x20, 0x00, 0x04,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x50, 0x40, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xb1, 0x80,
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x83,
  0x01, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90,
  0x47, 0x03, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x21, 0x4f, 0x07, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x43, 0x1e, 0x30, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0xcf, 0x18, 0x00, 0x01, 0x20, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x16, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x62, 0x0b, 0x84, 0x8c, 0x12, 0x28, 0x82, 0x11, 0x80,
  0x62, 0x28, 0x8b, 0xc2, 0x28, 0x84, 0x42, 0x29, 0x83, 0x72, 0x28, 0x89,
  0x82, 0x28, 0x90, 0x52, 0x28, 0x40, 0x82, 0x02, 0x84, 0x28, 0xa3, 0x92,
  0x14, 0x28, 0x0a, 0x12, 0x47, 0x00, 0x6a, 0x80, 0xce, 0x19, 0x00, 0x42,
  0x67, 0x00, 0x28, 0x9d, 0x01, 0x20, 0x75, 0x06, 0x80, 0xd6, 0x19, 0x00,
  0x02, 0x66, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b,
  0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99,
  0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62,
  0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73,
  0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x04, 0xc3, 0x99, 0x20, 0x18,
  0xcf, 0x06, 0x61, 0x20, 0x26, 0x08, 0x06, 0xb4, 0x41, 0x30, 0x0c, 0x0a,
  0x63, 0x73, 0x13, 0x04, 0x23, 0xda, 0x30, 0x20, 0x09, 0x31, 0x41, 0x38,
  0x83, 0x31, 0x60, 0x82, 0x94, 0x36, 0x47, 0xf7, 0x76, 0x26, 0x17, 0xd6,
  0x36, 0x41, 0x30, 0xa4, 0x0d, 0x89, 0xb1, 0x30, 0x86, 0x31, 0x34, 0x06,
  0xb0, 0x21, 0x70, 0x26, 0x08, 0x69, 0x50, 0x06, 0x44, 0x8a, 0xf0, 0xe0,
  0xde, 0xe6, 0xea, 0xe4, 0xca, 0x26, 0x08, 0xc6, 0x34, 0x41, 0x10, 0x83,
  0x30, 0x98, 0x20, 0x18, 0xd4, 0x06, 0x61, 0xa0, 0x36, 0x2c, 0x06, 0x14,
  0x19, 0xc6, 0x20, 0x4d, 0xd3, 0x54, 0x6d, 0x08, 0xac, 0x09, 0xc2, 0x1a,
  0x9c, 0x01, 0x87, 0x31, 0x31, 0x98, 0x09, 0x82, 0x51, 0x6d, 0x40, 0x0c,
  0x2c, 0x33, 0x86, 0x41, 0x03, 0x36, 0x04, 0xdb, 0x06, 0xe2, 0xb9, 0x38,
  0x60, 0x82, 0x80, 0x06, 0x64, 0xc0, 0x00, 0x6d, 0x82, 0x60, 0x58, 0x13,
  0x04, 0xe3, 0x9a, 0x20, 0x18, 0xd8, 0x06, 0x23, 0xf9, 0xc0, 0xc0, 0x08,
  0x03, 0x31, 0x98, 0x20, 0x00, 0x68, 0xb0, 0x41, 0x30, 0xc8, 0x60, 0x43,
  0x50, 0x06, 0x1b, 0x04, 0xc3, 0x0c, 0x36, 0x0c, 0xd4, 0x18, 0x9c, 0xc1,
  0x04, 0x41, 0x0d, 0xcc, 0x80, 0x0f, 0x55, 0x98, 0xdc, 0x59, 0x19, 0x1d,
  0x53, 0x5d, 0x5b, 0x9a, 0x5b, 0x98, 0xdb, 0x58, 0xd9, 0x04, 0x41, 0x0c,
  0xc4, 0x60, 0x03, 0x92, 0xa8, 0x01, 0x18, 0x18, 0x61, 0x20, 0x06, 0x62,
  0xb0, 0x06, 0x74, 0x82, 0xc8, 0xc2, 0xe0, 0xe8, 0xc2, 0xe8, 0xd2, 0xde,
  0xdc, 0xa4, 0xc2, 0xe8, 0xca, 0x36, 0x20, 0x49, 0x1b, 0x80, 0x01, 0x15,
  0x06, 0x62, 0x20, 0x06, 0x6b, 0xc0, 0xa5, 0x29, 0xcd, 0xad, 0x08, 0x0f,
  0xee, 0x6d, 0xae, 0x4e, 0xae, 0x6c, 0x82, 0x60, 0x64, 0x1b, 0x90, 0xe4,
  0x0d, 0xc0, 0x00, 0x0e, 0xc2, 0x40, 0x0c, 0xc4, 0x60, 0x0d, 0xb8, 0x34,
  0x85, 0xe1, 0x15, 0xe1, 0xc1, 0xbd, 0xcd, 0xd5, 0xc9, 0x95, 0x6d, 0x40,
  0x12, 0x39, 0x00, 0x03, 0x29, 0x0c, 0xc4, 0x40, 0x0c, 0xd6, 0x80, 0x0a,
  0x54, 0x1a, 0x5e, 0x19, 0xdb, 0xd0, 0x5b, 0x9d, 0x1b, 0xdd, 0x04, 0xc1,
  0xd0, 0x26, 0x08, 0xc6, 0xb6, 0x01, 0x49, 0xe8, 0x00, 0x0c, 0xea, 0x20,
  0x0c, 0xec, 0x40, 0x0c, 0xd6, 0x60, 0x83, 0xa1, 0xb1, 0x81, 0x1b, 0xc4,
  0xc1, 0x1c, 0xdc, 0xc1, 0x86, 0xc2, 0xf0, 0xd0, 0x20, 0x0d, 0xf0, 0x60,
  0x82, 0x50, 0x04, 0x1b, 0x80, 0x0d, 0x83, 0xb1, 0x07, 0x7b, 0xb0, 0x21,
  0xe0, 0x83, 0x0d, 0xc3, 0xa0, 0x07, 0x7d, 0x40, 0xa2, 0x2d, 0x2c, 0xcd,
  0x6d, 0x82, 0xc0, 0x06, 0xcd, 0x04, 0xc1, 0xe0, 0x36, 0x0c, 0xa1, 0x30,
  0x0c, 0x1b, 0x08, 0x03, 0x14, 0x28, 0x51, 0xd8, 0x50, 0xe8, 0xc1, 0x1f,
  0x00, 0xdd, 0x28, 0x10, 0x0a, 0x93, 0x93, 0x0b, 0xcb, 0xfb, 0xa2, 0x3b,
  0x9b, 0x6b, 0xfb, 0x12, 0xcb, 0xa3, 0x2b, 0x9b, 0x9b, 0x20, 0x18, 0x1d,
  0x9f, 0x30, 0x39, 0xb9, 0xb0, 0xbc, 0x2f, 0xba, 0xb3, 0xb9, 0xb6, 0x2f,
  0x36, 0xb2, 0x39, 0x3a, 0x1e, 0x62, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
  0x44, 0xc4, 0xe4, 0xc2, 0xdc, 0xc6, 0xd0, 0xca, 0xe6, 0x68, 0x98, 0xb1,
  0xbd, 0x85, 0xd1, 0xcd, 0x4d, 0x10, 0x0c, 0x8f, 0x45, 0x9a, 0xdb, 0x1c,
  0xdd, 0xdc, 0x04, 0xc1, 0xf8, 0x48, 0xa4, 0xb9, 0xd1, 0xcd, 0x4d, 0x10,
  0x0c, 0x30, 0x20, 0x42, 0x57, 0x86, 0xf7, 0xc5, 0xf6, 0x16, 0x46, 0xc6,
  0x84, 0xae, 0x0c, 0xef, 0x6b, 0x8e, 0xee, 0x4d, 0xae, 0x8c, 0x45, 0x5d,
  0x9a, 0x1b, 0xdd, 0xdc, 0x06, 0xaa, 0x14, 0x4c, 0xe1, 0x14, 0xea, 0x00,
  0x15, 0xea, 0x20, 0x15, 0xc0, 0x40, 0x15, 0x56, 0x81, 0x15, 0x5a, 0xc1,
  0x15, 0x5e, 0x01, 0x16, 0xc2, 0x20, 0x16, 0xe0, 0x40, 0x16, 0x5e, 0xa1,
  0x0a, 0x1b, 0x9b, 0x5d, 0x9b, 0x4b, 0x1a, 0x59, 0x99, 0x1b, 0xdd, 0x94,
  0x20, 0xa8, 0x42, 0x86, 0xe7, 0x62, 0x57, 0x26, 0x37, 0x97, 0xf6, 0xe6,
  0x36, 0x25, 0x20, 0x9a, 0x90, 0xe1, 0xb9, 0xd8, 0x85, 0xb1, 0xd9, 0x95,
  0xc9, 0x4d, 0x09, 0x8c, 0x3a, 0x64, 0x78, 0x2e, 0x73, 0x68, 0x61, 0x64,
  0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x82, 0xa4, 0x0c, 0x19,
  0x9e, 0x8b, 0x5c, 0xd9, 0xdc, 0x5b, 0x9d, 0xdc, 0x58, 0xd9, 0xdc, 0x94,
  0x80, 0xab, 0x44, 0x86, 0xe7, 0x42, 0x97, 0x07, 0x57, 0x16, 0xe4, 0xe6,
  0xf6, 0x46, 0x17, 0x46, 0x97, 0xf6, 0xe6, 0x36, 0x37, 0x45, 0xc0, 0x83,
  0x3e, 0xa8, 0x43, 0x86, 0xe7, 0x52, 0xe6, 0x46, 0x27, 0x97, 0x07, 0xf5,
  0x96, 0xe6, 0x46, 0x37, 0x37, 0x25, 0x18, 0x85, 0x2e, 0x64, 0x78, 0x2e,
  0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x53, 0x02, 0x59, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xca, 0xc3, 0x0e, 0xec,
  0x60, 0x0f, 0xed, 0xe0, 0x06, 0xec, 0xf0, 0x0e, 0xef, 0x00, 0x0f, 0x33,
  0x22, 0x88, 0x1c, 0xf0, 0xc1, 0x0d, 0xc8, 0x41, 0x1c, 0xce, 0xc1, 0x0d,
  0xec, 0x21, 0x1c, 0xe4, 0x81, 0x1d, 0xc2, 0x21, 0x1f, 0xde, 0xa1, 0x1e,
  0xe8, 0x61, 0x06, 0x13, 0x91, 0x03, 0x3e, 0xb8, 0x81, 0x38, 0xc8, 0x43,
  0x39, 0x84, 0xc3, 0x3a, 0xb8, 0x81, 0x38, 0xc8, 0x03, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x05, 0x10, 0x05, 0x7e,
  0xe7, 0xf9, 0x37, 0x38, 0x1e, 0xd7, 0xdb, 0x40, 0xe0, 0x0c, 0x1a, 0x6c,
  0x06, 0x8d, 0xa0, 0x19, 0x2e, 0xdf, 0x79, 0xfc, 0x00, 0x88, 0x22, 0x84,
  0x88, 0x2c, 0x01, 0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0x00, 0x69, 0x80, 0x08,
  0xf3, 0x8b, 0xdb, 0xb6, 0x03, 0x68, 0xb8, 0x7c, 0xe7, 0xf1, 0x03, 0xa4,
  0x01, 0x22, 0xcc, 0x47, 0x6e, 0xdb, 0x16, 0xb6, 0xe1, 0xf2, 0x9d, 0xc7,
  0x17, 0x02, 0xaa, 0x28, 0x88, 0xa8, 0x74, 0x80, 0xa1, 0x24, 0x0c, 0x40,
  0xc0, 0xfc, 0xe2, 0xb6, 0x4d, 0x61, 0x1b, 0x2e, 0xdf, 0x79, 0x7c, 0x21,
  0xa0, 0x8a, 0x82, 0x88, 0x4a, 0x07, 0x18, 0x4a, 0xc2, 0x00, 0x04, 0xcc,
  0x47, 0x6e, 0xdb, 0x18, 0xa4, 0xe1, 0xf2, 0x9d, 0xc7, 0x17, 0x22, 0x02,
  0x98, 0x88, 0x10, 0x68, 0x86, 0x85, 0x30, 0x01, 0x31, 0x18, 0x2e, 0xdf,
  0x79, 0xfc, 0x62, 0x01, 0xa6, 0x89, 0x68, 0x88, 0xa1, 0x3d, 0x22, 0x02,
  0x18, 0xc4, 0x41, 0x6c, 0xc0, 0xc8, 0xa1, 0x1e, 0x1f, 0xb9, 0x6d, 0x2b,
  0xb8, 0x86, 0xcb, 0x77, 0x1e, 0x3f, 0x02, 0xac, 0x8d, 0x2a, 0x0a, 0x22,
  0x2a, 0x1d, 0x60, 0xf0, 0x8b, 0xdb, 0xb6, 0x81, 0x6b, 0xb8, 0x7c, 0xe7,
  0xf1, 0x23, 0xc0, 0xda, 0xa8, 0xa2, 0x20, 0xa2, 0xd2, 0x01, 0x06, 0x1f,
  0xb9, 0x6d, 0x33, 0xc0, 0x86, 0xcb, 0x77, 0x1e, 0x3f, 0x02, 0xac, 0x8d,
  0x2a, 0x0a, 0x22, 0x62, 0x27, 0x27, 0x22, 0xfc, 0xe2, 0xb6, 0x0d, 0xe1,
  0x19, 0x2e, 0xdf, 0x79, 0x7c, 0xaa, 0x01, 0x22, 0xcc, 0x2f, 0x6e, 0xdb,
  0x02, 0x08, 0x06, 0x40, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x2e, 0x49, 0x91, 0xf3, 0x1c, 0x11, 0xa1, 0x3b, 0x00, 0x09, 0xf1, 0x42,
  0xfc, 0xa9, 0xd6, 0x63, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x0c, 0x00, 0x00,
  0x62, 0x00, 0x05, 0x00, 0x00, 0x03, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x02, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xe8, 0x0b, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0xf7, 0x02, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x86, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x01, 0xd5, 0x06, 0x63,
  0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x60, 0x00, 0x69, 0x03, 0x41, 0xfc,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x48, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x86,
  0x09, 0x01, 0x01, 0x00, 0x89, 0x20, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xbc, 0xc1, 0x0c, 0x40, 0x02, 0x0a, 0x00,
  0x83, 0x08, 0xc1, 0x30, 0x02, 0x50, 0x82, 0x81, 0x88, 0x39, 0x02, 0x30,
  0x28, 0x82, 0x61, 0xd0, 0x71, 0xd3, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92,
  0xbf, 0x12, 0xd2, 0x4a, 0x4c, 0x3e, 0x72, 0xdb, 0xa8, 0x30, 0x0c, 0xc3,
  0x30, 0xe6, 0x08, 0x10, 0x52, 0xee, 0x19, 0x2e, 0x7f, 0xc2, 0x1e, 0x42,
  0xf2, 0x43, 0xa0, 0x19, 0x16, 0x02, 0x05, 0x4b, 0x39, 0x12, 0x83, 0x31,
  0x0c, 0xc5, 0xa0, 0xa6, 0x0c, 0x83, 0x61, 0xd0, 0x73, 0xd3, 0x70, 0xf9,
  0x13, 0xf6, 0x10, 0x92, 0xbf, 0x12, 0xd2, 0x4a, 0x4c, 0x7e, 0x71, 0xdb,
  0xa8, 0x00, 0x00, 0x00, 0x30, 0xca, 0x11, 0x19, 0x8c, 0x61, 0x28, 0x06,
  0x49, 0x65, 0x19, 0x0c, 0xc6, 0x30, 0x00, 0x00, 0x00, 0x14, 0x83, 0xa8,
  0x42, 0x18, 0x86, 0x61, 0x90, 0x55, 0x06, 0xc0, 0x00, 0x08, 0x2b, 0x04,
  0x60, 0x00, 0x00, 0x69, 0x47, 0x0d, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9,
  0xdc, 0x46, 0x15, 0x2b, 0x31, 0xf9, 0xc8, 0x6d, 0x23, 0xc2, 0x30, 0x0c,
  0xa3, 0x10, 0x9c, 0xc1, 0x18, 0xd4, 0x1d, 0x35, 0x5c, 0xfe, 0x84, 0x3d,
  0x84, 0xe4, 0x73, 0x1b, 0x55, 0xac, 0xc4, 0xe4, 0x17, 0xb7, 0x8d, 0x08,
  0x00, 0x00, 0x80, 0x42, 0x7c, 0x06, 0x63, 0x10, 0x38, 0x47, 0x10, 0x14,
  0x83, 0x31, 0x14, 0xc3, 0x10, 0x69, 0x1c, 0x08, 0x38, 0x4c, 0x9a, 0x22,
  0x4a, 0x98, 0xfc, 0x0d, 0x9b, 0x08, 0x6d, 0x18, 0x22, 0x42, 0x92, 0x36,
  0xaa, 0x28, 0x88, 0x08, 0x05, 0x06, 0x99, 0x33, 0x7d, 0xe3, 0xc0, 0x0e,
  0xe1, 0x30, 0x0f, 0xf3, 0xe0, 0x06, 0xb2, 0x70, 0x0b, 0xb3, 0x40, 0x0f,
  0xf2, 0x50, 0x0f, 0xe3, 0x40, 0x0f, 0xf5, 0x20, 0x0f, 0xe5, 0x40, 0x0e,
  0xa2, 0x50, 0x0f, 0xe6, 0x60, 0x0e, 0xe5, 0x20, 0x0f, 0x7c, 0x60, 0x0e,
  0xec, 0xf0, 0x0e, 0xe1, 0x40, 0x0f, 0x7e, 0x80, 0x02, 0x80, 0xd0, 0x1b,
  0x84, 0x80, 0x46, 0x05, 0x00, 0x00, 0x80, 0x41, 0xea, 0x1c, 0x01, 0x28,
  0x0c, 0x22, 0x00, 0xc3, 0x14, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0x24, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x76,
  0x00, 0xf0, 0x90, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0xcf, 0x01, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x06, 0x08, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0f, 0x10, 0x00, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x24, 0x20, 0x00, 0x04,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x50, 0x40, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xb1, 0x80,
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x83,
  0x01, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90,
  0x47, 0x03, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x21, 0x4f, 0x07, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x43, 0x1e, 0x30, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0xcf, 0x18, 0x00, 0x01, 0x20, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x16, 0x08, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x32, 0x4a, 0xa0, 0x08, 0x8a, 0x61, 0x04, 0xa0, 0x2c,
  0x0a, 0xa3, 0x10, 0x0a, 0xa5, 0x00, 0x09, 0x48, 0x1c, 0x01, 0x20, 0x76,
  0x04, 0xa0, 0x40, 0x68, 0x9d, 0x01, 0xa0, 0x74, 0x06, 0x80, 0xce, 0x19,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b,
  0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99,
  0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62,
  0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73,
  0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x04, 0xa3, 0x99, 0x20, 0x18,
  0xce, 0x06, 0x61, 0x20, 0x26, 0x08, 0xc6, 0xb3, 0x41, 0x18, 0x0c, 0x0a,
  0x63, 0x73, 0x1b, 0x06, 0xc4, 0x20, 0x26, 0x08, 0x06, 0x34, 0x41, 0x38,
  0x83, 0x8d, 0xc0, 0x04, 0xc1, 0x88, 0x36, 0x24, 0xca, 0xc2, 0x28, 0xca,
  0xd0, 0x28, 0xc0, 0x86, 0xc0, 0x99, 0x20, 0xa4, 0x81, 0x36, 0x41, 0x30,
  0xa4, 0x09, 0x82, 0x18, 0x58, 0x13, 0x04, 0x63, 0xda, 0x20, 0x0c, 0xd3,
  0x86, 0x45, 0x81, 0x18, 0x45, 0x19, 0x22, 0x49, 0x92, 0xa8, 0x0d, 0x41,
  0x35, 0x41, 0x58, 0x83, 0x6c, 0x82, 0x60, 0x50, 0x1b, 0x10, 0xe5, 0x62,
  0x94, 0x61, 0xc0, 0x80, 0x0d, 0x41, 0xb6, 0x81, 0x78, 0x2c, 0x0d, 0x98,
  0x20, 0x14, 0x01, 0x89, 0xb6, 0xb0, 0x34, 0xb7, 0x09, 0x02, 0x1b, 0x60,
  0x13, 0x04, 0xa3, 0xda, 0x30, 0x7c, 0xc3, 0xb0, 0x81, 0x50, 0xbc, 0x09,
  0x0c, 0x36, 0x14, 0x5c, 0x07, 0x6c, 0x61, 0xc0, 0xc2, 0x8c, 0xed, 0x2d,
  0x8c, 0x8e, 0xcf, 0x5b, 0x9b, 0x5b, 0x1a, 0xdc, 0x1b, 0x5d, 0x99, 0x1b,
  0x1d, 0xc8, 0x18, 0x5a, 0x98, 0x1c, 0xa3, 0xa9, 0xb4, 0x36, 0x38, 0xb6,
  0x32, 0x90, 0xa1, 0x97, 0xa1, 0x95, 0x15, 0x10, 0x2a, 0xa1, 0xa0, 0xa0,
  0x0d, 0x41, 0x19, 0x4c, 0x10, 0xd8, 0xe0, 0xda, 0x30, 0x90, 0x81, 0x19,
  0x9c, 0xc1, 0x86, 0x61, 0x0c, 0xd0, 0xe0, 0x0c, 0x36, 0x0c, 0x69, 0x90,
  0x06, 0x67, 0x50, 0x85, 0x8d, 0xcd, 0xae, 0xcd, 0x25, 0x8d, 0xac, 0xcc,
  0x8d, 0x6e, 0x4a, 0x10, 0x54, 0x21, 0xc3, 0x73, 0xb1, 0x2b, 0x93, 0x9b,
  0x4b, 0x7b, 0x73, 0x9b, 0x12, 0x10, 0x4d, 0xc8, 0xf0, 0x5c, 0xec, 0xc2,
  0xd8, 0xec, 0xca, 0xe4, 0xa6, 0x04, 0x46, 0x1d, 0x32, 0x3c, 0x97, 0x39,
  0xb4, 0x30, 0xb2, 0x32, 0xb9, 0xa6, 0x37, 0xb2, 0x32, 0xb6, 0x29, 0x01,
  0x52, 0x86, 0x0c, 0xcf, 0x45, 0xae, 0x6c, 0xee, 0xad, 0x4e, 0x6e, 0xac,
  0x6c, 0x6e, 0x4a, 0xa0, 0xd5, 0x21, 0xc3, 0x73, 0x29, 0x73, 0xa3, 0x93,
  0xcb, 0x83, 0x7a, 0x4b, 0x73, 0xa3, 0x9b, 0x9b, 0x12, 0x84, 0x01, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xca, 0xc3, 0x0e, 0xec,
  0x60, 0x0f, 0xed, 0xe0, 0x06, 0xec, 0xf0, 0x0e, 0xef, 0x00, 0x0f, 0x33,
  0x22, 0x88, 0x1c, 0xf0, 0xc1, 0x0d, 0xc8, 0x41, 0x1c, 0xce, 0xc1, 0x0d,
  0xec, 0x21, 0x1c, 0xe4, 0x81, 0x1d, 0xc2, 0x21, 0x1f, 0xde, 0xa1, 0x1e,
  0xe8, 0x61, 0x06, 0x13, 0x91, 0x03, 0x3e, 0xb8, 0x81, 0x38, 0xc8, 0x43,
  0x39, 0x84, 0xc3, 0x3a, 0xb8, 0x81, 0x38, 0xc8, 0x03, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x05, 0x10, 0x05, 0x7e,
  0xe7, 0xf9, 0x37, 0x38, 0x1e, 0xd7, 0xdb, 0x40, 0xe0, 0x0c, 0x1a, 0x6c,
  0x06, 0x8d, 0xa0, 0x19, 0x2e, 0xdf, 0x79, 0xfc, 0x00, 0x88, 0x22, 0x84,
  0x88, 0x2c, 0x01, 0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0x00, 0x69, 0x80, 0x08,
  0xf3, 0x8b, 0xdb, 0xb6, 0x03, 0x68, 0xb8, 0x7c, 0xe7, 0xf1, 0x03, 0xa4,
  0x01, 0x22, 0xcc, 0x47, 0x6e, 0xdb, 0x16, 0xb6, 0xe1, 0xf2, 0x9d, 0xc7,
  0x17, 0x02, 0xaa, 0x28, 0x88, 0xa8, 0x74, 0x80, 0xa1, 0x24, 0x0c, 0x40,
  0xc0, 0xfc, 0xe2, 0xb6, 0x4d, 0x61, 0x1b, 0x2e, 0xdf, 0x79, 0x7c, 0x21,
  0xa0, 0x8a, 0x82, 0x88, 0x4a, 0x07, 0x18, 0x4a, 0xc2, 0x00, 0x04, 0xcc,
  0x47, 0x6e, 0xdb, 0x18, 0xa4, 0xe1, 0xf2, 0x9d, 0xc7, 0x17, 0x22, 0x02,
  0x98, 0x88, 0x10, 0x68, 0x86, 0x85, 0x30, 0x01, 0x31, 0x18, 0x2e, 0xdf,
  0x79, 0xfc, 0x62, 0x01, 0xa6, 0x89, 0x68, 0x88, 0xa1, 0x3d, 0x22, 0x02,
  0x18, 0xc4, 0x41, 0x6c, 0xc0, 0xc8, 0xa1, 0x1e, 0x1f, 0xb9, 0x6d, 0x2b,
  0xb8, 0x86, 0xcb, 0x77, 0x1e, 0x3f, 0x02, 0xac, 0x8d, 0x2a, 0x0a, 0x22,
  0x2a, 0x1d, 0x60, 0xf0, 0x8b, 0xdb, 0xb6, 0x81, 0x6b, 0xb8, 0x7c, 0xe7,
  0xf1, 0x23, 0xc0, 0xda, 0xa8, 0xa2, 0x20, 0xa2, 0xd2, 0x01, 0x06, 0x1f,
  0xb9, 0x6d, 0x33, 0xc0, 0x86, 0xcb, 0x77, 0x1e, 0x3f, 0x02, 0xac, 0x8d,
  0x2a, 0x0a, 0x22, 0x62, 0x27, 0x27, 0x22, 0xfc, 0xe2, 0xb6, 0x0d, 0xe1,
  0x19, 0x2e, 0xdf, 0x79, 0x7c, 0xaa, 0x01, 0x22, 0xcc, 0x2f, 0x6e, 0xdb,
  0x02, 0x08, 0x06, 0x40, 0x1a, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x33, 0x01, 0x00, 0x00, 0x13, 0x04, 0x46, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0xa4, 0x14, 0xc1, 0x08, 0x40, 0x09, 0x90, 0x51,
  0x36, 0x65, 0x50, 0x48, 0x65, 0x54, 0x2a, 0x05, 0x1a, 0x50, 0x12, 0xe5,
  0x3f, 0x50, 0x98, 0x02, 0x65, 0x29, 0x50, 0x72, 0x33, 0x00, 0xa5, 0x50,
  0x0e, 0x65, 0x57, 0xc0, 0x01, 0x05, 0x51, 0x20, 0x05, 0x54, 0x80, 0x01,
  0x05, 0x28, 0x50, 0x4e, 0x04, 0x8c, 0x11, 0xb4, 0xe6, 0x9c, 0xf3, 0xde,
  0x18, 0x41, 0x48, 0x82, 0x21, 0xde, 0x8d, 0x11, 0x80, 0x20, 0x08, 0xc2,
  0xe1, 0x30, 0x46, 0x40, 0xc2, 0xa0, 0x88, 0x77, 0x63, 0x04, 0x20, 0x08,
  0x82, 0xf8, 0x2f, 0x8c, 0x00, 0x8c, 0x11, 0x80, 0x20, 0x08, 0xe2, 0xdf,
  0x0c, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x30, 0x06,
  0x71, 0x40, 0x7d, 0x6d, 0xd0, 0x06, 0x67, 0x30, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0x63, 0x20, 0x07, 0x55, 0x18, 0xb8, 0x81, 0x1b, 0xa0, 0xc1,
  0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x8c, 0xc1, 0x1c, 0x58, 0x63, 0xf0,
  0x06, 0x72, 0x90, 0x06, 0x23, 0x06, 0x05, 0x00, 0x82, 0x60, 0x70, 0xf8,
  0x81, 0x74, 0x01, 0x50, 0x25, 0xd0, 0xc1, 0x8d, 0x18, 0x28, 0x00, 0x08,
  0x82, 0x41, 0x03, 0x0a, 0x5b, 0x11, 0x64, 0x65, 0x00, 0x07, 0xa3, 0x09,
  0x01, 0x70, 0x01, 0x50, 0x16, 0x14, 0xf2, 0x59, 0xc1, 0x70, 0x0a, 0x77,
  0x70, 0x0c, 0x1b, 0x10, 0x81, 0x30, 0x00, 0x23, 0x06, 0x06, 0x00, 0x82,
  0x60, 0xf0, 0x90, 0x02, 0x19, 0x8c, 0x41, 0x21, 0x7b, 0x00, 0x15, 0x8c,
  0x81, 0xae, 0x60, 0x50, 0x05, 0x3d, 0x08, 0x28, 0x00, 0x86, 0x19, 0x01,
  0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0, 0x49, 0x85, 0x34, 0x40,
  0x83, 0x61, 0x03, 0xc2, 0x08, 0x06, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10,
  0x0c, 0x9e, 0x54, 0x48, 0x03, 0x34, 0xa8, 0xe6, 0x0f, 0xa0, 0x02, 0x34,
  0xd0, 0x15, 0x0c, 0xaf, 0xf0, 0x07, 0x01, 0x05, 0xc0, 0xb0, 0xa0, 0x80,
  0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x3c, 0xae, 0xe0, 0x06, 0x6d,
  0x30, 0x6c, 0x40, 0x2c, 0xc1, 0x00, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82,
  0xc1, 0xe3, 0x0a, 0x6e, 0xd0, 0x06, 0x25, 0xfd, 0x01, 0x54, 0xd0, 0x06,
  0xba, 0x82, 0x81, 0x16, 0x48, 0x21, 0xa0, 0x00, 0x18, 0x16, 0x14, 0xf0,
  0x19, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0x67, 0x16, 0xe6, 0x40, 0x0e,
  0x86, 0x0d, 0x08, 0x28, 0x18, 0x80, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30,
  0x78, 0x66, 0x61, 0x0e, 0xe4, 0xa0, 0x2e, 0x34, 0x80, 0x0a, 0xe4, 0x40,
  0x57, 0x30, 0xe4, 0x42, 0x2a, 0x04, 0x14, 0x00, 0xc3, 0x82, 0x02, 0x3e,
  0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xf0, 0xe0, 0x02, 0x1e, 0xdc, 0xc1,
  0xb0, 0x01, 0x51, 0x05, 0x03, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06,
  0x0f, 0x2e, 0xe0, 0xc1, 0x1d, 0x14, 0xc7, 0x06, 0x50, 0xc1, 0x1d, 0xe8,
  0x0a, 0x06, 0x5f, 0x70, 0x85, 0x80, 0x02, 0x60, 0x58, 0x50, 0xc0, 0x67,
  0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x9e, 0x5e, 0xe8, 0x03, 0x3e, 0x18,
  0x36, 0x20, 0xb4, 0x60, 0x00, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0,
  0xe9, 0x85, 0x3e, 0xe0, 0x83, 0x0a, 0x03, 0x38, 0x80, 0x0a, 0xf8, 0x40,
  0x57, 0x30, 0x8c, 0xc3, 0x2c, 0x04, 0x14, 0x00, 0xc3, 0x82, 0x02, 0x3e,
  0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xf0, 0x88, 0x83, 0x28, 0x84, 0xc2,
  0xb0, 0x01, 0xf1, 0x05, 0x03, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06,
  0x8f, 0x38, 0x88, 0x42, 0x28, 0x94, 0x19, 0xd0, 0x01, 0x54, 0x10, 0x0a,
  0xba, 0x82, 0x01, 0x1d, 0x70, 0x21, 0xa0, 0x00, 0x18, 0x16, 0x14, 0xf0,
  0x19, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0xe7, 0x1c, 0x4e, 0xc1, 0x14,
  0x86, 0x0d, 0x08, 0x32, 0x08, 0x06, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10,
  0x0c, 0x9e, 0x73, 0x38, 0x05, 0x53, 0xa8, 0x35, 0xc0, 0x03, 0xa8, 0xc0,
  0x14, 0x74, 0x05, 0x43, 0x3b, 0xf4, 0x42, 0x40, 0x01, 0x30, 0x2c, 0x28,
  0xe0, 0x33, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x0f, 0x3b, 0xb0, 0xc2,
  0x2a, 0x0c, 0x47, 0x04, 0x76, 0x10, 0x7c, 0xb3, 0x0c, 0x45, 0x10, 0x8c,
  0x18, 0x28, 0x00, 0x08, 0x82, 0x81, 0xc4, 0x0e, 0xa9, 0x40, 0x07, 0xbe,
  0x10, 0x0e, 0xb3, 0xe0, 0x0b, 0xa3, 0x09, 0x01, 0x30, 0x62, 0xa0, 0x00,
  0x20, 0x08, 0x06, 0x92, 0x3b, 0xac, 0x82, 0x1d, 0xa0, 0xc2, 0x38, 0xd4,
  0x02, 0x38, 0x8c, 0x26, 0x04, 0xc0, 0x88, 0x81, 0x02, 0x80, 0x20, 0x18,
  0x48, 0xf0, 0xd0, 0x0a, 0x78, 0x60, 0x0e, 0xe5, 0x70, 0x0b, 0xe2, 0x30,
  0x9a, 0x10, 0x00, 0x23, 0x06, 0x0a, 0x00, 0x82, 0x60, 0x20, 0xc9, 0xc3,
  0x2b, 0xe8, 0xc1, 0x2a, 0x9c, 0x43, 0x2e, 0x90, 0xc3, 0x68, 0x42, 0x00,
  0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0xf7, 0x0e, 0xac, 0xa0, 0x07,
  0xec, 0x30, 0x9a, 0x10, 0x00, 0x23, 0x06, 0x0a, 0x00, 0x82, 0x60, 0xd0,
  0xe0, 0xc3, 0x2c, 0xf4, 0xc1, 0x3a, 0xc4, 0x42, 0x2f, 0xa0, 0xc3, 0x68,
  0x42, 0x00, 0xd4, 0x10, 0xc4, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x58,
  0xf7, 0xa0, 0x0a, 0xf1, 0x10, 0x5c, 0x00, 0x94, 0x45, 0x01, 0x7d, 0x2c,
  0x40, 0x05, 0xf8, 0x18, 0xa3, 0x0a, 0xf2, 0xb1, 0x40, 0x90, 0x8f, 0x05,
  0x12, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x00, 0xeb, 0x07, 0x71,
  0x08, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x00, 0x0c, 0xf6, 0x21, 0x17,
  0x4e, 0xc1, 0x1e, 0x46, 0x13, 0x02, 0xc0, 0x82, 0x81, 0x3e, 0x23, 0x06,
  0x0a, 0x00, 0x82, 0x60, 0x20, 0x91, 0x44, 0x38, 0xb0, 0x42, 0x3e, 0xe4,
  0xc3, 0x3a, 0xd8, 0xc3, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x14, 0x81, 0x11,
  0x42, 0x7c, 0x4c, 0x08, 0xe4, 0x63, 0x01, 0x01, 0x9f, 0xd1, 0x84, 0x64,
  0x18, 0x4d, 0x50, 0x84, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xd0, 0x50,
  0xe2, 0x1d, 0x86, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xb4, 0x94,
  0x88, 0x87, 0x60, 0x18, 0x6e, 0x98, 0x85, 0x91, 0x00, 0x83, 0x59, 0x06,
  0xa1, 0x08, 0x46, 0x0c, 0x1c, 0x00, 0x04, 0xc1, 0x80, 0x72, 0x89, 0x76,
  0xb8, 0x05, 0x92, 0x20, 0x09, 0x01, 0x17, 0x70, 0x01, 0x17, 0xec, 0x21,
  0x24, 0x2c, 0x17, 0x04, 0xfa, 0x8c, 0x18, 0x38, 0x00, 0x08, 0x82, 0x01,
  0xf5, 0x12, 0xee, 0x80, 0x0b, 0x28, 0x51, 0x12, 0x41, 0x2e, 0xe4, 0x42,
  0x2e, 0xdc, 0x83, 0x48, 0x8c, 0x18, 0x38, 0x00, 0x08, 0x82, 0x01, 0xf5,
  0x12, 0xee, 0x80, 0x0b, 0x27, 0x51, 0x12, 0x43, 0x2e, 0xe4, 0x42, 0x2e,
  0xdc, 0x83, 0x48, 0x8c, 0x18, 0x38, 0x00, 0x08, 0x82, 0x01, 0xf5, 0x12,
  0xee, 0x80, 0x0b, 0xf5, 0x50, 0x12, 0x54, 0x2e, 0xe4, 0x42, 0x2e, 0xdc,
  0x83, 0x48, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x01, 0xd6, 0x12, 0xf6,
  0x40, 0x59, 0xf0, 0x0b, 0xf0, 0xb1, 0x20, 0x1c, 0xe4, 0x33, 0x62, 0x60,
  0x00, 0x20, 0x08, 0x06, 0x18, 0x4c, 0xa4, 0x44, 0x30, 0x1c, 0x11, 0x90,
  0x83, 0xf0, 0xcd, 0x32, 0x0c, 0x44, 0x60, 0x83, 0x18, 0xc8, 0xc7, 0x82,
  0x34, 0x80, 0x8f, 0x09, 0x68, 0x00, 0x9f, 0x59, 0x02, 0x62, 0xa0, 0x02,
  0x10, 0x06, 0x59, 0x10, 0x06, 0x2a, 0x00, 0x63, 0xc0, 0x05, 0x61, 0xc4,
  0xc0, 0x01, 0x40, 0x10, 0x0c, 0xa8, 0x9c, 0xc0, 0x07, 0x71, 0x60, 0x89,
  0x97, 0x08, 0xc6, 0x61, 0x1c, 0xc6, 0x21, 0x24, 0x58, 0x62, 0xc4, 0xc0,
  0x01, 0x40, 0x10, 0x0c, 0xa8, 0x9c, 0xc0, 0x07, 0x71, 0xa0, 0x87, 0x97,
  0x10, 0xc6, 0x61, 0x1c, 0xc6, 0x21, 0x24, 0x58, 0x62, 0xc4, 0xc0, 0x01,
  0x40, 0x10, 0x0c, 0xa8, 0x9c, 0xc0, 0x07, 0x71, 0x80, 0x89, 0x97, 0x48,
  0x83, 0x71, 0x18, 0x87, 0x71, 0x08, 0x09, 0x96, 0x30, 0x72, 0x48, 0x03,
  0xfa, 0x8c, 0x18, 0x38, 0x00, 0x08, 0x82, 0x01, 0xa5, 0x13, 0xf9, 0x30,
  0x0e, 0xf4, 0x00, 0x13, 0x01, 0x39, 0x90, 0x03, 0x39, 0x88, 0x44, 0x4b,
  0xcc, 0x12, 0x14, 0x18, 0x10, 0x03, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x5b, 0x86, 0x25, 0x48, 0x83, 0x2d, 0x03, 0x14, 0xa4, 0xc1, 0x96, 0x61,
  0x0a, 0xd2, 0x60, 0xcb, 0x80, 0x05, 0x69, 0xb0, 0x65, 0xd8, 0x82, 0x34,
  0xd8, 0x32, 0x80, 0x41, 0x90, 0x06, 0x5b, 0x86, 0x31, 0x08, 0xd2, 0x60,
  0xcb, 0x80, 0x06, 0x41, 0x1a, 0x6c, 0x19, 0xd6, 0x20, 0x48, 0x83, 0x2d,
  0x03, 0x1c, 0x04, 0x69, 0xb0, 0x65, 0x98, 0x83, 0x20, 0x0d, 0xb6, 0x0c,
  0x78, 0x10, 0xa4, 0xc1, 0x96, 0x61, 0x0f, 0x82, 0x34, 0xd8, 0x32, 0x80,
  0x42, 0x90, 0x06, 0x5b, 0x86, 0x51, 0x08, 0xd2, 0x60, 0xcb, 0x80, 0x0a,
  0x41, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
